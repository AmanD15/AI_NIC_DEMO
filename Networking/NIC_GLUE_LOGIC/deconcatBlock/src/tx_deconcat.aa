//  Input is from  the NIC, a 73-bit pipe.
//  coded as
//      last   dword  bmask
//       1      64     8
//
//  Output is to the MAC, a 10-bit pipe.
//  coded as 
//       last byte unused
//         1    8    1
//

$module [tx_deconcat] $in () $out () $is
{
	$branchblock[loop]{

		$dopipeline $depth 7 
		$merge $entry $loopback $endmerge	

			RX := tx_in_pipe 
			$volatile $split (RX 1 
						8 8 8 8 8 8 8 8 
						1 1 1 1 1 1 1 1) 
				(tlast 
					d0 d1 d2 d3 d4 d5 d6 d7
					b0 b1 b2 b3 b4 b5 b6 b7)

			$volatile s0 := ($concat (tlast & (b0 & (~b1))) d0 $one<1>)
			$volatile s1 := ($concat (tlast & (b1 & (~b2))) d1 $one<1>)
			$volatile s2 := ($concat (tlast & (b2 & (~b3))) d2 $one<1>)
			$volatile s3 := ($concat (tlast & (b3 & (~b4))) d3 $one<1>)

			$volatile s4 := ($concat (tlast & (b4 & (~b5))) d4 $one<1>)
			$volatile s5 := ($concat (tlast & (b5 & (~b6))) d5 $one<1>)
			$volatile s6 := ($concat (tlast & (b6 & (~b7))) d6 $one<1>)
			$volatile s7 := ($concat (tlast & b7) d7 $one<1>)

			$guard (b0)
				tx_out_pipe := s0
			$guard (b1)
				tx_out_pipe := s1
			$guard (b2)
				tx_out_pipe := s2
			$guard (b3)
				tx_out_pipe := s3
			$guard (b4)
				tx_out_pipe := s4
			$guard (b5)
				tx_out_pipe := s5
			$guard (b6)
				tx_out_pipe := s6
			$guard (b7)
				tx_out_pipe := s7

		$while 1
	}
}
