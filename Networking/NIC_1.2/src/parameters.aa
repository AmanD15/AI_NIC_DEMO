$parameter    P_NIC_CONTROL_REGISTER_INDEX      0
$parameter    P_N_SERVERS_REGISTER_INDEX        1 
$parameter    P_DEBUG_REGISTER_0                2 
$parameter    P_DEBUG_REGISTER_1                3  
$parameter    P_N_BUFFERS_REGISTER_INDEX        4  
$parameter    P_MAC_REGISTER_H_INDEX            208
$parameter    P_MAC_REGISTER_L_INDEX            209
$parameter    P_RX_PKT_COUNT_REGISTER_INDEX     210
$parameter    P_TX_PKT_COUNT_REGISTER_INDEX     211
$parameter    P_STATUS_REGISTER_INDEX           212
$parameter    P_COUNTER_REGISTER_INDEX          255

//  Base index for queue access
$parameter    P_RX_QUEUE_0_INDEX		     8 
$parameter    P_RX_QUEUE_0_STATUS_INDEX		     9 
$parameter    P_RX_QUEUE_1_INDEX		     10 
$parameter    P_RX_QUEUE_1_STATUS_INDEX		     11 
$parameter    P_RX_QUEUE_2_INDEX		     12 
$parameter    P_RX_QUEUE_2_STATUS_INDEX		     13 
$parameter    P_RX_QUEUE_3_INDEX		     14 
$parameter    P_RX_QUEUE_3_STATUS_INDEX		     15 

$parameter    P_TX_QUEUE_0_INDEX		     16 
$parameter    P_TX_QUEUE_0_STATUS_INDEX		     17 
$parameter    P_TX_QUEUE_1_INDEX		     18 
$parameter    P_TX_QUEUE_1_STATUS_INDEX		     19 
$parameter    P_TX_QUEUE_2_INDEX		     20 
$parameter    P_TX_QUEUE_2_STATUS_INDEX		     21 
$parameter    P_TX_QUEUE_3_INDEX		     22 
$parameter    P_TX_QUEUE_3_STATUS_INDEX		     23 

$parameter    P_FREE_QUEUE_INDEX		     24 
$parameter    P_FREE_QUEUE_STATUS_INDEX	     	     25 


//
// This register is accessed only using a SWAP operation
// inside the NIC.
//
// A read from this register is a lock-acquire and
// returns 0 if lock is acquired
//
// A write to this register is a lock-release.
//
$parameter    P_FREE_QUEUE_LOCK_INDEX	     	     26 



// Tag value, not an address.
//  to distinguish between Rx and Tx engines.
$parameter    P_RX_ENGINE_TAG                   1
$parameter    P_TX_ENGINE_TAG                   2
