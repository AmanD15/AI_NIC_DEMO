$system nic_subsystem $library nic_subsystem_lib
    $in       
        $pipe NIC_REGISTER_REQUEST
        $pipe NIC_MEMORY_REQUEST

	-- AFB request pipe coming in

	-- ACB response pipe coming in

	-- MAC->NIC pipe coming in

    $out


	-- AFB response pipe going out

	-- ACB request going out

	-- NIC->MAC pipe going out.

	-- INTERRUPT signal going out.
{

   
    // Local pipes to connect: (MAC) <--> (rx_concat and tx_deconcat) <--> (NIC)

        $pipe mac_to_rx_concat_data $uint<10>
        $pipe rx_concat_to_nic_data $uint<73>

        $pipe tx_deconcat_to_mac_data $uint<10>
        $pipe nic_to_tx_deconcat_data $uint<73>
        $pipe enable_mac $uint<1>     

    // Following clocks were generated by "clocks_gen" module(written in Verilog), in previous top_level file:
    // TBD : module "clocks_gen" to be put in SBC_Core.
    // 1. clk_proc     : needed for four Dual clock FIFO (AFB_REQ, AFB_RES, ACB_REQ, ACB_RES) 
    // 2. clk_mac      : nic_subsystem runs at this freq, generated by "clock_gen" module(in verilog).
    // 3. refclk_bufg  : 
    // 4. s_axi_aclk   : 
    // 5. dcm_locked   : 

        $split(NIC_CLKS 1 1 1 1 1 )(clk_proc clk_mac refclk_bufg s_axi_aclk dcm_locked)

        $split(PHY_TO_MAC 4 1 1 1 1 1 1 1 1 1 1)(rgmii_rxd rgmii_rx_ctl rgmii_rxc mdio
        pause_req_s mac_speed update_speed config_board gen_tx_data chk_tx_data reset_error)

        MAC_TO_PHY := $concat(gtx_clk_bufg_out phy_resetn rgmii_txd rgmii_tx_ctl rgmii_txc mdc
        gtx_clk_reset tx_statistics_s rx_statistics_s serial_response frame_error frame_errorn activity_flash 
        activity_flashn)

///////////////////////////////// MAC <--> PHY //////////////////////////////////////////

        $instance inst_nic_mac_pipe_reset nic_subsystem_lib : nic_mac_pipe_reset
             clk=>clk_mac
             reset=> nic_rst // output
             ENABLE_MAC_pipe_data => enable_mac // input(1)


        $instance inst_ETH_KC nic_subsystem_lib : ETH_KC

     // INPUT CLOCKS AND RESET FROM SBC_CORE

             //-- Global Reset --
             glbl_rst =>  nic_rst

             //-- Various Clocks --
             gtx_clk_bufg => clk_mac
             refclk_bufg => refclk_bufg
             s_axi_aclk => s_axi_aclk
             dcm_locked => dcm_locked

     // INPUTS FROM PHY SIDE

             //-- RGMII Interface -- 
             rgmii_rxd => rgmii_rxd
             rgmii_rx_ctl => rgmii_rx_ctl
             rgmii_rxc => rgmii_rxc

             //-- MDIO Interface -- 
             mdio => mdio
    
             //-- Others --
            pause_req_s => pause_req_s
            mac_speed => mac_speed
            update_speed => update_speed
            config_board => config_board
            gen_tx_data => gen_tx_data
            chk_tx_data => chk_tx_data
            reset_error => reset_error


     // OUTPUTS TO PHY SIDE

             //-- 125 MHz clock from MMCM --
             gtx_clk_bufg_out => gtx_clk_bufg_out
             phy_resetn => phy_resetn
    
             //-- RGMII Interface --
             rgmii_txd => rgmii_txd
             rgmii_tx_ctl => rgmii_tx_ctl
             rgmii_txc => rgmii_txc
      
             //-- MDIO Interface --
             mdc => mdc
             gtx_clk_reset => gtx_clk_reset
         
             //-- Serialised statistics vectors --
             tx_statistics_s => tx_statistics_s
             rx_statistics_s => rx_statistics_s
    
             //-- Main example design controls --
             serial_response => serial_response
             frame_error => frame_error
             frame_errorn => frame_errorn
             activity_flash => activity_flash
             activity_flashn => activity_flashn 

    // PIPES FROM/TO NIC 
             rx_pipe_data => mac_to_rx_concat_data // output
             tx_pipe_data => tx_deconcat_to_mac_data // input

/////////////////////////// MAC <--> Bridge /////////////////////////////////////////

        $instance inst_rx_concat_system nic_subsystem_lib : rx_concat_system
                clk => clk_mac
                reset => nic_rst
                rx_in_pipe => mac_to_rx_concat_data // input(10)
                rx_out_pipe => rx_concat_to_nic_data //output(73)

    
        $instance inst_tx_concat_system nic_subsystem_lib : tx_concat_system
                clk => clk_mac
                reset => nic_rst
                tx_in_pipe => nic_to_tx_deconcat_data // input(73)
                tx_out_pipe => tx_deconcat_to_mac_data // output(10) 
    
////////////////////////// Bridge <--> NIC <--> SBC_core /////////////////////////////

        $signal reset_sync_mac $uint<1> // local signal
        $volatile reset_sync := GLOBAL_RST
       
        $instance inst_sync_block  nic_subsystem_lib : tri_mode_ethernet_mac_0_sync_block
                clk =>  clock_mac
	        data_in => reset_sync
		data_out => reset_sync_mac

        $instance inst_ahir_system  nic_subsystem_lib : ahir_system

                clk => clk_mac

		reset => reset_sync_mac

   		enable_mac => enable_mac 

		AFB_NIC_REQUEST => NIC_REGISTER_REQUEST 
		
		AFB_NIC_RESPONSE => NIC_REGISTER_RESPONSE 
		
		MEMORY_TO_NIC_RESPONSE=> NIC_MEMORY_RESPONSE 
		
		NIC_TO_MEMORY_REQUEST => NIC_MEMORY_REQUEST 
		
		mac_to_nic_data => rx_concat_to_nic_data 
		
		nic_to_mac_transmit_pipe => nic_to_tx_deconcat_data 
		

      
            


}
