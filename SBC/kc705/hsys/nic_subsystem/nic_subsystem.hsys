$system nic_subsystem $library nic_subsystem_lib
    $in 
        
        $signal GLBL_RST $uint<1> $depth 2
        $signal NIC_CLKS $uint<5> $depth 2

        $signal PHY_TO_MAC $uint<14> $depth 2
        $pipe NIC_REGISTER_REQUEST $uint<74> $depth 2
        $pipe NIC_MEMORY_REQUEST $uint<110> $depth 2

    $out
        $signal MAC_TO_PHY $uint<17> $depth 2
        $pipe NIC_REGISTER_RESPONSE $uint<33> $depth 2
        $pipe NIC_MEMORY_RESPONSE $uint<65> $depth 2
{

   
    // Local pipes to connect MAC and NIC

        $pipe rx_pipe_data $uint<10>
        $pipe tx_pipe_data $uint<10>

    // GLBL_RST was generated by "nic_mac_pipe_reset" module(written in verilog), in previous top_level file. 
        $volatile glbl_rst:= GLBL_RST

    // Following clocks were generated by "clocks_gen" module(written in Verilog), in previous top_level file:
    // 1. clk_proc     : needed for four Dual clock FIFO (AFB_REQ, AFB_RES, ACB_REQ, ACB_RES) 
    // 2. clk_mac      : nic_subsystem runs at this freq driven by "clock_gen" module(in verilog).
    // 3. refclk_bufg  : 
    // 4. s_axi_aclk   : 
    // 5. dcm_locked   : 

        $split(NIC_CLKS 1 1 1 1 1 )(clk_proc clk_mac refclk_bufg s_axi_aclk dcm_locked)
        $split(PHY_TO_MAC 4 1 1 1 1 1 1 1 1 1 1)(rgmii_rxd rgmii_rx_ctl rgmii_rxc mdio pause_req_s mac_speed update_speed config_board gen_tx_data chk_tx_data reset_error)

        $instance inst_ETH_KC nic_subsystem_lib : ETH_KC

     // INPUT CLOCKS AND RESET FROM SBC_CORE

             //-- Global Reset --
             glbl_rst =>  glbl_rst

             //-- Various Clocks --
             gtx_clk_bufg => clk_mac
             refclk_bufg => refclk_bufg
             s_axi_aclk => s_axi_aclk
             dcm_locked => dcm_locked

     // INPUTS FROM PHY SIDE

             //-- RGMII Interface -- 
             rgmii_rxd => rgmii_rxd
             rgmii_rx_ctl => rgmii_rx_ctl
             rgmii_rxc => rgmii_rxc

             //-- MDIO Interface -- 
             mdio => mdio
    
             //-- Others --
            pause_req_s => pause_req_s
            mac_speed => mac_speed
            update_speed => update_speed
            config_board => config_board
            gen_tx_data => gen_tx_data
            chk_tx_data => chk_tx_data
            reset_error => reset_error


     // OUTPUTS TO PHY SIDE

             //-- 125 MHz clock from MMCM --
             gtx_clk_bufg_out => gtx_clk_bufg_out
             phy_resetn => phy_resetn
    
             //-- RGMII Interface --
             rgmii_txd => rgmii_txd
             rgmii_tx_ctl => rgmii_tx_ctl
             rgmii_txc => rgmii_txc
      
             //-- MDIO Interface --
             mdc => mdc
             gtx_clk_reset => gtx_clk_reset
         
             //-- Serialised statistics vectors --
             tx_statistics_s => tx_statistics_s
             rx_statistics_s => rx_statistics_s
    
             //-- Main example design controls --
             serial_response => serial_response
             frame_error => frame_error
             frame_errorn => frame_errorn
             activity_flash => activity_flash
             activity_flashn => activity_flashn 

    // PIPES FROM/TO NIC 
             rx_pipe_data => rx_pipe_data
             tx_pipe_data => tx_pipe_data

        MAC_TO_PHY := $concat(gtx_clk_bufg_out phy_resetn rgmii_txd rgmii_tx_ctl rgmii_txc mdc  gtx_clk_reset tx_statistics_s rx_statistics_s serial_response frame_error frame_errorn activity_flash activity_flashn)

        $instance inst_rx_concat_system nic_subsystem_lib : rx_concat_system
    
        $instance inst_rx_concat_system nic_subsystem_lib : tx_concat_system
    
        $instance inst_nic_ahir_system nic_subsystem_lib : ahir_system


}
