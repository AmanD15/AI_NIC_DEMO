			
How to build for SBC_FASTMEM?	
    1. ./build.sh
    2. cd cortos_build/cortos_src
    3. changes to be made in vmap.txt:  
        non cacheable lock page should be mapped to 0x50000000
    4. changes to be made in init.s
        initialize non cacheable lock from 0x50000000
			to first illegal address 0x50001000

    (see files inside temp. for reference)
    5. cd .. (now you are inside cortos_build)
    6. ./build.sh
	
1. Overview
-------------------------

	This document describes
	- the example used to measure packet ping speed/round trip time
	  between the kc705 card and the host computer via Ethernet.
	- the setup of the host computer (to enable the connection 
	  for the test)
	- the application running on the host computer.
	- the setup of the KC705 card
		
2. The example
-------------------------

    During this test, raw Ethernet frames are transmitted from the host-side driver 
    code (running on a PC/laptop) to the KC705 card.  The SBC on the KC705 card, 
    with the help of NIC subsystem, receives these frames and sends them back to 
    the host side. 

3. KC705 setup 
-------------------------------
    Configuration: 
    Apply SBC bitfile to KC705 card, then dump main.remapped via Debug monitor.

    Ethernet Link Activation: 
    Check active status via LEDs near ethernet port. Configure speed (10/100/1000) 
    using SW11 GPIO DIP switches. Update speed by pressing SW5 center push button.

    SW11 DIP switch : 1 2 3 4
                      0 0 0 0 --> 10Mbps
                      1 0 0 0 --> 100Mbps
                      0 1 0 0 --> 1000Mbps
    



4. Host setup and application
-------------------------------

    Driver Application: 
    Launch only after configuring Ethernet link as per Step 3 and after
    setting Wireshark to filter packets for the specified interface.

    Promiscuous Mode Settings: 
    Enable promiscuous mode for Wireshark.

    Host Configuration: 
    On Ubuntu 16.04/20.04, modify wired settings for the ethernet connection:
        - Details Section: Uncheck "Connect automatically", check "Make available to other users".
        - Security Section: Disable 802.1x security.
        - IPv4/IPv6 Section: Disable both protocols.
          NOTE: If above settings, don't work one can simply click "disconnect" ethernet 
                connection settings. 

    Application Execution: 
        sudo python3 send.py
        
        
