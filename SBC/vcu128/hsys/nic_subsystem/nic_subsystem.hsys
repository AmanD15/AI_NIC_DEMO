$system nic_subsystem $library nic_subsystem_lib
    $in
        $pipe AFB_TO_NIC_REQUEST        // AFB request pipe coming in
        $pipe ACB_TO_NIC_RESPONSE       // ACB response pipe coming in
        $pipe MAC_TO_NIC_DATA           // MAC->NIC pipe coming in

    $out


        $pipe NIC_TO_AFB_RESPONSE       // AFB response pipe going out
        $pipe NIC_TO_ACB_REQUEST        // ACB request going out
        $pipe NIC_TO_MAC_DATA           // NIC->MAC pipe going out.
        $signal NIC_TO_MAC_RESETN
        $signal NIC_INTERRUPT_TO_PROCESSOR
	$signal NIC_DEBUG_SIGNAL 256 $depth 1
{


    // Local pipes 
        $pipe rx_concat_to_nic_data 73 $depth 2 
        $pipe nic_to_tx_deconcat_data 73 $depth 2

	// This is now a signal!
        $pipe nic_mac_enable 1 $depth 1  

/////////////////////////// MAC <--> Bridge /////////////////////////////////////////

	$instance nic_mac_bridge_inst  nic_mac_bridge_lib: nic_mac_bridge
		rx_in_pipe          => MAC_TO_NIC_DATA		    // input (10)
		rx_out_pipe         => rx_concat_to_nic_data	    // output (73)
                tx_in_pipe          => nic_to_tx_deconcat_data      // input(73)
                tx_out_pipe         => NIC_TO_MAC_DATA              // output(10)
		nic_to_mac_resetn   => NIC_TO_MAC_RESETN            // output
                ENABLE_MAC          => nic_mac_enable               // input
		
////////////////////////// Bridge <--> NIC <--> SBC_core /////////////////////////////

         $instance inst_nic nic_lib:nic
                MAC_ENABLE                  => nic_mac_enable // output
                AFB_NIC_REQUEST             => AFB_TO_NIC_REQUEST 
                AFB_NIC_RESPONSE            => NIC_TO_AFB_RESPONSE 
                MEMORY_TO_NIC_RESPONSE      => ACB_TO_NIC_RESPONSE 
                NIC_TO_MEMORY_REQUEST       => NIC_TO_ACB_REQUEST  
                mac_to_nic_data             => rx_concat_to_nic_data //input
                nic_to_mac_transmit_pipe    => nic_to_tx_deconcat_data //output
                NIC_INTR                    => NIC_INTERRUPT_TO_PROCESSOR
		NIC_DEBUG_SIGNAL 	    => NIC_DEBUG_SIGNAL

	// tie the interrupt off for now.
	$thread tie_interrupt_off
		$out $signal out_sig: $unsigned<1>
		$default
			$now out_sig := ($unsigned<1>) 0
		<dummy_reset_state> {
			$goto dummy_reset_state }
		$now $tick

	$string i0 : tie_interrupt_off
		out_sig => NIC_INTERRUPT_TO_PROCESSOR
}

