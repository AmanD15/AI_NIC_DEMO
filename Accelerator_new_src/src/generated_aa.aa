// Aa code produced by llvm2aa (version 2.0)
$pipe flatten_data : $uint<8> $depth 4000
$pipe in_data_0 : $uint<64> $depth 4000
$pipe in_data_1 : $uint<64> $depth 4000
$pipe in_data_2 : $uint<64> $depth 4000
$pipe in_data_3 : $uint<64> $depth 4000
$pipe in_data_4 : $uint<64> $depth 4000
$pipe ker_data : $uint<64> $depth 4000
$pipe out_data : $uint<8> $depth 4000
$pipe pool_data_fifo_r0 : $uint<8> $depth 4000
$lifo $pipe pool_data_lifo_r1 : $uint<8> $depth 4000
$pipe pool_out_data : $uint<8> $depth 4000
$module [generated_llvmx_xbc_storage_initializer_] $in () $out () $is {
$null
$attribute initializer
}
// $module [fpdivide325] 
//  $in (number1 : $float<8,23> number2 : $float<8,23> )
//  $out (ret_val__ : $float<8,23>)
//  $is 
// {
// $branchblock [body] {
// //begin: basic-block vars
// ret_val__ := (number1 / number2)
// $place [return__]
// $merge return__ $endmerge
// }
// }
// $module [fp32_mul_for_ecg] 
//  $in (number1 : $float<8,23> number2 : $float<8,23> )
//  $out (ret_val__ : $float<8,23>)
//  $is 
// {
// $branchblock [body] {
// //begin: basic-block vars
// ret_val__ := (number1 * number2)
// $place [return__]
// $merge return__ $endmerge
// }
// }
// $module [fp32_add_for_ecg] 
//  $in (number1 : $float<8,23> number2 : $float<8,23> )
//  $out (ret_val__ : $float<8,23>)
//  $is 
// {
// $branchblock [body] {
// //begin: basic-block vars
// ret_val__ := (number1 + number2)
// $place [return__]
// $merge return__ $endmerge
// }
// }
// $module [fp32_sub_for_ecg] 
//  $in (number1 : $float<8,23> number2 : $float<8,23> )
//  $out (ret_val__ : $float<8,23>)
//  $is 
// {
// $branchblock [body] {
// //begin: basic-block vars
// ret_val__ := (number1 - number2)
// $place [return__]
// $merge return__ $endmerge
// }
// }
// $module [fpcmp32] 
//  $in (number1 : $float<8,23> number2 : $float<8,23> flag : $uint<1> )
//  $out (ret_val__ : $uint<2>)
//  $is 
// {
// $branchblock [body] {
// //begin: basic-block vars
// // compare instruction
// xx_x10 := (number1 == number2 )
// $if xx_x10 $then  $place [vars_if_true] $else $place [vars_if_false] $endif 
// //begin: basic-block if_true
// $merge vars_if_true
// $endmerge
// $place [if_true_if_nextx_x2]
// //begin: basic-block if_false
// $merge vars_if_false
// $endmerge
// // compare instruction
// xx_x16 := (number1 < number2 )
// $if xx_x16 $then  $place [if_false_if_truex_x1] $else $place [if_false_if_falsex_x1] $endif 
// //begin: basic-block if_truex_x1
// $merge if_false_if_truex_x1
// $endmerge
// $place [if_truex_x1_if_nextx_x1]
// //begin: basic-block if_falsex_x1
// $merge if_false_if_falsex_x1
// $endmerge
// // compare instruction
// xx_x22 := (number1 > number2 )
// $if xx_x22 $then  $place [if_falsex_x1_if_truex_x2] $else $place [if_falsex_x1_if_falsex_x2] $endif 
// //begin: basic-block if_truex_x2
// $merge if_falsex_x1_if_truex_x2
// $endmerge
// $place [if_truex_x2_if_next]
// //begin: basic-block if_falsex_x2
// $merge if_falsex_x1_if_falsex_x2
// $endmerge
// $place [if_falsex_x2_if_next]
// //begin: basic-block if_next
// $merge if_falsex_x2_if_next if_truex_x2_if_next
// $phi xx_x303x_xoff0 :=  ( $cast ($uint<2>) ( $bitcast ($uint<2> ) _b11 ) ) $on if_falsex_x2_if_next ( $cast ($uint<2>) ( $bitcast ($uint<2> ) _b10 ) ) $on if_truex_x2_if_next 
// $endmerge
// $place [if_next_if_nextx_x1]
// //begin: basic-block if_nextx_x1
// $merge if_next_if_nextx_x1 if_truex_x1_if_nextx_x1
// $phi xx_x302x_xoff0 :=  ( $cast ($uint<2>) xx_x303x_xoff0) $on if_next_if_nextx_x1 ( $cast ($uint<2>) ( $bitcast ($uint<2> ) _b01 ) ) $on if_truex_x1_if_nextx_x1 
// $endmerge
// $place [if_nextx_x1_if_nextx_x2]
// //begin: basic-block if_nextx_x2
// $merge if_nextx_x1_if_nextx_x2 if_true_if_nextx_x2
// $phi ret_val__ :=  ( $cast ($uint<2>) xx_x302x_xoff0) $on if_nextx_x1_if_nextx_x2 ( $cast ($uint<2>) ( $bitcast ($uint<2> ) _b00 ) ) $on if_true_if_nextx_x2 
// $endmerge
// $place [return__]
// $merge return__ $endmerge
// }
// }
// $module [fstoi_for_ecg] 
//  $in (number1 : $float<8,23> )
//  $out (ret_val__ : $uint<32>)
//  $is 
// {
// $branchblock [body] {
// //begin: basic-block vars
// xx_x5 := ( $bitcast ($uint<8> ) ( $cast ( $int< 8 > ) number1) )
// ret_val__ :=  ($bitcast ($uint<32>) ( $cast ($int< 32 > ) xx_x5) )
// $place [return__]
// $merge return__ $endmerge
// }
// }
// $module [fitos32_for_ecg] 
//  $in (number1 : $uint<32> )
//  $out (ret_val__ : $float<8,23>)
//  $is 
// {
// $branchblock [body] {
// //begin: basic-block vars
// ret_val__ := ($cast ($float<8,23>) number1)
// $place [return__]
// $merge return__ $endmerge
// }
// }

$module [round_half_even] 
 $in (number : $float<8,23> )
 $out (ret_val__ : $uint<8>)
 $is 
{
$branchblock [body] {
$storage temp_out: $uint<8>
//begin: basic-block vars
$call fstoi_for_ecg (number)  (int_part)

$call fitos32_for_ecg (($bitcast ($uint<32>) int_part) )  (xx_x8)

$call fp32_sub_for_ecg (number xx_x8 )  (frac_part)

$volatile $call fpcmp32 (frac_part ( $bitcast ($float<8,23> ) _f0.5e+0 ) 0) (chk)

$if (chk == 1) $then
	temp_out := ( $bitcast ( $uint<8> ) int_part)
	$place [return__] 
// $else 
// 	$place [false1] 
$endif 

$if (chk == 2) $then
	temp_out := ( $bitcast ( $uint<8> ) ( int_part + 1))
	$place [return__] 
// $else 
// 	$place [false1] 
$endif 

first_bit := (int_part [] 0)
$if (first_bit == 0) $then
	temp_out := ( $bitcast ( $uint<8> ) int_part)
	$place [return__] 
// $else 
// 	$place [false1] 
$endif 

temp_out := ( $bitcast ( $uint<8> ) ( int_part + 1))
$place [return__] 
$merge return__ $endmerge

ret_val__ := temp_out

}
}

$module [uint_quant] 
 $in (val : $float<8,23> scale : $float<8,23> zero_point : $float<8,23> )
 $out (ret_val__ : $uint<8>)
 $is 
{
$branchblock [body] {
//begin: basic-block vars
$storage temp_out: $uint<8>
$call fpdivide325 (val scale )  (xx_x10)
$call fp32_add_for_ecg (xx_x10 zero_point )  (quant_float)

// compare instruction
// chk1 := (quant_float > ( $bitcast ($float<8,23> ) _f2.550e+02 )  )
$volatile $call fpcmp32 (quant_float ( $bitcast ($float<8,23> ) _f2.550e+02 ) 0) (chk)
$volatile $call fpcmp32 (quant_float ( $bitcast ($float<8,23> ) _f0.0e+0 ) 0) (chk1)
// accelerator_reg[13] := ($bitcast ($uint<32>) val)
$if (chk == 2) $then
	temp_out := ( $cast ( $uint<8> ) 255)
	$place [return__] 
$endif

// chk2 := (quant_float < ( $cast ($float<8,23> ) _f0.0e+0 )  )

$if (chk1 == 1) $then
	temp_out := ( $cast ( $uint<8> ) 0)
	$place [return__] 
$endif

$call round_half_even(quant_float) (round_val)
temp_out := round_val
// $place [return__]
$place [return__] 

$merge return__ $endmerge
// accelerator_reg[12] := ($bitcast ($uint<32>) 2)
// accelerator_reg[9] := ($bitcast ($uint<32>) temp_out)
ret_val__ :=  temp_out
}
}

$module [dequant] 
 $in (val : $uint<8> scale : $float<8,23> zero_point : $float<8,23> )
 $out (ret_val__ : $float<8,23>)
 $is 
{
$branchblock [body] {
//begin: basic-block vars
xx_x13 := ($cast ($float<8,23>) val)
$call fp32_sub_for_ecg (xx_x13 zero_point )  (xx_x14)
$call fp32_mul_for_ecg (scale xx_x14 )  (ret_val__)
$place [return__]
$merge return__ $endmerge
}
}
$module [dequant2] 
 $in (val : $uint<8> scale : $float<8,23> zero_point : $float<8,23> )
 $out (ret_val__ : $float<8,23>)
 $is 
{
$branchblock [body] {
//begin: basic-block vars
xx_x13 :=  ( $cast ($float<8,23>)  ($cast ($int<32>) val) ) 
$call fp32_sub_for_ecg (xx_x13 zero_point )  (xx_x14)
$call fp32_mul_for_ecg (scale xx_x14 )  (ret_val__)
$place [return__]
$merge return__ $endmerge
}
}
$module [relu] 
 $in (val : $float<8,23> )
 $out (ret_val__ : $float<8,23>)
 $is 
{
$storage stored_ret_val__ : $float<8,23>
$branchblock [body] {
//begin: basic-block vars
// compare instruction
xx_x5 := (val > ( $bitcast ($float<8,23> ) _h0 )  )
$if xx_x5 $then  $place [vars_if_true] $else $place [vars_if_false] $endif 
//begin: basic-block if_true
$merge vars_if_true
$endmerge
stored_ret_val__ := val
$place [return__]
//begin: basic-block if_false
$merge vars_if_false
$endmerge
stored_ret_val__ := ( $bitcast ($float<8,23> ) _h0 ) 
$place [return__]
$merge return__ $endmerge
ret_val__ := stored_ret_val__ 
}
}
$module [convolution_new] 
 $in (groups : $uint<32> reuseInp : $uint<32> reuseData : $uint<1> ker_size : $uint<32> inp_scale : $float<8,23> inp_zero_point : $float<8,23> ker_scale : $float<8,23> ker_zero_point : $float<8,23> conv_scale : $float<8,23> conv_zero_point : $float<8,23> isLinear : $uint<1> in_channels : $uint<32> isActivation : $uint<1> )
 $out (ret_val__ : $uint<8>)
 $is 
{
$storage stored_ret_val__ : $uint<8>
$branchblock [body] {
//begin: basic-block vars
$if isLinear $then  $place [vars_if_true] $else $place [vars_if_falsex_x18] $endif 
//begin: basic-block if_true
$merge vars_if_true
$endmerge
// compare instruction
xx_x35426 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  < groups )
$if xx_x35426 $then  $place [if_true_for_bodyx_xlrx_xph] $else $place [if_true_for_out] $endif 
//begin: basic-block for_bodyx_xlrx_xph
$merge if_true_for_bodyx_xlrx_xph
$endmerge
$place [for_bodyx_xlrx_xph_for_body]
//begin: basic-block for_body
//   this is a do-while loop.
$merge for_bodyx_xlrx_xph_for_body
$endmerge
$dopipeline $depth 31 $buffering 2 
$fullrate
$merge $entry $loopback
$phi xx_x298428 :=  ( $cast ($uint<32>) xx_x46) $on $loopback ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on $entry
$phi convOutValx_x0427 :=  ( $cast ($float<8,23>) convOutValx_x8) $on $loopback ( $cast ($float<8,23>) ( $bitcast ($float<8,23> ) _h0 ) ) $on $entry
$endmerge
xx_x38 := ker_data
xx_x46 := (xx_x298428 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
xx_x47 := (xx_x46 << ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) )
// compare instruction
xx_x48x_xnot := ( ($bitcast ( $int<32>) xx_x47) >  ($bitcast ( $int<32>) in_channels ) )
for_body_if_false_taken := xx_x48x_xnot
for_body_if_truex_x1_taken := ( ~xx_x48x_xnot)
if_truex_x1_exec_guard := for_body_if_truex_x1_taken
//begin: basic-block if_truex_x1
if_truex_x1_if_next_taken := if_truex_x1_exec_guard
if_false_exec_guard := for_body_if_false_taken
//begin: basic-block if_false
$guard (if_false_exec_guard) xx_x53 := (xx_x298428 << ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) )
$guard (if_false_exec_guard) xx_x54 := (in_channels - xx_x53)
$guard (if_false_exec_guard) xx_x55 := ($cast ($uint<64>) xx_x54)
if_false_if_next_taken := if_false_exec_guard
if_next_exec_guard := (if_false_if_next_taken | if_truex_x1_if_next_taken )
//begin: basic-block if_next
xx_x268 := ($mux if_false_if_next_taken ( $bitcast ($uint<64>) xx_x55) ($mux if_truex_x1_if_next_taken ( $bitcast ($uint<64>) ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000001000 ) ) ($bitcast ($uint<64>) 0)))
// compare instruction
$guard (if_next_exec_guard) xx_x59x_xnot := (xx_x268 == ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 )  )
if_next_if_falsex_x2_taken := (if_next_exec_guard & xx_x59x_xnot)
if_next_if_truex_x2_taken := (if_next_exec_guard & (~xx_x59x_xnot))
if_truex_x2_exec_guard := if_next_if_truex_x2_taken
//begin: basic-block if_truex_x2
$guard (if_truex_x2_exec_guard) xx_x61 := flatten_data
if_truex_x2_if_truex_x3_taken := (if_truex_x2_exec_guard & reuseData)
if_truex_x2_if_falsex_x1_taken := (if_truex_x2_exec_guard & (~reuseData))
if_falsex_x1_exec_guard := if_truex_x2_if_falsex_x1_taken
//begin: basic-block if_falsex_x1
if_falsex_x1_if_nextx_x1_taken := if_falsex_x1_exec_guard
if_truex_x3_exec_guard := if_truex_x2_if_truex_x3_taken
//begin: basic-block if_truex_x3
$guard (if_truex_x3_exec_guard) flatten_data := xx_x61
if_truex_x3_if_nextx_x1_taken := if_truex_x3_exec_guard
if_nextx_x1_exec_guard := (if_falsex_x1_if_nextx_x1_taken | if_truex_x3_if_nextx_x1_taken )
//begin: basic-block if_nextx_x1
$guard (if_nextx_x1_exec_guard) $call dequant (xx_x61 inp_scale inp_zero_point )  (xx_x72)
$guard (if_nextx_x1_exec_guard) xx_x75 := ($slice xx_x38 63 56)
$guard (if_nextx_x1_exec_guard) $call dequant2 (xx_x75 ker_scale ker_zero_point )  (xx_x78)
$guard (if_nextx_x1_exec_guard) $call fp32_mul_for_ecg (xx_x72 xx_x78 )  (xx_x83)
$guard (if_nextx_x1_exec_guard) $call fp32_add_for_ecg (convOutValx_x0427 xx_x83 )  (xx_x84)
if_nextx_x1_if_nextx_x2_taken := if_nextx_x1_exec_guard
if_falsex_x2_exec_guard := if_next_if_falsex_x2_taken
//begin: basic-block if_falsex_x2
if_falsex_x2_if_nextx_x2_taken := if_falsex_x2_exec_guard
if_nextx_x2_exec_guard := (if_falsex_x2_if_nextx_x2_taken | if_nextx_x1_if_nextx_x2_taken )
//begin: basic-block if_nextx_x2
convOutValx_x1 := ($mux if_falsex_x2_if_nextx_x2_taken ( $bitcast ($float<8,23>) convOutValx_x0427) ($mux if_nextx_x1_if_nextx_x2_taken ( $bitcast ($float<8,23>) xx_x84) ($bitcast ($float<8,23>) 0)))
// compare instruction
$guard (if_nextx_x2_exec_guard) xx_x89 := (xx_x268 > ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000001 )  )
if_nextx_x2_if_truex_x4_taken := (if_nextx_x2_exec_guard & xx_x89)
if_nextx_x2_if_falsex_x4_taken := (if_nextx_x2_exec_guard & (~xx_x89))
if_falsex_x4_exec_guard := if_nextx_x2_if_falsex_x4_taken
//begin: basic-block if_falsex_x4
if_falsex_x4_if_nextx_x4_taken := if_falsex_x4_exec_guard
if_truex_x4_exec_guard := if_nextx_x2_if_truex_x4_taken
//begin: basic-block if_truex_x4
$guard (if_truex_x4_exec_guard) xx_x91 := flatten_data
if_truex_x4_if_truex_x5_taken := (if_truex_x4_exec_guard & reuseData)
if_truex_x4_if_falsex_x3_taken := (if_truex_x4_exec_guard & (~reuseData))
if_falsex_x3_exec_guard := if_truex_x4_if_falsex_x3_taken
//begin: basic-block if_falsex_x3
if_falsex_x3_if_nextx_x3_taken := if_falsex_x3_exec_guard
if_truex_x5_exec_guard := if_truex_x4_if_truex_x5_taken
//begin: basic-block if_truex_x5
$guard (if_truex_x5_exec_guard) flatten_data := xx_x91
if_truex_x5_if_nextx_x3_taken := if_truex_x5_exec_guard
if_nextx_x3_exec_guard := (if_falsex_x3_if_nextx_x3_taken | if_truex_x5_if_nextx_x3_taken )
//begin: basic-block if_nextx_x3
$guard (if_nextx_x3_exec_guard) $call dequant (xx_x91 inp_scale inp_zero_point )  (xx_x102)
$guard (if_nextx_x3_exec_guard) xx_x105 := ($slice xx_x38 55 48)
$guard (if_nextx_x3_exec_guard) $call dequant2 (xx_x105 ker_scale ker_zero_point )  (xx_x108)
$guard (if_nextx_x3_exec_guard) $call fp32_mul_for_ecg (xx_x102 xx_x108 )  (xx_x113)
$guard (if_nextx_x3_exec_guard) $call fp32_add_for_ecg (convOutValx_x1 xx_x113 )  (xx_x114)
if_nextx_x3_if_nextx_x4_taken := if_nextx_x3_exec_guard
if_nextx_x4_exec_guard := (if_falsex_x4_if_nextx_x4_taken | if_nextx_x3_if_nextx_x4_taken )
//begin: basic-block if_nextx_x4
convOutValx_x2 := ($mux if_nextx_x3_if_nextx_x4_taken ( $bitcast ($float<8,23>) xx_x114) ($mux if_falsex_x4_if_nextx_x4_taken ( $bitcast ($float<8,23>) convOutValx_x1) ($bitcast ($float<8,23>) 0)))
// compare instruction
$guard (if_nextx_x4_exec_guard) xx_x119 := (xx_x268 > ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000010 )  )
if_nextx_x4_if_truex_x6_taken := (if_nextx_x4_exec_guard & xx_x119)
if_nextx_x4_if_falsex_x6_taken := (if_nextx_x4_exec_guard & (~xx_x119))
if_falsex_x6_exec_guard := if_nextx_x4_if_falsex_x6_taken
//begin: basic-block if_falsex_x6
if_falsex_x6_if_nextx_x6_taken := if_falsex_x6_exec_guard
if_truex_x6_exec_guard := if_nextx_x4_if_truex_x6_taken
//begin: basic-block if_truex_x6
$guard (if_truex_x6_exec_guard) xx_x121 := flatten_data
if_truex_x6_if_truex_x7_taken := (if_truex_x6_exec_guard & reuseData)
if_truex_x6_if_falsex_x5_taken := (if_truex_x6_exec_guard & (~reuseData))
if_falsex_x5_exec_guard := if_truex_x6_if_falsex_x5_taken
//begin: basic-block if_falsex_x5
if_falsex_x5_if_nextx_x5_taken := if_falsex_x5_exec_guard
if_truex_x7_exec_guard := if_truex_x6_if_truex_x7_taken
//begin: basic-block if_truex_x7
$guard (if_truex_x7_exec_guard) flatten_data := xx_x121
if_truex_x7_if_nextx_x5_taken := if_truex_x7_exec_guard
if_nextx_x5_exec_guard := (if_falsex_x5_if_nextx_x5_taken | if_truex_x7_if_nextx_x5_taken )
//begin: basic-block if_nextx_x5
$guard (if_nextx_x5_exec_guard) $call dequant (xx_x121 inp_scale inp_zero_point )  (xx_x132)
$guard (if_nextx_x5_exec_guard) xx_x135 := ($slice xx_x38 47 40)
$guard (if_nextx_x5_exec_guard) $call dequant2 (xx_x135 ker_scale ker_zero_point )  (xx_x138)
$guard (if_nextx_x5_exec_guard) $call fp32_mul_for_ecg (xx_x132 xx_x138 )  (xx_x143)
$guard (if_nextx_x5_exec_guard) $call fp32_add_for_ecg (convOutValx_x2 xx_x143 )  (xx_x144)
if_nextx_x5_if_nextx_x6_taken := if_nextx_x5_exec_guard
if_nextx_x6_exec_guard := (if_falsex_x6_if_nextx_x6_taken | if_nextx_x5_if_nextx_x6_taken )
//begin: basic-block if_nextx_x6
convOutValx_x3 := ($mux if_nextx_x5_if_nextx_x6_taken ( $bitcast ($float<8,23>) xx_x144) ($mux if_falsex_x6_if_nextx_x6_taken ( $bitcast ($float<8,23>) convOutValx_x2) ($bitcast ($float<8,23>) 0)))
// compare instruction
$guard (if_nextx_x6_exec_guard) xx_x149 := (xx_x268 > ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000011 )  )
if_nextx_x6_if_truex_x8_taken := (if_nextx_x6_exec_guard & xx_x149)
if_nextx_x6_if_falsex_x8_taken := (if_nextx_x6_exec_guard & (~xx_x149))
if_falsex_x8_exec_guard := if_nextx_x6_if_falsex_x8_taken
//begin: basic-block if_falsex_x8
if_falsex_x8_if_nextx_x8_taken := if_falsex_x8_exec_guard
if_truex_x8_exec_guard := if_nextx_x6_if_truex_x8_taken
//begin: basic-block if_truex_x8
$guard (if_truex_x8_exec_guard) xx_x151 := flatten_data
if_truex_x8_if_truex_x9_taken := (if_truex_x8_exec_guard & reuseData)
if_truex_x8_if_falsex_x7_taken := (if_truex_x8_exec_guard & (~reuseData))
if_falsex_x7_exec_guard := if_truex_x8_if_falsex_x7_taken
//begin: basic-block if_falsex_x7
if_falsex_x7_if_nextx_x7_taken := if_falsex_x7_exec_guard
if_truex_x9_exec_guard := if_truex_x8_if_truex_x9_taken
//begin: basic-block if_truex_x9
$guard (if_truex_x9_exec_guard) flatten_data := xx_x151
if_truex_x9_if_nextx_x7_taken := if_truex_x9_exec_guard
if_nextx_x7_exec_guard := (if_falsex_x7_if_nextx_x7_taken | if_truex_x9_if_nextx_x7_taken )
//begin: basic-block if_nextx_x7
$guard (if_nextx_x7_exec_guard) $call dequant (xx_x151 inp_scale inp_zero_point )  (xx_x162)
$guard (if_nextx_x7_exec_guard) xx_x165 := ($slice xx_x38 39 32)
$guard (if_nextx_x7_exec_guard) $call dequant2 (xx_x165 ker_scale ker_zero_point )  (xx_x168)
$guard (if_nextx_x7_exec_guard) $call fp32_mul_for_ecg (xx_x162 xx_x168 )  (xx_x173)
$guard (if_nextx_x7_exec_guard) $call fp32_add_for_ecg (convOutValx_x3 xx_x173 )  (xx_x174)
if_nextx_x7_if_nextx_x8_taken := if_nextx_x7_exec_guard
if_nextx_x8_exec_guard := (if_falsex_x8_if_nextx_x8_taken | if_nextx_x7_if_nextx_x8_taken )
//begin: basic-block if_nextx_x8
convOutValx_x4 := ($mux if_nextx_x7_if_nextx_x8_taken ( $bitcast ($float<8,23>) xx_x174) ($mux if_falsex_x8_if_nextx_x8_taken ( $bitcast ($float<8,23>) convOutValx_x3) ($bitcast ($float<8,23>) 0)))
// compare instruction
$guard (if_nextx_x8_exec_guard) xx_x179 := (xx_x268 > ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000100 )  )
if_nextx_x8_if_truex_x10_taken := (if_nextx_x8_exec_guard & xx_x179)
if_nextx_x8_if_falsex_x10_taken := (if_nextx_x8_exec_guard & (~xx_x179))
if_falsex_x10_exec_guard := if_nextx_x8_if_falsex_x10_taken
//begin: basic-block if_falsex_x10
if_falsex_x10_if_nextx_x10_taken := if_falsex_x10_exec_guard
if_truex_x10_exec_guard := if_nextx_x8_if_truex_x10_taken
//begin: basic-block if_truex_x10
$guard (if_truex_x10_exec_guard) xx_x181 := flatten_data
if_truex_x10_if_truex_x11_taken := (if_truex_x10_exec_guard & reuseData)
if_truex_x10_if_falsex_x9_taken := (if_truex_x10_exec_guard & (~reuseData))
if_falsex_x9_exec_guard := if_truex_x10_if_falsex_x9_taken
//begin: basic-block if_falsex_x9
if_falsex_x9_if_nextx_x9_taken := if_falsex_x9_exec_guard
if_truex_x11_exec_guard := if_truex_x10_if_truex_x11_taken
//begin: basic-block if_truex_x11
$guard (if_truex_x11_exec_guard) flatten_data := xx_x181
if_truex_x11_if_nextx_x9_taken := if_truex_x11_exec_guard
if_nextx_x9_exec_guard := (if_falsex_x9_if_nextx_x9_taken | if_truex_x11_if_nextx_x9_taken )
//begin: basic-block if_nextx_x9
$guard (if_nextx_x9_exec_guard) $call dequant (xx_x181 inp_scale inp_zero_point )  (xx_x192)
$guard (if_nextx_x9_exec_guard) xx_x195 := ($slice xx_x38 31 24)
$guard (if_nextx_x9_exec_guard) $call dequant2 (xx_x195 ker_scale ker_zero_point )  (xx_x198)
$guard (if_nextx_x9_exec_guard) $call fp32_mul_for_ecg (xx_x192 xx_x198 )  (xx_x203)
$guard (if_nextx_x9_exec_guard) $call fp32_add_for_ecg (convOutValx_x4 xx_x203 )  (xx_x204)
if_nextx_x9_if_nextx_x10_taken := if_nextx_x9_exec_guard
if_nextx_x10_exec_guard := (if_falsex_x10_if_nextx_x10_taken | if_nextx_x9_if_nextx_x10_taken )
//begin: basic-block if_nextx_x10
convOutValx_x5 := ($mux if_nextx_x9_if_nextx_x10_taken ( $bitcast ($float<8,23>) xx_x204) ($mux if_falsex_x10_if_nextx_x10_taken ( $bitcast ($float<8,23>) convOutValx_x4) ($bitcast ($float<8,23>) 0)))
// compare instruction
$guard (if_nextx_x10_exec_guard) xx_x209 := (xx_x268 > ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000101 )  )
if_nextx_x10_if_truex_x12_taken := (if_nextx_x10_exec_guard & xx_x209)
if_nextx_x10_if_falsex_x12_taken := (if_nextx_x10_exec_guard & (~xx_x209))
if_falsex_x12_exec_guard := if_nextx_x10_if_falsex_x12_taken
//begin: basic-block if_falsex_x12
if_falsex_x12_if_nextx_x12_taken := if_falsex_x12_exec_guard
if_truex_x12_exec_guard := if_nextx_x10_if_truex_x12_taken
//begin: basic-block if_truex_x12
$guard (if_truex_x12_exec_guard) xx_x211 := flatten_data
if_truex_x12_if_truex_x13_taken := (if_truex_x12_exec_guard & reuseData)
if_truex_x12_if_falsex_x11_taken := (if_truex_x12_exec_guard & (~reuseData))
if_falsex_x11_exec_guard := if_truex_x12_if_falsex_x11_taken
//begin: basic-block if_falsex_x11
if_falsex_x11_if_nextx_x11_taken := if_falsex_x11_exec_guard
if_truex_x13_exec_guard := if_truex_x12_if_truex_x13_taken
//begin: basic-block if_truex_x13
$guard (if_truex_x13_exec_guard) flatten_data := xx_x211
if_truex_x13_if_nextx_x11_taken := if_truex_x13_exec_guard
if_nextx_x11_exec_guard := (if_falsex_x11_if_nextx_x11_taken | if_truex_x13_if_nextx_x11_taken )
//begin: basic-block if_nextx_x11
$guard (if_nextx_x11_exec_guard) $call dequant (xx_x211 inp_scale inp_zero_point )  (xx_x222)
$guard (if_nextx_x11_exec_guard) xx_x225 := ($slice xx_x38 23 16)
$guard (if_nextx_x11_exec_guard) $call dequant2 (xx_x225 ker_scale ker_zero_point )  (xx_x228)
$guard (if_nextx_x11_exec_guard) $call fp32_mul_for_ecg (xx_x222 xx_x228 )  (xx_x233)
$guard (if_nextx_x11_exec_guard) $call fp32_add_for_ecg (convOutValx_x5 xx_x233 )  (xx_x234)
if_nextx_x11_if_nextx_x12_taken := if_nextx_x11_exec_guard
if_nextx_x12_exec_guard := (if_falsex_x12_if_nextx_x12_taken | if_nextx_x11_if_nextx_x12_taken )
//begin: basic-block if_nextx_x12
convOutValx_x6 := ($mux if_nextx_x11_if_nextx_x12_taken ( $bitcast ($float<8,23>) xx_x234) ($mux if_falsex_x12_if_nextx_x12_taken ( $bitcast ($float<8,23>) convOutValx_x5) ($bitcast ($float<8,23>) 0)))
// compare instruction
$guard (if_nextx_x12_exec_guard) xx_x239 := (xx_x268 > ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000110 )  )
if_nextx_x12_if_truex_x14_taken := (if_nextx_x12_exec_guard & xx_x239)
if_nextx_x12_if_falsex_x14_taken := (if_nextx_x12_exec_guard & (~xx_x239))
if_falsex_x14_exec_guard := if_nextx_x12_if_falsex_x14_taken
//begin: basic-block if_falsex_x14
if_falsex_x14_if_nextx_x14_taken := if_falsex_x14_exec_guard
if_truex_x14_exec_guard := if_nextx_x12_if_truex_x14_taken
//begin: basic-block if_truex_x14
$guard (if_truex_x14_exec_guard) xx_x241 := flatten_data
if_truex_x14_if_truex_x15_taken := (if_truex_x14_exec_guard & reuseData)
if_truex_x14_if_falsex_x13_taken := (if_truex_x14_exec_guard & (~reuseData))
if_falsex_x13_exec_guard := if_truex_x14_if_falsex_x13_taken
//begin: basic-block if_falsex_x13
if_falsex_x13_if_nextx_x13_taken := if_falsex_x13_exec_guard
if_truex_x15_exec_guard := if_truex_x14_if_truex_x15_taken
//begin: basic-block if_truex_x15
$guard (if_truex_x15_exec_guard) flatten_data := xx_x241
if_truex_x15_if_nextx_x13_taken := if_truex_x15_exec_guard
if_nextx_x13_exec_guard := (if_falsex_x13_if_nextx_x13_taken | if_truex_x15_if_nextx_x13_taken )
//begin: basic-block if_nextx_x13
$guard (if_nextx_x13_exec_guard) $call dequant (xx_x241 inp_scale inp_zero_point )  (xx_x252)
$guard (if_nextx_x13_exec_guard) xx_x255 := ($slice xx_x38 15 8)
$guard (if_nextx_x13_exec_guard) $call dequant2 (xx_x255 ker_scale ker_zero_point )  (xx_x258)
$guard (if_nextx_x13_exec_guard) $call fp32_mul_for_ecg (xx_x252 xx_x258 )  (xx_x263)
$guard (if_nextx_x13_exec_guard) $call fp32_add_for_ecg (convOutValx_x6 xx_x263 )  (xx_x264)
if_nextx_x13_if_nextx_x14_taken := if_nextx_x13_exec_guard
if_nextx_x14_exec_guard := (if_falsex_x14_if_nextx_x14_taken | if_nextx_x13_if_nextx_x14_taken )
//begin: basic-block if_nextx_x14
convOutValx_x7 := ($mux if_nextx_x13_if_nextx_x14_taken ( $bitcast ($float<8,23>) xx_x264) ($mux if_falsex_x14_if_nextx_x14_taken ( $bitcast ($float<8,23>) convOutValx_x6) ($bitcast ($float<8,23>) 0)))
// compare instruction
$guard (if_nextx_x14_exec_guard) xx_x269 := (xx_x268 > ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000111 )  )
if_nextx_x14_if_truex_x16_taken := (if_nextx_x14_exec_guard & xx_x269)
if_nextx_x14_if_falsex_x16_taken := (if_nextx_x14_exec_guard & (~xx_x269))
if_falsex_x16_exec_guard := if_nextx_x14_if_falsex_x16_taken
//begin: basic-block if_falsex_x16
if_falsex_x16_if_nextx_x16_taken := if_falsex_x16_exec_guard
if_truex_x16_exec_guard := if_nextx_x14_if_truex_x16_taken
//begin: basic-block if_truex_x16
$guard (if_truex_x16_exec_guard) xx_x271 := flatten_data
if_truex_x16_if_truex_x17_taken := (if_truex_x16_exec_guard & reuseData)
if_truex_x16_if_falsex_x15_taken := (if_truex_x16_exec_guard & (~reuseData))
if_falsex_x15_exec_guard := if_truex_x16_if_falsex_x15_taken
//begin: basic-block if_falsex_x15
if_falsex_x15_if_nextx_x15_taken := if_falsex_x15_exec_guard
if_truex_x17_exec_guard := if_truex_x16_if_truex_x17_taken
//begin: basic-block if_truex_x17
$guard (if_truex_x17_exec_guard) flatten_data := xx_x271
if_truex_x17_if_nextx_x15_taken := if_truex_x17_exec_guard
if_nextx_x15_exec_guard := (if_falsex_x15_if_nextx_x15_taken | if_truex_x17_if_nextx_x15_taken )
//begin: basic-block if_nextx_x15
$guard (if_nextx_x15_exec_guard) $call dequant (xx_x271 inp_scale inp_zero_point )  (xx_x282)
$guard (if_nextx_x15_exec_guard) xx_x285 := ($slice xx_x38 7 0)
$guard (if_nextx_x15_exec_guard) $call dequant2 (xx_x285 ker_scale ker_zero_point )  (xx_x288)
$guard (if_nextx_x15_exec_guard) $call fp32_mul_for_ecg (xx_x282 xx_x288 )  (xx_x293)
$guard (if_nextx_x15_exec_guard) $call fp32_add_for_ecg (convOutValx_x7 xx_x293 )  (xx_x294)
if_nextx_x15_if_nextx_x16_taken := if_nextx_x15_exec_guard
//begin: basic-block if_nextx_x16
convOutValx_x8 := ($mux if_nextx_x15_if_nextx_x16_taken ( $bitcast ($float<8,23>) xx_x294) ($mux if_falsex_x16_if_nextx_x16_taken ( $bitcast ($float<8,23>) convOutValx_x7) ($bitcast ($float<8,23>) 0)))
// compare instruction
xx_x35 := (xx_x46 < groups )
if_nextx_x16_forx_xfor_out_crit_edge_taken := ( ~xx_x35)
$while xx_x35
$if if_nextx_x16_forx_xfor_out_crit_edge_taken $then 
  $place [if_nextx_x16_forx_xfor_out_crit_edge]
$endif
//begin: basic-block forx_xfor_out_crit_edge
$merge if_nextx_x16_forx_xfor_out_crit_edge
$phi split :=  ( $cast ($float<8,23>) convOutValx_x8) $on if_nextx_x16_forx_xfor_out_crit_edge 
$endmerge
$place [forx_xfor_out_crit_edge_for_out]
//begin: basic-block for_out
$merge forx_xfor_out_crit_edge_for_out if_true_for_out
$phi convOutValx_x0x_xlcssa :=  ( $cast ($float<8,23>) split) $on forx_xfor_out_crit_edge_for_out ( $cast ($float<8,23>) ( $bitcast ($float<8,23> ) _h0 ) ) $on if_true_for_out 
$endmerge
$if isActivation $then  $place [for_out_if_truex_x18] $else $place [for_out_if_falsex_x17] $endif 
//begin: basic-block if_truex_x18
$merge for_out_if_truex_x18
$endmerge
$call relu (convOutValx_x0x_xlcssa )  (xx_x305)
$place [if_truex_x18_if_nextx_x17]
//begin: basic-block if_falsex_x17
$merge for_out_if_falsex_x17
$endmerge
$place [if_falsex_x17_if_nextx_x17]
//begin: basic-block if_nextx_x17
$merge if_falsex_x17_if_nextx_x17 if_truex_x18_if_nextx_x17
$phi xx_x309 :=  ( $cast ($float<8,23>) convOutValx_x0x_xlcssa) $on if_falsex_x17_if_nextx_x17 ( $cast ($float<8,23>) xx_x305) $on if_truex_x18_if_nextx_x17 
$endmerge
$call uint_quant (xx_x309 conv_scale conv_zero_point )  (xx_x312)
out_data := xx_x312
stored_ret_val__ := xx_x312
$place [return__]
//begin: basic-block if_falsex_x18
$merge vars_if_falsex_x18
$endmerge
// compare instruction
xx_x431 := (reuseInp == ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  )
// compare instruction
xx_x323453 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  < groups )
$if xx_x323453 $then  $place [if_falsex_x18_for_bodyx_x1x_xlrx_xph] $else $place [if_falsex_x18_for_outx_x3] $endif 
//begin: basic-block for_bodyx_x1x_xlrx_xph
$merge if_falsex_x18_for_bodyx_x1x_xlrx_xph
$endmerge
$place [for_bodyx_x1x_xlrx_xph_for_bodyx_x1]
//begin: basic-block for_bodyx_x1
$merge for_bodyx_x1x_xlrx_xph_for_bodyx_x1 for_outx_x2_for_bodyx_x1
$phi xx_x685459 :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on for_bodyx_x1x_xlrx_xph_for_bodyx_x1 ( $cast ($uint<32>) xx_x686) $on for_outx_x2_for_bodyx_x1 
$phi xx_x37411458 :=  ( $cast ($uint<32>) reuseInp) $on for_bodyx_x1x_xlrx_xph_for_bodyx_x1 ( $cast ($uint<32>) xx_x37410x_xlcssa) $on for_outx_x2_for_bodyx_x1 
$phi xx_x40218457 :=  ( $cast ($uint<32>) reuseInp) $on for_bodyx_x1x_xlrx_xph_for_bodyx_x1 ( $cast ($uint<32>) xx_x40217x_xlcssa) $on for_outx_x2_for_bodyx_x1 
$phi xx_x45726456 :=  ( $cast ($uint<64>) ( $bitcast ($uint<64> ) _b0 ) ) $on for_bodyx_x1x_xlrx_xph_for_bodyx_x1 ( $cast ($uint<64>) xx_x45725x_xlcssa) $on for_outx_x2_for_bodyx_x1 
$phi xx_x47327455 :=  ( $cast ($uint<64>) ( $bitcast ($uint<64> ) _b0 ) ) $on for_bodyx_x1x_xlrx_xph_for_bodyx_x1 ( $cast ($uint<64>) xx_x47328x_xlcssa) $on for_outx_x2_for_bodyx_x1 
$phi convOutValx_x9454 :=  ( $cast ($float<8,23>) ( $bitcast ($float<8,23> ) _h0 ) ) $on for_bodyx_x1x_xlrx_xph_for_bodyx_x1 ( $cast ($float<8,23>) convOutValx_x10x_xlcssa) $on for_outx_x2_for_bodyx_x1 
$endmerge
xx_x481 := (xx_x685459 << ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) )
xx_x482 := (xx_x481 + ( $bitcast ($uint<32> ) _b00000000000000000000000000001000 ) )
// compare instruction
xx_x483x_xnot := ( ($bitcast ( $int<32>) xx_x482) >  ($bitcast ( $int<32>) in_channels ) )
xx_x488 := (xx_x685459 << ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) )
xx_x489 := (in_channels - xx_x488)
xx_x490 := ($cast ($uint<64>) xx_x489)
// compare instruction
xx_x329441 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  < ker_size )
$if xx_x329441 $then  $place [for_bodyx_x1_for_bodyx_x2x_xlrx_xph] $else $place [for_bodyx_x1_for_outx_x2] $endif 
//begin: basic-block for_bodyx_x2x_xlrx_xph
$merge for_bodyx_x1_for_bodyx_x2x_xlrx_xph
$endmerge
$place [for_bodyx_x2x_xlrx_xph_for_bodyx_x2]
//begin: basic-block for_bodyx_x2
$merge for_bodyx_x2x_xlrx_xph_for_bodyx_x2 for_outx_x1_for_bodyx_x2
$phi xx_x681447 :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on for_bodyx_x2x_xlrx_xph_for_bodyx_x2 ( $cast ($uint<32>) xx_x682) $on for_outx_x1_for_bodyx_x2 
$phi xx_x37410446 :=  ( $cast ($uint<32>) xx_x37411458) $on for_bodyx_x2x_xlrx_xph_for_bodyx_x2 ( $cast ($uint<32>) xx_x374x_xlcssa) $on for_outx_x1_for_bodyx_x2 
$phi xx_x40217445 :=  ( $cast ($uint<32>) xx_x40218457) $on for_bodyx_x2x_xlrx_xph_for_bodyx_x2 ( $cast ($uint<32>) xx_x402x_xlcssa) $on for_outx_x1_for_bodyx_x2 
$phi xx_x45725444 :=  ( $cast ($uint<64>) xx_x45726456) $on for_bodyx_x2x_xlrx_xph_for_bodyx_x2 ( $cast ($uint<64>) xx_x45724x_xlcssa) $on for_outx_x1_for_bodyx_x2 
$phi xx_x47328443 :=  ( $cast ($uint<64>) xx_x47327455) $on for_bodyx_x2x_xlrx_xph_for_bodyx_x2 ( $cast ($uint<64>) xx_x47333x_xlcssa) $on for_outx_x1_for_bodyx_x2 
$phi convOutValx_x10442 :=  ( $cast ($float<8,23>) convOutValx_x9454) $on for_bodyx_x2x_xlrx_xph_for_bodyx_x2 ( $cast ($float<8,23>) convOutValx_x11x_xlcssa) $on for_outx_x1_for_bodyx_x2 
$endmerge
// compare instruction
xx_x338 := (xx_x681447 == ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  )
// compare instruction
xx_x343 := (xx_x681447 == ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 )  )
// compare instruction
xx_x348 := (xx_x681447 == ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 )  )
// compare instruction
xx_x353 := (xx_x681447 == ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 )  )
// compare instruction
xx_x358 := (xx_x681447 == ( $bitcast ($uint<32> ) _b00000000000000000000000000000100 )  )
// compare instruction
xx_x440 := (xx_x681447 == ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 )  )
// compare instruction
xx_x445 := (xx_x681447 == ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 )  )
// compare instruction
xx_x450 := (xx_x681447 == ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 )  )
// compare instruction
xx_x455 := (xx_x681447 == ( $bitcast ($uint<32> ) _b00000000000000000000000000000100 )  )
// compare instruction
xx_x410 := (xx_x681447 == ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 )  )
// compare instruction
xx_x415 := (xx_x681447 == ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 )  )
// compare instruction
xx_x420 := (xx_x681447 == ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 )  )
// compare instruction
xx_x377 := (xx_x681447 == ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 )  )
// compare instruction
xx_x382 := (xx_x681447 == ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 )  )
// compare instruction
xx_x387 := (xx_x681447 == ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 )  )
// compare instruction
xx_x392 := (xx_x681447 == ( $bitcast ($uint<32> ) _b00000000000000000000000000000100 )  )
// compare instruction
xx_x335429 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  < ker_size )
$if xx_x335429 $then  $place [for_bodyx_x2_for_bodyx_x3x_xlrx_xph] $else $place [for_bodyx_x2_for_outx_x1] $endif 
//begin: basic-block for_bodyx_x3x_xlrx_xph
$merge for_bodyx_x2_for_bodyx_x3x_xlrx_xph
$endmerge
$place [for_bodyx_x3x_xlrx_xph_for_bodyx_x3]
//begin: basic-block for_bodyx_x3
//   this is a do-while loop.
$merge for_bodyx_x3x_xlrx_xph_for_bodyx_x3
$endmerge
$dopipeline $depth 31 $buffering 7 
$fullrate
$merge $entry $loopback
$phi xx_x677435 :=  ( $cast ($uint<32>) xx_x678) $on $loopback ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on $entry
$phi xx_x374434 :=  ( $cast ($uint<32>) xx_x3747) $on $loopback ( $cast ($uint<32>) xx_x37410446) $on $entry
$phi xx_x402433 :=  ( $cast ($uint<32>) xx_x40213) $on $loopback ( $cast ($uint<32>) xx_x40217445) $on $entry
$phi xx_x45724432 :=  ( $cast ($uint<64>) xx_x657) $on $loopback ( $cast ($uint<64>) xx_x45725444) $on $entry
$phi xx_x47333431 :=  ( $cast ($uint<64>) xx_x657) $on $loopback ( $cast ($uint<64>) xx_x47328443) $on $entry
$phi convOutValx_x11430 :=  ( $cast ($float<8,23>) convOutValx_x19) $on $loopback ( $cast ($float<8,23>) convOutValx_x10442) $on $entry
$endmerge
for_bodyx_x3_if_truex_x19_taken := xx_x338
for_bodyx_x3_if_falsex_x19_taken := ( ~xx_x338)
if_falsex_x19_exec_guard := for_bodyx_x3_if_falsex_x19_taken
//begin: basic-block if_falsex_x19
if_falsex_x19_if_truex_x20_taken := (if_falsex_x19_exec_guard & xx_x343)
if_falsex_x19_if_falsex_x20_taken := (if_falsex_x19_exec_guard & (~xx_x343))
if_falsex_x20_exec_guard := if_falsex_x19_if_falsex_x20_taken
//begin: basic-block if_falsex_x20
if_falsex_x20_if_truex_x21_taken := (if_falsex_x20_exec_guard & xx_x348)
if_falsex_x20_if_falsex_x21_taken := (if_falsex_x20_exec_guard & (~xx_x348))
if_falsex_x21_exec_guard := if_falsex_x20_if_falsex_x21_taken
//begin: basic-block if_falsex_x21
if_falsex_x21_if_truex_x22_taken := (if_falsex_x21_exec_guard & xx_x353)
if_falsex_x21_if_falsex_x22_taken := (if_falsex_x21_exec_guard & (~xx_x353))
if_falsex_x22_exec_guard := if_falsex_x21_if_falsex_x22_taken
//begin: basic-block if_falsex_x22
if_falsex_x22_if_truex_x23_taken := (if_falsex_x22_exec_guard & xx_x358)
if_falsex_x22_if_falsex_x23_taken := (if_falsex_x22_exec_guard & (~xx_x358))
if_falsex_x23_exec_guard := if_falsex_x22_if_falsex_x23_taken
//begin: basic-block if_falsex_x23
if_falsex_x23_if_nextx_x19_taken := if_falsex_x23_exec_guard
if_truex_x23_exec_guard := if_falsex_x22_if_truex_x23_taken
//begin: basic-block if_truex_x23
$guard (if_truex_x23_exec_guard) xx_x360 := in_data_4
if_truex_x23_if_nextx_x19_taken := if_truex_x23_exec_guard
if_nextx_x19_exec_guard := (if_falsex_x23_if_nextx_x19_taken | if_truex_x23_if_nextx_x19_taken )
//begin: basic-block if_nextx_x19
xx_x47332 := ($mux if_falsex_x23_if_nextx_x19_taken ( $bitcast ($uint<64>) xx_x47333431) ($mux if_truex_x23_if_nextx_x19_taken ( $bitcast ($uint<64>) xx_x360) ($bitcast ($uint<64>) 0)))
xx_x45723 := ($mux if_falsex_x23_if_nextx_x19_taken ( $bitcast ($uint<64>) xx_x45724432) ($mux if_truex_x23_if_nextx_x19_taken ( $bitcast ($uint<64>) xx_x360) ($bitcast ($uint<64>) 0)))
if_nextx_x19_if_nextx_x20_taken := if_nextx_x19_exec_guard
if_truex_x22_exec_guard := if_falsex_x21_if_truex_x22_taken
//begin: basic-block if_truex_x22
$guard (if_truex_x22_exec_guard) xx_x355 := in_data_3
if_truex_x22_if_nextx_x20_taken := if_truex_x22_exec_guard
if_nextx_x20_exec_guard := (if_nextx_x19_if_nextx_x20_taken | if_truex_x22_if_nextx_x20_taken )
//begin: basic-block if_nextx_x20
xx_x47331 := ($mux if_nextx_x19_if_nextx_x20_taken ( $bitcast ($uint<64>) xx_x47332) ($mux if_truex_x22_if_nextx_x20_taken ( $bitcast ($uint<64>) xx_x355) ($bitcast ($uint<64>) 0)))
xx_x45722 := ($mux if_nextx_x19_if_nextx_x20_taken ( $bitcast ($uint<64>) xx_x45723) ($mux if_truex_x22_if_nextx_x20_taken ( $bitcast ($uint<64>) xx_x355) ($bitcast ($uint<64>) 0)))
if_nextx_x20_if_nextx_x21_taken := if_nextx_x20_exec_guard
if_truex_x21_exec_guard := if_falsex_x20_if_truex_x21_taken
//begin: basic-block if_truex_x21
$guard (if_truex_x21_exec_guard) xx_x350 := in_data_2
if_truex_x21_if_nextx_x21_taken := if_truex_x21_exec_guard
if_nextx_x21_exec_guard := (if_nextx_x20_if_nextx_x21_taken | if_truex_x21_if_nextx_x21_taken )
//begin: basic-block if_nextx_x21
xx_x47330 := ($mux if_nextx_x20_if_nextx_x21_taken ( $bitcast ($uint<64>) xx_x47331) ($mux if_truex_x21_if_nextx_x21_taken ( $bitcast ($uint<64>) xx_x350) ($bitcast ($uint<64>) 0)))
xx_x45721 := ($mux if_nextx_x20_if_nextx_x21_taken ( $bitcast ($uint<64>) xx_x45722) ($mux if_truex_x21_if_nextx_x21_taken ( $bitcast ($uint<64>) xx_x350) ($bitcast ($uint<64>) 0)))
if_nextx_x21_if_nextx_x22_taken := if_nextx_x21_exec_guard
if_truex_x20_exec_guard := if_falsex_x19_if_truex_x20_taken
//begin: basic-block if_truex_x20
$guard (if_truex_x20_exec_guard) xx_x345 := in_data_1
if_truex_x20_if_nextx_x22_taken := if_truex_x20_exec_guard
if_nextx_x22_exec_guard := (if_nextx_x21_if_nextx_x22_taken | if_truex_x20_if_nextx_x22_taken )
//begin: basic-block if_nextx_x22
xx_x47329 := ($mux if_nextx_x21_if_nextx_x22_taken ( $bitcast ($uint<64>) xx_x47330) ($mux if_truex_x20_if_nextx_x22_taken ( $bitcast ($uint<64>) xx_x345) ($bitcast ($uint<64>) 0)))
xx_x45720 := ($mux if_nextx_x21_if_nextx_x22_taken ( $bitcast ($uint<64>) xx_x45721) ($mux if_truex_x20_if_nextx_x22_taken ( $bitcast ($uint<64>) xx_x345) ($bitcast ($uint<64>) 0)))
if_nextx_x22_if_nextx_x23_taken := if_nextx_x22_exec_guard
if_truex_x19_exec_guard := for_bodyx_x3_if_truex_x19_taken
//begin: basic-block if_truex_x19
$guard (if_truex_x19_exec_guard) xx_x340 := in_data_0
if_truex_x19_if_nextx_x23_taken := if_truex_x19_exec_guard
if_nextx_x23_exec_guard := (if_nextx_x22_if_nextx_x23_taken | if_truex_x19_if_nextx_x23_taken )
//begin: basic-block if_nextx_x23
xx_x657 := ($mux if_nextx_x22_if_nextx_x23_taken ( $bitcast ($uint<64>) xx_x47329) ($mux if_truex_x19_if_nextx_x23_taken ( $bitcast ($uint<64>) xx_x340) ($bitcast ($uint<64>) 0)))
xx_x379 := ($mux if_nextx_x22_if_nextx_x23_taken ( $bitcast ($uint<64>) xx_x45720) ($mux if_truex_x19_if_nextx_x23_taken ( $bitcast ($uint<64>) xx_x340) ($bitcast ($uint<64>) 0)))
$guard (if_nextx_x23_exec_guard) xx_x368 := ker_data
if_nextx_x23_if_truex_x24_taken := (if_nextx_x23_exec_guard & reuseData)
if_nextx_x23_if_falsex_x41_taken := (if_nextx_x23_exec_guard & (~reuseData))
if_falsex_x41_exec_guard := if_nextx_x23_if_falsex_x41_taken
//begin: basic-block if_falsex_x41
if_falsex_x41_if_nextx_x41_taken := if_falsex_x41_exec_guard
if_truex_x24_exec_guard := if_nextx_x23_if_truex_x24_taken
//begin: basic-block if_truex_x24
$guard (if_truex_x24_exec_guard) ker_data := xx_x368
// compare instruction
$guard (if_truex_x24_exec_guard) xx_x375 := (xx_x374434 == ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 )  )
if_truex_x24_if_truex_x25_taken := (if_truex_x24_exec_guard & xx_x375)
if_truex_x24_if_falsex_x28_taken := (if_truex_x24_exec_guard & (~xx_x375))
if_falsex_x28_exec_guard := if_truex_x24_if_falsex_x28_taken
//begin: basic-block if_falsex_x28
// compare instruction
$guard (if_falsex_x28_exec_guard) xx_x403 := (xx_x402433 == ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 )  )
if_falsex_x28_if_truex_x30_taken := (if_falsex_x28_exec_guard & xx_x403)
if_falsex_x28_if_falsex_x33_taken := (if_falsex_x28_exec_guard & (~xx_x403))
if_falsex_x33_exec_guard := if_falsex_x28_if_falsex_x33_taken
//begin: basic-block if_falsex_x33
if_falsex_x33_if_truex_x35_taken := (if_falsex_x33_exec_guard & xx_x431)
if_falsex_x33_if_falsex_x40_taken := (if_falsex_x33_exec_guard & (~xx_x431))
if_falsex_x40_exec_guard := if_falsex_x33_if_falsex_x40_taken
//begin: basic-block if_falsex_x40
if_falsex_x40_if_nextx_x38_taken := if_falsex_x40_exec_guard
if_truex_x35_exec_guard := if_falsex_x33_if_truex_x35_taken
//begin: basic-block if_truex_x35
// compare instruction
$guard (if_truex_x35_exec_guard) xx_x433 := ( ($bitcast ( $int<32>) xx_x677435) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  ) )
if_truex_x35_if_truex_x36_taken := (if_truex_x35_exec_guard & xx_x433)
if_truex_x35_if_falsex_x39_taken := (if_truex_x35_exec_guard & (~xx_x433))
if_falsex_x39_exec_guard := if_truex_x35_if_falsex_x39_taken
//begin: basic-block if_falsex_x39
if_falsex_x39_if_nextx_x37_taken := if_falsex_x39_exec_guard
if_truex_x36_exec_guard := if_truex_x35_if_truex_x36_taken
//begin: basic-block if_truex_x36
if_truex_x36_if_truex_x37_taken := (if_truex_x36_exec_guard & xx_x338)
if_truex_x36_if_falsex_x34_taken := (if_truex_x36_exec_guard & (~xx_x338))
if_falsex_x34_exec_guard := if_truex_x36_if_falsex_x34_taken
//begin: basic-block if_falsex_x34
if_falsex_x34_if_truex_x38_taken := (if_falsex_x34_exec_guard & xx_x440)
if_falsex_x34_if_falsex_x35_taken := (if_falsex_x34_exec_guard & (~xx_x440))
if_falsex_x35_exec_guard := if_falsex_x34_if_falsex_x35_taken
//begin: basic-block if_falsex_x35
if_falsex_x35_if_truex_x39_taken := (if_falsex_x35_exec_guard & xx_x445)
if_falsex_x35_if_falsex_x36_taken := (if_falsex_x35_exec_guard & (~xx_x445))
if_falsex_x36_exec_guard := if_falsex_x35_if_falsex_x36_taken
//begin: basic-block if_falsex_x36
if_falsex_x36_if_truex_x40_taken := (if_falsex_x36_exec_guard & xx_x450)
if_falsex_x36_if_falsex_x37_taken := (if_falsex_x36_exec_guard & (~xx_x450))
if_falsex_x37_exec_guard := if_falsex_x36_if_falsex_x37_taken
//begin: basic-block if_falsex_x37
if_falsex_x37_if_truex_x41_taken := (if_falsex_x37_exec_guard & xx_x455)
if_falsex_x37_if_falsex_x38_taken := (if_falsex_x37_exec_guard & (~xx_x455))
if_falsex_x38_exec_guard := if_falsex_x37_if_falsex_x38_taken
//begin: basic-block if_falsex_x38
if_falsex_x38_if_nextx_x32_taken := if_falsex_x38_exec_guard
if_truex_x41_exec_guard := if_falsex_x37_if_truex_x41_taken
//begin: basic-block if_truex_x41
$guard (if_truex_x41_exec_guard) in_data_4 := xx_x379
if_truex_x41_if_nextx_x32_taken := if_truex_x41_exec_guard
if_nextx_x32_exec_guard := (if_falsex_x38_if_nextx_x32_taken | if_truex_x41_if_nextx_x32_taken )
//begin: basic-block if_nextx_x32
if_nextx_x32_if_nextx_x33_taken := if_nextx_x32_exec_guard
if_truex_x40_exec_guard := if_falsex_x36_if_truex_x40_taken
//begin: basic-block if_truex_x40
$guard (if_truex_x40_exec_guard) in_data_3 := xx_x379
if_truex_x40_if_nextx_x33_taken := if_truex_x40_exec_guard
if_nextx_x33_exec_guard := (if_nextx_x32_if_nextx_x33_taken | if_truex_x40_if_nextx_x33_taken )
//begin: basic-block if_nextx_x33
if_nextx_x33_if_nextx_x34_taken := if_nextx_x33_exec_guard
if_truex_x39_exec_guard := if_falsex_x35_if_truex_x39_taken
//begin: basic-block if_truex_x39
$guard (if_truex_x39_exec_guard) in_data_2 := xx_x379
if_truex_x39_if_nextx_x34_taken := if_truex_x39_exec_guard
if_nextx_x34_exec_guard := (if_nextx_x33_if_nextx_x34_taken | if_truex_x39_if_nextx_x34_taken )
//begin: basic-block if_nextx_x34
if_nextx_x34_if_nextx_x35_taken := if_nextx_x34_exec_guard
if_truex_x38_exec_guard := if_falsex_x34_if_truex_x38_taken
//begin: basic-block if_truex_x38
$guard (if_truex_x38_exec_guard) in_data_1 := xx_x379
if_truex_x38_if_nextx_x35_taken := if_truex_x38_exec_guard
if_nextx_x35_exec_guard := (if_nextx_x34_if_nextx_x35_taken | if_truex_x38_if_nextx_x35_taken )
//begin: basic-block if_nextx_x35
if_nextx_x35_if_nextx_x36_taken := if_nextx_x35_exec_guard
if_truex_x37_exec_guard := if_truex_x36_if_truex_x37_taken
//begin: basic-block if_truex_x37
$guard (if_truex_x37_exec_guard) in_data_0 := xx_x379
if_truex_x37_if_nextx_x36_taken := if_truex_x37_exec_guard
if_nextx_x36_exec_guard := (if_nextx_x35_if_nextx_x36_taken | if_truex_x37_if_nextx_x36_taken )
//begin: basic-block if_nextx_x36
if_nextx_x36_if_nextx_x37_taken := if_nextx_x36_exec_guard
if_nextx_x37_exec_guard := (if_falsex_x39_if_nextx_x37_taken | if_nextx_x36_if_nextx_x37_taken )
//begin: basic-block if_nextx_x37
if_nextx_x37_if_nextx_x38_taken := if_nextx_x37_exec_guard
if_nextx_x38_exec_guard := (if_falsex_x40_if_nextx_x38_taken | if_nextx_x37_if_nextx_x38_taken )
//begin: basic-block if_nextx_x38
if_nextx_x38_if_nextx_x39_taken := if_nextx_x38_exec_guard
if_truex_x30_exec_guard := if_falsex_x28_if_truex_x30_taken
//begin: basic-block if_truex_x30
if_truex_x30_if_truex_x31_taken := (if_truex_x30_exec_guard & xx_x338)
if_truex_x30_if_falsex_x29_taken := (if_truex_x30_exec_guard & (~xx_x338))
if_falsex_x29_exec_guard := if_truex_x30_if_falsex_x29_taken
//begin: basic-block if_falsex_x29
if_falsex_x29_if_truex_x32_taken := (if_falsex_x29_exec_guard & xx_x410)
if_falsex_x29_if_falsex_x30_taken := (if_falsex_x29_exec_guard & (~xx_x410))
if_falsex_x30_exec_guard := if_falsex_x29_if_falsex_x30_taken
//begin: basic-block if_falsex_x30
if_falsex_x30_if_truex_x33_taken := (if_falsex_x30_exec_guard & xx_x415)
if_falsex_x30_if_falsex_x31_taken := (if_falsex_x30_exec_guard & (~xx_x415))
if_falsex_x31_exec_guard := if_falsex_x30_if_falsex_x31_taken
//begin: basic-block if_falsex_x31
if_falsex_x31_if_truex_x34_taken := (if_falsex_x31_exec_guard & xx_x420)
if_falsex_x31_if_falsex_x32_taken := (if_falsex_x31_exec_guard & (~xx_x420))
if_falsex_x32_exec_guard := if_falsex_x31_if_falsex_x32_taken
//begin: basic-block if_falsex_x32
if_falsex_x32_if_nextx_x28_taken := if_falsex_x32_exec_guard
if_truex_x34_exec_guard := if_falsex_x31_if_truex_x34_taken
//begin: basic-block if_truex_x34
$guard (if_truex_x34_exec_guard) in_data_4 := xx_x379
if_truex_x34_if_nextx_x28_taken := if_truex_x34_exec_guard
if_nextx_x28_exec_guard := (if_falsex_x32_if_nextx_x28_taken | if_truex_x34_if_nextx_x28_taken )
//begin: basic-block if_nextx_x28
if_nextx_x28_if_nextx_x29_taken := if_nextx_x28_exec_guard
if_truex_x33_exec_guard := if_falsex_x30_if_truex_x33_taken
//begin: basic-block if_truex_x33
$guard (if_truex_x33_exec_guard) in_data_3 := xx_x379
if_truex_x33_if_nextx_x29_taken := if_truex_x33_exec_guard
if_nextx_x29_exec_guard := (if_nextx_x28_if_nextx_x29_taken | if_truex_x33_if_nextx_x29_taken )
//begin: basic-block if_nextx_x29
if_nextx_x29_if_nextx_x30_taken := if_nextx_x29_exec_guard
if_truex_x32_exec_guard := if_falsex_x29_if_truex_x32_taken
//begin: basic-block if_truex_x32
$guard (if_truex_x32_exec_guard) in_data_2 := xx_x379
if_truex_x32_if_nextx_x30_taken := if_truex_x32_exec_guard
if_nextx_x30_exec_guard := (if_nextx_x29_if_nextx_x30_taken | if_truex_x32_if_nextx_x30_taken )
//begin: basic-block if_nextx_x30
if_nextx_x30_if_nextx_x31_taken := if_nextx_x30_exec_guard
if_truex_x31_exec_guard := if_truex_x30_if_truex_x31_taken
//begin: basic-block if_truex_x31
$guard (if_truex_x31_exec_guard) in_data_1 := xx_x379
if_truex_x31_if_nextx_x31_taken := if_truex_x31_exec_guard
if_nextx_x31_exec_guard := (if_nextx_x30_if_nextx_x31_taken | if_truex_x31_if_nextx_x31_taken )
//begin: basic-block if_nextx_x31
if_nextx_x31_if_nextx_x39_taken := if_nextx_x31_exec_guard
if_nextx_x39_exec_guard := (if_nextx_x31_if_nextx_x39_taken | if_nextx_x38_if_nextx_x39_taken )
//begin: basic-block if_nextx_x39
xx_x40215 := ($mux if_nextx_x38_if_nextx_x39_taken ( $bitcast ($uint<32>) reuseInp) ($mux if_nextx_x31_if_nextx_x39_taken ( $bitcast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ) ($bitcast ($uint<32>) 0)))
xx_x37412 := ($mux if_nextx_x38_if_nextx_x39_taken ( $bitcast ($uint<32>) reuseInp) ($mux if_nextx_x31_if_nextx_x39_taken ( $bitcast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ) ($bitcast ($uint<32>) 0)))
if_nextx_x39_if_nextx_x40_taken := if_nextx_x39_exec_guard
if_truex_x25_exec_guard := if_truex_x24_if_truex_x25_taken
//begin: basic-block if_truex_x25
if_truex_x25_if_truex_x26_taken := (if_truex_x25_exec_guard & xx_x377)
if_truex_x25_if_falsex_x24_taken := (if_truex_x25_exec_guard & (~xx_x377))
if_falsex_x24_exec_guard := if_truex_x25_if_falsex_x24_taken
//begin: basic-block if_falsex_x24
if_falsex_x24_if_truex_x27_taken := (if_falsex_x24_exec_guard & xx_x382)
if_falsex_x24_if_falsex_x25_taken := (if_falsex_x24_exec_guard & (~xx_x382))
if_falsex_x25_exec_guard := if_falsex_x24_if_falsex_x25_taken
//begin: basic-block if_falsex_x25
if_falsex_x25_if_truex_x28_taken := (if_falsex_x25_exec_guard & xx_x387)
if_falsex_x25_if_falsex_x26_taken := (if_falsex_x25_exec_guard & (~xx_x387))
if_falsex_x26_exec_guard := if_falsex_x25_if_falsex_x26_taken
//begin: basic-block if_falsex_x26
if_falsex_x26_if_truex_x29_taken := (if_falsex_x26_exec_guard & xx_x392)
if_falsex_x26_if_falsex_x27_taken := (if_falsex_x26_exec_guard & (~xx_x392))
if_falsex_x27_exec_guard := if_falsex_x26_if_falsex_x27_taken
//begin: basic-block if_falsex_x27
if_falsex_x27_if_nextx_x24_taken := if_falsex_x27_exec_guard
if_truex_x29_exec_guard := if_falsex_x26_if_truex_x29_taken
//begin: basic-block if_truex_x29
$guard (if_truex_x29_exec_guard) in_data_3 := xx_x379
if_truex_x29_if_nextx_x24_taken := if_truex_x29_exec_guard
if_nextx_x24_exec_guard := (if_falsex_x27_if_nextx_x24_taken | if_truex_x29_if_nextx_x24_taken )
//begin: basic-block if_nextx_x24
if_nextx_x24_if_nextx_x25_taken := if_nextx_x24_exec_guard
if_truex_x28_exec_guard := if_falsex_x25_if_truex_x28_taken
//begin: basic-block if_truex_x28
$guard (if_truex_x28_exec_guard) in_data_2 := xx_x379
if_truex_x28_if_nextx_x25_taken := if_truex_x28_exec_guard
if_nextx_x25_exec_guard := (if_nextx_x24_if_nextx_x25_taken | if_truex_x28_if_nextx_x25_taken )
//begin: basic-block if_nextx_x25
if_nextx_x25_if_nextx_x26_taken := if_nextx_x25_exec_guard
if_truex_x27_exec_guard := if_falsex_x24_if_truex_x27_taken
//begin: basic-block if_truex_x27
$guard (if_truex_x27_exec_guard) in_data_1 := xx_x379
if_truex_x27_if_nextx_x26_taken := if_truex_x27_exec_guard
if_nextx_x26_exec_guard := (if_nextx_x25_if_nextx_x26_taken | if_truex_x27_if_nextx_x26_taken )
//begin: basic-block if_nextx_x26
if_nextx_x26_if_nextx_x27_taken := if_nextx_x26_exec_guard
if_truex_x26_exec_guard := if_truex_x25_if_truex_x26_taken
//begin: basic-block if_truex_x26
$guard (if_truex_x26_exec_guard) in_data_0 := xx_x379
if_truex_x26_if_nextx_x27_taken := if_truex_x26_exec_guard
if_nextx_x27_exec_guard := (if_nextx_x26_if_nextx_x27_taken | if_truex_x26_if_nextx_x27_taken )
//begin: basic-block if_nextx_x27
if_nextx_x27_if_nextx_x40_taken := if_nextx_x27_exec_guard
if_nextx_x40_exec_guard := (if_nextx_x27_if_nextx_x40_taken | if_nextx_x39_if_nextx_x40_taken )
//begin: basic-block if_nextx_x40
xx_x40214 := ($mux if_nextx_x39_if_nextx_x40_taken ( $bitcast ($uint<32>) xx_x40215) ($mux if_nextx_x27_if_nextx_x40_taken ( $bitcast ($uint<32>) xx_x402433) ($bitcast ($uint<32>) 0)))
xx_x3748 := ($mux if_nextx_x39_if_nextx_x40_taken ( $bitcast ($uint<32>) xx_x37412) ($mux if_nextx_x27_if_nextx_x40_taken ( $bitcast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ) ($bitcast ($uint<32>) 0)))
if_nextx_x40_if_nextx_x41_taken := if_nextx_x40_exec_guard
if_nextx_x41_exec_guard := (if_falsex_x41_if_nextx_x41_taken | if_nextx_x40_if_nextx_x41_taken )
//begin: basic-block if_nextx_x41
xx_x40213 := ($mux if_falsex_x41_if_nextx_x41_taken ( $bitcast ($uint<32>) xx_x402433) ($mux if_nextx_x40_if_nextx_x41_taken ( $bitcast ($uint<32>) xx_x40214) ($bitcast ($uint<32>) 0)))
xx_x3747 := ($mux if_falsex_x41_if_nextx_x41_taken ( $bitcast ($uint<32>) xx_x374434) ($mux if_nextx_x40_if_nextx_x41_taken ( $bitcast ($uint<32>) xx_x3748) ($bitcast ($uint<32>) 0)))
if_nextx_x41_if_falsex_x42_taken := (if_nextx_x41_exec_guard & xx_x483x_xnot)
if_nextx_x41_if_truex_x42_taken := (if_nextx_x41_exec_guard & (~xx_x483x_xnot))
if_truex_x42_exec_guard := if_nextx_x41_if_truex_x42_taken
//begin: basic-block if_truex_x42
if_truex_x42_if_nextx_x42_taken := if_truex_x42_exec_guard
if_falsex_x42_exec_guard := if_nextx_x41_if_falsex_x42_taken
//begin: basic-block if_falsex_x42
if_falsex_x42_if_nextx_x42_taken := if_falsex_x42_exec_guard
if_nextx_x42_exec_guard := (if_falsex_x42_if_nextx_x42_taken | if_truex_x42_if_nextx_x42_taken )
//begin: basic-block if_nextx_x42
xx_x654x_xpre := ($mux if_falsex_x42_if_nextx_x42_taken ( $bitcast ($uint<64>) xx_x490) ($mux if_truex_x42_if_nextx_x42_taken ( $bitcast ($uint<64>) ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000001000 ) ) ($bitcast ($uint<64>) 0)))
// compare instruction
$guard (if_nextx_x42_exec_guard) xx_x494x_xnot := (xx_x654x_xpre == ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 )  )
if_nextx_x42_if_falsex_x43_taken := (if_nextx_x42_exec_guard & xx_x494x_xnot)
if_nextx_x42_if_truex_x43_taken := (if_nextx_x42_exec_guard & (~xx_x494x_xnot))
if_truex_x43_exec_guard := if_nextx_x42_if_truex_x43_taken
//begin: basic-block if_truex_x43
$guard (if_truex_x43_exec_guard) xx_x497 := ($slice xx_x657 63 56)
$guard (if_truex_x43_exec_guard) $call dequant (xx_x497 inp_scale inp_zero_point )  (xx_x500)
$guard (if_truex_x43_exec_guard) xx_x503 := ($slice xx_x368 63 56)
$guard (if_truex_x43_exec_guard) $call dequant2 (xx_x503 ker_scale ker_zero_point )  (xx_x506)
$guard (if_truex_x43_exec_guard) $call fp32_mul_for_ecg (xx_x500 xx_x506 )  (xx_x511)
$guard (if_truex_x43_exec_guard) $call fp32_add_for_ecg (convOutValx_x11430 xx_x511 )  (xx_x512)
if_truex_x43_if_nextx_x43_taken := if_truex_x43_exec_guard
if_falsex_x43_exec_guard := if_nextx_x42_if_falsex_x43_taken
//begin: basic-block if_falsex_x43
if_falsex_x43_if_nextx_x43_taken := if_falsex_x43_exec_guard
if_nextx_x43_exec_guard := (if_falsex_x43_if_nextx_x43_taken | if_truex_x43_if_nextx_x43_taken )
//begin: basic-block if_nextx_x43
convOutValx_x12 := ($mux if_falsex_x43_if_nextx_x43_taken ( $bitcast ($float<8,23>) convOutValx_x11430) ($mux if_truex_x43_if_nextx_x43_taken ( $bitcast ($float<8,23>) xx_x512) ($bitcast ($float<8,23>) 0)))
// compare instruction
$guard (if_nextx_x43_exec_guard) xx_x517 := (xx_x654x_xpre > ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000001 )  )
if_nextx_x43_if_truex_x44_taken := (if_nextx_x43_exec_guard & xx_x517)
if_nextx_x43_if_falsex_x44_taken := (if_nextx_x43_exec_guard & (~xx_x517))
if_falsex_x44_exec_guard := if_nextx_x43_if_falsex_x44_taken
//begin: basic-block if_falsex_x44
if_falsex_x44_if_nextx_x44_taken := if_falsex_x44_exec_guard
if_truex_x44_exec_guard := if_nextx_x43_if_truex_x44_taken
//begin: basic-block if_truex_x44
$guard (if_truex_x44_exec_guard) xx_x520 := ($slice xx_x657 55 48)
$guard (if_truex_x44_exec_guard) $call dequant (xx_x520 inp_scale inp_zero_point )  (xx_x523)
$guard (if_truex_x44_exec_guard) xx_x526 := ($slice xx_x368 55 48)
$guard (if_truex_x44_exec_guard) $call dequant2 (xx_x526 ker_scale ker_zero_point )  (xx_x529)
$guard (if_truex_x44_exec_guard) $call fp32_mul_for_ecg (xx_x523 xx_x529 )  (xx_x534)
$guard (if_truex_x44_exec_guard) $call fp32_add_for_ecg (convOutValx_x12 xx_x534 )  (xx_x535)
if_truex_x44_if_nextx_x44_taken := if_truex_x44_exec_guard
if_nextx_x44_exec_guard := (if_falsex_x44_if_nextx_x44_taken | if_truex_x44_if_nextx_x44_taken )
//begin: basic-block if_nextx_x44
convOutValx_x13 := ($mux if_truex_x44_if_nextx_x44_taken ( $bitcast ($float<8,23>) xx_x535) ($mux if_falsex_x44_if_nextx_x44_taken ( $bitcast ($float<8,23>) convOutValx_x12) ($bitcast ($float<8,23>) 0)))
// compare instruction
$guard (if_nextx_x44_exec_guard) xx_x540 := (xx_x654x_xpre > ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000010 )  )
if_nextx_x44_if_truex_x45_taken := (if_nextx_x44_exec_guard & xx_x540)
if_nextx_x44_if_falsex_x45_taken := (if_nextx_x44_exec_guard & (~xx_x540))
if_falsex_x45_exec_guard := if_nextx_x44_if_falsex_x45_taken
//begin: basic-block if_falsex_x45
if_falsex_x45_if_nextx_x45_taken := if_falsex_x45_exec_guard
if_truex_x45_exec_guard := if_nextx_x44_if_truex_x45_taken
//begin: basic-block if_truex_x45
$guard (if_truex_x45_exec_guard) xx_x543 := ($slice xx_x657 47 40)
$guard (if_truex_x45_exec_guard) $call dequant (xx_x543 inp_scale inp_zero_point )  (xx_x546)
$guard (if_truex_x45_exec_guard) xx_x549 := ($slice xx_x368 47 40)
$guard (if_truex_x45_exec_guard) $call dequant2 (xx_x549 ker_scale ker_zero_point )  (xx_x552)
$guard (if_truex_x45_exec_guard) $call fp32_mul_for_ecg (xx_x546 xx_x552 )  (xx_x557)
$guard (if_truex_x45_exec_guard) $call fp32_add_for_ecg (convOutValx_x13 xx_x557 )  (xx_x558)
if_truex_x45_if_nextx_x45_taken := if_truex_x45_exec_guard
if_nextx_x45_exec_guard := (if_falsex_x45_if_nextx_x45_taken | if_truex_x45_if_nextx_x45_taken )
//begin: basic-block if_nextx_x45
convOutValx_x14 := ($mux if_truex_x45_if_nextx_x45_taken ( $bitcast ($float<8,23>) xx_x558) ($mux if_falsex_x45_if_nextx_x45_taken ( $bitcast ($float<8,23>) convOutValx_x13) ($bitcast ($float<8,23>) 0)))
// compare instruction
$guard (if_nextx_x45_exec_guard) xx_x563 := (xx_x654x_xpre > ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000011 )  )
if_nextx_x45_if_truex_x46_taken := (if_nextx_x45_exec_guard & xx_x563)
if_nextx_x45_if_falsex_x46_taken := (if_nextx_x45_exec_guard & (~xx_x563))
if_falsex_x46_exec_guard := if_nextx_x45_if_falsex_x46_taken
//begin: basic-block if_falsex_x46
if_falsex_x46_if_nextx_x46_taken := if_falsex_x46_exec_guard
if_truex_x46_exec_guard := if_nextx_x45_if_truex_x46_taken
//begin: basic-block if_truex_x46
$guard (if_truex_x46_exec_guard) xx_x566 := ($slice xx_x657 39 32)
$guard (if_truex_x46_exec_guard) $call dequant (xx_x566 inp_scale inp_zero_point )  (xx_x569)
$guard (if_truex_x46_exec_guard) xx_x572 := ($slice xx_x368 39 32)
$guard (if_truex_x46_exec_guard) $call dequant2 (xx_x572 ker_scale ker_zero_point )  (xx_x575)
$guard (if_truex_x46_exec_guard) $call fp32_mul_for_ecg (xx_x569 xx_x575 )  (xx_x580)
$guard (if_truex_x46_exec_guard) $call fp32_add_for_ecg (convOutValx_x14 xx_x580 )  (xx_x581)
if_truex_x46_if_nextx_x46_taken := if_truex_x46_exec_guard
if_nextx_x46_exec_guard := (if_falsex_x46_if_nextx_x46_taken | if_truex_x46_if_nextx_x46_taken )
//begin: basic-block if_nextx_x46
convOutValx_x15 := ($mux if_truex_x46_if_nextx_x46_taken ( $bitcast ($float<8,23>) xx_x581) ($mux if_falsex_x46_if_nextx_x46_taken ( $bitcast ($float<8,23>) convOutValx_x14) ($bitcast ($float<8,23>) 0)))
// compare instruction
$guard (if_nextx_x46_exec_guard) xx_x586 := (xx_x654x_xpre > ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000100 )  )
if_nextx_x46_if_truex_x47_taken := (if_nextx_x46_exec_guard & xx_x586)
if_nextx_x46_if_falsex_x47_taken := (if_nextx_x46_exec_guard & (~xx_x586))
if_falsex_x47_exec_guard := if_nextx_x46_if_falsex_x47_taken
//begin: basic-block if_falsex_x47
if_falsex_x47_if_nextx_x47_taken := if_falsex_x47_exec_guard
if_truex_x47_exec_guard := if_nextx_x46_if_truex_x47_taken
//begin: basic-block if_truex_x47
$guard (if_truex_x47_exec_guard) xx_x589 := ($slice xx_x657 31 24)
$guard (if_truex_x47_exec_guard) $call dequant (xx_x589 inp_scale inp_zero_point )  (xx_x592)
$guard (if_truex_x47_exec_guard) xx_x595 := ($slice xx_x368 31 24)
$guard (if_truex_x47_exec_guard) $call dequant2 (xx_x595 ker_scale ker_zero_point )  (xx_x598)
$guard (if_truex_x47_exec_guard) $call fp32_mul_for_ecg (xx_x592 xx_x598 )  (xx_x603)
$guard (if_truex_x47_exec_guard) $call fp32_add_for_ecg (convOutValx_x15 xx_x603 )  (xx_x604)
if_truex_x47_if_nextx_x47_taken := if_truex_x47_exec_guard
if_nextx_x47_exec_guard := (if_falsex_x47_if_nextx_x47_taken | if_truex_x47_if_nextx_x47_taken )
//begin: basic-block if_nextx_x47
convOutValx_x16 := ($mux if_truex_x47_if_nextx_x47_taken ( $bitcast ($float<8,23>) xx_x604) ($mux if_falsex_x47_if_nextx_x47_taken ( $bitcast ($float<8,23>) convOutValx_x15) ($bitcast ($float<8,23>) 0)))
// compare instruction
$guard (if_nextx_x47_exec_guard) xx_x609 := (xx_x654x_xpre > ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000101 )  )
if_nextx_x47_if_truex_x48_taken := (if_nextx_x47_exec_guard & xx_x609)
if_nextx_x47_if_falsex_x48_taken := (if_nextx_x47_exec_guard & (~xx_x609))
if_falsex_x48_exec_guard := if_nextx_x47_if_falsex_x48_taken
//begin: basic-block if_falsex_x48
if_falsex_x48_if_nextx_x48_taken := if_falsex_x48_exec_guard
if_truex_x48_exec_guard := if_nextx_x47_if_truex_x48_taken
//begin: basic-block if_truex_x48
$guard (if_truex_x48_exec_guard) xx_x612 := ($slice xx_x657 23 16)
$guard (if_truex_x48_exec_guard) $call dequant (xx_x612 inp_scale inp_zero_point )  (xx_x615)
$guard (if_truex_x48_exec_guard) xx_x618 := ($slice xx_x368 23 16)
$guard (if_truex_x48_exec_guard) $call dequant2 (xx_x618 ker_scale ker_zero_point )  (xx_x621)
$guard (if_truex_x48_exec_guard) $call fp32_mul_for_ecg (xx_x615 xx_x621 )  (xx_x626)
$guard (if_truex_x48_exec_guard) $call fp32_add_for_ecg (convOutValx_x16 xx_x626 )  (xx_x627)
if_truex_x48_if_nextx_x48_taken := if_truex_x48_exec_guard
if_nextx_x48_exec_guard := (if_falsex_x48_if_nextx_x48_taken | if_truex_x48_if_nextx_x48_taken )
//begin: basic-block if_nextx_x48
convOutValx_x17 := ($mux if_truex_x48_if_nextx_x48_taken ( $bitcast ($float<8,23>) xx_x627) ($mux if_falsex_x48_if_nextx_x48_taken ( $bitcast ($float<8,23>) convOutValx_x16) ($bitcast ($float<8,23>) 0)))
// compare instruction
$guard (if_nextx_x48_exec_guard) xx_x632 := (xx_x654x_xpre > ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000110 )  )
if_nextx_x48_if_truex_x49_taken := (if_nextx_x48_exec_guard & xx_x632)
if_nextx_x48_if_falsex_x49_taken := (if_nextx_x48_exec_guard & (~xx_x632))
if_falsex_x49_exec_guard := if_nextx_x48_if_falsex_x49_taken
//begin: basic-block if_falsex_x49
if_falsex_x49_if_nextx_x49_taken := if_falsex_x49_exec_guard
if_truex_x49_exec_guard := if_nextx_x48_if_truex_x49_taken
//begin: basic-block if_truex_x49
$guard (if_truex_x49_exec_guard) xx_x635 := ($slice xx_x657 15 8)
$guard (if_truex_x49_exec_guard) $call dequant (xx_x635 inp_scale inp_zero_point )  (xx_x638)
$guard (if_truex_x49_exec_guard) xx_x641 := ($slice xx_x368 15 8)
$guard (if_truex_x49_exec_guard) $call dequant2 (xx_x641 ker_scale ker_zero_point )  (xx_x644)
$guard (if_truex_x49_exec_guard) $call fp32_mul_for_ecg (xx_x638 xx_x644 )  (xx_x649)
$guard (if_truex_x49_exec_guard) $call fp32_add_for_ecg (convOutValx_x17 xx_x649 )  (xx_x650)
if_truex_x49_if_nextx_x49_taken := if_truex_x49_exec_guard
if_nextx_x49_exec_guard := (if_falsex_x49_if_nextx_x49_taken | if_truex_x49_if_nextx_x49_taken )
//begin: basic-block if_nextx_x49
convOutValx_x18 := ($mux if_truex_x49_if_nextx_x49_taken ( $bitcast ($float<8,23>) xx_x650) ($mux if_falsex_x49_if_nextx_x49_taken ( $bitcast ($float<8,23>) convOutValx_x17) ($bitcast ($float<8,23>) 0)))
// compare instruction
$guard (if_nextx_x49_exec_guard) xx_x655 := (xx_x654x_xpre > ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000111 )  )
if_nextx_x49_if_truex_x50_taken := (if_nextx_x49_exec_guard & xx_x655)
if_nextx_x49_if_falsex_x50_taken := (if_nextx_x49_exec_guard & (~xx_x655))
if_falsex_x50_exec_guard := if_nextx_x49_if_falsex_x50_taken
//begin: basic-block if_falsex_x50
if_falsex_x50_if_nextx_x50_taken := if_falsex_x50_exec_guard
if_truex_x50_exec_guard := if_nextx_x49_if_truex_x50_taken
//begin: basic-block if_truex_x50
$guard (if_truex_x50_exec_guard) xx_x658 := ($slice xx_x657 7 0)
$guard (if_truex_x50_exec_guard) $call dequant (xx_x658 inp_scale inp_zero_point )  (xx_x661)
$guard (if_truex_x50_exec_guard) xx_x664 := ($slice xx_x368 7 0)
$guard (if_truex_x50_exec_guard) $call dequant2 (xx_x664 ker_scale ker_zero_point )  (xx_x667)
$guard (if_truex_x50_exec_guard) $call fp32_mul_for_ecg (xx_x661 xx_x667 )  (xx_x672)
$guard (if_truex_x50_exec_guard) $call fp32_add_for_ecg (convOutValx_x18 xx_x672 )  (xx_x673)
if_truex_x50_if_nextx_x50_taken := if_truex_x50_exec_guard
//begin: basic-block if_nextx_x50
convOutValx_x19 := ($mux if_truex_x50_if_nextx_x50_taken ( $bitcast ($float<8,23>) xx_x673) ($mux if_falsex_x50_if_nextx_x50_taken ( $bitcast ($float<8,23>) convOutValx_x18) ($bitcast ($float<8,23>) 0)))
chk_var := (( $bitcast ($uint<32> ) 20 ) >  ( $bitcast ($uint<32> ) 0 ))
$guard (chk_var) xx_x678 := (xx_x677435 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
accelerator_reg[9] := ($bitcast ($uint<32>) xx_x677435)
// compare instruction
$guard (chk_var) xx_x335_cmp := (xx_x678 < ker_size )
if_nextx_x50_forx_x3x_xfor_outx_x1_crit_edge_taken := ( ~xx_x335_cmp)
// accelerator_reg[11] := ($bitcast ($uint<32>) xx_x678)
// accelerator_reg[10] := ($bitcast ($uint<32>) ker_size)
$while xx_x335_cmp

$if if_nextx_x50_forx_x3x_xfor_outx_x1_crit_edge_taken $then 
  $place [if_nextx_x50_forx_x3x_xfor_outx_x1_crit_edge]
$endif

//begin: basic-block forx_x3x_xfor_outx_x1_crit_edge
$merge if_nextx_x50_forx_x3x_xfor_outx_x1_crit_edge
$phi split436 :=  ( $cast ($float<8,23>) convOutValx_x19) $on if_nextx_x50_forx_x3x_xfor_outx_x1_crit_edge 
$phi split437 :=  ( $cast ($uint<64>) xx_x657) $on if_nextx_x50_forx_x3x_xfor_outx_x1_crit_edge 
$phi split438 :=  ( $cast ($uint<64>) xx_x657) $on if_nextx_x50_forx_x3x_xfor_outx_x1_crit_edge 
$phi split439 :=  ( $cast ($uint<32>) xx_x40213) $on if_nextx_x50_forx_x3x_xfor_outx_x1_crit_edge 
$phi split440 :=  ( $cast ($uint<32>) xx_x3747) $on if_nextx_x50_forx_x3x_xfor_outx_x1_crit_edge 
$endmerge
$place [forx_x3x_xfor_outx_x1_crit_edge_for_outx_x1]
//begin: basic-block for_outx_x1
$merge for_bodyx_x2_for_outx_x1 forx_x3x_xfor_outx_x1_crit_edge_for_outx_x1
$phi convOutValx_x11x_xlcssa :=  ( $cast ($float<8,23>) split436) $on forx_x3x_xfor_outx_x1_crit_edge_for_outx_x1 ( $cast ($float<8,23>) convOutValx_x10442) $on for_bodyx_x2_for_outx_x1 
$phi xx_x47333x_xlcssa :=  ( $cast ($uint<64>) split437) $on forx_x3x_xfor_outx_x1_crit_edge_for_outx_x1 ( $cast ($uint<64>) xx_x47328443) $on for_bodyx_x2_for_outx_x1 
$phi xx_x45724x_xlcssa :=  ( $cast ($uint<64>) split438) $on forx_x3x_xfor_outx_x1_crit_edge_for_outx_x1 ( $cast ($uint<64>) xx_x45725444) $on for_bodyx_x2_for_outx_x1 
$phi xx_x402x_xlcssa :=  ( $cast ($uint<32>) split439) $on forx_x3x_xfor_outx_x1_crit_edge_for_outx_x1 ( $cast ($uint<32>) xx_x40217445) $on for_bodyx_x2_for_outx_x1 
$phi xx_x374x_xlcssa :=  ( $cast ($uint<32>) split440) $on forx_x3x_xfor_outx_x1_crit_edge_for_outx_x1 ( $cast ($uint<32>) xx_x37410446) $on for_bodyx_x2_for_outx_x1 
$endmerge
xx_x682 := (xx_x681447 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
// compare instruction

xx_x329 := (xx_x682 < ker_size )
$if xx_x329 $then  $place [for_outx_x1_for_bodyx_x2] $else $place [for_outx_x1_forx_x2x_xfor_outx_x2_crit_edge] $endif 
//begin: basic-block forx_x2x_xfor_outx_x2_crit_edge
$merge for_outx_x1_forx_x2x_xfor_outx_x2_crit_edge
$phi split448 :=  ( $cast ($float<8,23>) convOutValx_x11x_xlcssa) $on for_outx_x1_forx_x2x_xfor_outx_x2_crit_edge 
$phi split449 :=  ( $cast ($uint<64>) xx_x47333x_xlcssa) $on for_outx_x1_forx_x2x_xfor_outx_x2_crit_edge 
$phi split450 :=  ( $cast ($uint<64>) xx_x45724x_xlcssa) $on for_outx_x1_forx_x2x_xfor_outx_x2_crit_edge 
$phi split451 :=  ( $cast ($uint<32>) xx_x402x_xlcssa) $on for_outx_x1_forx_x2x_xfor_outx_x2_crit_edge 
$phi split452 :=  ( $cast ($uint<32>) xx_x374x_xlcssa) $on for_outx_x1_forx_x2x_xfor_outx_x2_crit_edge 
$endmerge
$place [forx_x2x_xfor_outx_x2_crit_edge_for_outx_x2]
//begin: basic-block for_outx_x2
$merge for_bodyx_x1_for_outx_x2 forx_x2x_xfor_outx_x2_crit_edge_for_outx_x2
$phi convOutValx_x10x_xlcssa :=  ( $cast ($float<8,23>) split448) $on forx_x2x_xfor_outx_x2_crit_edge_for_outx_x2 ( $cast ($float<8,23>) convOutValx_x9454) $on for_bodyx_x1_for_outx_x2 
$phi xx_x47328x_xlcssa :=  ( $cast ($uint<64>) split449) $on forx_x2x_xfor_outx_x2_crit_edge_for_outx_x2 ( $cast ($uint<64>) xx_x47327455) $on for_bodyx_x1_for_outx_x2 
$phi xx_x45725x_xlcssa :=  ( $cast ($uint<64>) split450) $on forx_x2x_xfor_outx_x2_crit_edge_for_outx_x2 ( $cast ($uint<64>) xx_x45726456) $on for_bodyx_x1_for_outx_x2 
$phi xx_x40217x_xlcssa :=  ( $cast ($uint<32>) split451) $on forx_x2x_xfor_outx_x2_crit_edge_for_outx_x2 ( $cast ($uint<32>) xx_x40218457) $on for_bodyx_x1_for_outx_x2 
$phi xx_x37410x_xlcssa :=  ( $cast ($uint<32>) split452) $on forx_x2x_xfor_outx_x2_crit_edge_for_outx_x2 ( $cast ($uint<32>) xx_x37411458) $on for_bodyx_x1_for_outx_x2 
$endmerge
xx_x686 := (xx_x685459 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
// compare instruction
xx_x323 := (xx_x686 < groups )
$if xx_x323 $then  $place [for_outx_x2_for_bodyx_x1] $else $place [for_outx_x2_forx_x1x_xfor_outx_x3_crit_edge] $endif 
//begin: basic-block forx_x1x_xfor_outx_x3_crit_edge
$merge for_outx_x2_forx_x1x_xfor_outx_x3_crit_edge
$phi split460 :=  ( $cast ($float<8,23>) convOutValx_x10x_xlcssa) $on for_outx_x2_forx_x1x_xfor_outx_x3_crit_edge 
$endmerge
$place [forx_x1x_xfor_outx_x3_crit_edge_for_outx_x3]
//begin: basic-block for_outx_x3
$merge forx_x1x_xfor_outx_x3_crit_edge_for_outx_x3 if_falsex_x18_for_outx_x3
$phi convOutValx_x9x_xlcssa :=  ( $cast ($float<8,23>) split460) $on forx_x1x_xfor_outx_x3_crit_edge_for_outx_x3 ( $cast ($float<8,23>) ( $bitcast ($float<8,23> ) _h0 ) ) $on if_falsex_x18_for_outx_x3 
$endmerge
$if isActivation $then  $place [for_outx_x3_if_truex_x51] $else $place [for_outx_x3_if_falsex_x51] $endif 
//begin: basic-block if_truex_x51
$merge for_outx_x3_if_truex_x51
$endmerge

$call relu (convOutValx_x9x_xlcssa )  (xx_x692)
$place [if_truex_x51_if_nextx_x51]
//begin: basic-block if_falsex_x51
$merge for_outx_x3_if_falsex_x51
$endmerge
$place [if_falsex_x51_if_nextx_x51]
//begin: basic-block if_nextx_x51
$merge if_falsex_x51_if_nextx_x51 if_truex_x51_if_nextx_x51
$phi xx_x696 :=  ( $cast ($float<8,23>) convOutValx_x9x_xlcssa) $on if_falsex_x51_if_nextx_x51 ( $cast ($float<8,23>) xx_x692) $on if_truex_x51_if_nextx_x51 
$endmerge
$call uint_quant (xx_x696 conv_scale conv_zero_point )  (xx_x699)
out_data := xx_x699
stored_ret_val__ := xx_x699
$place [return__]
$merge return__ $endmerge
ret_val__ := stored_ret_val__ 
}
}
// $module [readModule_convolution] 
//  $in (base_address : $uint<32> addr : $uint<32> )
//  $out (ret_val__ : $uint<64>)
//  $is 
// {
// $branchblock [body] {
// //begin: basic-block vars
// ret_val__ := ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) 
// $place [return__]
// $merge return__ $endmerge
// }
// }
// $module [readModule_convolutionk] 
//  $in (base_address : $uint<32> addr : $uint<32> )
//  $out (ret_val__ : $uint<64>)
//  $is 
// {
// $branchblock [body] {
// //begin: basic-block vars
// ret_val__ := ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) 
// $place [return__]
// $merge return__ $endmerge
// }
// }
// $module [writeModule_convolution] 
//  $in (base_address : $uint<32> addr : $uint<32> data : $uint<64> byte_mask : $uint<8> )
//  $out ()
//  $is 
// {
// $branchblock [body] {
// //begin: basic-block vars
// ker_data := data
// $place [return__]
// $merge return__ $endmerge
// }
// }
$module [fetchKernelLinear] 
 $in (base_addr : $uint<32> groups : $uint<32> chn_no : $uint<32> )
 $out ()
 $is 
{
$branchblock [body] {
//begin: basic-block vars
xx_x18 := (groups * chn_no)
// compare instruction
xx_x123 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  < groups )
$if xx_x123 $then  $place [vars_for_bodyx_xlrx_xph] $else $place [vars_for_out] $endif 
//begin: basic-block for_bodyx_xlrx_xph
$merge vars_for_bodyx_xlrx_xph
$endmerge
$place [for_bodyx_xlrx_xph_for_body]
//begin: basic-block for_body
$merge for_body_for_body for_bodyx_xlrx_xph_for_body
$phi xx_x254 :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on for_bodyx_xlrx_xph_for_body ( $cast ($uint<32>) xx_x26) $on for_body_for_body 
$endmerge
xx_x152 := (xx_x254 + xx_x18)
xx_x20 := (xx_x152 << ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) )
$call readModule_convolution (base_addr xx_x20 )  (xx_x21)
ker_data := xx_x21
xx_x26 := (xx_x254 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
// compare instruction
xx_x12 := (xx_x26 < groups )
$if xx_x12 $then  $place [for_body_for_body] $else $place [for_body_forx_xfor_out_crit_edge] $endif 
//begin: basic-block forx_xfor_out_crit_edge
$merge for_body_forx_xfor_out_crit_edge
$endmerge
$place [forx_xfor_out_crit_edge_for_out]
//begin: basic-block for_out
$merge forx_xfor_out_crit_edge_for_out vars_for_out
$endmerge
$place [return__]
$merge return__ $endmerge
}
}
$module [fetchInputLinear] 
 $in (base_addr : $uint<32> groups : $uint<32> )
 $out ()
 $is 
{
$branchblock [body] {
//begin: basic-block vars
// compare instruction
xx_x102 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  < groups )
$if xx_x102 $then  $place [vars_for_bodyx_xlrx_xph] $else $place [vars_for_out] $endif 
//begin: basic-block for_bodyx_xlrx_xph
$merge vars_for_bodyx_xlrx_xph
$endmerge
$place [for_bodyx_xlrx_xph_for_body]
//begin: basic-block for_body
$merge for_body_for_body for_bodyx_xlrx_xph_for_body
$phi xx_x183 :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on for_bodyx_xlrx_xph_for_body ( $cast ($uint<32>) xx_x19) $on for_body_for_body 
$endmerge
xx_x13 := (xx_x183 << ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) )
$call readModule_convolution (base_addr xx_x13 )  (xx_x14)
in_data_0 := xx_x14
xx_x19 := (xx_x183 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
// compare instruction
xx_x10 := (xx_x19 < groups )
$if xx_x10 $then  $place [for_body_for_body] $else $place [for_body_forx_xfor_out_crit_edge] $endif 
//begin: basic-block forx_xfor_out_crit_edge
$merge for_body_forx_xfor_out_crit_edge
$endmerge
$place [forx_xfor_out_crit_edge_for_out]
//begin: basic-block for_out
$merge forx_xfor_out_crit_edge_for_out vars_for_out
$endmerge
$place [return__]
$merge return__ $endmerge
}
}
$module [fetchKernel] 
 $in (base_addr : $uint<32> groups : $uint<32> ker_size : $uint<32> in_channels : $uint<32> inp_zero_point : $float<8,23> )
 $out ()
 $is 
{
$branchblock [body] {
//begin: basic-block vars
xx_x33 := (in_channels * ker_size)
// compare instruction
xx_x1717 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  < groups )
$if xx_x1717 $then  $place [vars_for_bodyx_xlrx_xph] $else $place [vars_for_outx_x2] $endif 
//begin: basic-block for_bodyx_xlrx_xph
$merge vars_for_bodyx_xlrx_xph
$endmerge
$place [for_bodyx_xlrx_xph_for_body]
//begin: basic-block for_body
$merge for_bodyx_xlrx_xph_for_body for_outx_x1_for_body
$phi xx_x5518 :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on for_bodyx_xlrx_xph_for_body ( $cast ($uint<32>) xx_x56) $on for_outx_x1_for_body 
$endmerge
xx_x38 := (xx_x5518 << ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) )
// compare instruction
xx_x2315 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  < ker_size )
$if xx_x2315 $then  $place [for_body_for_bodyx_x1x_xlrx_xph] $else $place [for_body_for_outx_x1] $endif 
//begin: basic-block for_bodyx_x1x_xlrx_xph
$merge for_body_for_bodyx_x1x_xlrx_xph
$endmerge
$place [for_bodyx_x1x_xlrx_xph_for_bodyx_x1]
//begin: basic-block for_bodyx_x1
$merge for_bodyx_x1x_xlrx_xph_for_bodyx_x1 for_out_for_bodyx_x1
$phi xx_x5116 :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on for_bodyx_x1x_xlrx_xph_for_bodyx_x1 ( $cast ($uint<32>) xx_x52) $on for_out_for_bodyx_x1 
$endmerge
xx_x36 := (xx_x5116 * in_channels)
// compare instruction
xx_x2913 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  < ker_size )
$if xx_x2913 $then  $place [for_bodyx_x1_for_bodyx_x2x_xlrx_xph] $else $place [for_bodyx_x1_for_out] $endif 
//begin: basic-block for_bodyx_x2x_xlrx_xph
$merge for_bodyx_x1_for_bodyx_x2x_xlrx_xph
$endmerge
$place [for_bodyx_x2x_xlrx_xph_for_bodyx_x2]
//begin: basic-block for_bodyx_x2
$merge for_bodyx_x2_for_bodyx_x2 for_bodyx_x2x_xlrx_xph_for_bodyx_x2
$phi xx_x4714 :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on for_bodyx_x2x_xlrx_xph_for_bodyx_x2 ( $cast ($uint<32>) xx_x48) $on for_bodyx_x2_for_bodyx_x2 
$endmerge
xx_x34 := (xx_x33 * xx_x4714)
xx_x37 := (xx_x34 + xx_x36)
xx_x39 := (xx_x37 + xx_x38)
$call readModule_convolution (base_addr xx_x39 )  (xx_x43)
ker_data := xx_x43
xx_x48 := (xx_x4714 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
// compare instruction
xx_x29 := (xx_x48 < ker_size )
$if xx_x29 $then  $place [for_bodyx_x2_for_bodyx_x2] $else $place [for_bodyx_x2_forx_x2x_xfor_out_crit_edge] $endif 
//begin: basic-block forx_x2x_xfor_out_crit_edge
$merge for_bodyx_x2_forx_x2x_xfor_out_crit_edge
$endmerge
$place [forx_x2x_xfor_out_crit_edge_for_out]
//begin: basic-block for_out
$merge for_bodyx_x1_for_out forx_x2x_xfor_out_crit_edge_for_out
$endmerge
xx_x52 := (xx_x5116 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
// compare instruction
xx_x23 := (xx_x52 < ker_size )
$if xx_x23 $then  $place [for_out_for_bodyx_x1] $else $place [for_out_forx_x1x_xfor_outx_x1_crit_edge] $endif 
//begin: basic-block forx_x1x_xfor_outx_x1_crit_edge
$merge for_out_forx_x1x_xfor_outx_x1_crit_edge
$endmerge
$place [forx_x1x_xfor_outx_x1_crit_edge_for_outx_x1]
//begin: basic-block for_outx_x1
$merge for_body_for_outx_x1 forx_x1x_xfor_outx_x1_crit_edge_for_outx_x1
$endmerge
xx_x56 := (xx_x5518 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
// compare instruction
xx_x17 := (xx_x56 < groups )
$if xx_x17 $then  $place [for_outx_x1_for_body] $else $place [for_outx_x1_forx_xfor_outx_x2_crit_edge] $endif 
//begin: basic-block forx_xfor_outx_x2_crit_edge
$merge for_outx_x1_forx_xfor_outx_x2_crit_edge
$endmerge
$place [forx_xfor_outx_x2_crit_edge_for_outx_x2]
//begin: basic-block for_outx_x2
$merge forx_xfor_outx_x2_crit_edge_for_outx_x2 vars_for_outx_x2
$endmerge
$place [return__]
$merge return__ $endmerge
}
}
$module [fetchInpVerSlice] 
 $in (base_addr : $uint<32> startRowIndex : $uint<32> startColIndex : $uint<32> grp_no : $uint<32> ker_size : $uint<32> padReq : $uint<1> in_rows : $uint<32> in_cols : $uint<32> in_channels : $uint<32> inp_zero_point : $float<8,23> )
 $out ()
 $is 
{
$branchblock [body] {
//begin: basic-block vars
xx_x92 := (in_channels * in_cols)
xx_x106 := (grp_no << ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) )
xx_x42 := (in_rows + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
xx_x49 := (in_cols + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
xx_x63 := (in_channels * in_cols)
xx_x79 := (grp_no << ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) )
// compare instruction
xx_x146 := (startColIndex == ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 )  )
iNsTr_0 := (startRowIndex & ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
// compare instruction
xx_x154 := (iNsTr_0 == ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  )
// compare instruction
xx_x2760 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  < ker_size )
$if xx_x2760 $then  $place [vars_for_bodyx_xlrx_xph] $else $place [vars_for_out] $endif 
//begin: basic-block for_bodyx_xlrx_xph
$merge vars_for_bodyx_xlrx_xph
$endmerge
$place [for_bodyx_xlrx_xph_for_body]
//begin: basic-block for_body
$merge for_bodyx_xlrx_xph_for_body if_nextx_x6_for_body
$phi xx_x16670 :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on for_bodyx_xlrx_xph_for_body ( $cast ($uint<32>) xx_x167) $on if_nextx_x6_for_body 
$phi xx_x6469 :=  ( $cast ($uint<32>) startRowIndex) $on for_bodyx_xlrx_xph_for_body ( $cast ($uint<32>) xx_x939) $on if_nextx_x6_for_body 
$phi xx_x6968 :=  ( $cast ($uint<32>) startColIndex) $on for_bodyx_xlrx_xph_for_body ( $cast ($uint<32>) xx_x9717) $on if_nextx_x6_for_body 
$phi xx_x11667 :=  ( $cast ($uint<32>) startRowIndex) $on for_bodyx_xlrx_xph_for_body ( $cast ($uint<32>) xx_x11635) $on if_nextx_x6_for_body 
$phi xx_x11866 :=  ( $cast ($uint<32>) startColIndex) $on for_bodyx_xlrx_xph_for_body ( $cast ($uint<32>) xx_x11837) $on if_nextx_x6_for_body 
$phi xx_x12565 :=  ( $cast ($uint<32>) startRowIndex) $on for_bodyx_xlrx_xph_for_body ( $cast ($uint<32>) xx_x12539) $on if_nextx_x6_for_body 
$phi xx_x12764 :=  ( $cast ($uint<32>) startColIndex) $on for_bodyx_xlrx_xph_for_body ( $cast ($uint<32>) xx_x12742) $on if_nextx_x6_for_body 
$phi xx_x13463 :=  ( $cast ($uint<32>) startRowIndex) $on for_bodyx_xlrx_xph_for_body ( $cast ($uint<32>) xx_x13445) $on if_nextx_x6_for_body 
$phi xx_x13662 :=  ( $cast ($uint<32>) startColIndex) $on for_bodyx_xlrx_xph_for_body ( $cast ($uint<32>) xx_x13649) $on if_nextx_x6_for_body 
$phi xx_x14361 :=  ( $cast ($uint<32>) startRowIndex) $on for_bodyx_xlrx_xph_for_body ( $cast ($uint<32>) xx_x14353) $on if_nextx_x6_for_body 
$endmerge
$if padReq $then  $place [for_body_if_true] $else $place [for_body_if_falsex_x1] $endif 
//begin: basic-block if_true
$merge for_body_if_true
$endmerge
xx_x32 := (xx_x6469 + xx_x16670)
// compare instruction
xx_x33 := (xx_x32 == ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  )
// compare instruction
xx_x38 := (xx_x6968 == ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  )
// compare instruction
xx_x43 := (xx_x32 == xx_x42 )
// compare instruction
xx_x51 := (xx_x6968 == xx_x49 )
xx_x52 := (xx_x33 | xx_x38)
xx_x53 := (xx_x52 | xx_x43)
xx_x54 := (xx_x53 | xx_x51)
$if xx_x54 $then  $place [if_true_if_truex_x1] $else $place [if_true_if_false] $endif 
//begin: basic-block if_truex_x1
$merge if_true_if_truex_x1
$endmerge
$call fstoi_for_ecg (inp_zero_point )  (xx_x57)
xx_x58 :=  ($bitcast ($uint<64>) ( $cast ($int< 64 > ) xx_x57) )
$place [if_truex_x1_if_next]
//begin: basic-block if_false
$merge if_true_if_false
$endmerge
xx_x66 := (xx_x32 - ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
xx_x67 := (xx_x63 * xx_x66)
xx_x73 := (xx_x6968 - ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
xx_x75 := (xx_x73 * in_channels)
xx_x77 := (xx_x75 + xx_x67)
xx_x81 := (xx_x77 + xx_x79)
$call readModule_convolution (base_addr xx_x81 )  (xx_x86)
$place [if_false_if_next]
//begin: basic-block if_next
$merge if_false_if_next if_truex_x1_if_next
$phi xx_x15959 :=  ( $cast ($uint<64>) xx_x86) $on if_false_if_next ( $cast ($uint<64>) xx_x58) $on if_truex_x1_if_next 
$endmerge
$place [if_next_if_nextx_x1]
//begin: basic-block if_falsex_x1
$merge for_body_if_falsex_x1
$endmerge
xx_x94 := (xx_x6469 + xx_x16670)
xx_x95 := (xx_x92 * xx_x94)
xx_x102 := (xx_x6968 * in_channels)
xx_x104 := (xx_x102 + xx_x95)
xx_x108 := (xx_x104 + xx_x106)
$call readModule_convolution (base_addr xx_x108 )  (xx_x113)
$place [if_falsex_x1_if_nextx_x1]
//begin: basic-block if_nextx_x1
$merge if_falsex_x1_if_nextx_x1 if_next_if_nextx_x1
$phi xx_x122 :=  ( $cast ($uint<64>) xx_x113) $on if_falsex_x1_if_nextx_x1 ( $cast ($uint<64>) xx_x15959) $on if_next_if_nextx_x1 
$endmerge
iNsTr_9 := (xx_x11667 | xx_x11866)
// compare instruction
iNsTr_10 := (iNsTr_9 == ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  )
$if iNsTr_10 $then  $place [if_nextx_x1_if_truex_x2] $else $place [if_nextx_x1_if_falsex_x2] $endif 
//begin: basic-block if_truex_x2
$merge if_nextx_x1_if_truex_x2
$endmerge
in_data_0 := xx_x122
$place [if_truex_x2_if_nextx_x6]
//begin: basic-block if_falsex_x2
$merge if_nextx_x1_if_falsex_x2
$endmerge
// compare instruction
xx_x126 := (xx_x12565 == ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  )
// compare instruction
xx_x128 := (xx_x12764 == ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 )  )
xx_x129 := (xx_x126 & xx_x128)
$if xx_x129 $then  $place [if_falsex_x2_if_truex_x3] $else $place [if_falsex_x2_if_falsex_x3] $endif 
//begin: basic-block if_truex_x3
$merge if_falsex_x2_if_truex_x3
$endmerge
in_data_1 := xx_x122
$place [if_truex_x3_if_nextx_x5]
//begin: basic-block if_falsex_x3
$merge if_falsex_x2_if_falsex_x3
$endmerge
// compare instruction
xx_x135 := (xx_x13463 == ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  )
// compare instruction
xx_x137 := (xx_x13662 == ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 )  )
xx_x138 := (xx_x135 & xx_x137)
$if xx_x138 $then  $place [if_falsex_x3_if_truex_x4] $else $place [if_falsex_x3_if_falsex_x4] $endif 
//begin: basic-block if_truex_x4
$merge if_falsex_x3_if_truex_x4
$endmerge
in_data_2 := xx_x122
$place [if_truex_x4_if_nextx_x4]
//begin: basic-block if_falsex_x4
$merge if_falsex_x3_if_falsex_x4
$endmerge
// compare instruction
xx_x144 := (xx_x14361 == ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  )
xx_x147 := (xx_x144 & xx_x146)
$if xx_x147 $then  $place [if_falsex_x4_if_truex_x5] $else $place [if_falsex_x4_if_falsex_x5] $endif 
//begin: basic-block if_truex_x5
$merge if_falsex_x4_if_truex_x5
$endmerge
in_data_3 := xx_x122
$place [if_truex_x5_if_nextx_x3]
//begin: basic-block if_falsex_x5
$merge if_falsex_x4_if_falsex_x5
$endmerge
$if xx_x154 $then  $place [if_falsex_x5_if_truex_x6] $else $place [if_falsex_x5_if_falsex_x6] $endif 
//begin: basic-block if_truex_x6
$merge if_falsex_x5_if_truex_x6
$endmerge
in_data_4 := xx_x122
$place [if_truex_x6_if_nextx_x2]
//begin: basic-block if_falsex_x6
$merge if_falsex_x5_if_falsex_x6
$endmerge
in_data_0 := xx_x122
$place [if_falsex_x6_if_nextx_x2]
//begin: basic-block if_nextx_x2
$merge if_falsex_x6_if_nextx_x2 if_truex_x6_if_nextx_x2
$endmerge
$place [if_nextx_x2_if_nextx_x3]
//begin: basic-block if_nextx_x3
$merge if_nextx_x2_if_nextx_x3 if_truex_x5_if_nextx_x3
$phi xx_x14356 :=  ( $cast ($uint<32>) startRowIndex) $on if_nextx_x2_if_nextx_x3 ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on if_truex_x5_if_nextx_x3 
$phi xx_x9312 :=  ( $cast ($uint<32>) startRowIndex) $on if_nextx_x2_if_nextx_x3 ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on if_truex_x5_if_nextx_x3 
$endmerge
$place [if_nextx_x3_if_nextx_x4]
//begin: basic-block if_nextx_x4
$merge if_nextx_x3_if_nextx_x4 if_truex_x4_if_nextx_x4
$phi xx_x14355 :=  ( $cast ($uint<32>) xx_x14356) $on if_nextx_x3_if_nextx_x4 ( $cast ($uint<32>) xx_x14361) $on if_truex_x4_if_nextx_x4 
$phi xx_x13651 :=  ( $cast ($uint<32>) startColIndex) $on if_nextx_x3_if_nextx_x4 ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ) $on if_truex_x4_if_nextx_x4 
$phi xx_x13447 :=  ( $cast ($uint<32>) xx_x9312) $on if_nextx_x3_if_nextx_x4 ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on if_truex_x4_if_nextx_x4 
$phi xx_x9719 :=  ( $cast ($uint<32>) startColIndex) $on if_nextx_x3_if_nextx_x4 ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ) $on if_truex_x4_if_nextx_x4 
$phi xx_x9311 :=  ( $cast ($uint<32>) xx_x9312) $on if_nextx_x3_if_nextx_x4 ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on if_truex_x4_if_nextx_x4 
$endmerge
$place [if_nextx_x4_if_nextx_x5]
//begin: basic-block if_nextx_x5
$merge if_nextx_x4_if_nextx_x5 if_truex_x3_if_nextx_x5
$phi xx_x14354 :=  ( $cast ($uint<32>) xx_x14355) $on if_nextx_x4_if_nextx_x5 ( $cast ($uint<32>) xx_x14361) $on if_truex_x3_if_nextx_x5 
$phi xx_x13650 :=  ( $cast ($uint<32>) xx_x13651) $on if_nextx_x4_if_nextx_x5 ( $cast ($uint<32>) xx_x13662) $on if_truex_x3_if_nextx_x5 
$phi xx_x13446 :=  ( $cast ($uint<32>) xx_x13447) $on if_nextx_x4_if_nextx_x5 ( $cast ($uint<32>) xx_x13463) $on if_truex_x3_if_nextx_x5 
$phi xx_x12743 :=  ( $cast ($uint<32>) xx_x9719) $on if_nextx_x4_if_nextx_x5 ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ) $on if_truex_x3_if_nextx_x5 
$phi xx_x12540 :=  ( $cast ($uint<32>) xx_x9311) $on if_nextx_x4_if_nextx_x5 ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on if_truex_x3_if_nextx_x5 
$phi xx_x9718 :=  ( $cast ($uint<32>) xx_x9719) $on if_nextx_x4_if_nextx_x5 ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ) $on if_truex_x3_if_nextx_x5 
$phi xx_x9310 :=  ( $cast ($uint<32>) xx_x9311) $on if_nextx_x4_if_nextx_x5 ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on if_truex_x3_if_nextx_x5 
$endmerge
$place [if_nextx_x5_if_nextx_x6]
//begin: basic-block if_nextx_x6
$merge if_nextx_x5_if_nextx_x6 if_truex_x2_if_nextx_x6
$phi xx_x14353 :=  ( $cast ($uint<32>) xx_x14354) $on if_nextx_x5_if_nextx_x6 ( $cast ($uint<32>) xx_x14361) $on if_truex_x2_if_nextx_x6 
$phi xx_x13649 :=  ( $cast ($uint<32>) xx_x13650) $on if_nextx_x5_if_nextx_x6 ( $cast ($uint<32>) xx_x13662) $on if_truex_x2_if_nextx_x6 
$phi xx_x13445 :=  ( $cast ($uint<32>) xx_x13446) $on if_nextx_x5_if_nextx_x6 ( $cast ($uint<32>) xx_x13463) $on if_truex_x2_if_nextx_x6 
$phi xx_x12742 :=  ( $cast ($uint<32>) xx_x12743) $on if_nextx_x5_if_nextx_x6 ( $cast ($uint<32>) xx_x12764) $on if_truex_x2_if_nextx_x6 
$phi xx_x12539 :=  ( $cast ($uint<32>) xx_x12540) $on if_nextx_x5_if_nextx_x6 ( $cast ($uint<32>) xx_x12565) $on if_truex_x2_if_nextx_x6 
$phi xx_x11837 :=  ( $cast ($uint<32>) xx_x9718) $on if_nextx_x5_if_nextx_x6 ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on if_truex_x2_if_nextx_x6 
$phi xx_x11635 :=  ( $cast ($uint<32>) xx_x9310) $on if_nextx_x5_if_nextx_x6 ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on if_truex_x2_if_nextx_x6 
$phi xx_x9717 :=  ( $cast ($uint<32>) xx_x9718) $on if_nextx_x5_if_nextx_x6 ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on if_truex_x2_if_nextx_x6 
$phi xx_x939 :=  ( $cast ($uint<32>) xx_x9310) $on if_nextx_x5_if_nextx_x6 ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on if_truex_x2_if_nextx_x6 
$endmerge
xx_x167 := (xx_x16670 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
// compare instruction
xx_x27 := (xx_x167 < ker_size )
$if xx_x27 $then  $place [if_nextx_x6_for_body] $else $place [if_nextx_x6_forx_xfor_out_crit_edge] $endif 
//begin: basic-block forx_xfor_out_crit_edge
$merge if_nextx_x6_forx_xfor_out_crit_edge
$endmerge
$place [forx_xfor_out_crit_edge_for_out]
//begin: basic-block for_out
$merge forx_xfor_out_crit_edge_for_out vars_for_out
$endmerge
$place [return__]
$merge return__ $endmerge
}
}
$module [fetchInpHorSlice] 
 $in (base_addr : $uint<32> startRowIndex : $uint<32> grp_no : $uint<32> ker_size : $uint<32> padReq : $uint<1> in_rows : $uint<32> in_cols : $uint<32> in_channels : $uint<32> out_cols : $uint<32> inp_zero_point : $float<8,23> )
 $out ()
 $is 
{
$branchblock [body] {
//begin: basic-block vars
iNsTr_0 := (startRowIndex & ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
// compare instruction
xx_x26 := (iNsTr_0 == ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  )
$if xx_x26 $then  $place [vars_if_true] $else $place [vars_if_false] $endif 
//begin: basic-block if_true
$merge vars_if_true
$endmerge
xx_x29 := (out_cols - ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
$place [if_true_if_next]
//begin: basic-block if_false
$merge vars_if_false
$endmerge
$place [if_false_if_next]
//begin: basic-block if_next
$merge if_false_if_next if_true_if_next
$phi xx_x129 :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on if_false_if_next ( $cast ($uint<32>) xx_x29) $on if_true_if_next 
$endmerge
xx_x41 := (ker_size - ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
xx_x146 := (in_channels * in_cols)
xx_x149 := (startRowIndex + ker_size)
xx_x150 := (xx_x146 * xx_x149)
xx_x157 := (grp_no << ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) )
xx_x95 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - ker_size)
// compare instruction
xx_x96 := (xx_x95 == startRowIndex )
xx_x102 := (startRowIndex + ker_size)
xx_x104 := (in_rows + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
// compare instruction
xx_x105 := (xx_x102 == xx_x104 )
xx_x109 := (in_cols + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
xx_x122 := (in_channels * in_cols)
xx_x125 := (startRowIndex + ker_size)
xx_x126 := (xx_x125 - ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
xx_x127 := (xx_x122 * xx_x126)
xx_x135 := (grp_no << ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) )
// compare instruction
xx_x3844 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  < ker_size )
$if xx_x3844 $then  $place [if_next_for_bodyx_xlrx_xph] $else $place [if_next_for_outx_x1] $endif 
//begin: basic-block for_bodyx_xlrx_xph
$merge if_next_for_bodyx_xlrx_xph
$endmerge
$place [for_bodyx_xlrx_xph_for_body]
//begin: basic-block for_body
$merge for_bodyx_xlrx_xph_for_body if_nextx_x12_for_body
$phi xx_x19547 :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on for_bodyx_xlrx_xph_for_body ( $cast ($uint<32>) xx_x196) $on if_nextx_x12_for_body 
$phi xx_x9746 :=  ( $cast ($uint<32>) xx_x129) $on for_bodyx_xlrx_xph_for_body ( $cast ($uint<32>) xx_x15218) $on if_nextx_x12_for_body 
$phi xx_x10645 :=  ( $cast ($uint<32>) xx_x129) $on for_bodyx_xlrx_xph_for_body ( $cast ($uint<32>) xx_x10634) $on if_nextx_x12_for_body 
$endmerge
// compare instruction
xx_x47 := (xx_x19547 == ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  )
// compare instruction
xx_x54 := (xx_x19547 == ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 )  )
// compare instruction
xx_x61 := (xx_x19547 == ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 )  )
// compare instruction
xx_x68 := (xx_x19547 == ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 )  )
// compare instruction
xx_x75 := (xx_x19547 == ( $bitcast ($uint<32> ) _b00000000000000000000000000000100 )  )
// compare instruction
xx_x4542 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  < xx_x41 )
$if xx_x4542 $then  $place [for_body_for_bodyx_x1x_xlrx_xph] $else $place [for_body_for_out] $endif 
//begin: basic-block for_bodyx_x1x_xlrx_xph
$merge for_body_for_bodyx_x1x_xlrx_xph
$endmerge
$place [for_bodyx_x1x_xlrx_xph_for_bodyx_x1]
//begin: basic-block for_bodyx_x1
$merge for_bodyx_x1x_xlrx_xph_for_bodyx_x1 if_nextx_x5_for_bodyx_x1
$phi xx_x8743 :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on for_bodyx_x1x_xlrx_xph_for_bodyx_x1 ( $cast ($uint<32>) xx_x88) $on if_nextx_x5_for_bodyx_x1 
$endmerge
$if xx_x47 $then  $place [for_bodyx_x1_if_truex_x1] $else $place [for_bodyx_x1_if_falsex_x1] $endif 
//begin: basic-block if_truex_x1
$merge for_bodyx_x1_if_truex_x1
$endmerge
xx_x49 := in_data_0
in_data_0 := xx_x49
$place [if_truex_x1_if_nextx_x5]
//begin: basic-block if_falsex_x1
$merge for_bodyx_x1_if_falsex_x1
$endmerge
$if xx_x54 $then  $place [if_falsex_x1_if_truex_x2] $else $place [if_falsex_x1_if_falsex_x2] $endif 
//begin: basic-block if_truex_x2
$merge if_falsex_x1_if_truex_x2
$endmerge
xx_x56 := in_data_1
in_data_1 := xx_x56
$place [if_truex_x2_if_nextx_x4]
//begin: basic-block if_falsex_x2
$merge if_falsex_x1_if_falsex_x2
$endmerge
$if xx_x61 $then  $place [if_falsex_x2_if_truex_x3] $else $place [if_falsex_x2_if_falsex_x3] $endif 
//begin: basic-block if_truex_x3
$merge if_falsex_x2_if_truex_x3
$endmerge
xx_x63 := in_data_2
in_data_2 := xx_x63
$place [if_truex_x3_if_nextx_x3]
//begin: basic-block if_falsex_x3
$merge if_falsex_x2_if_falsex_x3
$endmerge
$if xx_x68 $then  $place [if_falsex_x3_if_truex_x4] $else $place [if_falsex_x3_if_falsex_x4] $endif 
//begin: basic-block if_truex_x4
$merge if_falsex_x3_if_truex_x4
$endmerge
xx_x70 := in_data_3
in_data_3 := xx_x70
$place [if_truex_x4_if_nextx_x2]
//begin: basic-block if_falsex_x4
$merge if_falsex_x3_if_falsex_x4
$endmerge
$if xx_x75 $then  $place [if_falsex_x4_if_truex_x5] $else $place [if_falsex_x4_if_falsex_x5] $endif 
//begin: basic-block if_truex_x5
$merge if_falsex_x4_if_truex_x5
$endmerge
xx_x77 := in_data_4
in_data_4 := xx_x77
$place [if_truex_x5_if_nextx_x1]
//begin: basic-block if_falsex_x5
$merge if_falsex_x4_if_falsex_x5
$endmerge
$place [if_falsex_x5_if_nextx_x1]
//begin: basic-block if_nextx_x1
$merge if_falsex_x5_if_nextx_x1 if_truex_x5_if_nextx_x1
$endmerge
$place [if_nextx_x1_if_nextx_x2]
//begin: basic-block if_nextx_x2
$merge if_nextx_x1_if_nextx_x2 if_truex_x4_if_nextx_x2
$endmerge
$place [if_nextx_x2_if_nextx_x3]
//begin: basic-block if_nextx_x3
$merge if_nextx_x2_if_nextx_x3 if_truex_x3_if_nextx_x3
$endmerge
$place [if_nextx_x3_if_nextx_x4]
//begin: basic-block if_nextx_x4
$merge if_nextx_x3_if_nextx_x4 if_truex_x2_if_nextx_x4
$endmerge
$place [if_nextx_x4_if_nextx_x5]
//begin: basic-block if_nextx_x5
$merge if_nextx_x4_if_nextx_x5 if_truex_x1_if_nextx_x5
$endmerge
xx_x88 := (xx_x8743 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
// compare instruction
xx_x45 := (xx_x88 < xx_x41 )
$if xx_x45 $then  $place [if_nextx_x5_for_bodyx_x1] $else $place [if_nextx_x5_forx_x1x_xfor_out_crit_edge] $endif 
//begin: basic-block forx_x1x_xfor_out_crit_edge
$merge if_nextx_x5_forx_x1x_xfor_out_crit_edge
$endmerge
$place [forx_x1x_xfor_out_crit_edge_for_out]
//begin: basic-block for_out
$merge for_body_for_out forx_x1x_xfor_out_crit_edge_for_out
$endmerge
$if padReq $then  $place [for_out_if_truex_x6] $else $place [for_out_if_falsex_x7] $endif 
//begin: basic-block if_truex_x6
$merge for_out_if_truex_x6
$endmerge
xx_x98 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  - xx_x19547)
// compare instruction
xx_x99 := (xx_x9746 == xx_x98 )
xx_x107 := (xx_x10645 + xx_x19547)
// compare instruction
xx_x110 := (xx_x107 == xx_x109 )
xx_x111 := (xx_x96 | xx_x99)
xx_x112 := (xx_x111 | xx_x105)
xx_x113 := (xx_x112 | xx_x110)
$if xx_x113 $then  $place [if_truex_x6_if_truex_x7] $else $place [if_truex_x6_if_falsex_x6] $endif 
//begin: basic-block if_truex_x7
$merge if_truex_x6_if_truex_x7
$endmerge
$call fstoi_for_ecg (inp_zero_point )  (xx_x116)
xx_x117 :=  ($bitcast ($uint<64>) ( $cast ($int< 64 > ) xx_x116) )
$place [if_truex_x7_if_nextx_x6]
//begin: basic-block if_falsex_x6
$merge if_truex_x6_if_falsex_x6
$endmerge
xx_x130 := (xx_x129 + xx_x19547)
xx_x131 := (xx_x130 - ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
xx_x132 := (xx_x131 * in_channels)
xx_x133 := (xx_x127 + xx_x132)
xx_x136 := (xx_x133 + xx_x135)
$call readModule_convolution (base_addr xx_x136 )  (xx_x140)
$place [if_falsex_x6_if_nextx_x6]
//begin: basic-block if_nextx_x6
$merge if_falsex_x6_if_nextx_x6 if_truex_x7_if_nextx_x6
$phi xx_x18741 :=  ( $cast ($uint<64>) xx_x140) $on if_falsex_x6_if_nextx_x6 ( $cast ($uint<64>) xx_x117) $on if_truex_x7_if_nextx_x6 
$phi xx_x10635 :=  ( $cast ($uint<32>) xx_x129) $on if_falsex_x6_if_nextx_x6 ( $cast ($uint<32>) xx_x10645) $on if_truex_x7_if_nextx_x6 
$phi xx_x15221 :=  ( $cast ($uint<32>) xx_x129) $on if_falsex_x6_if_nextx_x6 ( $cast ($uint<32>) xx_x10645) $on if_truex_x7_if_nextx_x6 
$endmerge
$place [if_nextx_x6_if_nextx_x7]
//begin: basic-block if_falsex_x7
$merge for_out_if_falsex_x7
$endmerge
xx_x153 := (xx_x9746 + xx_x19547)
xx_x154 := (xx_x153 * in_channels)
xx_x155 := (xx_x150 + xx_x154)
xx_x158 := (xx_x155 + xx_x157)
$call readModule_convolution (base_addr xx_x158 )  (xx_x162)
$place [if_falsex_x7_if_nextx_x7]
//begin: basic-block if_nextx_x7
$merge if_falsex_x7_if_nextx_x7 if_nextx_x6_if_nextx_x7
$phi xx_x19548 :=  ( $cast ($uint<32>) xx_x19547) $on if_falsex_x7_if_nextx_x7 ( $cast ($uint<32>) xx_x19547) $on if_nextx_x6_if_nextx_x7 
$phi xx_x167 :=  ( $cast ($uint<64>) xx_x162) $on if_falsex_x7_if_nextx_x7 ( $cast ($uint<64>) xx_x18741) $on if_nextx_x6_if_nextx_x7 
$phi xx_x10634 :=  ( $cast ($uint<32>) xx_x10645) $on if_falsex_x7_if_nextx_x7 ( $cast ($uint<32>) xx_x10635) $on if_nextx_x6_if_nextx_x7 
$phi xx_x15218 :=  ( $cast ($uint<32>) xx_x9746) $on if_falsex_x7_if_nextx_x7 ( $cast ($uint<32>) xx_x15221) $on if_nextx_x6_if_nextx_x7 
$endmerge
// compare instruction
xx_x165 := (xx_x19547 == ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  )
$if xx_x165 $then  $place [if_nextx_x7_if_truex_x8] $else $place [if_nextx_x7_if_falsex_x8] $endif 
//begin: basic-block if_truex_x8
$merge if_nextx_x7_if_truex_x8
$endmerge
in_data_0 := xx_x167
$place [if_truex_x8_if_nextx_x12]
//begin: basic-block if_falsex_x8
$merge if_nextx_x7_if_falsex_x8
$endmerge
// compare instruction
xx_x170 := (xx_x19548 == ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 )  )
$if xx_x170 $then  $place [if_falsex_x8_if_truex_x9] $else $place [if_falsex_x8_if_falsex_x9] $endif 
//begin: basic-block if_truex_x9
$merge if_falsex_x8_if_truex_x9
$endmerge
in_data_1 := xx_x167
$place [if_truex_x9_if_nextx_x11]
//begin: basic-block if_falsex_x9
$merge if_falsex_x8_if_falsex_x9
$endmerge
// compare instruction
xx_x175 := (xx_x19548 == ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 )  )
$if xx_x175 $then  $place [if_falsex_x9_if_truex_x10] $else $place [if_falsex_x9_if_falsex_x10] $endif 
//begin: basic-block if_truex_x10
$merge if_falsex_x9_if_truex_x10
$endmerge
in_data_2 := xx_x167
$place [if_truex_x10_if_nextx_x10]
//begin: basic-block if_falsex_x10
$merge if_falsex_x9_if_falsex_x10
$endmerge
// compare instruction
xx_x180 := (xx_x19548 == ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 )  )
$if xx_x180 $then  $place [if_falsex_x10_if_truex_x11] $else $place [if_falsex_x10_if_falsex_x11] $endif 
//begin: basic-block if_truex_x11
$merge if_falsex_x10_if_truex_x11
$endmerge
in_data_3 := xx_x167
$place [if_truex_x11_if_nextx_x9]
//begin: basic-block if_falsex_x11
$merge if_falsex_x10_if_falsex_x11
$endmerge
// compare instruction
xx_x185 := (xx_x19548 == ( $bitcast ($uint<32> ) _b00000000000000000000000000000100 )  )
$if xx_x185 $then  $place [if_falsex_x11_if_truex_x12] $else $place [if_falsex_x11_if_falsex_x12] $endif 
//begin: basic-block if_truex_x12
$merge if_falsex_x11_if_truex_x12
$endmerge
in_data_4 := xx_x167
$place [if_truex_x12_if_nextx_x8]
//begin: basic-block if_falsex_x12
$merge if_falsex_x11_if_falsex_x12
$endmerge
$place [if_falsex_x12_if_nextx_x8]
//begin: basic-block if_nextx_x8
$merge if_falsex_x12_if_nextx_x8 if_truex_x12_if_nextx_x8
$endmerge
$place [if_nextx_x8_if_nextx_x9]
//begin: basic-block if_nextx_x9
$merge if_nextx_x8_if_nextx_x9 if_truex_x11_if_nextx_x9
$endmerge
$place [if_nextx_x9_if_nextx_x10]
//begin: basic-block if_nextx_x10
$merge if_nextx_x9_if_nextx_x10 if_truex_x10_if_nextx_x10
$endmerge
$place [if_nextx_x10_if_nextx_x11]
//begin: basic-block if_nextx_x11
$merge if_nextx_x10_if_nextx_x11 if_truex_x9_if_nextx_x11
$endmerge
$place [if_nextx_x11_if_nextx_x12]
//begin: basic-block if_nextx_x12
$merge if_nextx_x11_if_nextx_x12 if_truex_x8_if_nextx_x12
$endmerge
xx_x196 := (xx_x19548 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
// compare instruction
xx_x38 := (xx_x196 < ker_size )
$if xx_x38 $then  $place [if_nextx_x12_for_body] $else $place [if_nextx_x12_forx_xfor_outx_x1_crit_edge] $endif 
//begin: basic-block forx_xfor_outx_x1_crit_edge
$merge if_nextx_x12_forx_xfor_outx_x1_crit_edge
$endmerge
$place [forx_xfor_outx_x1_crit_edge_for_outx_x1]
//begin: basic-block for_outx_x1
$merge forx_xfor_outx_x1_crit_edge_for_outx_x1 if_next_for_outx_x1
$endmerge
$place [return__]
$merge return__ $endmerge
}
}
$module [pooling] 
 $in (pool_cols : $uint<32> )
 $out ()
 $is 
{
$branchblock [body] {
//begin: basic-block vars
// compare instruction
xx_x86 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  < pool_cols )
$if xx_x86 $then  $place [vars_for_bodyx_xlrx_xph] $else $place [vars_for_out] $endif 
//begin: basic-block for_bodyx_xlrx_xph
$merge vars_for_bodyx_xlrx_xph
$endmerge
$place [for_bodyx_xlrx_xph_for_body]
//begin: basic-block for_body
$merge for_bodyx_xlrx_xph_for_body if_nextx_x2_for_body
$phi xx_x707 :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on for_bodyx_xlrx_xph_for_body ( $cast ($uint<32>) xx_x71) $on if_nextx_x2_for_body 
$endmerge
xx_x10 := pool_data_fifo_r0
xx_x12 := pool_data_fifo_r0
xx_x14 := pool_data_lifo_r1
xx_x16 := pool_data_lifo_r1
// compare instruction
xx_x20 := ( ($bitcast ( $int<8>) xx_x10) >=   ($bitcast ( $int<8>) xx_x12 ) )
// compare instruction
xx_x23 := ( ($bitcast ( $int<8>) xx_x10) >=   ($bitcast ( $int<8>) xx_x14 ) )
// compare instruction
xx_x26 := ( ($bitcast ( $int<8>) xx_x10) >=   ($bitcast ( $int<8>) xx_x16 ) )
xx_x27 := (xx_x20 & xx_x23)
xx_x28 := (xx_x27 & xx_x26)
$if xx_x28 $then  $place [for_body_if_true] $else $place [for_body_if_false] $endif 
//begin: basic-block if_true
$merge for_body_if_true
$endmerge
$place [if_true_if_nextx_x2]
//begin: basic-block if_false
$merge for_body_if_false
$endmerge
// compare instruction
xx_x35 := ( ($bitcast ( $int<8>) xx_x12) >=   ($bitcast ( $int<8>) xx_x10 ) )
// compare instruction
xx_x38 := ( ($bitcast ( $int<8>) xx_x12) >=   ($bitcast ( $int<8>) xx_x14 ) )
// compare instruction
xx_x41 := ( ($bitcast ( $int<8>) xx_x12) >=   ($bitcast ( $int<8>) xx_x16 ) )
xx_x42 := (xx_x35 & xx_x38)
xx_x43 := (xx_x42 & xx_x41)
$if xx_x43 $then  $place [if_false_if_truex_x1] $else $place [if_false_if_falsex_x1] $endif 
//begin: basic-block if_truex_x1
$merge if_false_if_truex_x1
$endmerge
$place [if_truex_x1_if_nextx_x1]
//begin: basic-block if_falsex_x1
$merge if_false_if_falsex_x1
$endmerge
// compare instruction
xx_x50 := ( ($bitcast ( $int<8>) xx_x14) >=   ($bitcast ( $int<8>) xx_x10 ) )
// compare instruction
xx_x53 := ( ($bitcast ( $int<8>) xx_x14) >=   ($bitcast ( $int<8>) xx_x12 ) )
// compare instruction
xx_x56 := ( ($bitcast ( $int<8>) xx_x14) >=   ($bitcast ( $int<8>) xx_x16 ) )
xx_x57 := (xx_x50 & xx_x53)
xx_x58 := (xx_x57 & xx_x56)
$if xx_x58 $then  $place [if_falsex_x1_if_truex_x2] $else $place [if_falsex_x1_if_falsex_x2] $endif 
//begin: basic-block if_truex_x2
$merge if_falsex_x1_if_truex_x2
$endmerge
$place [if_truex_x2_if_next]
//begin: basic-block if_falsex_x2
$merge if_falsex_x1_if_falsex_x2
$endmerge
$place [if_falsex_x2_if_next]
//begin: basic-block if_next
$merge if_falsex_x2_if_next if_truex_x2_if_next
$phi xx_x685 :=  ( $cast ($uint<8>) xx_x16) $on if_falsex_x2_if_next ( $cast ($uint<8>) xx_x14) $on if_truex_x2_if_next 
$endmerge
$place [if_next_if_nextx_x1]
//begin: basic-block if_nextx_x1
$merge if_next_if_nextx_x1 if_truex_x1_if_nextx_x1
$phi xx_x684 :=  ( $cast ($uint<8>) xx_x685) $on if_next_if_nextx_x1 ( $cast ($uint<8>) xx_x12) $on if_truex_x1_if_nextx_x1 
$endmerge
$place [if_nextx_x1_if_nextx_x2]
//begin: basic-block if_nextx_x2
$merge if_nextx_x1_if_nextx_x2 if_true_if_nextx_x2
$phi xx_x68 :=  ( $cast ($uint<8>) xx_x684) $on if_nextx_x1_if_nextx_x2 ( $cast ($uint<8>) xx_x10) $on if_true_if_nextx_x2 
$endmerge
pool_out_data := xx_x68
xx_x71 := (xx_x707 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
// compare instruction
xx_x8 := (xx_x71 < pool_cols )
$if xx_x8 $then  $place [if_nextx_x2_for_body] $else $place [if_nextx_x2_forx_xfor_out_crit_edge] $endif 
//begin: basic-block forx_xfor_out_crit_edge
$merge if_nextx_x2_forx_xfor_out_crit_edge
$endmerge
$place [forx_xfor_out_crit_edge_for_out]
//begin: basic-block for_out
$merge forx_xfor_out_crit_edge_for_out vars_for_out
$endmerge
$place [return__]
$merge return__ $endmerge
}
}
// $module [sendToMemory] 
//  $in (out : $uint<8> )
//  $out ()
//  $is 
// {
// $branchblock [body] {
// //begin: basic-block vars
// $place [return__]
// $merge return__ $endmerge
// }
// }
$module [convengine] 
 $in (in_start_addr : $uint<32> out_start_addr : $uint<32> ker_start_addr : $uint<32> out_grp_no : $uint<32> out_mask : $uint<8> in_rows : $uint<32> in_cols : $uint<32> in_channels : $uint<32> out_channels : $uint<32> groups : $uint<32> ker_size : $uint<32> pool_stride : $uint<32> pool_ker_size : $uint<32> inp_scale : $float<8,23> inp_zero_point : $float<8,23> ker_scale : $float<8,23> ker_zero_point : $float<8,23> conv_scale : $float<8,23> conv_zero_point : $float<8,23> padReq : $uint<1> poolReq : $uint<1> isLinear : $uint<1> isActivation : $uint<1> isFlatten : $uint<1> out_chn_ind : $uint<32> )
 $out (ret_val__ : $uint<8>)
 $is 
{
$storage stored_ret_val__ : $uint<8>
$branchblock [body] {
//begin: basic-block vars
xx_x54 := (in_rows - ker_size)
xx_x55 := (xx_x54 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
xx_x59 := (in_cols - ker_size)
xx_x60 := (xx_x59 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
xx_x67 :=  ( $cast ($float<8,23>)  ( $bitcast ( $int< 32 > ) pool_stride) ) 
xx_x73 := (xx_x60 - pool_ker_size)
xx_x75 :=  ( $cast ($float<8,23>)  ( $bitcast ( $int< 32 > ) xx_x73) ) 
$call fpdivide325 (xx_x75 xx_x67 )  (xx_x77)
$call fp32_add_for_ecg (xx_x77 ( $bitcast ($float<8,23> ) _f1.000000e+00 )  )  (xx_x78)
$call fstoi_for_ecg (xx_x78 )  (xx_x84)
$if isLinear $then  $place [vars_if_true] $else $place [vars_if_falsex_x1] $endif 
//begin: basic-block if_true
$merge vars_if_true
$endmerge
xx_x98 := (out_channels - ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
// compare instruction
xx_x95111 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  < out_channels )
$if xx_x95111 $then  $place [if_true_for_bodyx_xlrx_xph] $else $place [if_true_for_out] $endif 
//begin: basic-block for_bodyx_xlrx_xph
$merge if_true_for_bodyx_xlrx_xph
$endmerge
$place [for_bodyx_xlrx_xph_for_body]
//begin: basic-block for_body
$merge for_bodyx_xlrx_xph_for_body if_next_for_body
$phi xx_x121113 :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on for_bodyx_xlrx_xph_for_body ( $cast ($uint<32>) xx_x122) $on if_next_for_body 
$phi xx_x109107112 :=  ( $cast ($uint<1>) ( $bitcast ($uint<1> ) _b1 ) ) $on for_bodyx_xlrx_xph_for_body ( $cast ($uint<1>) xx_x109) $on if_next_for_body 
$endmerge
// compare instruction
xx_x99 := (xx_x121113 == xx_x98 )
$if xx_x99 $then  $place [for_body_if_truex_x1] $else $place [for_body_if_false] $endif 
//begin: basic-block if_truex_x1
$merge for_body_if_truex_x1
$endmerge
$place [if_truex_x1_if_next]
//begin: basic-block if_false
$merge for_body_if_false
$endmerge
$place [if_false_if_next]
//begin: basic-block if_next
$merge if_false_if_next if_truex_x1_if_next
$phi xx_x109 :=  ( $cast ($uint<1>) xx_x109107112) $on if_false_if_next ( $cast ($uint<1>) ( $bitcast ($uint<1> ) _b0 ) ) $on if_truex_x1_if_next 
$endmerge
$call fetchKernelLinear (ker_start_addr groups xx_x121113 )  ()
$call convolution_new (groups ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 )  xx_x109 ker_size inp_scale inp_zero_point ker_scale ker_zero_point conv_scale conv_zero_point ( $bitcast ($uint<1> ) _b1 )  in_channels isActivation )  (xx_x120)
xx_x122 := (xx_x121113 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
// compare instruction
xx_x95 := (xx_x122 < out_channels )
$if xx_x95 $then  $place [if_next_for_body] $else $place [if_next_forx_xfor_out_crit_edge] $endif 
//begin: basic-block forx_xfor_out_crit_edge
$merge if_next_forx_xfor_out_crit_edge
$endmerge
$place [forx_xfor_out_crit_edge_for_out]
//begin: basic-block for_out
$merge forx_xfor_out_crit_edge_for_out if_true_for_out
$endmerge
// compare instruction
xx_x129109 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  < out_channels )
$if xx_x129109 $then  $place [for_out_for_bodyx_x1x_xlrx_xph] $else $place [for_out_for_outx_x1] $endif 
//begin: basic-block for_bodyx_x1x_xlrx_xph
$merge for_out_for_bodyx_x1x_xlrx_xph
$endmerge
$place [for_bodyx_x1x_xlrx_xph_for_bodyx_x1]
//begin: basic-block for_bodyx_x1
$merge for_bodyx_x1_for_bodyx_x1 for_bodyx_x1x_xlrx_xph_for_bodyx_x1
$phi xx_x135110 :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on for_bodyx_x1x_xlrx_xph_for_bodyx_x1 ( $cast ($uint<32>) xx_x136) $on for_bodyx_x1_for_bodyx_x1 
$endmerge
xx_x131 := out_data
flatten_data := xx_x131

xx_x136 := (xx_x135110 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
// compare instruction
xx_x129 := (xx_x136 < out_channels )

flat_addr := (xx_x136 * 8 )
accelerator_reg[10] := ($bitcast ($uint<32>) flat_addr)
accelerator_reg[13] := ($bitcast ($uint<32>) xx_x136)
// accelerator_reg[14] := ($bitcast ($uint<32>) xx_x344)
$call writeModule1 (out_start_addr flat_addr ( $cast ($uint<64> ) xx_x131) ) ()
$if xx_x129 $then  $place [for_bodyx_x1_for_bodyx_x1] $else $place [for_bodyx_x1_forx_x1x_xfor_outx_x1_crit_edge] $endif 
//begin: basic-block forx_x1x_xfor_outx_x1_crit_edge
$merge for_bodyx_x1_forx_x1x_xfor_outx_x1_crit_edge
$phi split :=  ( $cast ($uint<8>) xx_x131) $on for_bodyx_x1_forx_x1x_xfor_outx_x1_crit_edge 
$endmerge
$place [forx_x1x_xfor_outx_x1_crit_edge_for_outx_x1]
//begin: basic-block for_outx_x1
$merge for_out_for_outx_x1 forx_x1x_xfor_outx_x1_crit_edge_for_outx_x1
$phi xx_x139x_xlcssa :=  ( $cast ($uint<8>) split) $on forx_x1x_xfor_outx_x1_crit_edge_for_outx_x1 ( $cast ($uint<8>) ( $bitcast ($uint<8> ) _b0 ) ) $on for_out_for_outx_x1 
$endmerge
stored_ret_val__ := xx_x139x_xlcssa
$place [return__]
//begin: basic-block if_falsex_x1
$merge vars_if_falsex_x1
$endmerge
$if padReq $then  $place [if_falsex_x1_if_truex_x2] $else $place [if_falsex_x1_if_falsex_x2] $endif 
//begin: basic-block if_truex_x2
$merge if_falsex_x1_if_truex_x2
$endmerge
$place [if_truex_x2_if_nextx_x2]
//begin: basic-block if_falsex_x2
$merge if_falsex_x1_if_falsex_x2
$endmerge
$place [if_falsex_x2_if_nextx_x2]
//begin: basic-block if_nextx_x2
$merge if_falsex_x2_if_nextx_x2 if_truex_x2_if_nextx_x2
$phi xx_x234 :=  ( $cast ($uint<32>) xx_x60) $on if_falsex_x2_if_nextx_x2 ( $cast ($uint<32>) in_cols) $on if_truex_x2_if_nextx_x2 
$phi xx_x196 :=  ( $cast ($uint<32>) xx_x55) $on if_falsex_x2_if_nextx_x2 ( $cast ($uint<32>) in_rows) $on if_truex_x2_if_nextx_x2 
$endmerge
$call fetchKernel (ker_start_addr groups ker_size in_channels inp_zero_point )  ()
// compare instruction
xx_x160140 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  < ker_size )
$if xx_x160140 $then  $place [if_nextx_x2_for_bodyx_x2x_xlrx_xph] $else $place [if_nextx_x2_for_outx_x3] $endif 
//begin: basic-block for_bodyx_x2x_xlrx_xph
$merge if_nextx_x2_for_bodyx_x2x_xlrx_xph
$endmerge
$place [for_bodyx_x2x_xlrx_xph_for_bodyx_x2]
//begin: basic-block for_bodyx_x2
$merge for_bodyx_x2x_xlrx_xph_for_bodyx_x2 for_outx_x2_for_bodyx_x2
$phi xx_x180141 :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on for_bodyx_x2x_xlrx_xph_for_bodyx_x2 ( $cast ($uint<32>) xx_x181) $on for_outx_x2_for_bodyx_x2 
$endmerge
// compare instruction
xx_x166138 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  < groups )
$if xx_x166138 $then  $place [for_bodyx_x2_for_bodyx_x3x_xlrx_xph] $else $place [for_bodyx_x2_for_outx_x2] $endif 
//begin: basic-block for_bodyx_x3x_xlrx_xph
$merge for_bodyx_x2_for_bodyx_x3x_xlrx_xph
$endmerge
$place [for_bodyx_x3x_xlrx_xph_for_bodyx_x3]
//begin: basic-block for_bodyx_x3
$merge for_bodyx_x3_for_bodyx_x3 for_bodyx_x3x_xlrx_xph_for_bodyx_x3
$phi xx_x176139 :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on for_bodyx_x3x_xlrx_xph_for_bodyx_x3 ( $cast ($uint<32>) xx_x177) $on for_bodyx_x3_for_bodyx_x3 
$endmerge
$call fetchInpVerSlice (in_start_addr ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  xx_x180141 xx_x176139 ker_size padReq in_rows in_cols in_channels inp_zero_point )  ()
xx_x177 := (xx_x176139 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
// compare instruction
xx_x166 := (xx_x177 < groups )
$if xx_x166 $then  $place [for_bodyx_x3_for_bodyx_x3] $else $place [for_bodyx_x3_forx_x3x_xfor_outx_x2_crit_edge] $endif 
//begin: basic-block forx_x3x_xfor_outx_x2_crit_edge
$merge for_bodyx_x3_forx_x3x_xfor_outx_x2_crit_edge
$endmerge
$place [forx_x3x_xfor_outx_x2_crit_edge_for_outx_x2]
//begin: basic-block for_outx_x2
$merge for_bodyx_x2_for_outx_x2 forx_x3x_xfor_outx_x2_crit_edge_for_outx_x2
$endmerge
xx_x181 := (xx_x180141 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
// compare instruction
xx_x160 := (xx_x181 < ker_size )
$if xx_x160 $then  $place [for_outx_x2_for_bodyx_x2] $else $place [for_outx_x2_forx_x2x_xfor_outx_x3_crit_edge] $endif 
//begin: basic-block forx_x2x_xfor_outx_x3_crit_edge
$merge for_outx_x2_forx_x2x_xfor_outx_x3_crit_edge
$endmerge
$place [forx_x2x_xfor_outx_x3_crit_edge_for_outx_x3]
//begin: basic-block for_outx_x3
$merge forx_x2x_xfor_outx_x3_crit_edge_for_outx_x3 if_nextx_x2_for_outx_x3
$endmerge
xx_x197 := (xx_x196 - ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
xx_x216 := (ker_size - ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
xx_x235 := (xx_x234 - ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
xx_x318 := (out_channels * ( $bitcast ($uint<32> ) xx_x84 ))
xx_x325 := (out_grp_no << ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) )
xx_x329 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000111 )  - out_chn_ind)
xx_x330 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000001 )  << xx_x329)
xx_x334 := (out_chn_ind << ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) )
xx_x335 := (( $bitcast ($uint<32> ) _b00000000000000000000000000111000 )  - xx_x334)
xx_x344 := ($cast ($uint<8>) xx_x330)
// compare instruction
xx_x188131 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  < xx_x196 )
$if xx_x188131 $then  $place [for_outx_x3_for_bodyx_x4x_xlrx_xph] $else $place [for_outx_x3_for_outx_x8] $endif 
//begin: basic-block for_bodyx_x4x_xlrx_xph
$merge for_outx_x3_for_bodyx_x4x_xlrx_xph
$endmerge
$place [for_bodyx_x4x_xlrx_xph_for_bodyx_x4]
//begin: basic-block for_bodyx_x4
$merge for_bodyx_x4x_xlrx_xph_for_bodyx_x4 if_nextx_x12_for_bodyx_x4
$phi xx_x386136 :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on for_bodyx_x4x_xlrx_xph_for_bodyx_x4 ( $cast ($uint<32>) xx_x387) $on if_nextx_x12_for_bodyx_x4 
$phi xx_x190135 :=  ( $cast ($uint<32>) xx_x234) $on for_bodyx_x4x_xlrx_xph_for_bodyx_x4 ( $cast ($uint<32>) xx_x1904) $on if_nextx_x12_for_bodyx_x4 
$phi xx_x319134 :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on for_bodyx_x4x_xlrx_xph_for_bodyx_x4 ( $cast ($uint<32>) xx_x35416) $on if_nextx_x12_for_bodyx_x4 
$phi xx_x36122133 :=  ( $cast ($uint<32>) xx_x196) $on for_bodyx_x4x_xlrx_xph_for_bodyx_x4 ( $cast ($uint<32>) xx_x361x_xlcssa) $on if_nextx_x12_for_bodyx_x4 
$phi xx_x37768132 :=  ( $cast ($uint<32>) xx_x234) $on for_bodyx_x4x_xlrx_xph_for_bodyx_x4 ( $cast ($uint<32>) xx_x225x_xlcssa) $on if_nextx_x12_for_bodyx_x4 
$endmerge
// compare instruction
xx_x198 := (xx_x386136 == xx_x197 )
iNsTr_26 := (xx_x386136 & ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
// compare instruction
xx_x209 := (iNsTr_26 == ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  )
// compare instruction
xx_x194116 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  < xx_x190135 )
$if xx_x194116 $then  $place [for_bodyx_x4_for_bodyx_x5x_xlrx_xph] $else $place [for_bodyx_x4_for_outx_x5] $endif 
//begin: basic-block for_bodyx_x5x_xlrx_xph
$merge for_bodyx_x4_for_bodyx_x5x_xlrx_xph
$endmerge
$place [for_bodyx_x5x_xlrx_xph_for_bodyx_x5]
//begin: basic-block for_bodyx_x5
$merge for_bodyx_x5x_xlrx_xph_for_bodyx_x5 if_nextx_x8_for_bodyx_x5
$phi xx_x294118 :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on for_bodyx_x5x_xlrx_xph_for_bodyx_x5 ( $cast ($uint<32>) xx_x295) $on if_nextx_x8_for_bodyx_x5 
$phi xx_x225117 :=  ( $cast ($uint<32>) xx_x37768132) $on for_bodyx_x5x_xlrx_xph_for_bodyx_x5 ( $cast ($uint<32>) xx_x234) $on if_nextx_x8_for_bodyx_x5 
$endmerge
xx_x200 := (xx_x225117 - ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
// compare instruction
xx_x201 := (xx_x294118 == xx_x200 )
xx_x202 := (xx_x198 & xx_x201)
$if xx_x202 $then  $place [for_bodyx_x5_if_truex_x3] $else $place [for_bodyx_x5_if_falsex_x3] $endif 
//begin: basic-block if_truex_x3
$merge for_bodyx_x5_if_truex_x3
$endmerge
$place [if_truex_x3_if_nextx_x3]
//begin: basic-block if_falsex_x3
$merge for_bodyx_x5_if_falsex_x3
$endmerge
$place [if_falsex_x3_if_nextx_x3]
//begin: basic-block if_nextx_x3
$merge if_falsex_x3_if_nextx_x3 if_truex_x3_if_nextx_x3
$phi xx_x267 :=  ( $cast ($uint<1>) ( $bitcast ($uint<1> ) _b1 ) ) $on if_falsex_x3_if_nextx_x3 ( $cast ($uint<1>) ( $bitcast ($uint<1> ) _b0 ) ) $on if_truex_x3_if_nextx_x3 
$endmerge
$if xx_x209 $then  $place [if_nextx_x3_if_truex_x4] $else $place [if_nextx_x3_if_falsex_x4] $endif 
//begin: basic-block if_truex_x4
$merge if_nextx_x3_if_truex_x4
$endmerge
xx_x217 := (xx_x294118 + xx_x216)
$place [if_truex_x4_if_nextx_x4]
//begin: basic-block if_falsex_x4
$merge if_nextx_x3_if_falsex_x4
$endmerge
iNsTr_51 := (xx_x294118 ^ ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 ) )
xx_x227 := (xx_x225117 + iNsTr_51)
$place [if_falsex_x4_if_nextx_x4]
//begin: basic-block if_nextx_x4
$merge if_falsex_x4_if_nextx_x4 if_truex_x4_if_nextx_x4
$phi xx_x294119 :=  ( $cast ($uint<32>) xx_x294118) $on if_falsex_x4_if_nextx_x4 ( $cast ($uint<32>) xx_x294118) $on if_truex_x4_if_nextx_x4 
$phi xx_x251 :=  ( $cast ($uint<32>) xx_x227) $on if_falsex_x4_if_nextx_x4 ( $cast ($uint<32>) xx_x217) $on if_truex_x4_if_nextx_x4 
$phi xx_x26686 :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) ) $on if_falsex_x4_if_nextx_x4 ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) ) $on if_truex_x4_if_nextx_x4 
$endmerge
// compare instruction
xx_x236 := (xx_x294118 == xx_x235 )
$if xx_x236 $then  $place [if_nextx_x4_if_truex_x5] $else $place [if_nextx_x4_if_falsex_x5] $endif 
//begin: basic-block if_truex_x5
$merge if_nextx_x4_if_truex_x5
$endmerge
$place [if_truex_x5_if_nextx_x5]
//begin: basic-block if_falsex_x5
$merge if_nextx_x4_if_falsex_x5
$endmerge
$place [if_falsex_x5_if_nextx_x5]
//begin: basic-block if_nextx_x5
$merge if_falsex_x5_if_nextx_x5 if_truex_x5_if_nextx_x5
$phi xx_x266 :=  ( $cast ($uint<32>) xx_x26686) $on if_falsex_x5_if_nextx_x5 ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on if_truex_x5_if_nextx_x5 
$endmerge
// compare instruction
xx_x242 := ( ($bitcast ( $int<32>) xx_x294119) >  ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  ) )
$if xx_x242 $then  $place [if_nextx_x5_if_truex_x6] $else $place [if_nextx_x5_if_falsex_x6] $endif 
//begin: basic-block if_truex_x6
$merge if_nextx_x5_if_truex_x6
$endmerge
// compare instruction
xx_x248114 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  < groups )
$if xx_x248114 $then  $place [if_truex_x6_for_bodyx_x6x_xlrx_xph] $else $place [if_truex_x6_for_outx_x4] $endif 
//begin: basic-block for_bodyx_x6x_xlrx_xph
$merge if_truex_x6_for_bodyx_x6x_xlrx_xph
$endmerge
$place [for_bodyx_x6x_xlrx_xph_for_bodyx_x6]
//begin: basic-block for_bodyx_x6
$merge for_bodyx_x6_for_bodyx_x6 for_bodyx_x6x_xlrx_xph_for_bodyx_x6
$phi xx_x259115 :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on for_bodyx_x6x_xlrx_xph_for_bodyx_x6 ( $cast ($uint<32>) xx_x260) $on for_bodyx_x6_for_bodyx_x6 
$endmerge
$call fetchInpVerSlice (in_start_addr xx_x386136 xx_x251 xx_x259115 ker_size padReq in_rows in_cols in_channels inp_zero_point )  ()
xx_x260 := (xx_x259115 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
// compare instruction
xx_x248 := (xx_x260 < groups )
$if xx_x248 $then  $place [for_bodyx_x6_for_bodyx_x6] $else $place [for_bodyx_x6_forx_x6x_xfor_outx_x4_crit_edge] $endif 
//begin: basic-block forx_x6x_xfor_outx_x4_crit_edge
$merge for_bodyx_x6_forx_x6x_xfor_outx_x4_crit_edge
$endmerge
$place [forx_x6x_xfor_outx_x4_crit_edge_for_outx_x4]
//begin: basic-block for_outx_x4
$merge forx_x6x_xfor_outx_x4_crit_edge_for_outx_x4 if_truex_x6_for_outx_x4
$endmerge
$place [for_outx_x4_if_nextx_x6]
//begin: basic-block if_falsex_x6
$merge if_nextx_x5_if_falsex_x6
$endmerge
$place [if_falsex_x6_if_nextx_x6]
//begin: basic-block if_nextx_x6
$merge for_outx_x4_if_nextx_x6 if_falsex_x6_if_nextx_x6
$endmerge
$call convolution_new (groups xx_x266 xx_x267 ker_size inp_scale inp_zero_point ker_scale ker_zero_point conv_scale conv_zero_point ( $bitcast ($uint<1> ) _b0 )  in_channels isActivation )  (xx_x278)
xx_x279 := out_data
accelerator_reg[12] := ($bitcast ($uint<32>) xx_x279)
$if poolReq $then  $place [if_nextx_x6_if_truex_x7] $else $place [if_nextx_x6_if_falsex_x8] $endif 
//begin: basic-block if_truex_x7
$merge if_nextx_x6_if_truex_x7
$endmerge
$if xx_x209 $then  $place [if_truex_x7_if_truex_x8] $else $place [if_truex_x7_if_falsex_x7] $endif 
//begin: basic-block if_truex_x8
$merge if_truex_x7_if_truex_x8
$endmerge
pool_data_fifo_r0 := xx_x279
$place [if_truex_x8_if_nextx_x7]
//begin: basic-block if_falsex_x7
$merge if_truex_x7_if_falsex_x7
$endmerge
pool_data_lifo_r1 := xx_x279
$place [if_falsex_x7_if_nextx_x7]
//begin: basic-block if_nextx_x7
$merge if_falsex_x7_if_nextx_x7 if_truex_x8_if_nextx_x7
$endmerge
$place [if_nextx_x7_if_nextx_x8]
//begin: basic-block if_falsex_x8
$merge if_nextx_x6_if_falsex_x8
$endmerge
$place [if_falsex_x8_if_nextx_x8]
//begin: basic-block if_nextx_x8
$merge if_falsex_x8_if_nextx_x8 if_nextx_x7_if_nextx_x8
$endmerge
xx_x295 := (xx_x294119 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
// compare instruction
xx_x194 := (xx_x295 < xx_x190135 )
$if xx_x194 $then  $place [if_nextx_x8_for_bodyx_x5] $else $place [if_nextx_x8_forx_x5x_xfor_outx_x5_crit_edge] $endif 
//begin: basic-block forx_x5x_xfor_outx_x5_crit_edge
$merge if_nextx_x8_forx_x5x_xfor_outx_x5_crit_edge
$phi split120 :=  ( $cast ($uint<32>) xx_x234) $on if_nextx_x8_forx_x5x_xfor_outx_x5_crit_edge 
$phi split121 :=  ( $cast ($uint<32>) xx_x196) $on if_nextx_x8_forx_x5x_xfor_outx_x5_crit_edge 
$phi split122 :=  ( $cast ($uint<32>) xx_x234) $on if_nextx_x8_forx_x5x_xfor_outx_x5_crit_edge 
$endmerge
$place [forx_x5x_xfor_outx_x5_crit_edge_for_outx_x5]
//begin: basic-block for_outx_x5
$merge for_bodyx_x4_for_outx_x5 forx_x5x_xfor_outx_x5_crit_edge_for_outx_x5
$phi xx_x225x_xlcssa :=  ( $cast ($uint<32>) split120) $on forx_x5x_xfor_outx_x5_crit_edge_for_outx_x5 ( $cast ($uint<32>) xx_x37768132) $on for_bodyx_x4_for_outx_x5 
$phi xx_x361x_xlcssa :=  ( $cast ($uint<32>) split121) $on forx_x5x_xfor_outx_x5_crit_edge_for_outx_x5 ( $cast ($uint<32>) xx_x36122133) $on for_bodyx_x4_for_outx_x5 
$phi xx_x1906x_xlcssa :=  ( $cast ($uint<32>) split122) $on forx_x5x_xfor_outx_x5_crit_edge_for_outx_x5 ( $cast ($uint<32>) xx_x190135) $on for_bodyx_x4_for_outx_x5 
$endmerge
$if poolReq $then  $place [for_outx_x5_if_truex_x9] $else $place [for_outx_x5_if_falsex_x11] $endif 
//begin: basic-block if_truex_x9
$merge for_outx_x5_if_truex_x9
$endmerge
iNsTr_35 := (xx_x386136 & ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
// compare instruction
xx_x301x_xnot := (iNsTr_35 == ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  )
$if xx_x301x_xnot $then  $place [if_truex_x9_if_falsex_x10] $else $place [if_truex_x9_if_truex_x10] $endif 
//begin: basic-block if_truex_x10
$merge if_truex_x9_if_truex_x10
$endmerge
$call pooling (( $bitcast ($uint<32> ) xx_x84 ))  ()
xx_x320 := (xx_x318 * xx_x319134)
// compare instruction
xx_x309123 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  < ( $bitcast ($uint<32> ) xx_x84 ))
$if xx_x309123 $then  $place [if_truex_x10_for_bodyx_x7x_xlrx_xph] $else $place [if_truex_x10_for_outx_x6] $endif 
//begin: basic-block for_bodyx_x7x_xlrx_xph
$merge if_truex_x10_for_bodyx_x7x_xlrx_xph
$endmerge
$place [for_bodyx_x7x_xlrx_xph_for_bodyx_x7]
//begin: basic-block for_bodyx_x7
$merge for_bodyx_x7x_xlrx_xph_for_bodyx_x7 if_nextx_x9_for_bodyx_x7
$phi xx_x350125 :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on for_bodyx_x7x_xlrx_xph_for_bodyx_x7 ( $cast ($uint<32>) xx_x351) $on if_nextx_x9_for_bodyx_x7 
$phi xx_x354124 :=  ( $cast ($uint<32>) xx_x319134) $on for_bodyx_x7x_xlrx_xph_for_bodyx_x7 ( $cast ($uint<32>) xx_x35418) $on if_nextx_x9_for_bodyx_x7 
$endmerge
xx_x311 := pool_out_data
$if isFlatten $then  $place [for_bodyx_x7_if_falsex_x9] $else $place [for_bodyx_x7_if_truex_x11] $endif 
//begin: basic-block if_truex_x11
$merge for_bodyx_x7_if_truex_x11
$endmerge
xx_x322 := (xx_x350125 * out_channels)
xx_x323 := (xx_x320 + xx_x322)
xx_x326 := (xx_x323 + xx_x325)
// xx_x336 :=  ( $bitcast ($uint<64>) xx_x311)
// xx_x337 := (xx_x336 << ( $bitcast ($uint<64>) xx_x335) )
// // xx_x338 :=  ($bitcast ($uint<64>) ( $cast ($int< 64 > ) xx_x337) )
// accelerator_reg[13] := ($slice xx_x337 63 32)
// accelerator_reg[14] := ($bitcast ($uint<32>) xx_x344)
// $call writeModule_convolution (out_start_addr xx_x326 xx_x337 xx_x344 )  (dodo)
xx_x336 :=  ($bitcast ($uint<64>) ( $cast ($int< 64 > ) xx_x311) )
xx_x337 := (xx_x336 << ( $bitcast ($uint<64>) xx_x335))
// xx_x338 :=  ($bitcast ($uint<64>) ( $cast ($int< 64 > ) xx_x337) )
// accelerator_reg[13] := ($bitcast ($uint<32>) xx_x338)
// xx_x60 - out_cols
 
$call writeModule_convolution (out_start_addr xx_x326 xx_x337 xx_x344 )  (dodo)
$place [if_truex_x11_if_nextx_x9]
//begin: basic-block if_falsex_x9
$merge for_bodyx_x7_if_falsex_x9
$endmerge
flatten_data := xx_x311
$place [if_falsex_x9_if_nextx_x9]
//begin: basic-block if_nextx_x9
$merge if_falsex_x9_if_nextx_x9 if_truex_x11_if_nextx_x9
$phi xx_x350126 :=  ( $cast ($uint<32>) xx_x350125) $on if_falsex_x9_if_nextx_x9 ( $cast ($uint<32>) xx_x350125) $on if_truex_x11_if_nextx_x9 
$phi xx_x35418 :=  ( $cast ($uint<32>) xx_x354124) $on if_falsex_x9_if_nextx_x9 ( $cast ($uint<32>) xx_x319134) $on if_truex_x11_if_nextx_x9 
$endmerge
xx_x351 := (xx_x350126 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
// compare instruction
xx_x309 := (xx_x351 < ( $bitcast ($uint<32> ) xx_x84 ))
$if xx_x309 $then  $place [if_nextx_x9_for_bodyx_x7] $else $place [if_nextx_x9_forx_x7x_xfor_outx_x6_crit_edge] $endif 
//begin: basic-block forx_x7x_xfor_outx_x6_crit_edge
$merge if_nextx_x9_forx_x7x_xfor_outx_x6_crit_edge
$phi split127 :=  ( $cast ($uint<32>) xx_x35418) $on if_nextx_x9_forx_x7x_xfor_outx_x6_crit_edge 
$endmerge
$place [forx_x7x_xfor_outx_x6_crit_edge_for_outx_x6]
//begin: basic-block for_outx_x6
$merge forx_x7x_xfor_outx_x6_crit_edge_for_outx_x6 if_truex_x10_for_outx_x6
$phi xx_x354x_xlcssa :=  ( $cast ($uint<32>) split127) $on forx_x7x_xfor_outx_x6_crit_edge_for_outx_x6 ( $cast ($uint<32>) xx_x319134) $on if_truex_x10_for_outx_x6 
$endmerge
xx_x355 := (xx_x354x_xlcssa + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
$place [for_outx_x6_if_nextx_x10]
//begin: basic-block if_falsex_x10
$merge if_truex_x9_if_falsex_x10
$endmerge
$place [if_falsex_x10_if_nextx_x10]
//begin: basic-block if_nextx_x10
$merge for_outx_x6_if_nextx_x10 if_falsex_x10_if_nextx_x10
$phi xx_x35417 :=  ( $cast ($uint<32>) xx_x319134) $on if_falsex_x10_if_nextx_x10 ( $cast ($uint<32>) xx_x355) $on for_outx_x6_if_nextx_x10 
$endmerge
$place [if_nextx_x10_if_nextx_x11]
//begin: basic-block if_falsex_x11
$merge for_outx_x5_if_falsex_x11
$endmerge
$place [if_falsex_x11_if_nextx_x11]
//begin: basic-block if_nextx_x11
$merge if_falsex_x11_if_nextx_x11 if_nextx_x10_if_nextx_x11
$phi xx_x386137 :=  ( $cast ($uint<32>) xx_x386136) $on if_falsex_x11_if_nextx_x11 ( $cast ($uint<32>) xx_x386136) $on if_nextx_x10_if_nextx_x11 
$phi xx_x35416 :=  ( $cast ($uint<32>) xx_x319134) $on if_falsex_x11_if_nextx_x11 ( $cast ($uint<32>) xx_x35417) $on if_nextx_x10_if_nextx_x11 
$endmerge
xx_x362 := (xx_x361x_xlcssa - ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
// compare instruction
xx_x363 := ( ($bitcast ( $int<32>) xx_x386136) <   ($bitcast ( $int<32>) xx_x362 ) )
$if xx_x363 $then  $place [if_nextx_x11_if_truex_x12] $else $place [if_nextx_x11_if_falsex_x12] $endif 
//begin: basic-block if_truex_x12
$merge if_nextx_x11_if_truex_x12
$endmerge
// compare instruction
xx_x369128 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  < groups )
$if xx_x369128 $then  $place [if_truex_x12_for_bodyx_x8x_xlrx_xph] $else $place [if_truex_x12_for_outx_x7] $endif 
//begin: basic-block for_bodyx_x8x_xlrx_xph
$merge if_truex_x12_for_bodyx_x8x_xlrx_xph
$endmerge
$place [for_bodyx_x8x_xlrx_xph_for_bodyx_x8]
//begin: basic-block for_bodyx_x8
$merge for_bodyx_x8_for_bodyx_x8 for_bodyx_x8x_xlrx_xph_for_bodyx_x8
$phi xx_x380129 :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on for_bodyx_x8x_xlrx_xph_for_bodyx_x8 ( $cast ($uint<32>) xx_x381) $on for_bodyx_x8_for_bodyx_x8 
$endmerge
$call fetchInpHorSlice (in_start_addr xx_x386137 xx_x380129 ker_size padReq in_rows in_cols in_channels xx_x225x_xlcssa inp_zero_point )  ()
xx_x381 := (xx_x380129 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
// compare instruction
xx_x369 := (xx_x381 < groups )
$if xx_x369 $then  $place [for_bodyx_x8_for_bodyx_x8] $else $place [for_bodyx_x8_forx_x8x_xfor_outx_x7_crit_edge] $endif 
//begin: basic-block forx_x8x_xfor_outx_x7_crit_edge
$merge for_bodyx_x8_forx_x8x_xfor_outx_x7_crit_edge
$phi split130 :=  ( $cast ($uint<32>) xx_x225x_xlcssa) $on for_bodyx_x8_forx_x8x_xfor_outx_x7_crit_edge 
$endmerge
$place [forx_x8x_xfor_outx_x7_crit_edge_for_outx_x7]
//begin: basic-block for_outx_x7
$merge forx_x8x_xfor_outx_x7_crit_edge_for_outx_x7 if_truex_x12_for_outx_x7
$phi xx_x1905x_xlcssa :=  ( $cast ($uint<32>) split130) $on forx_x8x_xfor_outx_x7_crit_edge_for_outx_x7 ( $cast ($uint<32>) xx_x1906x_xlcssa) $on if_truex_x12_for_outx_x7 
$endmerge
$place [for_outx_x7_if_nextx_x12]
//begin: basic-block if_falsex_x12
$merge if_nextx_x11_if_falsex_x12
$endmerge
$place [if_falsex_x12_if_nextx_x12]
//begin: basic-block if_nextx_x12
$merge for_outx_x7_if_nextx_x12 if_falsex_x12_if_nextx_x12
$phi xx_x1904 :=  ( $cast ($uint<32>) xx_x1906x_xlcssa) $on if_falsex_x12_if_nextx_x12 ( $cast ($uint<32>) xx_x1905x_xlcssa) $on for_outx_x7_if_nextx_x12 
$endmerge
xx_x387 := (xx_x386137 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
// compare instruction
xx_x188 := (xx_x387 < xx_x196 )
$if xx_x188 $then  $place [if_nextx_x12_for_bodyx_x4] $else $place [if_nextx_x12_forx_x4x_xfor_outx_x8_crit_edge] $endif 
//begin: basic-block forx_x4x_xfor_outx_x8_crit_edge
$merge if_nextx_x12_forx_x4x_xfor_outx_x8_crit_edge
$endmerge
$place [forx_x4x_xfor_outx_x8_crit_edge_for_outx_x8]
//begin: basic-block for_outx_x8
$merge for_outx_x3_for_outx_x8 forx_x4x_xfor_outx_x8_crit_edge_for_outx_x8
$endmerge
stored_ret_val__ := ( $bitcast ($uint<8> ) _b00000000 ) 
$place [return__]
$merge return__ $endmerge
ret_val__ := stored_ret_val__ 
}
}
