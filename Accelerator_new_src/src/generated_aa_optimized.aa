// Aa code produced by llvm2aa (version 2.0)
$pipe accumulator_pipe_even : $float<8,23> $depth 10000
$pipe accumulator_pipe_odd : $float<8,23> $depth 10000
$pipe conv_input_data : $float<8,23> $depth 10000
$pipe conv_ker_data : $float<8,23> $depth 10000
$pipe conv_out_data : $float<8,23> $depth 10000
$pipe fetch_start : $uint<8> $depth 10000
$pipe hor_slice_pipe : $float<8,23> $depth 10000
$pipe in_data_0 : $float<8,23> $depth 10000
$pipe in_data_1 : $float<8,23> $depth 10000
$pipe in_data_2 : $float<8,23> $depth 10000
$pipe in_data_3 : $float<8,23> $depth 10000
$pipe in_data_4 : $float<8,23> $depth 10000
$pipe ker_data : $uint<64> $depth 10000
$pipe test_pipe : $uint<64> $depth 10000
$pipe test_pipe1 : $uint<64> $depth 10000
$pipe pool_data_fifo_r0 : $uint<8> $depth 10000
$lifo $pipe pool_data_lifo_r1 : $uint<8> $depth 10000
$pipe pool_out_data : $uint<8> $depth 10000
$module [generated_llvmx_xbc_storage_initializer_] $in () $out () $is {
$null
$attribute initializer
}
// $module [fp32_mul_for_ecg] 
//  $in (number1 : $float<8,23> number2 : $float<8,23> )
//  $out (ret_val__ : $float<8,23>)
//  $is 
// {
// //begin: basic-block vars
// ret_val__ := (number1 * number2)
// }
// $module [fp32_add_for_ecg] 
//  $in (number1 : $float<8,23> number2 : $float<8,23> )
//  $out (ret_val__ : $float<8,23>)
//  $is 
// {
// //begin: basic-block vars
// ret_val__ := (number1 + number2)
// }
// $module [fp32_sub_for_ecg] 
//  $in (number1 : $float<8,23> number2 : $float<8,23> )
//  $out (ret_val__ : $float<8,23>)
//  $is 
// {
// //begin: basic-block vars
// ret_val__ := (number1 - number2)
// }
// $module [fpcmp32] 
//  $in (number1 : $float<8,23> number2 : $float<8,23> flag : $uint<1> )
//  $out (ret_val__ : $uint<2>)
//  $is 
// {
// //begin: basic-block vars
// // compare instruction
// xx_x10 := (number1 == number2 )
// vars_if_true_taken := xx_x10
// vars_if_false_taken := ( ~xx_x10)
// if_false_exec_guard := vars_if_false_taken
// //begin: basic-block if_false
// // compare instruction
// $guard (if_false_exec_guard) xx_x16 := (number1 < number2 )
// if_false_if_truex_x1_taken := (if_false_exec_guard & xx_x16)
// if_false_if_falsex_x1_taken := (if_false_exec_guard & (~xx_x16))
// if_falsex_x1_exec_guard := if_false_if_falsex_x1_taken
// //begin: basic-block if_falsex_x1
// // compare instruction
// $guard (if_falsex_x1_exec_guard) xx_x22 := (number1 > number2 )
// if_falsex_x1_if_truex_x2_taken := (if_falsex_x1_exec_guard & xx_x22)
// if_falsex_x1_if_falsex_x2_taken := (if_falsex_x1_exec_guard & (~xx_x22))
// if_falsex_x2_exec_guard := if_falsex_x1_if_falsex_x2_taken
// //begin: basic-block if_falsex_x2
// if_falsex_x2_if_next_taken := if_falsex_x2_exec_guard
// if_truex_x2_exec_guard := if_falsex_x1_if_truex_x2_taken
// //begin: basic-block if_truex_x2
// if_truex_x2_if_next_taken := if_truex_x2_exec_guard
// if_next_exec_guard := (if_falsex_x2_if_next_taken | if_truex_x2_if_next_taken )
// //begin: basic-block if_next
// xx_x303x_xoff0 := ($mux if_falsex_x2_if_next_taken ( $bitcast ($uint<2>) ( $bitcast ($uint<2> ) _b11 ) ) ($mux if_truex_x2_if_next_taken ( $bitcast ($uint<2>) ( $bitcast ($uint<2> ) _b10 ) ) ($bitcast ($uint<2>) 0)))
// if_next_if_nextx_x1_taken := if_next_exec_guard
// if_truex_x1_exec_guard := if_false_if_truex_x1_taken
// //begin: basic-block if_truex_x1
// if_truex_x1_if_nextx_x1_taken := if_truex_x1_exec_guard
// if_nextx_x1_exec_guard := (if_next_if_nextx_x1_taken | if_truex_x1_if_nextx_x1_taken )
// //begin: basic-block if_nextx_x1
// xx_x302x_xoff0 := ($mux if_next_if_nextx_x1_taken ( $bitcast ($uint<2>) xx_x303x_xoff0) ($mux if_truex_x1_if_nextx_x1_taken ( $bitcast ($uint<2>) ( $bitcast ($uint<2> ) _b01 ) ) ($bitcast ($uint<2>) 0)))
// if_nextx_x1_if_nextx_x2_taken := if_nextx_x1_exec_guard
// if_true_exec_guard := vars_if_true_taken
// //begin: basic-block if_true
// if_true_if_nextx_x2_taken := if_true_exec_guard
// //begin: basic-block if_nextx_x2
// ret_val__ := ($mux if_nextx_x1_if_nextx_x2_taken ( $bitcast ($uint<2>) xx_x302x_xoff0) ($mux if_true_if_nextx_x2_taken ( $bitcast ($uint<2>) ( $bitcast ($uint<2> ) _b00 ) ) ($bitcast ($uint<2>) 0)))
// }
// $module [fstoi_for_ecg] 
//  $in (number1 : $float<8,23> )
//  $out (ret_val__ : $uint<32>)
//  $is 
// {
// //begin: basic-block vars
// xx_x5 := ( $bitcast ($uint<8> ) ( $cast ( $int< 8 > ) number1) )
// ret_val__ :=  ($bitcast ($uint<32>) ( $cast ($int< 32 > ) xx_x5) )
// }
// $module [fitos32_for_ecg] 
//  $in (number1 : $uint<32> )
//  $out (ret_val__ : $float<8,23>)
//  $is 
// {
// //begin: basic-block vars
// ret_val__ := ($cast ($float<8,23>) number1)
// }
// $module [round_half_even] 
//  $in (number : $float<8,23> )
//  $out (ret_val__ : $uint<8>)
//  $is 
// {
// //begin: basic-block vars
// $call fstoi_for_ecg (number )  (xx_x5)
// $call fitos32_for_ecg (( $bitcast ($uint<32> ) xx_x5) )  (xx_x8)
// $call fp32_sub_for_ecg (number xx_x8 )  (xx_x12)
// $volatile $call fpcmp32 (xx_x12 ( $bitcast ($float<8,23> ) _f5.000000e-01 )  ( $bitcast ($uint<1> ) _b1 )  )  (xx_x15)
// // compare instruction
// xx_x18 := (xx_x15 == ( $bitcast ($uint<2> ) _b01 )  )
// vars_if_true_taken := xx_x18
// vars_if_false_taken := ( ~xx_x18)
// if_false_exec_guard := vars_if_false_taken
// //begin: basic-block if_false
// // compare instruction
// $guard (if_false_exec_guard) xx_x24 := (xx_x15 == ( $bitcast ($uint<2> ) _b10 )  )
// if_false_if_truex_x1_taken := (if_false_exec_guard & xx_x24)
// if_false_if_falsex_x1_taken := (if_false_exec_guard & (~xx_x24))
// if_falsex_x1_exec_guard := if_false_if_falsex_x1_taken
// //begin: basic-block if_falsex_x1
// $guard (if_falsex_x1_exec_guard) iNsTr_5 := (( $bitcast ($uint<32> ) xx_x5) & ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
// // compare instruction
// $guard (if_falsex_x1_exec_guard) xx_x32 := (iNsTr_5 == ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  )
// if_falsex_x1_if_truex_x2_taken := (if_falsex_x1_exec_guard & xx_x32)
// if_falsex_x1_if_falsex_x2_taken := (if_falsex_x1_exec_guard & (~xx_x32))
// if_falsex_x2_exec_guard := if_falsex_x1_if_falsex_x2_taken
// //begin: basic-block if_falsex_x2
// $guard (if_falsex_x2_exec_guard) xx_x38 := (xx_x8 + ( $bitcast ($float<8,23> ) _f1.000000e+00 ) )
// if_falsex_x2_if_next_taken := if_falsex_x2_exec_guard
// if_truex_x2_exec_guard := if_falsex_x1_if_truex_x2_taken
// //begin: basic-block if_truex_x2
// if_truex_x2_if_next_taken := if_truex_x2_exec_guard
// if_next_exec_guard := (if_falsex_x2_if_next_taken | if_truex_x2_if_next_taken )
// //begin: basic-block if_next
// xx_x433 := ($mux if_falsex_x2_if_next_taken ( $bitcast ($float<8,23>) xx_x38) ($mux if_truex_x2_if_next_taken ( $bitcast ($float<8,23>) xx_x8) ($bitcast ($float<8,23>) 0)))
// if_next_if_nextx_x1_taken := if_next_exec_guard
// if_truex_x1_exec_guard := if_false_if_truex_x1_taken
// //begin: basic-block if_truex_x1
// $guard (if_truex_x1_exec_guard) xx_x27 := (xx_x8 + ( $bitcast ($float<8,23> ) _f1.000000e+00 ) )
// if_truex_x1_if_nextx_x1_taken := if_truex_x1_exec_guard
// if_nextx_x1_exec_guard := (if_next_if_nextx_x1_taken | if_truex_x1_if_nextx_x1_taken )
// //begin: basic-block if_nextx_x1
// xx_x432 := ($mux if_next_if_nextx_x1_taken ( $bitcast ($float<8,23>) xx_x433) ($mux if_truex_x1_if_nextx_x1_taken ( $bitcast ($float<8,23>) xx_x27) ($bitcast ($float<8,23>) 0)))
// if_nextx_x1_if_nextx_x2_taken := if_nextx_x1_exec_guard
// if_true_exec_guard := vars_if_true_taken
// //begin: basic-block if_true
// if_true_if_nextx_x2_taken := if_true_exec_guard
// //begin: basic-block if_nextx_x2
// xx_x43 := ($mux if_nextx_x1_if_nextx_x2_taken ( $bitcast ($float<8,23>) xx_x432) ($mux if_true_if_nextx_x2_taken ( $bitcast ($float<8,23>) xx_x8) ($bitcast ($float<8,23>) 0)))
// ret_val__ := ( $bitcast ($uint<8> ) ( $cast ( $int< 8 > ) xx_x43) )
// }
// $module [uint_quant] 
//  $in (val : $float<8,23> scale_inv : $float<8,23> zero_point : $float<8,23> )
//  $out (ret_val__ : $uint<8>)
//  $is 
// {
// //begin: basic-block vars
// $call fp32_mul_for_ecg (val scale_inv )  (xx_x10)
// $call fp32_add_for_ecg (xx_x10 zero_point )  (xx_x12)
// // compare instruction
// xx_x15 := (xx_x12 > ( $bitcast ($float<8,23> ) _f2.550000e+02 )  )
// vars_if_true_taken := xx_x15
// vars_if_false_taken := ( ~xx_x15)
// if_false_exec_guard := vars_if_false_taken
// //begin: basic-block if_false
// if_false_if_next_taken := if_false_exec_guard
// if_true_exec_guard := vars_if_true_taken
// //begin: basic-block if_true
// if_true_if_next_taken := if_true_exec_guard
// if_next_exec_guard := (if_false_if_next_taken | if_true_if_next_taken )
// //begin: basic-block if_next
// xx_x20 := ($mux if_false_if_next_taken ( $bitcast ($float<8,23>) xx_x12) ($mux if_true_if_next_taken ( $bitcast ($float<8,23>) ( $bitcast ($float<8,23> ) _f2.550000e+02 ) ) ($bitcast ($float<8,23>) 0)))
// // compare instruction
// $guard (if_next_exec_guard) xx_x21 := (xx_x20 < ( $bitcast ($float<8,23> ) _h0 )  )
// if_next_if_truex_x1_taken := (if_next_exec_guard & xx_x21)
// if_next_if_falsex_x1_taken := (if_next_exec_guard & (~xx_x21))
// if_falsex_x1_exec_guard := if_next_if_falsex_x1_taken
// //begin: basic-block if_falsex_x1
// if_falsex_x1_if_nextx_x1_taken := if_falsex_x1_exec_guard
// if_truex_x1_exec_guard := if_next_if_truex_x1_taken
// //begin: basic-block if_truex_x1
// if_truex_x1_if_nextx_x1_taken := if_truex_x1_exec_guard
// //begin: basic-block if_nextx_x1
// xx_x26 := ($mux if_falsex_x1_if_nextx_x1_taken ( $bitcast ($float<8,23>) xx_x20) ($mux if_truex_x1_if_nextx_x1_taken ( $bitcast ($float<8,23>) ( $bitcast ($float<8,23> ) _h0 ) ) ($bitcast ($float<8,23>) 0)))
// $call round_half_even (xx_x26 )  (ret_val__)
// }
// $module [dequant_inp] 
//  $in (val : $uint<8> scale : $float<8,23> zero_point : $float<8,23> )
//  $out (ret_val__ : $float<8,23>)
//  $is 
// {
// //begin: basic-block vars
// xx_x13 := ($cast ($float<8,23>) val)
// $call fp32_sub_for_ecg (xx_x13 zero_point )  (xx_x14)
// $call fp32_mul_for_ecg (scale xx_x14 )  (ret_val__)
// }
// $module [dequant_ker] 
//  $in (val : $uint<8> scale : $float<8,23> zero_point : $float<8,23> )
//  $out (ret_val__ : $float<8,23>)
//  $is 
// {
// //begin: basic-block vars
// xx_x13 :=  ( $cast ($float<8,23>)  ( $bitcast ( $int< 32 > ) val) ) 
// $call fp32_sub_for_ecg (xx_x13 zero_point )  (xx_x14)
// $call fp32_mul_for_ecg (scale xx_x14 )  (ret_val__)
// }
// $module [relu] 
//  $in (val : $float<8,23> )
//  $out (ret_val__ : $float<8,23>)
//  $is 
// {
// //begin: basic-block vars
// // compare instruction
// xx_x6 := (val > ( $bitcast ($float<8,23> ) _h0 )  )
// vars_if_true_taken := xx_x6
// vars_if_false_taken := ( ~xx_x6)
// if_false_exec_guard := vars_if_false_taken
// //begin: basic-block if_false
// if_false_if_next_taken := if_false_exec_guard
// if_true_exec_guard := vars_if_true_taken
// //begin: basic-block if_true
// if_true_if_next_taken := if_true_exec_guard
// //begin: basic-block if_next
// ret_val__ := ($mux if_false_if_next_taken ( $bitcast ($float<8,23>) ( $bitcast ($float<8,23> ) _h0 ) ) ($mux if_true_if_next_taken ( $bitcast ($float<8,23>) val) ($bitcast ($float<8,23>) 0)))
// }
$module [round_half_even] 
 $in (number : $float<8,23> )
 $out (ret_val__ : $uint<8>)
 $is 
{
$branchblock [body] {
$storage temp_out: $uint<8>
//begin: basic-block vars
$call fstoi_for_ecg (number)  (int_part)

$call fitos32_for_ecg (($bitcast ($uint<32>) int_part) )  (xx_x8)

$call fp32_sub_for_ecg (number xx_x8 )  (frac_part)

$volatile $call fpcmp32 (frac_part ( $bitcast ($float<8,23> ) _f0.5e+0 ) 0) (chk)

$if (chk == 1) $then
	temp_out := ( $bitcast ( $uint<8> ) int_part)
	$place [return__] 
// $else 
// 	$place [false1] 
$endif 

$if (chk == 2) $then
	temp_out := ( $bitcast ( $uint<8> ) ( int_part + 1))
	$place [return__] 
// $else 
// 	$place [false1] 
$endif 

first_bit := (int_part [] 0)
$if (first_bit == 0) $then
	temp_out := ( $bitcast ( $uint<8> ) int_part)
	$place [return__] 
// $else 
// 	$place [false1] 
$endif 

temp_out := ( $bitcast ( $uint<8> ) ( int_part + 1))
$place [return__] 
$merge return__ $endmerge

ret_val__ := temp_out

}
}

$module [uint_quant] 
 $in (val : $float<8,23> scale : $float<8,23> zero_point : $float<8,23> )
 $out (ret_val__ : $uint<8>)
 $is 
{
$branchblock [body] {
//begin: basic-block vars
$storage temp_out: $uint<8>
$call fp32_mul_for_ecg (val scale )  (xx_x10)
$call fp32_add_for_ecg (xx_x10 zero_point )  (quant_float)

// compare instruction
// chk1 := (quant_float > ( $bitcast ($float<8,23> ) _f2.550e+02 )  )
$volatile $call fpcmp32 (quant_float ( $bitcast ($float<8,23> ) _f2.550e+02 ) 0) (chk)
$volatile $call fpcmp32 (quant_float ( $bitcast ($float<8,23> ) _f0.0e+0 ) 0) (chk1)

$if (chk == 2) $then
	temp_out := ( $cast ( $uint<8> ) 255)
	$place [return__] 
$endif

// chk2 := (quant_float < ( $cast ($float<8,23> ) _f0.0e+0 )  )

$if (chk1 == 1) $then
	temp_out := ( $cast ( $uint<8> ) 0)
	$place [return__] 
$endif

$call round_half_even(quant_float) (round_val)
temp_out := round_val
// $place [return__]
$place [return__] 

$merge return__ $endmerge

ret_val__ :=  temp_out
}
}
$module [dequant_inp] 
 $in (val : $uint<8> scale : $float<8,23> zero_point : $float<8,23> )
 $out (ret_val__ : $float<8,23>)
 $is 
{
$branchblock [body] {
//begin: basic-block vars
xx_x13 := ($cast ($float<8,23>) val)
$call fp32_sub_for_ecg (xx_x13 zero_point )  (xx_x14)
$call fp32_mul_for_ecg (scale xx_x14 )  (ret_val__)
$place [return__]
$merge return__ $endmerge
}
}
$module [dequant_ker] 
 $in (val : $uint<8> scale : $float<8,23> zero_point : $float<8,23> )
 $out (ret_val__ : $float<8,23>)
 $is 
{
$branchblock [body] {
//begin: basic-block vars
xx_x13 :=  ( $cast ($float<8,23>)  ( $cast ( $int< 32 > ) val) ) 

$call fp32_sub_for_ecg (xx_x13 zero_point )  (xx_x14)
$call fp32_mul_for_ecg (scale xx_x14 )  (ret_val__)
$place [return__]
$merge return__ $endmerge
}
}
$module [relu] 
 $in (val : $float<8,23> )
 $out (ret_val__ : $float<8,23>)
 $is 
{
$storage stored_ret_val__ : $float<8,23>
$branchblock [body] {
//begin: basic-block vars
// compare instruction
xx_x5 := (val > ( $bitcast ($float<8,23> ) _h0 )  )
$if xx_x5 $then  $place [vars_if_true] $else $place [vars_if_false] $endif 
//begin: basic-block if_true
$merge vars_if_true
$endmerge
stored_ret_val__ := val
$place [return__]
//begin: basic-block if_false
$merge vars_if_false
$endmerge
stored_ret_val__ := ( $bitcast ($float<8,23> ) _h0 ) 
$place [return__]
$merge return__ $endmerge
ret_val__ := stored_ret_val__ 
}
}
// $module [readModule_convolution] 
//  $in (base_address : $uint<32> addr : $uint<32> )
//  $out (ret_val__ : $uint<64>)
//  $is 
// {
// //begin: basic-block vars
// ret_val__ := ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 )
// }
// $module [writeModule_convolution] 
//  $in (base_address : $uint<32> addr : $uint<32> data : $uint<64> byte_mask : $uint<8> )
//  $out ()
//  $is 
// {
// //begin: basic-block vars
// ker_data := data
// }
$module [writeInpPipe] 
 $in (col : $uint<32> inp_dequant_val : $float<8,23> )
 $out ()
 $is 
{
//begin: basic-block vars
// compare instruction
xx_x7 := (col == ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  )
vars_if_true_taken := xx_x7
vars_if_false_taken := ( ~xx_x7)
if_false_exec_guard := vars_if_false_taken
//begin: basic-block if_false
// compare instruction
$guard (if_false_exec_guard) xx_x13 := (col == ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 )  )
if_false_if_truex_x1_taken := (if_false_exec_guard & xx_x13)
if_false_if_falsex_x1_taken := (if_false_exec_guard & (~xx_x13))
if_falsex_x1_exec_guard := if_false_if_falsex_x1_taken
//begin: basic-block if_falsex_x1
// compare instruction
$guard (if_falsex_x1_exec_guard) xx_x19 := (col == ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 )  )
if_falsex_x1_if_truex_x2_taken := (if_falsex_x1_exec_guard & xx_x19)
if_falsex_x1_if_falsex_x2_taken := (if_falsex_x1_exec_guard & (~xx_x19))
if_falsex_x2_exec_guard := if_falsex_x1_if_falsex_x2_taken
//begin: basic-block if_falsex_x2
// compare instruction
$guard (if_falsex_x2_exec_guard) xx_x25 := (col == ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 )  )
if_falsex_x2_if_truex_x3_taken := (if_falsex_x2_exec_guard & xx_x25)
if_falsex_x2_if_falsex_x3_taken := (if_falsex_x2_exec_guard & (~xx_x25))
if_falsex_x3_exec_guard := if_falsex_x2_if_falsex_x3_taken
//begin: basic-block if_falsex_x3
// compare instruction
$guard (if_falsex_x3_exec_guard) xx_x31 := (col == ( $bitcast ($uint<32> ) _b00000000000000000000000000000100 )  )
if_falsex_x3_if_truex_x4_taken := (if_falsex_x3_exec_guard & xx_x31)
if_falsex_x3_if_falsex_x4_taken := (if_falsex_x3_exec_guard & (~xx_x31))
if_falsex_x4_exec_guard := if_falsex_x3_if_falsex_x4_taken
//begin: basic-block if_falsex_x4
if_falsex_x4_if_next_taken := if_falsex_x4_exec_guard
if_truex_x4_exec_guard := if_falsex_x3_if_truex_x4_taken
//begin: basic-block if_truex_x4
$guard (if_truex_x4_exec_guard) in_data_4 := inp_dequant_val
if_truex_x4_if_next_taken := if_truex_x4_exec_guard
if_next_exec_guard := (if_falsex_x4_if_next_taken | if_truex_x4_if_next_taken )
//begin: basic-block if_next
if_next_if_nextx_x1_taken := if_next_exec_guard
if_truex_x3_exec_guard := if_falsex_x2_if_truex_x3_taken
//begin: basic-block if_truex_x3
$guard (if_truex_x3_exec_guard) in_data_3 := inp_dequant_val
if_truex_x3_if_nextx_x1_taken := if_truex_x3_exec_guard
if_nextx_x1_exec_guard := (if_next_if_nextx_x1_taken | if_truex_x3_if_nextx_x1_taken )
//begin: basic-block if_nextx_x1
if_nextx_x1_if_nextx_x2_taken := if_nextx_x1_exec_guard
if_truex_x2_exec_guard := if_falsex_x1_if_truex_x2_taken
//begin: basic-block if_truex_x2
$guard (if_truex_x2_exec_guard) in_data_2 := inp_dequant_val
if_truex_x2_if_nextx_x2_taken := if_truex_x2_exec_guard
if_nextx_x2_exec_guard := (if_nextx_x1_if_nextx_x2_taken | if_truex_x2_if_nextx_x2_taken )
//begin: basic-block if_nextx_x2
if_nextx_x2_if_nextx_x3_taken := if_nextx_x2_exec_guard
if_truex_x1_exec_guard := if_false_if_truex_x1_taken
//begin: basic-block if_truex_x1
$guard (if_truex_x1_exec_guard) in_data_1 := inp_dequant_val
if_truex_x1_if_nextx_x3_taken := if_truex_x1_exec_guard
if_nextx_x3_exec_guard := (if_nextx_x2_if_nextx_x3_taken | if_truex_x1_if_nextx_x3_taken )
//begin: basic-block if_nextx_x3
if_nextx_x3_if_nextx_x4_taken := if_nextx_x3_exec_guard
if_true_exec_guard := vars_if_true_taken
//begin: basic-block if_true
$guard (if_true_exec_guard) in_data_0 := inp_dequant_val
if_true_if_nextx_x4_taken := if_true_exec_guard
//begin: basic-block if_nextx_x4
}
$module [fetchAll] 
 $in (base_addr : $uint<32> groups : $uint<32> ker_size : $uint<32> in_channels : $uint<32> inp_scale : $float<8,23> inp_zero_point : $float<8,23> )
 $out ()
 $is 
{
$branchblock [body] {
//begin: basic-block vars
xx_x15 := (groups + ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 ) )
xx_x17 := (xx_x15 * ker_size)
xx_x19 := (xx_x17 * ker_size)
xx_x32 := (groups << ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) )
xx_x34 := (xx_x32 * ker_size)
xx_x36 :=  ($bitcast ($uint<64>) ( $cast ($int< 64 > ) xx_x34) )
xx_x41 := ($cast ($uint<64>) xx_x32)
xx_x154 :=  ($bitcast ($uint<64>) ( $cast ($int< 64 > ) ker_size) )
// compare instruction
xx_x2886 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  < xx_x19 )
$if xx_x2886 $then  $place [vars_for_bodyx_xlrx_xph] $else $place [vars_for_out] $endif 
//begin: basic-block for_bodyx_xlrx_xph
$merge vars_for_bodyx_xlrx_xph
$endmerge
$place [for_bodyx_xlrx_xph_for_body]
//begin: basic-block for_body
//   this is a do-while loop.
$merge for_bodyx_xlrx_xph_for_body
$endmerge
$dopipeline $depth 31 $buffering 7 
$fullrate
$merge $entry $loopback
$phi xx_x17491 :=  ( $cast ($uint<32>) xx_x175) $on $loopback ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on $entry
$phi xx_x14990 :=  ( $cast ($uint<64>) xx_x3554) $on $loopback ( $cast ($uint<64>) ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) ) $on $entry
$phi xx_x15889 :=  ( $cast ($uint<64>) xx_x4056) $on $loopback ( $cast ($uint<64>) ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) ) $on $entry
$phi xx_x1635788 :=  ( $cast ($uint<64>) xx_x16358) $on $loopback ( $cast ($uint<64>) ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) ) $on $entry
$phi xx_x1707287 :=  ( $cast ($uint<64>) xx_x17071) $on $loopback ( $cast ($uint<64>) ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) ) $on $entry
$endmerge
xx_x37 := (xx_x14990 * xx_x36)
xx_x42 := (xx_x15889 * xx_x41)
xx_x43 := (xx_x37 + xx_x42)
xx_x45 := (xx_x1707287 << ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000011 ) )
xx_x46 := (xx_x43 + xx_x45)
xx_x50 := ($cast ($uint<32>) xx_x46)
$call readModule_convolution (base_addr xx_x50 )  (xx_x51)
xx_x54 := ($slice xx_x51 63 56)
$call dequant_ker (xx_x54 inp_scale inp_zero_point )  (xx_x59)
xx_x63 := ($cast ($uint<32>) xx_x15889)
$call writeInpPipe (xx_x63 xx_x59 )  ()
xx_x66 := ($slice xx_x51 55 48)
$call dequant_ker (xx_x66 inp_scale inp_zero_point )  (xx_x71)
$call writeInpPipe (xx_x63 xx_x71 )  ()
xx_x78 := ($slice xx_x51 47 40)
$call dequant_ker (xx_x78 inp_scale inp_zero_point )  (xx_x83)
$call writeInpPipe (xx_x63 xx_x83 )  ()
xx_x90 := ($slice xx_x51 39 32)
$call dequant_ker (xx_x90 inp_scale inp_zero_point )  (xx_x95)
$call writeInpPipe (xx_x63 xx_x95 )  ()
xx_x102 := ($slice xx_x51 31 24)
$call dequant_ker (xx_x102 inp_scale inp_zero_point )  (xx_x107)
$call writeInpPipe (xx_x63 xx_x107 )  ()
xx_x114 := ($slice xx_x51 23 16)
$call dequant_ker (xx_x114 inp_scale inp_zero_point )  (xx_x119)
$call writeInpPipe (xx_x63 xx_x119 )  ()
xx_x126 := ($slice xx_x51 15 8)
$call dequant_ker (xx_x126 inp_scale inp_zero_point )  (xx_x131)
$call writeInpPipe (xx_x63 xx_x131 )  ()
xx_x138 := ($slice xx_x51 7 0)
$call dequant_inp (xx_x138 inp_scale inp_zero_point )  (xx_x143)
$call writeInpPipe (xx_x63 xx_x143 )  ()
xx_x150 := (xx_x14990 + ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000001 ) )
// compare instruction
xx_x155 := (xx_x150 == xx_x154 )
for_body_if_true_taken := xx_x155
for_body_if_false_taken := ( ~xx_x155)
if_false_exec_guard := for_body_if_false_taken
//begin: basic-block if_false
if_false_if_next_taken := if_false_exec_guard
if_true_exec_guard := for_body_if_true_taken
//begin: basic-block if_true
$guard (if_true_exec_guard) xx_x159 := (xx_x15889 + ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000001 ) )
if_true_if_next_taken := if_true_exec_guard
if_next_exec_guard := (if_false_if_next_taken | if_true_if_next_taken )
//begin: basic-block if_next
xx_x163 := ($mux if_false_if_next_taken ( $bitcast ($uint<64>) xx_x1635788) ($mux if_true_if_next_taken ( $bitcast ($uint<64>) xx_x159) ($bitcast ($uint<64>) 0)))
xx_x3554 := ($mux if_false_if_next_taken ( $bitcast ($uint<64>) xx_x150) ($mux if_true_if_next_taken ( $bitcast ($uint<64>) ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) ) ($bitcast ($uint<64>) 0)))
// compare instruction
$guard (if_next_exec_guard) xx_x166 := (xx_x163 == xx_x154 )
if_next_if_truex_x1_taken := (if_next_exec_guard & xx_x166)
if_next_if_falsex_x1_taken := (if_next_exec_guard & (~xx_x166))
if_falsex_x1_exec_guard := if_next_if_falsex_x1_taken
//begin: basic-block if_falsex_x1
if_falsex_x1_if_nextx_x1_taken := if_falsex_x1_exec_guard
if_truex_x1_exec_guard := if_next_if_truex_x1_taken
//begin: basic-block if_truex_x1
$guard (if_truex_x1_exec_guard) xx_x170 := (xx_x1707287 + ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000001 ) )
if_truex_x1_if_nextx_x1_taken := if_truex_x1_exec_guard
//begin: basic-block if_nextx_x1
xx_x17071 := ($mux if_falsex_x1_if_nextx_x1_taken ( $bitcast ($uint<64>) xx_x1707287) ($mux if_truex_x1_if_nextx_x1_taken ( $bitcast ($uint<64>) xx_x170) ($bitcast ($uint<64>) 0)))
xx_x16358 := ($mux if_falsex_x1_if_nextx_x1_taken ( $bitcast ($uint<64>) xx_x163) ($mux if_truex_x1_if_nextx_x1_taken ( $bitcast ($uint<64>) ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) ) ($bitcast ($uint<64>) 0)))
xx_x4056 := ($mux if_falsex_x1_if_nextx_x1_taken ( $bitcast ($uint<64>) xx_x163) ($mux if_truex_x1_if_nextx_x1_taken ( $bitcast ($uint<64>) ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) ) ($bitcast ($uint<64>) 0)))
xx_x175 := (xx_x17491 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
// compare instruction
xx_x28 := (xx_x175 < xx_x19 )
if_nextx_x1_forx_xfor_out_crit_edge_taken := ( ~xx_x28)
$while xx_x28
$if if_nextx_x1_forx_xfor_out_crit_edge_taken $then 
  $place [if_nextx_x1_forx_xfor_out_crit_edge]
$endif
//begin: basic-block forx_xfor_out_crit_edge
$merge if_nextx_x1_forx_xfor_out_crit_edge
$phi split92 :=  ( $cast ($uint<64>) xx_x17071) $on if_nextx_x1_forx_xfor_out_crit_edge 
$phi split93 :=  ( $cast ($uint<8>) xx_x138) $on if_nextx_x1_forx_xfor_out_crit_edge 
$endmerge
$place [forx_xfor_out_crit_edge_for_out]
//begin: basic-block for_out
$merge forx_xfor_out_crit_edge_for_out vars_for_out
$phi xx_x17072x_xlcssa :=  ( $cast ($uint<64>) split92) $on forx_xfor_out_crit_edge_for_out ( $cast ($uint<64>) ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) ) $on vars_for_out 
$phi xx_x285x_xpre70x_xlcssa :=  ( $cast ($uint<8>) split93) $on forx_xfor_out_crit_edge_for_out ( $cast ($uint<8>) ( $bitcast ($uint<8> ) _b0 ) ) $on vars_for_out 
$endmerge
xx_x180 := (groups + ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 ) )
xx_x181 := (xx_x180 << ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) )
xx_x182 := (in_channels - xx_x181)
xx_x186 := (ker_size * ker_size)
xx_x190 := ($cast ($uint<64>) xx_x180)
xx_x202 := (groups << ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) )
xx_x204 := (xx_x202 * ker_size)
xx_x206 :=  ($bitcast ($uint<64>) ( $cast ($int< 64 > ) xx_x204) )
xx_x211 := ($cast ($uint<64>) xx_x202)
xx_x215 := (xx_x190 << ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000011 ) )
xx_x303 :=  ($bitcast ($uint<64>) ( $cast ($int< 64 > ) ker_size) )
// compare instruction
xx_x19879 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  < xx_x186 )
$if xx_x19879 $then  $place [for_out_for_bodyx_x1x_xlrx_xph] $else $place [for_out_for_outx_x2] $endif 
//begin: basic-block for_bodyx_x1x_xlrx_xph
$merge for_out_for_bodyx_x1x_xlrx_xph
$endmerge
$place [for_bodyx_x1x_xlrx_xph_for_bodyx_x1]
//begin: basic-block for_bodyx_x1
$merge for_bodyx_x1x_xlrx_xph_for_bodyx_x1 if_nextx_x10_for_bodyx_x1
$phi xx_x31285 :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on for_bodyx_x1x_xlrx_xph_for_bodyx_x1 ( $cast ($uint<32>) xx_x313) $on if_nextx_x10_for_bodyx_x1 
$phi xx_x29884 :=  ( $cast ($uint<64>) ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) ) $on for_bodyx_x1x_xlrx_xph_for_bodyx_x1 ( $cast ($uint<64>) xx_x2058) $on if_nextx_x10_for_bodyx_x1 
$phi xx_x21083 :=  ( $cast ($uint<64>) ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) ) $on for_bodyx_x1x_xlrx_xph_for_bodyx_x1 ( $cast ($uint<64>) xx_x2109) $on if_nextx_x10_for_bodyx_x1 
$phi xx_x29081 :=  ( $cast ($uint<64>) ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) ) $on for_bodyx_x1x_xlrx_xph_for_bodyx_x1 ( $cast ($uint<64>) xx_x29051) $on if_nextx_x10_for_bodyx_x1 
$phi xx_x285x_xpre6080 :=  ( $cast ($uint<8>) xx_x285x_xpre70x_xlcssa) $on for_bodyx_x1x_xlrx_xph_for_bodyx_x1 ( $cast ($uint<8>) xx_x285x_xpre67x_xlcssa) $on if_nextx_x10_for_bodyx_x1 
$endmerge
xx_x207 := (xx_x29884 * xx_x206)
xx_x212 := (xx_x21083 * xx_x211)
xx_x213 := (xx_x207 + xx_x212)
xx_x216 := (xx_x213 + xx_x215)
xx_x220 := ($cast ($uint<32>) xx_x216)
$call readModule_convolution (base_addr xx_x220 )  (xx_x221)
xx_x292 := ($cast ($uint<32>) xx_x29081)
// compare instruction
xx_x22775 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  < xx_x182 )
$if xx_x22775 $then  $place [for_bodyx_x1_for_bodyx_x2x_xlrx_xph] $else $place [for_bodyx_x1_for_outx_x1] $endif 
//begin: basic-block for_bodyx_x2x_xlrx_xph
$merge for_bodyx_x1_for_bodyx_x2x_xlrx_xph
$endmerge
$place [for_bodyx_x2x_xlrx_xph_for_bodyx_x2]
//begin: basic-block for_bodyx_x2
$merge for_bodyx_x2x_xlrx_xph_for_bodyx_x2 if_nextx_x9_for_bodyx_x2
$phi xx_x29477 :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on for_bodyx_x2x_xlrx_xph_for_bodyx_x2 ( $cast ($uint<32>) xx_x295) $on if_nextx_x9_for_bodyx_x2 
$phi xx_x285x_xpre6776 :=  ( $cast ($uint<8>) xx_x285x_xpre6080) $on for_bodyx_x2x_xlrx_xph_for_bodyx_x2 ( $cast ($uint<8>) xx_x285x_xpre68) $on if_nextx_x9_for_bodyx_x2 
$endmerge
// compare instruction
xx_x229 := (xx_x29477 == ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  )
$if xx_x229 $then  $place [for_bodyx_x2_if_truex_x2] $else $place [for_bodyx_x2_if_falsex_x2] $endif 
//begin: basic-block if_truex_x2
$merge for_bodyx_x2_if_truex_x2
$endmerge
xx_x232 := ($slice xx_x221 63 56)
$place [if_truex_x2_if_nextx_x9]
//begin: basic-block if_falsex_x2
$merge for_bodyx_x2_if_falsex_x2
$endmerge
// compare instruction
xx_x235 := (xx_x29477 == ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 )  )
$if xx_x235 $then  $place [if_falsex_x2_if_truex_x3] $else $place [if_falsex_x2_if_falsex_x3] $endif 
//begin: basic-block if_truex_x3
$merge if_falsex_x2_if_truex_x3
$endmerge
xx_x238 := ($slice xx_x221 55 48)
$place [if_truex_x3_if_nextx_x8]
//begin: basic-block if_falsex_x3
$merge if_falsex_x2_if_falsex_x3
$endmerge
// compare instruction
xx_x241 := (xx_x29477 == ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 )  )
$if xx_x241 $then  $place [if_falsex_x3_if_truex_x4] $else $place [if_falsex_x3_if_falsex_x4] $endif 
//begin: basic-block if_truex_x4
$merge if_falsex_x3_if_truex_x4
$endmerge
xx_x244 := ($slice xx_x221 47 40)
$place [if_truex_x4_if_nextx_x7]
//begin: basic-block if_falsex_x4
$merge if_falsex_x3_if_falsex_x4
$endmerge
// compare instruction
xx_x247 := (xx_x29477 == ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 )  )
$if xx_x247 $then  $place [if_falsex_x4_if_truex_x5] $else $place [if_falsex_x4_if_falsex_x5] $endif 
//begin: basic-block if_truex_x5
$merge if_falsex_x4_if_truex_x5
$endmerge
xx_x250 := ($slice xx_x221 39 32)
$place [if_truex_x5_if_nextx_x6]
//begin: basic-block if_falsex_x5
$merge if_falsex_x4_if_falsex_x5
$endmerge
// compare instruction
xx_x253 := (xx_x29477 == ( $bitcast ($uint<32> ) _b00000000000000000000000000000100 )  )
$if xx_x253 $then  $place [if_falsex_x5_if_truex_x6] $else $place [if_falsex_x5_if_falsex_x6] $endif 
//begin: basic-block if_truex_x6
$merge if_falsex_x5_if_truex_x6
$endmerge
xx_x256 := ($slice xx_x221 31 24)
$place [if_truex_x6_if_nextx_x5]
//begin: basic-block if_falsex_x6
$merge if_falsex_x5_if_falsex_x6
$endmerge
// compare instruction
xx_x259 := (xx_x29477 == ( $bitcast ($uint<32> ) _b00000000000000000000000000000101 )  )
$if xx_x259 $then  $place [if_falsex_x6_if_truex_x7] $else $place [if_falsex_x6_if_falsex_x7] $endif 
//begin: basic-block if_truex_x7
$merge if_falsex_x6_if_truex_x7
$endmerge
xx_x262 := ($slice xx_x221 23 16)
$place [if_truex_x7_if_nextx_x4]
//begin: basic-block if_falsex_x7
$merge if_falsex_x6_if_falsex_x7
$endmerge
// compare instruction
xx_x265 := (xx_x29477 == ( $bitcast ($uint<32> ) _b00000000000000000000000000000110 )  )
$if xx_x265 $then  $place [if_falsex_x7_if_truex_x8] $else $place [if_falsex_x7_if_falsex_x8] $endif 
//begin: basic-block if_truex_x8
$merge if_falsex_x7_if_truex_x8
$endmerge
xx_x268 := ($slice xx_x221 15 8)
$place [if_truex_x8_if_nextx_x3]
//begin: basic-block if_falsex_x8
$merge if_falsex_x7_if_falsex_x8
$endmerge
// compare instruction
xx_x271 := (xx_x29477 == ( $bitcast ($uint<32> ) _b00000000000000000000000000000111 )  )
$if xx_x271 $then  $place [if_falsex_x8_if_truex_x9] $else $place [if_falsex_x8_if_falsex_x9] $endif 
//begin: basic-block if_truex_x9
$merge if_falsex_x8_if_truex_x9
$endmerge
xx_x274 := ($slice xx_x221 7 0)
$place [if_truex_x9_if_nextx_x2]
//begin: basic-block if_falsex_x9
$merge if_falsex_x8_if_falsex_x9
$endmerge
$place [if_falsex_x9_if_nextx_x2]
//begin: basic-block if_nextx_x2
$merge if_falsex_x9_if_nextx_x2 if_truex_x9_if_nextx_x2
$phi xx_x285x_xpre66 :=  ( $cast ($uint<8>) xx_x285x_xpre6776) $on if_falsex_x9_if_nextx_x2 ( $cast ($uint<8>) xx_x274) $on if_truex_x9_if_nextx_x2 
$endmerge
$place [if_nextx_x2_if_nextx_x3]
//begin: basic-block if_nextx_x3
$merge if_nextx_x2_if_nextx_x3 if_truex_x8_if_nextx_x3
$phi xx_x285x_xpre65 :=  ( $cast ($uint<8>) xx_x285x_xpre66) $on if_nextx_x2_if_nextx_x3 ( $cast ($uint<8>) xx_x268) $on if_truex_x8_if_nextx_x3 
$endmerge
$place [if_nextx_x3_if_nextx_x4]
//begin: basic-block if_nextx_x4
$merge if_nextx_x3_if_nextx_x4 if_truex_x7_if_nextx_x4
$phi xx_x285x_xpre64 :=  ( $cast ($uint<8>) xx_x285x_xpre65) $on if_nextx_x3_if_nextx_x4 ( $cast ($uint<8>) xx_x262) $on if_truex_x7_if_nextx_x4 
$endmerge
$place [if_nextx_x4_if_nextx_x5]
//begin: basic-block if_nextx_x5
$merge if_nextx_x4_if_nextx_x5 if_truex_x6_if_nextx_x5
$phi xx_x285x_xpre63 :=  ( $cast ($uint<8>) xx_x285x_xpre64) $on if_nextx_x4_if_nextx_x5 ( $cast ($uint<8>) xx_x256) $on if_truex_x6_if_nextx_x5 
$endmerge
$place [if_nextx_x5_if_nextx_x6]
//begin: basic-block if_nextx_x6
$merge if_nextx_x5_if_nextx_x6 if_truex_x5_if_nextx_x6
$phi xx_x285x_xpre62 :=  ( $cast ($uint<8>) xx_x285x_xpre63) $on if_nextx_x5_if_nextx_x6 ( $cast ($uint<8>) xx_x250) $on if_truex_x5_if_nextx_x6 
$endmerge
$place [if_nextx_x6_if_nextx_x7]
//begin: basic-block if_nextx_x7
$merge if_nextx_x6_if_nextx_x7 if_truex_x4_if_nextx_x7
$phi xx_x285x_xpre61 :=  ( $cast ($uint<8>) xx_x285x_xpre62) $on if_nextx_x6_if_nextx_x7 ( $cast ($uint<8>) xx_x244) $on if_truex_x4_if_nextx_x7 
$endmerge
$place [if_nextx_x7_if_nextx_x8]
//begin: basic-block if_nextx_x8
$merge if_nextx_x7_if_nextx_x8 if_truex_x3_if_nextx_x8
$phi xx_x285x_xpre :=  ( $cast ($uint<8>) xx_x285x_xpre61) $on if_nextx_x7_if_nextx_x8 ( $cast ($uint<8>) xx_x238) $on if_truex_x3_if_nextx_x8 
$endmerge
$place [if_nextx_x8_if_nextx_x9]
//begin: basic-block if_nextx_x9
$merge if_nextx_x8_if_nextx_x9 if_truex_x2_if_nextx_x9
$phi xx_x285x_xpre68 :=  ( $cast ($uint<8>) xx_x285x_xpre) $on if_nextx_x8_if_nextx_x9 ( $cast ($uint<8>) xx_x232) $on if_truex_x2_if_nextx_x9 
$phi xx_x285 :=  ( $cast ($uint<8>) xx_x285x_xpre) $on if_nextx_x8_if_nextx_x9 ( $cast ($uint<8>) xx_x232) $on if_truex_x2_if_nextx_x9 
$endmerge
$call dequant_ker (xx_x285 inp_scale inp_zero_point )  (xx_x288)
$call writeInpPipe (xx_x292 xx_x288 )  ()
xx_x295 := (xx_x29477 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
// compare instruction
xx_x227 := (xx_x295 < xx_x182 )
$if xx_x227 $then  $place [if_nextx_x9_for_bodyx_x2] $else $place [if_nextx_x9_forx_x2x_xfor_outx_x1_crit_edge] $endif 
//begin: basic-block forx_x2x_xfor_outx_x1_crit_edge
$merge if_nextx_x9_forx_x2x_xfor_outx_x1_crit_edge
$phi split :=  ( $cast ($uint<8>) xx_x285x_xpre68) $on if_nextx_x9_forx_x2x_xfor_outx_x1_crit_edge 
$phi split78 :=  ( $cast ($uint<64>) xx_x29081) $on if_nextx_x9_forx_x2x_xfor_outx_x1_crit_edge 
$endmerge
$place [forx_x2x_xfor_outx_x1_crit_edge_for_outx_x1]
//begin: basic-block for_outx_x1
$merge for_bodyx_x1_for_outx_x1 forx_x2x_xfor_outx_x1_crit_edge_for_outx_x1
$phi xx_x29082 :=  ( $cast ($uint<64>) xx_x29081) $on forx_x2x_xfor_outx_x1_crit_edge_for_outx_x1 ( $cast ($uint<64>) xx_x29081) $on for_bodyx_x1_for_outx_x1 
$phi xx_x285x_xpre67x_xlcssa :=  ( $cast ($uint<8>) split) $on forx_x2x_xfor_outx_x1_crit_edge_for_outx_x1 ( $cast ($uint<8>) xx_x285x_xpre6080) $on for_bodyx_x1_for_outx_x1 
$phi xx_x307x_xlcssa :=  ( $cast ($uint<64>) split78) $on forx_x2x_xfor_outx_x1_crit_edge_for_outx_x1 ( $cast ($uint<64>) xx_x21083) $on for_bodyx_x1_for_outx_x1 
$endmerge
xx_x299 := (xx_x29884 + ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000001 ) )
// compare instruction
xx_x304 := (xx_x299 == xx_x303 )
$if xx_x304 $then  $place [for_outx_x1_if_truex_x10] $else $place [for_outx_x1_if_falsex_x10] $endif 
//begin: basic-block if_truex_x10
$merge for_outx_x1_if_truex_x10
$endmerge
xx_x308 := (xx_x307x_xlcssa + ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000001 ) )
$place [if_truex_x10_if_nextx_x10]
//begin: basic-block if_falsex_x10
$merge for_outx_x1_if_falsex_x10
$endmerge
$place [if_falsex_x10_if_nextx_x10]
//begin: basic-block if_nextx_x10
$merge if_falsex_x10_if_nextx_x10 if_truex_x10_if_nextx_x10
$phi xx_x29051 :=  ( $cast ($uint<64>) xx_x29082) $on if_falsex_x10_if_nextx_x10 ( $cast ($uint<64>) xx_x308) $on if_truex_x10_if_nextx_x10 
$phi xx_x2109 :=  ( $cast ($uint<64>) xx_x307x_xlcssa) $on if_falsex_x10_if_nextx_x10 ( $cast ($uint<64>) xx_x308) $on if_truex_x10_if_nextx_x10 
$phi xx_x2058 :=  ( $cast ($uint<64>) xx_x299) $on if_falsex_x10_if_nextx_x10 ( $cast ($uint<64>) ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) ) $on if_truex_x10_if_nextx_x10 
$endmerge
xx_x313 := (xx_x31285 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
// compare instruction
xx_x198 := (xx_x313 < xx_x186 )
$if xx_x198 $then  $place [if_nextx_x10_for_bodyx_x1] $else $place [if_nextx_x10_forx_x1x_xfor_outx_x2_crit_edge] $endif 
//begin: basic-block forx_x1x_xfor_outx_x2_crit_edge
$merge if_nextx_x10_forx_x1x_xfor_outx_x2_crit_edge
$endmerge
$place [forx_x1x_xfor_outx_x2_crit_edge_for_outx_x2]
//begin: basic-block for_outx_x2
$merge for_out_for_outx_x2 forx_x1x_xfor_outx_x2_crit_edge_for_outx_x2
$endmerge
}
}
$module [fetchKernel] 
 $in (base_addr : $uint<32> groups : $uint<32> ker_size : $uint<32> in_channels : $uint<32> ker_scale : $float<8,23> ker_zero_point : $float<8,23> )
 $out ()
 $is 
{
$branchblock [body] {
//begin: basic-block vars
xx_x15 := (groups + ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 ) )
xx_x17 := (xx_x15 * ker_size)
xx_x19 := (xx_x17 * ker_size)
xx_x32 := (groups << ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) )
xx_x34 := (xx_x32 * ker_size)
xx_x36 :=  ($bitcast ($uint<64>) ( $cast ($int< 64 > ) xx_x34) )
xx_x41 := ($cast ($uint<64>) xx_x32)
xx_x138 :=  ($bitcast ($uint<64>) ( $cast ($int< 64 > ) ker_size) )
// compare instruction
xx_x2881 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  < xx_x19 )
$if xx_x2881 $then  $place [vars_for_bodyx_xlrx_xph] $else $place [vars_for_out] $endif 
//begin: basic-block for_bodyx_xlrx_xph
$merge vars_for_bodyx_xlrx_xph
$endmerge
$place [for_bodyx_xlrx_xph_for_body]
//begin: basic-block for_body
//   this is a do-while loop.
$merge for_bodyx_xlrx_xph_for_body
$endmerge
$dopipeline $depth 31 $buffering 7 
$fullrate
$merge $entry $loopback
$phi xx_x15886 :=  ( $cast ($uint<32>) xx_x159) $on $loopback ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on $entry
$phi xx_x13385 :=  ( $cast ($uint<64>) xx_x3553) $on $loopback ( $cast ($uint<64>) ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) ) $on $entry
$phi xx_x14284 :=  ( $cast ($uint<64>) xx_x4055) $on $loopback ( $cast ($uint<64>) ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) ) $on $entry
$phi xx_x15383 :=  ( $cast ($uint<64>) xx_x4456) $on $loopback ( $cast ($uint<64>) ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) ) $on $entry
$phi xx_x1475882 :=  ( $cast ($uint<64>) xx_x14759) $on $loopback ( $cast ($uint<64>) ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) ) $on $entry
$endmerge
xx_x37 := (xx_x13385 * xx_x36)
xx_x42 := (xx_x14284 * xx_x41)
xx_x43 := (xx_x37 + xx_x42)
xx_x45 := (xx_x15383 << ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000011 ) )
xx_x46 := (xx_x43 + xx_x45)
xx_x50 := ($cast ($uint<32>) xx_x46)
$call readModule_convolution (base_addr xx_x50 )  (xx_x51)
xx_x54 := ($slice xx_x51 63 56)
$call dequant_ker (xx_x54 ker_scale ker_zero_point )  (xx_x59)
ker_data := ($bitcast ( $uint<64> ) xx_x59 )
xx_x64 := ($slice xx_x51 55 48)
$call dequant_ker (xx_x64 ker_scale ker_zero_point )  (xx_x69)
ker_data := ($bitcast ( $uint<64> ) xx_x69 )
xx_x74 := ($slice xx_x51 47 40)
$call dequant_ker (xx_x74 ker_scale ker_zero_point )  (xx_x79)
ker_data := ($bitcast ( $uint<64> ) xx_x79 )
xx_x84 := ($slice xx_x51 39 32)
$call dequant_ker (xx_x84 ker_scale ker_zero_point )  (xx_x89)
ker_data := ($bitcast ( $uint<64> ) xx_x89 )
xx_x94 := ($slice xx_x51 31 24)
$call dequant_ker (xx_x94 ker_scale ker_zero_point )  (xx_x99)
ker_data := ($bitcast ( $uint<64> ) xx_x99 )
xx_x104 := ($slice xx_x51 23 16)
$call dequant_ker (xx_x104 ker_scale ker_zero_point )  (xx_x109)
ker_data := ($bitcast ( $uint<64> ) xx_x109 )
xx_x114 := ($slice xx_x51 15 8)
$call dequant_ker (xx_x114 ker_scale ker_zero_point )  (xx_x119)
ker_data := ($bitcast ( $uint<64> ) xx_x119 )
xx_x124 := ($slice xx_x51 7 0)
$call dequant_ker (xx_x124 ker_scale ker_zero_point )  (xx_x129)
ker_data := ($bitcast ( $uint<64> ) xx_x129 )
xx_x134 := (xx_x13385 + ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000001 ) )
// compare instruction
xx_x139 := (xx_x134 == xx_x138 )
for_body_if_true_taken := xx_x139
for_body_if_false_taken := ( ~xx_x139)
if_false_exec_guard := for_body_if_false_taken
//begin: basic-block if_false
if_false_if_next_taken := if_false_exec_guard
if_true_exec_guard := for_body_if_true_taken
//begin: basic-block if_true
$guard (if_true_exec_guard) xx_x143 := (xx_x14284 + ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000001 ) )
if_true_if_next_taken := if_true_exec_guard
if_next_exec_guard := (if_false_if_next_taken | if_true_if_next_taken )
//begin: basic-block if_next
xx_x147 := ($mux if_false_if_next_taken ( $bitcast ($uint<64>) xx_x1475882) ($mux if_true_if_next_taken ( $bitcast ($uint<64>) xx_x143) ($bitcast ($uint<64>) 0)))
xx_x3553 := ($mux if_false_if_next_taken ( $bitcast ($uint<64>) xx_x134) ($mux if_true_if_next_taken ( $bitcast ($uint<64>) ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) ) ($bitcast ($uint<64>) 0)))
// compare instruction
$guard (if_next_exec_guard) xx_x150 := (xx_x147 == xx_x138 )
if_next_if_truex_x1_taken := (if_next_exec_guard & xx_x150)
if_next_if_falsex_x1_taken := (if_next_exec_guard & (~xx_x150))
if_falsex_x1_exec_guard := if_next_if_falsex_x1_taken
//begin: basic-block if_falsex_x1
if_falsex_x1_if_nextx_x1_taken := if_falsex_x1_exec_guard
if_truex_x1_exec_guard := if_next_if_truex_x1_taken
//begin: basic-block if_truex_x1
$guard (if_truex_x1_exec_guard) xx_x154 := (xx_x15383 + ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000001 ) )
if_truex_x1_if_nextx_x1_taken := if_truex_x1_exec_guard
//begin: basic-block if_nextx_x1
xx_x14759 := ($mux if_falsex_x1_if_nextx_x1_taken ( $bitcast ($uint<64>) xx_x147) ($mux if_truex_x1_if_nextx_x1_taken ( $bitcast ($uint<64>) ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) ) ($bitcast ($uint<64>) 0)))
xx_x4456 := ($mux if_falsex_x1_if_nextx_x1_taken ( $bitcast ($uint<64>) xx_x15383) ($mux if_truex_x1_if_nextx_x1_taken ( $bitcast ($uint<64>) xx_x154) ($bitcast ($uint<64>) 0)))
xx_x4055 := ($mux if_falsex_x1_if_nextx_x1_taken ( $bitcast ($uint<64>) xx_x147) ($mux if_truex_x1_if_nextx_x1_taken ( $bitcast ($uint<64>) ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) ) ($bitcast ($uint<64>) 0)))
xx_x159 := (xx_x15886 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
// compare instruction
xx_x28 := (xx_x159 < xx_x19 )
if_nextx_x1_forx_xfor_out_crit_edge_taken := ( ~xx_x28)
$while xx_x28
$if if_nextx_x1_forx_xfor_out_crit_edge_taken $then 
  $place [if_nextx_x1_forx_xfor_out_crit_edge]
$endif
//begin: basic-block forx_xfor_out_crit_edge
$merge if_nextx_x1_forx_xfor_out_crit_edge
$phi split87 :=  ( $cast ($uint<8>) xx_x124) $on if_nextx_x1_forx_xfor_out_crit_edge 
$endmerge
$place [forx_xfor_out_crit_edge_for_out]
//begin: basic-block for_out
$merge forx_xfor_out_crit_edge_for_out vars_for_out
$phi xx_x269x_xpre71x_xlcssa :=  ( $cast ($uint<8>) split87) $on forx_xfor_out_crit_edge_for_out ( $cast ($uint<8>) ( $bitcast ($uint<8> ) _b0 ) ) $on vars_for_out 
$endmerge
xx_x164 := (groups + ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 ) )
xx_x165 := (xx_x164 << ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) )
xx_x166 := (in_channels - xx_x165)
xx_x170 := (ker_size * ker_size)
xx_x174 := ($cast ($uint<64>) xx_x164)
xx_x186 := (groups << ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) )
xx_x188 := (xx_x186 * ker_size)
xx_x190 :=  ($bitcast ($uint<64>) ( $cast ($int< 64 > ) xx_x188) )
xx_x195 := ($cast ($uint<64>) xx_x186)
xx_x199 := (xx_x174 << ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000011 ) )
xx_x285 :=  ($bitcast ($uint<64>) ( $cast ($int< 64 > ) ker_size) )
// compare instruction
xx_x18276 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  < xx_x170 )
$if xx_x18276 $then  $place [for_out_for_bodyx_x1x_xlrx_xph] $else $place [for_out_for_outx_x2] $endif 
//begin: basic-block for_bodyx_x1x_xlrx_xph
$merge for_out_for_bodyx_x1x_xlrx_xph
$endmerge
$place [for_bodyx_x1x_xlrx_xph_for_bodyx_x1]
//begin: basic-block for_bodyx_x1
$merge for_bodyx_x1x_xlrx_xph_for_bodyx_x1 if_nextx_x10_for_bodyx_x1
$phi xx_x29480 :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on for_bodyx_x1x_xlrx_xph_for_bodyx_x1 ( $cast ($uint<32>) xx_x295) $on if_nextx_x10_for_bodyx_x1 
$phi xx_x28079 :=  ( $cast ($uint<64>) ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) ) $on for_bodyx_x1x_xlrx_xph_for_bodyx_x1 ( $cast ($uint<64>) xx_x1899) $on if_nextx_x10_for_bodyx_x1 
$phi xx_x28978 :=  ( $cast ($uint<64>) ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) ) $on for_bodyx_x1x_xlrx_xph_for_bodyx_x1 ( $cast ($uint<64>) xx_x19410) $on if_nextx_x10_for_bodyx_x1 
$phi xx_x269x_xpre6177 :=  ( $cast ($uint<8>) xx_x269x_xpre71x_xlcssa) $on for_bodyx_x1x_xlrx_xph_for_bodyx_x1 ( $cast ($uint<8>) xx_x269x_xpre68x_xlcssa) $on if_nextx_x10_for_bodyx_x1 
$endmerge
xx_x191 := (xx_x28079 * xx_x190)
xx_x196 := (xx_x28978 * xx_x195)
xx_x197 := (xx_x191 + xx_x196)
xx_x200 := (xx_x197 + xx_x199)
xx_x204 := ($cast ($uint<32>) xx_x200)
$call readModule_convolution (base_addr xx_x204 )  (xx_x205)
// compare instruction
xx_x21173 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  < xx_x166 )
$if xx_x21173 $then  $place [for_bodyx_x1_for_bodyx_x2x_xlrx_xph] $else $place [for_bodyx_x1_for_outx_x1] $endif 
//begin: basic-block for_bodyx_x2x_xlrx_xph
$merge for_bodyx_x1_for_bodyx_x2x_xlrx_xph
$endmerge
$place [for_bodyx_x2x_xlrx_xph_for_bodyx_x2]
//begin: basic-block for_bodyx_x2
$merge for_bodyx_x2x_xlrx_xph_for_bodyx_x2 if_nextx_x9_for_bodyx_x2
$phi xx_x27675 :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on for_bodyx_x2x_xlrx_xph_for_bodyx_x2 ( $cast ($uint<32>) xx_x277) $on if_nextx_x9_for_bodyx_x2 
$phi xx_x269x_xpre6874 :=  ( $cast ($uint<8>) xx_x269x_xpre6177) $on for_bodyx_x2x_xlrx_xph_for_bodyx_x2 ( $cast ($uint<8>) xx_x269x_xpre69) $on if_nextx_x9_for_bodyx_x2 
$endmerge
// compare instruction
xx_x213 := (xx_x27675 == ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  )
$if xx_x213 $then  $place [for_bodyx_x2_if_truex_x2] $else $place [for_bodyx_x2_if_falsex_x2] $endif 
//begin: basic-block if_truex_x2
$merge for_bodyx_x2_if_truex_x2
$endmerge
xx_x216 := ($slice xx_x205 63 56)
$place [if_truex_x2_if_nextx_x9]
//begin: basic-block if_falsex_x2
$merge for_bodyx_x2_if_falsex_x2
$endmerge
// compare instruction
xx_x219 := (xx_x27675 == ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 )  )
$if xx_x219 $then  $place [if_falsex_x2_if_truex_x3] $else $place [if_falsex_x2_if_falsex_x3] $endif 
//begin: basic-block if_truex_x3
$merge if_falsex_x2_if_truex_x3
$endmerge
xx_x222 := ($slice xx_x205 55 48)
$place [if_truex_x3_if_nextx_x8]
//begin: basic-block if_falsex_x3
$merge if_falsex_x2_if_falsex_x3
$endmerge
// compare instruction
xx_x225 := (xx_x27675 == ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 )  )
$if xx_x225 $then  $place [if_falsex_x3_if_truex_x4] $else $place [if_falsex_x3_if_falsex_x4] $endif 
//begin: basic-block if_truex_x4
$merge if_falsex_x3_if_truex_x4
$endmerge
xx_x228 := ($slice xx_x205 47 40)
$place [if_truex_x4_if_nextx_x7]
//begin: basic-block if_falsex_x4
$merge if_falsex_x3_if_falsex_x4
$endmerge
// compare instruction
xx_x231 := (xx_x27675 == ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 )  )
$if xx_x231 $then  $place [if_falsex_x4_if_truex_x5] $else $place [if_falsex_x4_if_falsex_x5] $endif 
//begin: basic-block if_truex_x5
$merge if_falsex_x4_if_truex_x5
$endmerge
xx_x234 := ($slice xx_x205 39 32)
$place [if_truex_x5_if_nextx_x6]
//begin: basic-block if_falsex_x5
$merge if_falsex_x4_if_falsex_x5
$endmerge
// compare instruction
xx_x237 := (xx_x27675 == ( $bitcast ($uint<32> ) _b00000000000000000000000000000100 )  )
$if xx_x237 $then  $place [if_falsex_x5_if_truex_x6] $else $place [if_falsex_x5_if_falsex_x6] $endif 
//begin: basic-block if_truex_x6
$merge if_falsex_x5_if_truex_x6
$endmerge
xx_x240 := ($slice xx_x205 31 24)
$place [if_truex_x6_if_nextx_x5]
//begin: basic-block if_falsex_x6
$merge if_falsex_x5_if_falsex_x6
$endmerge
// compare instruction
xx_x243 := (xx_x27675 == ( $bitcast ($uint<32> ) _b00000000000000000000000000000101 )  )
$if xx_x243 $then  $place [if_falsex_x6_if_truex_x7] $else $place [if_falsex_x6_if_falsex_x7] $endif 
//begin: basic-block if_truex_x7
$merge if_falsex_x6_if_truex_x7
$endmerge
xx_x246 := ($slice xx_x205 23 16)
$place [if_truex_x7_if_nextx_x4]
//begin: basic-block if_falsex_x7
$merge if_falsex_x6_if_falsex_x7
$endmerge
// compare instruction
xx_x249 := (xx_x27675 == ( $bitcast ($uint<32> ) _b00000000000000000000000000000110 )  )
$if xx_x249 $then  $place [if_falsex_x7_if_truex_x8] $else $place [if_falsex_x7_if_falsex_x8] $endif 
//begin: basic-block if_truex_x8
$merge if_falsex_x7_if_truex_x8
$endmerge
xx_x252 := ($slice xx_x205 15 8)
$place [if_truex_x8_if_nextx_x3]
//begin: basic-block if_falsex_x8
$merge if_falsex_x7_if_falsex_x8
$endmerge
// compare instruction
xx_x255 := (xx_x27675 == ( $bitcast ($uint<32> ) _b00000000000000000000000000000111 )  )
$if xx_x255 $then  $place [if_falsex_x8_if_truex_x9] $else $place [if_falsex_x8_if_falsex_x9] $endif 
//begin: basic-block if_truex_x9
$merge if_falsex_x8_if_truex_x9
$endmerge
xx_x258 := ($slice xx_x205 7 0)
$place [if_truex_x9_if_nextx_x2]
//begin: basic-block if_falsex_x9
$merge if_falsex_x8_if_falsex_x9
$endmerge
$place [if_falsex_x9_if_nextx_x2]
//begin: basic-block if_nextx_x2
$merge if_falsex_x9_if_nextx_x2 if_truex_x9_if_nextx_x2
$phi xx_x269x_xpre67 :=  ( $cast ($uint<8>) xx_x269x_xpre6874) $on if_falsex_x9_if_nextx_x2 ( $cast ($uint<8>) xx_x258) $on if_truex_x9_if_nextx_x2 
$endmerge
$place [if_nextx_x2_if_nextx_x3]
//begin: basic-block if_nextx_x3
$merge if_nextx_x2_if_nextx_x3 if_truex_x8_if_nextx_x3
$phi xx_x269x_xpre66 :=  ( $cast ($uint<8>) xx_x269x_xpre67) $on if_nextx_x2_if_nextx_x3 ( $cast ($uint<8>) xx_x252) $on if_truex_x8_if_nextx_x3 
$endmerge
$place [if_nextx_x3_if_nextx_x4]
//begin: basic-block if_nextx_x4
$merge if_nextx_x3_if_nextx_x4 if_truex_x7_if_nextx_x4
$phi xx_x269x_xpre65 :=  ( $cast ($uint<8>) xx_x269x_xpre66) $on if_nextx_x3_if_nextx_x4 ( $cast ($uint<8>) xx_x246) $on if_truex_x7_if_nextx_x4 
$endmerge
$place [if_nextx_x4_if_nextx_x5]
//begin: basic-block if_nextx_x5
$merge if_nextx_x4_if_nextx_x5 if_truex_x6_if_nextx_x5
$phi xx_x269x_xpre64 :=  ( $cast ($uint<8>) xx_x269x_xpre65) $on if_nextx_x4_if_nextx_x5 ( $cast ($uint<8>) xx_x240) $on if_truex_x6_if_nextx_x5 
$endmerge
$place [if_nextx_x5_if_nextx_x6]
//begin: basic-block if_nextx_x6
$merge if_nextx_x5_if_nextx_x6 if_truex_x5_if_nextx_x6
$phi xx_x269x_xpre63 :=  ( $cast ($uint<8>) xx_x269x_xpre64) $on if_nextx_x5_if_nextx_x6 ( $cast ($uint<8>) xx_x234) $on if_truex_x5_if_nextx_x6 
$endmerge
$place [if_nextx_x6_if_nextx_x7]
//begin: basic-block if_nextx_x7
$merge if_nextx_x6_if_nextx_x7 if_truex_x4_if_nextx_x7
$phi xx_x269x_xpre62 :=  ( $cast ($uint<8>) xx_x269x_xpre63) $on if_nextx_x6_if_nextx_x7 ( $cast ($uint<8>) xx_x228) $on if_truex_x4_if_nextx_x7 
$endmerge
$place [if_nextx_x7_if_nextx_x8]
//begin: basic-block if_nextx_x8
$merge if_nextx_x7_if_nextx_x8 if_truex_x3_if_nextx_x8
$phi xx_x269x_xpre :=  ( $cast ($uint<8>) xx_x269x_xpre62) $on if_nextx_x7_if_nextx_x8 ( $cast ($uint<8>) xx_x222) $on if_truex_x3_if_nextx_x8 
$endmerge
$place [if_nextx_x8_if_nextx_x9]
//begin: basic-block if_nextx_x9
$merge if_nextx_x8_if_nextx_x9 if_truex_x2_if_nextx_x9
$phi xx_x269x_xpre69 :=  ( $cast ($uint<8>) xx_x269x_xpre) $on if_nextx_x8_if_nextx_x9 ( $cast ($uint<8>) xx_x216) $on if_truex_x2_if_nextx_x9 
$phi xx_x269 :=  ( $cast ($uint<8>) xx_x269x_xpre) $on if_nextx_x8_if_nextx_x9 ( $cast ($uint<8>) xx_x216) $on if_truex_x2_if_nextx_x9 
$endmerge
$call dequant_ker (xx_x269 ker_scale ker_zero_point )  (xx_x272)
ker_data := ($bitcast ( $uint<64> ) xx_x272 )
xx_x277 := (xx_x27675 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
// compare instruction
xx_x211 := (xx_x277 < xx_x166 )
$if xx_x211 $then  $place [if_nextx_x9_for_bodyx_x2] $else $place [if_nextx_x9_forx_x2x_xfor_outx_x1_crit_edge] $endif 
//begin: basic-block forx_x2x_xfor_outx_x1_crit_edge
$merge if_nextx_x9_forx_x2x_xfor_outx_x1_crit_edge
$phi split :=  ( $cast ($uint<8>) xx_x269x_xpre69) $on if_nextx_x9_forx_x2x_xfor_outx_x1_crit_edge 
$endmerge
$place [forx_x2x_xfor_outx_x1_crit_edge_for_outx_x1]
//begin: basic-block for_outx_x1
$merge for_bodyx_x1_for_outx_x1 forx_x2x_xfor_outx_x1_crit_edge_for_outx_x1
$phi xx_x269x_xpre68x_xlcssa :=  ( $cast ($uint<8>) split) $on forx_x2x_xfor_outx_x1_crit_edge_for_outx_x1 ( $cast ($uint<8>) xx_x269x_xpre6177) $on for_bodyx_x1_for_outx_x1 
$endmerge
xx_x281 := (xx_x28079 + ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000001 ) )
// compare instruction
xx_x286 := (xx_x281 == xx_x285 )
$if xx_x286 $then  $place [for_outx_x1_if_truex_x10] $else $place [for_outx_x1_if_falsex_x10] $endif 
//begin: basic-block if_truex_x10
$merge for_outx_x1_if_truex_x10
$endmerge
xx_x290 := (xx_x28978 + ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000001 ) )
$place [if_truex_x10_if_nextx_x10]
//begin: basic-block if_falsex_x10
$merge for_outx_x1_if_falsex_x10
$endmerge
$place [if_falsex_x10_if_nextx_x10]
//begin: basic-block if_nextx_x10
$merge if_falsex_x10_if_nextx_x10 if_truex_x10_if_nextx_x10
$phi xx_x19410 :=  ( $cast ($uint<64>) xx_x28978) $on if_falsex_x10_if_nextx_x10 ( $cast ($uint<64>) xx_x290) $on if_truex_x10_if_nextx_x10 
$phi xx_x1899 :=  ( $cast ($uint<64>) xx_x281) $on if_falsex_x10_if_nextx_x10 ( $cast ($uint<64>) ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) ) $on if_truex_x10_if_nextx_x10 
$endmerge
xx_x295 := (xx_x29480 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
// compare instruction
xx_x182 := (xx_x295 < xx_x170 )
$if xx_x182 $then  $place [if_nextx_x10_for_bodyx_x1] $else $place [if_nextx_x10_forx_x1x_xfor_outx_x2_crit_edge] $endif 
//begin: basic-block forx_x1x_xfor_outx_x2_crit_edge
$merge if_nextx_x10_forx_x1x_xfor_outx_x2_crit_edge
$endmerge
$place [forx_x1x_xfor_outx_x2_crit_edge_for_outx_x2]
//begin: basic-block for_outx_x2
$merge for_out_for_outx_x2 forx_x1x_xfor_outx_x2_crit_edge_for_outx_x2
$endmerge
}
}
$module [writeInpPipePartial] 
 $in (data : $uint<64> num_chn_present : $uint<32> cur_stride_movement : $uint<8> inp_scale : $float<8,23> inp_zero_point : $float<8,23> )
 $out ()
 $is 
{
$branchblock [body] {
//begin: basic-block vars
// compare instruction
xx_x87 := (cur_stride_movement == ( $bitcast ($uint<8> ) _b00000010 )  )
// compare instruction
xx_x1648 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  < num_chn_present )
$if xx_x1648 $then  $place [vars_for_bodyx_xlrx_xph] $else $place [vars_for_out] $endif 
//begin: basic-block for_bodyx_xlrx_xph
$merge vars_for_bodyx_xlrx_xph
$endmerge
$place [for_bodyx_xlrx_xph_for_body]
//begin: basic-block for_body
//   this is a do-while loop.
$merge for_bodyx_xlrx_xph_for_body
$endmerge
$dopipeline $depth 31 $buffering 7 
$fullrate
$merge $entry $loopback
$phi xx_x9451 :=  ( $cast ($uint<32>) xx_x95) $on $loopback ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on $entry
$phi xx_x754450 :=  ( $cast ($uint<8>) xx_x75) $on $loopback ( $cast ($uint<8>) ( $bitcast ($uint<8> ) _b0 ) ) $on $entry
$phi xx_x8049 :=  ( $cast ($uint<8>) xx_x8046) $on $loopback ( $cast ($uint<8>) cur_stride_movement) $on $entry
$endmerge
// compare instruction
xx_x19 := (xx_x9451 == ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  )
for_body_if_true_taken := xx_x19
for_body_if_false_taken := ( ~xx_x19)
if_false_exec_guard := for_body_if_false_taken
//begin: basic-block if_false
// compare instruction
$guard (if_false_exec_guard) xx_x25 := (xx_x9451 == ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 )  )
if_false_if_truex_x1_taken := (if_false_exec_guard & xx_x25)
if_false_if_falsex_x1_taken := (if_false_exec_guard & (~xx_x25))
if_falsex_x1_exec_guard := if_false_if_falsex_x1_taken
//begin: basic-block if_falsex_x1
// compare instruction
$guard (if_falsex_x1_exec_guard) xx_x31 := (xx_x9451 == ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 )  )
if_falsex_x1_if_truex_x2_taken := (if_falsex_x1_exec_guard & xx_x31)
if_falsex_x1_if_falsex_x2_taken := (if_falsex_x1_exec_guard & (~xx_x31))
if_falsex_x2_exec_guard := if_falsex_x1_if_falsex_x2_taken
//begin: basic-block if_falsex_x2
// compare instruction
$guard (if_falsex_x2_exec_guard) xx_x37 := (xx_x9451 == ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 )  )
if_falsex_x2_if_truex_x3_taken := (if_falsex_x2_exec_guard & xx_x37)
if_falsex_x2_if_falsex_x3_taken := (if_falsex_x2_exec_guard & (~xx_x37))
if_falsex_x3_exec_guard := if_falsex_x2_if_falsex_x3_taken
//begin: basic-block if_falsex_x3
// compare instruction
$guard (if_falsex_x3_exec_guard) xx_x43 := (xx_x9451 == ( $bitcast ($uint<32> ) _b00000000000000000000000000000100 )  )
if_falsex_x3_if_truex_x4_taken := (if_falsex_x3_exec_guard & xx_x43)
if_falsex_x3_if_falsex_x4_taken := (if_falsex_x3_exec_guard & (~xx_x43))
if_falsex_x4_exec_guard := if_falsex_x3_if_falsex_x4_taken
//begin: basic-block if_falsex_x4
// compare instruction
$guard (if_falsex_x4_exec_guard) xx_x49 := (xx_x9451 == ( $bitcast ($uint<32> ) _b00000000000000000000000000000101 )  )
if_falsex_x4_if_truex_x5_taken := (if_falsex_x4_exec_guard & xx_x49)
if_falsex_x4_if_falsex_x5_taken := (if_falsex_x4_exec_guard & (~xx_x49))
if_falsex_x5_exec_guard := if_falsex_x4_if_falsex_x5_taken
//begin: basic-block if_falsex_x5
// compare instruction
$guard (if_falsex_x5_exec_guard) xx_x55 := (xx_x9451 == ( $bitcast ($uint<32> ) _b00000000000000000000000000000110 )  )
if_falsex_x5_if_truex_x6_taken := (if_falsex_x5_exec_guard & xx_x55)
if_falsex_x5_if_falsex_x6_taken := (if_falsex_x5_exec_guard & (~xx_x55))
if_falsex_x6_exec_guard := if_falsex_x5_if_falsex_x6_taken
//begin: basic-block if_falsex_x6
// compare instruction
$guard (if_falsex_x6_exec_guard) xx_x61 := (xx_x9451 == ( $bitcast ($uint<32> ) _b00000000000000000000000000000111 )  )
if_falsex_x6_if_truex_x7_taken := (if_falsex_x6_exec_guard & xx_x61)
if_falsex_x6_if_falsex_x7_taken := (if_falsex_x6_exec_guard & (~xx_x61))
if_falsex_x7_exec_guard := if_falsex_x6_if_falsex_x7_taken
//begin: basic-block if_falsex_x7
if_falsex_x7_if_next_taken := if_falsex_x7_exec_guard
if_truex_x7_exec_guard := if_falsex_x6_if_truex_x7_taken
//begin: basic-block if_truex_x7
$guard (if_truex_x7_exec_guard) xx_x64 := ($slice data 7 0)
if_truex_x7_if_next_taken := if_truex_x7_exec_guard
if_next_exec_guard := (if_falsex_x7_if_next_taken | if_truex_x7_if_next_taken )
//begin: basic-block if_next
xx_x7543 := ($mux if_falsex_x7_if_next_taken ( $bitcast ($uint<8>) xx_x754450) ($mux if_truex_x7_if_next_taken ( $bitcast ($uint<8>) xx_x64) ($bitcast ($uint<8>) 0)))
if_next_if_nextx_x1_taken := if_next_exec_guard
if_truex_x6_exec_guard := if_falsex_x5_if_truex_x6_taken
//begin: basic-block if_truex_x6
$guard (if_truex_x6_exec_guard) xx_x58 := ($slice data 15 8)
if_truex_x6_if_nextx_x1_taken := if_truex_x6_exec_guard
if_nextx_x1_exec_guard := (if_next_if_nextx_x1_taken | if_truex_x6_if_nextx_x1_taken )
//begin: basic-block if_nextx_x1
xx_x7542 := ($mux if_next_if_nextx_x1_taken ( $bitcast ($uint<8>) xx_x7543) ($mux if_truex_x6_if_nextx_x1_taken ( $bitcast ($uint<8>) xx_x58) ($bitcast ($uint<8>) 0)))
if_nextx_x1_if_nextx_x2_taken := if_nextx_x1_exec_guard
if_truex_x5_exec_guard := if_falsex_x4_if_truex_x5_taken
//begin: basic-block if_truex_x5
$guard (if_truex_x5_exec_guard) xx_x52 := ($slice data 23 16)
if_truex_x5_if_nextx_x2_taken := if_truex_x5_exec_guard
if_nextx_x2_exec_guard := (if_nextx_x1_if_nextx_x2_taken | if_truex_x5_if_nextx_x2_taken )
//begin: basic-block if_nextx_x2
xx_x7541 := ($mux if_nextx_x1_if_nextx_x2_taken ( $bitcast ($uint<8>) xx_x7542) ($mux if_truex_x5_if_nextx_x2_taken ( $bitcast ($uint<8>) xx_x52) ($bitcast ($uint<8>) 0)))
if_nextx_x2_if_nextx_x3_taken := if_nextx_x2_exec_guard
if_truex_x4_exec_guard := if_falsex_x3_if_truex_x4_taken
//begin: basic-block if_truex_x4
$guard (if_truex_x4_exec_guard) xx_x46 := ($slice data 31 24)
if_truex_x4_if_nextx_x3_taken := if_truex_x4_exec_guard
if_nextx_x3_exec_guard := (if_nextx_x2_if_nextx_x3_taken | if_truex_x4_if_nextx_x3_taken )
//begin: basic-block if_nextx_x3
xx_x7540 := ($mux if_nextx_x2_if_nextx_x3_taken ( $bitcast ($uint<8>) xx_x7541) ($mux if_truex_x4_if_nextx_x3_taken ( $bitcast ($uint<8>) xx_x46) ($bitcast ($uint<8>) 0)))
if_nextx_x3_if_nextx_x4_taken := if_nextx_x3_exec_guard
if_truex_x3_exec_guard := if_falsex_x2_if_truex_x3_taken
//begin: basic-block if_truex_x3
$guard (if_truex_x3_exec_guard) xx_x40 := ($slice data 39 32)
if_truex_x3_if_nextx_x4_taken := if_truex_x3_exec_guard
if_nextx_x4_exec_guard := (if_nextx_x3_if_nextx_x4_taken | if_truex_x3_if_nextx_x4_taken )
//begin: basic-block if_nextx_x4
xx_x7539 := ($mux if_nextx_x3_if_nextx_x4_taken ( $bitcast ($uint<8>) xx_x7540) ($mux if_truex_x3_if_nextx_x4_taken ( $bitcast ($uint<8>) xx_x40) ($bitcast ($uint<8>) 0)))
if_nextx_x4_if_nextx_x5_taken := if_nextx_x4_exec_guard
if_truex_x2_exec_guard := if_falsex_x1_if_truex_x2_taken
//begin: basic-block if_truex_x2
$guard (if_truex_x2_exec_guard) xx_x34 := ($slice data 47 40)
if_truex_x2_if_nextx_x5_taken := if_truex_x2_exec_guard
if_nextx_x5_exec_guard := (if_nextx_x4_if_nextx_x5_taken | if_truex_x2_if_nextx_x5_taken )
//begin: basic-block if_nextx_x5
xx_x7538 := ($mux if_nextx_x4_if_nextx_x5_taken ( $bitcast ($uint<8>) xx_x7539) ($mux if_truex_x2_if_nextx_x5_taken ( $bitcast ($uint<8>) xx_x34) ($bitcast ($uint<8>) 0)))
if_nextx_x5_if_nextx_x6_taken := if_nextx_x5_exec_guard
if_truex_x1_exec_guard := if_false_if_truex_x1_taken
//begin: basic-block if_truex_x1
$guard (if_truex_x1_exec_guard) xx_x28 := ($slice data 55 48)
if_truex_x1_if_nextx_x6_taken := if_truex_x1_exec_guard
if_nextx_x6_exec_guard := (if_nextx_x5_if_nextx_x6_taken | if_truex_x1_if_nextx_x6_taken )
//begin: basic-block if_nextx_x6
xx_x7537 := ($mux if_nextx_x5_if_nextx_x6_taken ( $bitcast ($uint<8>) xx_x7538) ($mux if_truex_x1_if_nextx_x6_taken ( $bitcast ($uint<8>) xx_x28) ($bitcast ($uint<8>) 0)))
if_nextx_x6_if_nextx_x7_taken := if_nextx_x6_exec_guard
if_true_exec_guard := for_body_if_true_taken
//begin: basic-block if_true
$guard (if_true_exec_guard) xx_x22 := ($slice data 63 56)
if_true_if_nextx_x7_taken := if_true_exec_guard
if_nextx_x7_exec_guard := (if_nextx_x6_if_nextx_x7_taken | if_true_if_nextx_x7_taken )
//begin: basic-block if_nextx_x7
xx_x75 := ($mux if_nextx_x6_if_nextx_x7_taken ( $bitcast ($uint<8>) xx_x7537) ($mux if_true_if_nextx_x7_taken ( $bitcast ($uint<8>) xx_x22) ($bitcast ($uint<8>) 0)))
$guard (if_nextx_x7_exec_guard) $call dequant_inp (xx_x75 inp_scale inp_zero_point )  (xx_x78)
// compare instruction
$guard (if_nextx_x7_exec_guard) xx_x81 := (xx_x8049 == ( $bitcast ($uint<8> ) _b00000001 )  )
if_nextx_x7_if_truex_x8_taken := (if_nextx_x7_exec_guard & xx_x81)
if_nextx_x7_if_falsex_x8_taken := (if_nextx_x7_exec_guard & (~xx_x81))
if_falsex_x8_exec_guard := if_nextx_x7_if_falsex_x8_taken
//begin: basic-block if_falsex_x8
if_falsex_x8_if_truex_x9_taken := (if_falsex_x8_exec_guard & xx_x87)
if_falsex_x8_if_falsex_x9_taken := (if_falsex_x8_exec_guard & (~xx_x87))
if_falsex_x9_exec_guard := if_falsex_x8_if_falsex_x9_taken
//begin: basic-block if_falsex_x9
if_falsex_x9_if_nextx_x8_taken := if_falsex_x9_exec_guard
if_truex_x9_exec_guard := if_falsex_x8_if_truex_x9_taken
//begin: basic-block if_truex_x9
$guard (if_truex_x9_exec_guard) in_data_0 := xx_x78
if_truex_x9_if_nextx_x8_taken := if_truex_x9_exec_guard
if_nextx_x8_exec_guard := (if_falsex_x9_if_nextx_x8_taken | if_truex_x9_if_nextx_x8_taken )
//begin: basic-block if_nextx_x8
if_nextx_x8_if_nextx_x9_taken := if_nextx_x8_exec_guard
if_truex_x8_exec_guard := if_nextx_x7_if_truex_x8_taken
//begin: basic-block if_truex_x8
$guard (if_truex_x8_exec_guard) in_data_4 := xx_x78
if_truex_x8_if_nextx_x9_taken := if_truex_x8_exec_guard
//begin: basic-block if_nextx_x9
xx_x8046 := ($mux if_nextx_x8_if_nextx_x9_taken ( $bitcast ($uint<8>) cur_stride_movement) ($mux if_truex_x8_if_nextx_x9_taken ( $bitcast ($uint<8>) ( $bitcast ($uint<8> ) _b00000001 ) ) ($bitcast ($uint<8>) 0)))
xx_x95 := (xx_x9451 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
// compare instruction
xx_x16 := (xx_x95 < num_chn_present )
if_nextx_x9_forx_xfor_out_crit_edge_taken := ( ~xx_x16)
$while xx_x16
$if if_nextx_x9_forx_xfor_out_crit_edge_taken $then 
  $place [if_nextx_x9_forx_xfor_out_crit_edge]
$endif
//begin: basic-block forx_xfor_out_crit_edge
$merge if_nextx_x9_forx_xfor_out_crit_edge
$endmerge
$place [forx_xfor_out_crit_edge_for_out]
//begin: basic-block for_out
$merge forx_xfor_out_crit_edge_for_out vars_for_out
$endmerge
}
}
$module [fetchHorSlice] 
 $in (base_addr : $uint<32> ker_size : $uint<32> in_channels : $uint<32> groups : $uint<32> col : $uint<32> rowStartInd : $uint<32> in_cols : $uint<32> inp_scale : $float<8,23> inp_zero_point : $float<8,23> )
 $out ()
 $is 
{
$branchblock [body] {
//begin: basic-block vars
xx_x24 := (ker_size * groups)
xx_x34 := (groups << ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) )
xx_x36 := (xx_x34 * in_cols)
xx_x39 := (rowStartInd + ker_size)
xx_x40 := (xx_x39 + ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 ) )
xx_x41 := (xx_x36 * xx_x40)
xx_x62 := ($cast ($uint<64>) in_channels)
xx_x70 := ($cast ($uint<64>) in_channels)
xx_x153 := ($cast ($uint<64>) groups)
// compare instruction
xx_x3159 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  < xx_x24 )
$if xx_x3159 $then  $place [vars_for_bodyx_xlrx_xph] $else $place [vars_for_outx_x1] $endif 
//begin: basic-block for_bodyx_xlrx_xph
$merge vars_for_bodyx_xlrx_xph
$endmerge
$place [for_bodyx_xlrx_xph_for_body]
//begin: basic-block for_body
$merge for_bodyx_xlrx_xph_for_body if_nextx_x9_for_body
$phi xx_x16263 :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on for_bodyx_xlrx_xph_for_body ( $cast ($uint<32>) xx_x163) $on if_nextx_x9_for_body 
$phi xx_x15762 :=  ( $cast ($uint<32>) col) $on for_bodyx_xlrx_xph_for_body ( $cast ($uint<32>) xx_x443) $on if_nextx_x9_for_body 
$phi xx_x14861 :=  ( $cast ($uint<64>) ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) ) $on for_bodyx_xlrx_xph_for_body ( $cast ($uint<64>) xx_x476) $on if_nextx_x9_for_body 
$phi xx_x1374660 :=  ( $cast ($uint<8>) ( $bitcast ($uint<8> ) _b0 ) ) $on for_bodyx_xlrx_xph_for_body ( $cast ($uint<8>) xx_x13754x_xlcssa) $on if_nextx_x9_for_body 
$endmerge
xx_x45 := (xx_x34 * xx_x15762)
xx_x46 := (xx_x41 + xx_x45)
xx_x48 := (xx_x14861 << ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000011 ) )
iNsTr_3 := ($cast ($uint<32>) xx_x48)
xx_x54 := (xx_x46 + iNsTr_3)
$call readModule_convolution (base_addr xx_x54 )  (xx_x55)
xx_x60 := (xx_x14861 + ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000001 ) )
xx_x61 := (xx_x60 << ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000011 ) )
// compare instruction
xx_x63x_xnot := ( ($bitcast ( $int<64>) xx_x61) >  ($bitcast ( $int<64>) xx_x62 ) )
$if xx_x63x_xnot $then  $place [for_body_if_false] $else $place [for_body_if_true] $endif 
//begin: basic-block if_true
$merge for_body_if_true
$endmerge
$place [if_true_if_next]
//begin: basic-block if_false
$merge for_body_if_false
$endmerge
xx_x71 := (xx_x70 - xx_x48)
$place [if_false_if_next]
//begin: basic-block if_next
$merge if_false_if_next if_true_if_next
$phi xx_x74 :=  ( $cast ($uint<64>) xx_x71) $on if_false_if_next ( $cast ($uint<64>) ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000001000 ) ) $on if_true_if_next 
$endmerge
// compare instruction
xx_x7856 := (( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 )  < xx_x74 )
$if xx_x7856 $then  $place [if_next_for_bodyx_x1x_xlrx_xph] $else $place [if_next_for_out] $endif 
//begin: basic-block for_bodyx_x1x_xlrx_xph
$merge if_next_for_bodyx_x1x_xlrx_xph
$endmerge
$place [for_bodyx_x1x_xlrx_xph_for_bodyx_x1]
//begin: basic-block for_bodyx_x1
//   this is a do-while loop.
$merge for_bodyx_x1x_xlrx_xph_for_bodyx_x1
$endmerge
$dopipeline $depth 31 $buffering 7 
$fullrate
$merge $entry $loopback
$phi xx_x14458 :=  ( $cast ($uint<64>) xx_x145) $on $loopback ( $cast ($uint<64>) ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) ) $on $entry
$phi xx_x1375457 :=  ( $cast ($uint<8>) xx_x137) $on $loopback ( $cast ($uint<8>) xx_x1374660) $on $entry
$endmerge
// compare instruction
xx_x81 := (xx_x14458 == ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 )  )
for_bodyx_x1_if_truex_x1_taken := xx_x81
for_bodyx_x1_if_falsex_x1_taken := ( ~xx_x81)
if_falsex_x1_exec_guard := for_bodyx_x1_if_falsex_x1_taken
//begin: basic-block if_falsex_x1
// compare instruction
$guard (if_falsex_x1_exec_guard) xx_x87 := (xx_x14458 == ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000001 )  )
if_falsex_x1_if_truex_x2_taken := (if_falsex_x1_exec_guard & xx_x87)
if_falsex_x1_if_falsex_x2_taken := (if_falsex_x1_exec_guard & (~xx_x87))
if_falsex_x2_exec_guard := if_falsex_x1_if_falsex_x2_taken
//begin: basic-block if_falsex_x2
// compare instruction
$guard (if_falsex_x2_exec_guard) xx_x93 := (xx_x14458 == ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000010 )  )
if_falsex_x2_if_truex_x3_taken := (if_falsex_x2_exec_guard & xx_x93)
if_falsex_x2_if_falsex_x3_taken := (if_falsex_x2_exec_guard & (~xx_x93))
if_falsex_x3_exec_guard := if_falsex_x2_if_falsex_x3_taken
//begin: basic-block if_falsex_x3
// compare instruction
$guard (if_falsex_x3_exec_guard) xx_x99 := (xx_x14458 == ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000011 )  )
if_falsex_x3_if_truex_x4_taken := (if_falsex_x3_exec_guard & xx_x99)
if_falsex_x3_if_falsex_x4_taken := (if_falsex_x3_exec_guard & (~xx_x99))
if_falsex_x4_exec_guard := if_falsex_x3_if_falsex_x4_taken
//begin: basic-block if_falsex_x4
// compare instruction
$guard (if_falsex_x4_exec_guard) xx_x105 := (xx_x14458 == ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000100 )  )
if_falsex_x4_if_truex_x5_taken := (if_falsex_x4_exec_guard & xx_x105)
if_falsex_x4_if_falsex_x5_taken := (if_falsex_x4_exec_guard & (~xx_x105))
if_falsex_x5_exec_guard := if_falsex_x4_if_falsex_x5_taken
//begin: basic-block if_falsex_x5
// compare instruction
$guard (if_falsex_x5_exec_guard) xx_x111 := (xx_x14458 == ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000101 )  )
if_falsex_x5_if_truex_x6_taken := (if_falsex_x5_exec_guard & xx_x111)
if_falsex_x5_if_falsex_x6_taken := (if_falsex_x5_exec_guard & (~xx_x111))
if_falsex_x6_exec_guard := if_falsex_x5_if_falsex_x6_taken
//begin: basic-block if_falsex_x6
// compare instruction
$guard (if_falsex_x6_exec_guard) xx_x117 := (xx_x14458 == ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000110 )  )
if_falsex_x6_if_truex_x7_taken := (if_falsex_x6_exec_guard & xx_x117)
if_falsex_x6_if_falsex_x7_taken := (if_falsex_x6_exec_guard & (~xx_x117))
if_falsex_x7_exec_guard := if_falsex_x6_if_falsex_x7_taken
//begin: basic-block if_falsex_x7
// compare instruction
$guard (if_falsex_x7_exec_guard) xx_x123 := (xx_x14458 == ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000111 )  )
if_falsex_x7_if_truex_x8_taken := (if_falsex_x7_exec_guard & xx_x123)
if_falsex_x7_if_falsex_x8_taken := (if_falsex_x7_exec_guard & (~xx_x123))
if_falsex_x8_exec_guard := if_falsex_x7_if_falsex_x8_taken
//begin: basic-block if_falsex_x8
if_falsex_x8_if_nextx_x1_taken := if_falsex_x8_exec_guard
if_truex_x8_exec_guard := if_falsex_x7_if_truex_x8_taken
//begin: basic-block if_truex_x8
$guard (if_truex_x8_exec_guard) xx_x126 := ($slice xx_x55 7 0)
if_truex_x8_if_nextx_x1_taken := if_truex_x8_exec_guard
if_nextx_x1_exec_guard := (if_falsex_x8_if_nextx_x1_taken | if_truex_x8_if_nextx_x1_taken )
//begin: basic-block if_nextx_x1
xx_x13753 := ($mux if_falsex_x8_if_nextx_x1_taken ( $bitcast ($uint<8>) xx_x1375457) ($mux if_truex_x8_if_nextx_x1_taken ( $bitcast ($uint<8>) xx_x126) ($bitcast ($uint<8>) 0)))
if_nextx_x1_if_nextx_x2_taken := if_nextx_x1_exec_guard
if_truex_x7_exec_guard := if_falsex_x6_if_truex_x7_taken
//begin: basic-block if_truex_x7
$guard (if_truex_x7_exec_guard) xx_x120 := ($slice xx_x55 15 8)
if_truex_x7_if_nextx_x2_taken := if_truex_x7_exec_guard
if_nextx_x2_exec_guard := (if_nextx_x1_if_nextx_x2_taken | if_truex_x7_if_nextx_x2_taken )
//begin: basic-block if_nextx_x2
xx_x13752 := ($mux if_nextx_x1_if_nextx_x2_taken ( $bitcast ($uint<8>) xx_x13753) ($mux if_truex_x7_if_nextx_x2_taken ( $bitcast ($uint<8>) xx_x120) ($bitcast ($uint<8>) 0)))
if_nextx_x2_if_nextx_x3_taken := if_nextx_x2_exec_guard
if_truex_x6_exec_guard := if_falsex_x5_if_truex_x6_taken
//begin: basic-block if_truex_x6
$guard (if_truex_x6_exec_guard) xx_x114 := ($slice xx_x55 23 16)
if_truex_x6_if_nextx_x3_taken := if_truex_x6_exec_guard
if_nextx_x3_exec_guard := (if_nextx_x2_if_nextx_x3_taken | if_truex_x6_if_nextx_x3_taken )
//begin: basic-block if_nextx_x3
xx_x13751 := ($mux if_nextx_x2_if_nextx_x3_taken ( $bitcast ($uint<8>) xx_x13752) ($mux if_truex_x6_if_nextx_x3_taken ( $bitcast ($uint<8>) xx_x114) ($bitcast ($uint<8>) 0)))
if_nextx_x3_if_nextx_x4_taken := if_nextx_x3_exec_guard
if_truex_x5_exec_guard := if_falsex_x4_if_truex_x5_taken
//begin: basic-block if_truex_x5
$guard (if_truex_x5_exec_guard) xx_x108 := ($slice xx_x55 31 24)
if_truex_x5_if_nextx_x4_taken := if_truex_x5_exec_guard
if_nextx_x4_exec_guard := (if_nextx_x3_if_nextx_x4_taken | if_truex_x5_if_nextx_x4_taken )
//begin: basic-block if_nextx_x4
xx_x13750 := ($mux if_nextx_x3_if_nextx_x4_taken ( $bitcast ($uint<8>) xx_x13751) ($mux if_truex_x5_if_nextx_x4_taken ( $bitcast ($uint<8>) xx_x108) ($bitcast ($uint<8>) 0)))
if_nextx_x4_if_nextx_x5_taken := if_nextx_x4_exec_guard
if_truex_x4_exec_guard := if_falsex_x3_if_truex_x4_taken
//begin: basic-block if_truex_x4
$guard (if_truex_x4_exec_guard) xx_x102 := ($slice xx_x55 39 32)
if_truex_x4_if_nextx_x5_taken := if_truex_x4_exec_guard
if_nextx_x5_exec_guard := (if_nextx_x4_if_nextx_x5_taken | if_truex_x4_if_nextx_x5_taken )
//begin: basic-block if_nextx_x5
xx_x13749 := ($mux if_nextx_x4_if_nextx_x5_taken ( $bitcast ($uint<8>) xx_x13750) ($mux if_truex_x4_if_nextx_x5_taken ( $bitcast ($uint<8>) xx_x102) ($bitcast ($uint<8>) 0)))
if_nextx_x5_if_nextx_x6_taken := if_nextx_x5_exec_guard
if_truex_x3_exec_guard := if_falsex_x2_if_truex_x3_taken
//begin: basic-block if_truex_x3
$guard (if_truex_x3_exec_guard) xx_x96 := ($slice xx_x55 47 40)
if_truex_x3_if_nextx_x6_taken := if_truex_x3_exec_guard
if_nextx_x6_exec_guard := (if_nextx_x5_if_nextx_x6_taken | if_truex_x3_if_nextx_x6_taken )
//begin: basic-block if_nextx_x6
xx_x13748 := ($mux if_nextx_x5_if_nextx_x6_taken ( $bitcast ($uint<8>) xx_x13749) ($mux if_truex_x3_if_nextx_x6_taken ( $bitcast ($uint<8>) xx_x96) ($bitcast ($uint<8>) 0)))
if_nextx_x6_if_nextx_x7_taken := if_nextx_x6_exec_guard
if_truex_x2_exec_guard := if_falsex_x1_if_truex_x2_taken
//begin: basic-block if_truex_x2
$guard (if_truex_x2_exec_guard) xx_x90 := ($slice xx_x55 55 48)
if_truex_x2_if_nextx_x7_taken := if_truex_x2_exec_guard
if_nextx_x7_exec_guard := (if_nextx_x6_if_nextx_x7_taken | if_truex_x2_if_nextx_x7_taken )
//begin: basic-block if_nextx_x7
xx_x13747 := ($mux if_nextx_x6_if_nextx_x7_taken ( $bitcast ($uint<8>) xx_x13748) ($mux if_truex_x2_if_nextx_x7_taken ( $bitcast ($uint<8>) xx_x90) ($bitcast ($uint<8>) 0)))
if_nextx_x7_if_nextx_x8_taken := if_nextx_x7_exec_guard
if_truex_x1_exec_guard := for_bodyx_x1_if_truex_x1_taken
//begin: basic-block if_truex_x1
$guard (if_truex_x1_exec_guard) xx_x84 := ($slice xx_x55 63 56)
if_truex_x1_if_nextx_x8_taken := if_truex_x1_exec_guard
//begin: basic-block if_nextx_x8
xx_x137 := ($mux if_nextx_x7_if_nextx_x8_taken ( $bitcast ($uint<8>) xx_x13747) ($mux if_truex_x1_if_nextx_x8_taken ( $bitcast ($uint<8>) xx_x84) ($bitcast ($uint<8>) 0)))
$call dequant_inp (xx_x137 inp_scale inp_zero_point )  (xx_x140)
hor_slice_pipe := xx_x140
xx_x145 := (xx_x14458 + ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000001 ) )
// compare instruction
xx_x78 := (xx_x145 < xx_x74 )
if_nextx_x8_forx_x1x_xfor_out_crit_edge_taken := ( ~xx_x78)
$while xx_x78
$if if_nextx_x8_forx_x1x_xfor_out_crit_edge_taken $then 
  $place [if_nextx_x8_forx_x1x_xfor_out_crit_edge]
$endif
//begin: basic-block forx_x1x_xfor_out_crit_edge
$merge if_nextx_x8_forx_x1x_xfor_out_crit_edge
$phi split :=  ( $cast ($uint<8>) xx_x137) $on if_nextx_x8_forx_x1x_xfor_out_crit_edge 
$endmerge
$place [forx_x1x_xfor_out_crit_edge_for_out]
//begin: basic-block for_out
$merge forx_x1x_xfor_out_crit_edge_for_out if_next_for_out
$phi xx_x13754x_xlcssa :=  ( $cast ($uint<8>) split) $on forx_x1x_xfor_out_crit_edge_for_out ( $cast ($uint<8>) xx_x1374660) $on if_next_for_out 
$endmerge
// compare instruction
xx_x154 := (xx_x60 == xx_x153 )
$if xx_x154 $then  $place [for_out_if_truex_x9] $else $place [for_out_if_falsex_x9] $endif 
//begin: basic-block if_truex_x9
$merge for_out_if_truex_x9
$endmerge
xx_x158 := (xx_x15762 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
$place [if_truex_x9_if_nextx_x9]
//begin: basic-block if_falsex_x9
$merge for_out_if_falsex_x9
$endmerge
$place [if_falsex_x9_if_nextx_x9]
//begin: basic-block if_nextx_x9
$merge if_falsex_x9_if_nextx_x9 if_truex_x9_if_nextx_x9
$phi xx_x476 :=  ( $cast ($uint<64>) xx_x60) $on if_falsex_x9_if_nextx_x9 ( $cast ($uint<64>) ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) ) $on if_truex_x9_if_nextx_x9 
$phi xx_x443 :=  ( $cast ($uint<32>) xx_x15762) $on if_falsex_x9_if_nextx_x9 ( $cast ($uint<32>) xx_x158) $on if_truex_x9_if_nextx_x9 
$endmerge
xx_x163 := (xx_x16263 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
// compare instruction
xx_x31 := (xx_x163 < xx_x24 )
$if xx_x31 $then  $place [if_nextx_x9_for_body] $else $place [if_nextx_x9_forx_xfor_outx_x1_crit_edge] $endif 
//begin: basic-block forx_xfor_outx_x1_crit_edge
$merge if_nextx_x9_forx_xfor_outx_x1_crit_edge
$endmerge
$place [forx_xfor_outx_x1_crit_edge_for_outx_x1]
//begin: basic-block for_outx_x1
$merge forx_xfor_outx_x1_crit_edge_for_outx_x1 vars_for_outx_x1
$endmerge
}
}
$module [fetchPartial] 
 $in (base_addr : $uint<32> ker_size : $uint<32> in_channels : $uint<32> groups : $uint<32> in_rows : $uint<32> in_cols : $uint<32> out_rows : $uint<32> out_cols : $uint<32> inp_scale : $float<8,23> inp_zero_point : $float<8,23> )
 $out ()
 $is 
{
  $storage sti2: $uint<64>
  $storage enti2: $uint<64>
$branchblock [body] {
//begin: basic-block vars
xx_x29 := (out_rows + ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 ) )
xx_x31 := (xx_x29 * out_cols)
xx_x33 := (xx_x31 * groups)
xx_x35 := (xx_x33 * ker_size)
xx_x46 := (groups << ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) )
xx_x48 := (xx_x46 * in_cols)
xx_x52 := ($cast ($uint<64>) xx_x48)
xx_x55 := (groups << ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) )
xx_x74 := ($cast ($uint<64>) in_channels)
xx_x93 :=  inp_scale
xx_x94 := inp_zero_point
xx_x169 := ($cast ($uint<64>) ker_size)
xx_x180 := ($cast ($uint<64>) groups)
xx_x205 := ($cast ($uint<64>) out_rows)
xx_x217 :=  inp_scale
xx_x218 :=  inp_zero_point
xx_x104 := ($cast ($uint<64>) ker_size)
xx_x115 := ($cast ($uint<64>) groups)
xx_x133 := (in_cols - ker_size)
xx_x134 := (xx_x133 + ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 ) )
xx_x140 := ($cast ($uint<64>) out_rows)
xx_x154 :=  inp_scale
xx_x155 :=  inp_zero_point
// compare instruction
xx_x43184 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  < xx_x35 )
sti2 := time_val
$if xx_x43184 $then  $place [vars_for_bodyx_xlrx_xph] $else $place [vars_for_out] $endif 
//begin: basic-block for_bodyx_xlrx_xph
$merge vars_for_bodyx_xlrx_xph
$endmerge
$place [for_bodyx_xlrx_xph_for_body]
//begin: basic-block for_body
$merge for_bodyx_xlrx_xph_for_body if_nextx_x10_for_body
$phi xx_x229199 :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on for_bodyx_xlrx_xph_for_body ( $cast ($uint<32>) xx_x230) $on if_nextx_x10_for_body 
$phi xx_x128198 :=  ( $cast ($uint<64>) ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) ) $on for_bodyx_xlrx_xph_for_body ( $cast ($uint<64>) xx_x4916) $on if_nextx_x10_for_body 
$phi xx_x96197 :=  ( $cast ($uint<64>) ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) ) $on for_bodyx_xlrx_xph_for_body ( $cast ($uint<64>) xx_x5024) $on if_nextx_x10_for_body 
$phi xx_x184196 :=  ( $cast ($uint<32>) ker_size) $on for_bodyx_xlrx_xph_for_body ( $cast ($uint<32>) xx_x5631) $on if_nextx_x10_for_body 
$phi xx_x60195 :=  ( $cast ($uint<64>) ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) ) $on for_bodyx_xlrx_xph_for_body ( $cast ($uint<64>) xx_x6038) $on if_nextx_x10_for_body 
$phi xx_x71194 :=  ( $cast ($uint<64>) ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) ) $on for_bodyx_xlrx_xph_for_body ( $cast ($uint<64>) xx_x7158) $on if_nextx_x10_for_body 
$phi xx_x173192 :=  ( $cast ($uint<64>) ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) ) $on for_bodyx_xlrx_xph_for_body ( $cast ($uint<64>) xx_x8069) $on if_nextx_x10_for_body 
$phi xx_x88x_xoff0191 :=  ( $cast ($uint<8>) ( $bitcast ($uint<8> ) _b00000001 ) ) $on for_bodyx_xlrx_xph_for_body ( $cast ($uint<8>) xx_x8874x_xoff0) $on if_nextx_x10_for_body 
$phi xx_x99190 :=  ( $cast ($uint<64>) ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000001 ) ) $on for_bodyx_xlrx_xph_for_body ( $cast ($uint<64>) xx_x9992) $on if_nextx_x10_for_body 
$phi xx_x164189 :=  ( $cast ($uint<64>) ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000001 ) ) $on for_bodyx_xlrx_xph_for_body ( $cast ($uint<64>) xx_x16495) $on if_nextx_x10_for_body 
$phi xx_x108188 :=  ( $cast ($uint<64>) ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) ) $on for_bodyx_xlrx_xph_for_body ( $cast ($uint<64>) xx_x178108) $on if_nextx_x10_for_body 
$phi xx_x119187 :=  ( $cast ($uint<32>) ker_size) $on for_bodyx_xlrx_xph_for_body ( $cast ($uint<32>) xx_x189118) $on if_nextx_x10_for_body 
$phi xx_x113158186 :=  ( $cast ($uint<64>) ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) ) $on for_bodyx_xlrx_xph_for_body ( $cast ($uint<64>) xx_x113159) $on if_nextx_x10_for_body 
$phi xx_x124169185 :=  ( $cast ($uint<32>) ker_size) $on for_bodyx_xlrx_xph_for_body ( $cast ($uint<32>) xx_x124170) $on if_nextx_x10_for_body 
$endmerge
xx_x51 := (xx_x128198 + xx_x96197)
xx_x53 := (xx_x51 * xx_x52)
xx_x57 := (xx_x55 * xx_x184196)
xx_x58 := ($cast ($uint<64>) xx_x57)
xx_x59 := (xx_x53 + xx_x58)
xx_x61 := (xx_x60195 << ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000011 ) )
xx_x62 := (xx_x59 + xx_x61)
xx_x66 := ($cast ($uint<32>) xx_x62)
$call readModule_convolution (base_addr xx_x66 )  (xx_x67)
xx_x72 := (xx_x71194 << ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000011 ) )
xx_x73 := (xx_x72 + ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000001000 ) )
// compare instruction
xx_x75x_xnot := ( ($bitcast ( $int<64>) xx_x73) >  ($bitcast ( $int<64>) xx_x74 ) )
$if xx_x75x_xnot $then  $place [for_body_if_false] $else $place [for_body_if_true] $endif 
//begin: basic-block if_true
$merge for_body_if_true
$endmerge
$place [if_true_if_next]
//begin: basic-block if_false
$merge for_body_if_false
$endmerge
xx_x173x_xtr := ($cast ($uint<32>) xx_x173192)
iNsTr_4 := (xx_x173x_xtr << ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) )
extractx_xt181 := (in_channels - iNsTr_4)
$place [if_false_if_next]
//begin: basic-block if_next
$merge if_false_if_next if_true_if_next
$phi xx_x173193 :=  ( $cast ($uint<64>) xx_x173192) $on if_false_if_next ( $cast ($uint<64>) xx_x173192) $on if_true_if_next 
$phi xx_x87x_xoff0 :=  ( $cast ($uint<32>) extractx_xt181) $on if_false_if_next ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000001000 ) ) $on if_true_if_next 
$phi xx_x7160 :=  ( $cast ($uint<64>) xx_x173192) $on if_false_if_next ( $cast ($uint<64>) xx_x71194) $on if_true_if_next 
$phi xx_x6042 :=  ( $cast ($uint<64>) xx_x173192) $on if_false_if_next ( $cast ($uint<64>) xx_x71194) $on if_true_if_next 
$endmerge
$call writeInpPipePartial (xx_x67 xx_x87x_xoff0 xx_x88x_xoff0191 xx_x93 xx_x94 )  ()
xx_x97 := (xx_x96197 + ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000001 ) )
// compare instruction
xx_x100 := (xx_x99190 == ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000001 )  )
$if xx_x100 $then  $place [if_next_if_truex_x1] $else $place [if_next_if_falsex_x5] $endif 
//begin: basic-block if_truex_x1
$merge if_next_if_truex_x1
$endmerge
// compare instruction
xx_x105 := (xx_x97 == xx_x104 )
$if xx_x105 $then  $place [if_truex_x1_if_truex_x2] $else $place [if_truex_x1_if_falsex_x1] $endif 
//begin: basic-block if_truex_x2
$merge if_truex_x1_if_truex_x2
$endmerge
xx_x109 := (xx_x108188 + ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000001 ) )
$place [if_truex_x2_if_nextx_x1]
//begin: basic-block if_falsex_x1
$merge if_truex_x1_if_falsex_x1
$endmerge
$place [if_falsex_x1_if_nextx_x1]
//begin: basic-block if_nextx_x1
$merge if_falsex_x1_if_nextx_x1 if_truex_x2_if_nextx_x1
$phi xx_x113 :=  ( $cast ($uint<64>) xx_x113158186) $on if_falsex_x1_if_nextx_x1 ( $cast ($uint<64>) xx_x109) $on if_truex_x2_if_nextx_x1 
$phi xx_x5025 :=  ( $cast ($uint<64>) xx_x97) $on if_falsex_x1_if_nextx_x1 ( $cast ($uint<64>) ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) ) $on if_truex_x2_if_nextx_x1 
$endmerge
// compare instruction
xx_x116 := (xx_x113 == xx_x115 )
$if xx_x116 $then  $place [if_nextx_x1_if_truex_x3] $else $place [if_nextx_x1_if_falsex_x2] $endif 
//begin: basic-block if_truex_x3
$merge if_nextx_x1_if_truex_x3
$endmerge
xx_x120 := (xx_x119187 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
$place [if_truex_x3_if_nextx_x2]
//begin: basic-block if_falsex_x2
$merge if_nextx_x1_if_falsex_x2
$endmerge
$place [if_falsex_x2_if_nextx_x2]
//begin: basic-block if_nextx_x2
$merge if_falsex_x2_if_nextx_x2 if_truex_x3_if_nextx_x2
$phi xx_x131 :=  ( $cast ($uint<32>) xx_x124169185) $on if_falsex_x2_if_nextx_x2 ( $cast ($uint<32>) xx_x120) $on if_truex_x3_if_nextx_x2 
$phi xx_x113160 :=  ( $cast ($uint<64>) xx_x113) $on if_falsex_x2_if_nextx_x2 ( $cast ($uint<64>) ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) ) $on if_truex_x3_if_nextx_x2 
$phi xx_x6039 :=  ( $cast ($uint<64>) xx_x113) $on if_falsex_x2_if_nextx_x2 ( $cast ($uint<64>) ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) ) $on if_truex_x3_if_nextx_x2 
$endmerge
// compare instruction
xx_x126 := (xx_x131 == in_cols )
$if xx_x126 $then  $place [if_nextx_x2_if_truex_x4] $else $place [if_nextx_x2_if_falsex_x4] $endif 
//begin: basic-block if_truex_x4
$merge if_nextx_x2_if_truex_x4
$endmerge
xx_x129 := (xx_x128198 + ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000001 ) )
// compare instruction
xx_x141 := ( ($bitcast ( $int<64>) xx_x129) <   ($bitcast ( $int<64>) xx_x140 ) )
$if xx_x141 $then  $place [if_truex_x4_if_truex_x5] $else $place [if_truex_x4_if_falsex_x3] $endif 
//begin: basic-block if_truex_x5
$merge if_truex_x4_if_truex_x5
$endmerge
xx_x153 := ($cast ($uint<32>) xx_x129)
$call fetchHorSlice (base_addr ker_size in_channels groups xx_x133 xx_x153 in_cols xx_x154 xx_x155 )  ()
xx_x157 := fetch_start
$place [if_truex_x5_if_nextx_x3]
//begin: basic-block if_falsex_x3
$merge if_truex_x4_if_falsex_x3
$endmerge
$place [if_falsex_x3_if_nextx_x3]
//begin: basic-block if_nextx_x3
$merge if_falsex_x3_if_nextx_x3 if_truex_x5_if_nextx_x3
$endmerge
$place [if_nextx_x3_if_nextx_x4]
//begin: basic-block if_falsex_x4
$merge if_nextx_x2_if_falsex_x4
$endmerge
$place [if_falsex_x4_if_nextx_x4]
//begin: basic-block if_nextx_x4
$merge if_falsex_x4_if_nextx_x4 if_nextx_x3_if_nextx_x4
$phi xx_x124171 :=  ( $cast ($uint<32>) xx_x131) $on if_falsex_x4_if_nextx_x4 ( $cast ($uint<32>) xx_x134) $on if_nextx_x3_if_nextx_x4 
$phi xx_x16498 :=  ( $cast ($uint<64>) xx_x164189) $on if_falsex_x4_if_nextx_x4 ( $cast ($uint<64>) ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000010 ) ) $on if_nextx_x3_if_nextx_x4 
$phi xx_x9993 :=  ( $cast ($uint<64>) ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000001 ) ) $on if_falsex_x4_if_nextx_x4 ( $cast ($uint<64>) ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000010 ) ) $on if_nextx_x3_if_nextx_x4 
$phi xx_x8875 :=  ( $cast ($uint<8>) ( $bitcast ($uint<8> ) _b00000001 ) ) $on if_falsex_x4_if_nextx_x4 ( $cast ($uint<8>) ( $bitcast ($uint<8> ) _b00000010 ) ) $on if_nextx_x3_if_nextx_x4 
$phi xx_x5634 :=  ( $cast ($uint<32>) xx_x131) $on if_falsex_x4_if_nextx_x4 ( $cast ($uint<32>) xx_x134) $on if_nextx_x3_if_nextx_x4 
$phi xx_x4919 :=  ( $cast ($uint<64>) xx_x128198) $on if_falsex_x4_if_nextx_x4 ( $cast ($uint<64>) xx_x129) $on if_nextx_x3_if_nextx_x4 
$endmerge
$place [if_nextx_x4_if_nextx_x10]
//begin: basic-block if_falsex_x5
$merge if_next_if_falsex_x5
$endmerge
// compare instruction
xx_x165 := (xx_x164189 == ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000010 )  )
$if xx_x165 $then  $place [if_falsex_x5_if_truex_x6] $else $place [if_falsex_x5_if_falsex_x10] $endif 
//begin: basic-block if_truex_x6
$merge if_falsex_x5_if_truex_x6
$endmerge
// compare instruction
xx_x170 := (xx_x97 == xx_x169 )
$if xx_x170 $then  $place [if_truex_x6_if_truex_x7] $else $place [if_truex_x6_if_falsex_x6] $endif 
//begin: basic-block if_truex_x7
$merge if_truex_x6_if_truex_x7
$endmerge
xx_x174 := (xx_x173193 + ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000001 ) )
$place [if_truex_x7_if_nextx_x5]
//begin: basic-block if_falsex_x6
$merge if_truex_x6_if_falsex_x6
$endmerge
$place [if_falsex_x6_if_nextx_x5]
//begin: basic-block if_nextx_x5
$merge if_falsex_x6_if_nextx_x5 if_truex_x7_if_nextx_x5
$phi xx_x113157 :=  ( $cast ($uint<64>) xx_x113158186) $on if_falsex_x6_if_nextx_x5 ( $cast ($uint<64>) xx_x174) $on if_truex_x7_if_nextx_x5 
$phi xx_x178 :=  ( $cast ($uint<64>) xx_x108188) $on if_falsex_x6_if_nextx_x5 ( $cast ($uint<64>) xx_x174) $on if_truex_x7_if_nextx_x5 
$phi xx_x5027 :=  ( $cast ($uint<64>) xx_x97) $on if_falsex_x6_if_nextx_x5 ( $cast ($uint<64>) ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) ) $on if_truex_x7_if_nextx_x5 
$endmerge
// compare instruction
xx_x181 := (xx_x178 == xx_x180 )
$if xx_x181 $then  $place [if_nextx_x5_if_truex_x8] $else $place [if_nextx_x5_if_falsex_x7] $endif 
//begin: basic-block if_truex_x8
$merge if_nextx_x5_if_truex_x8
$endmerge
xx_x185 := (xx_x184196 + ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 ) )
$place [if_truex_x8_if_nextx_x6]
//begin: basic-block if_falsex_x7
$merge if_nextx_x5_if_falsex_x7
$endmerge
$place [if_falsex_x7_if_nextx_x6]
//begin: basic-block if_nextx_x6
$merge if_falsex_x7_if_nextx_x6 if_truex_x8_if_nextx_x6
$phi xx_x124168 :=  ( $cast ($uint<32>) xx_x124169185) $on if_falsex_x7_if_nextx_x6 ( $cast ($uint<32>) xx_x185) $on if_truex_x8_if_nextx_x6 
$phi xx_x113156 :=  ( $cast ($uint<64>) xx_x113157) $on if_falsex_x7_if_nextx_x6 ( $cast ($uint<64>) ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) ) $on if_truex_x8_if_nextx_x6 
$phi xx_x196 :=  ( $cast ($uint<32>) xx_x119187) $on if_falsex_x7_if_nextx_x6 ( $cast ($uint<32>) xx_x185) $on if_truex_x8_if_nextx_x6 
$phi xx_x178110 :=  ( $cast ($uint<64>) xx_x178) $on if_falsex_x7_if_nextx_x6 ( $cast ($uint<64>) ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) ) $on if_truex_x8_if_nextx_x6 
$phi xx_x6041 :=  ( $cast ($uint<64>) xx_x178) $on if_falsex_x7_if_nextx_x6 ( $cast ($uint<64>) ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) ) $on if_truex_x8_if_nextx_x6 
$endmerge
// compare instruction
xx_x191 := (xx_x196 == ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 )  )
$if xx_x191 $then  $place [if_nextx_x6_if_truex_x9] $else $place [if_nextx_x6_if_falsex_x9] $endif 
//begin: basic-block if_truex_x9
$merge if_nextx_x6_if_truex_x9
$endmerge
xx_x194 := (xx_x128198 + ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000001 ) )
xx_x198 := (xx_x196 + ker_size)
xx_x199 := (xx_x198 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
// compare instruction
xx_x206 := ( ($bitcast ( $int<64>) xx_x194) <   ($bitcast ( $int<64>) xx_x205 ) )
$if xx_x206 $then  $place [if_truex_x9_if_truex_x10] $else $place [if_truex_x9_if_falsex_x8] $endif 
//begin: basic-block if_truex_x10
$merge if_truex_x9_if_truex_x10
$endmerge
xx_x216 := ($cast ($uint<32>) xx_x194)
$call fetchHorSlice (base_addr ker_size in_channels groups ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  xx_x216 in_cols xx_x217 xx_x218 )  ()
xx_x220 := fetch_start
$place [if_truex_x10_if_nextx_x7]
//begin: basic-block if_falsex_x8
$merge if_truex_x9_if_falsex_x8
$endmerge
$place [if_falsex_x8_if_nextx_x7]
//begin: basic-block if_nextx_x7
$merge if_falsex_x8_if_nextx_x7 if_truex_x10_if_nextx_x7
$endmerge
$place [if_nextx_x7_if_nextx_x8]
//begin: basic-block if_falsex_x9
$merge if_nextx_x6_if_falsex_x9
$endmerge
$place [if_falsex_x9_if_nextx_x8]
//begin: basic-block if_nextx_x8
$merge if_falsex_x9_if_nextx_x8 if_nextx_x7_if_nextx_x8
$phi xx_x124167 :=  ( $cast ($uint<32>) xx_x124168) $on if_falsex_x9_if_nextx_x8 ( $cast ($uint<32>) xx_x199) $on if_nextx_x7_if_nextx_x8 
$phi xx_x189120 :=  ( $cast ($uint<32>) xx_x196) $on if_falsex_x9_if_nextx_x8 ( $cast ($uint<32>) xx_x199) $on if_nextx_x7_if_nextx_x8 
$phi xx_x16497 :=  ( $cast ($uint<64>) ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000010 ) ) $on if_falsex_x9_if_nextx_x8 ( $cast ($uint<64>) ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000001 ) ) $on if_nextx_x7_if_nextx_x8 
$phi xx_x8877 :=  ( $cast ($uint<64>) ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000010 ) ) $on if_falsex_x9_if_nextx_x8 ( $cast ($uint<64>) ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000001 ) ) $on if_nextx_x7_if_nextx_x8 
$phi xx_x5636 :=  ( $cast ($uint<32>) xx_x196) $on if_falsex_x9_if_nextx_x8 ( $cast ($uint<32>) xx_x199) $on if_nextx_x7_if_nextx_x8 
$phi xx_x4918 :=  ( $cast ($uint<64>) xx_x128198) $on if_falsex_x9_if_nextx_x8 ( $cast ($uint<64>) xx_x194) $on if_nextx_x7_if_nextx_x8 
$endmerge
$place [if_nextx_x8_if_nextx_x9]
//begin: basic-block if_falsex_x10
$merge if_falsex_x5_if_falsex_x10
$endmerge
$place [if_falsex_x10_if_nextx_x9]
//begin: basic-block if_nextx_x9
$merge if_falsex_x10_if_nextx_x9 if_nextx_x8_if_nextx_x9
$phi xx_x124166 :=  ( $cast ($uint<32>) xx_x124169185) $on if_falsex_x10_if_nextx_x9 ( $cast ($uint<32>) xx_x124167) $on if_nextx_x8_if_nextx_x9 
$phi xx_x113155 :=  ( $cast ($uint<64>) xx_x113158186) $on if_falsex_x10_if_nextx_x9 ( $cast ($uint<64>) xx_x113156) $on if_nextx_x8_if_nextx_x9 
$phi xx_x189119 :=  ( $cast ($uint<32>) xx_x119187) $on if_falsex_x10_if_nextx_x9 ( $cast ($uint<32>) xx_x189120) $on if_nextx_x8_if_nextx_x9 
$phi xx_x178109 :=  ( $cast ($uint<64>) xx_x108188) $on if_falsex_x10_if_nextx_x9 ( $cast ($uint<64>) xx_x178110) $on if_nextx_x8_if_nextx_x9 
$phi xx_x16496 :=  ( $cast ($uint<64>) xx_x164189) $on if_falsex_x10_if_nextx_x9 ( $cast ($uint<64>) xx_x16497) $on if_nextx_x8_if_nextx_x9 
$phi xx_x8876 :=  ( $cast ($uint<64>) xx_x164189) $on if_falsex_x10_if_nextx_x9 ( $cast ($uint<64>) xx_x8877) $on if_nextx_x8_if_nextx_x9 
$phi xx_x8070 :=  ( $cast ($uint<64>) xx_x173193) $on if_falsex_x10_if_nextx_x9 ( $cast ($uint<64>) xx_x6041) $on if_nextx_x8_if_nextx_x9 
$phi xx_x7159 :=  ( $cast ($uint<64>) xx_x7160) $on if_falsex_x10_if_nextx_x9 ( $cast ($uint<64>) xx_x6041) $on if_nextx_x8_if_nextx_x9 
$phi xx_x6040 :=  ( $cast ($uint<64>) xx_x6042) $on if_falsex_x10_if_nextx_x9 ( $cast ($uint<64>) xx_x6041) $on if_nextx_x8_if_nextx_x9 
$phi xx_x5632 :=  ( $cast ($uint<32>) xx_x184196) $on if_falsex_x10_if_nextx_x9 ( $cast ($uint<32>) xx_x5636) $on if_nextx_x8_if_nextx_x9 
$phi xx_x5026 :=  ( $cast ($uint<64>) xx_x97) $on if_falsex_x10_if_nextx_x9 ( $cast ($uint<64>) xx_x5027) $on if_nextx_x8_if_nextx_x9 
$phi xx_x4917 :=  ( $cast ($uint<64>) xx_x128198) $on if_falsex_x10_if_nextx_x9 ( $cast ($uint<64>) xx_x4918) $on if_nextx_x8_if_nextx_x9 
$endmerge
extractx_xt182 := ($cast ($uint<8>) xx_x8876)
$place [if_nextx_x9_if_nextx_x10]
//begin: basic-block if_nextx_x10
$merge if_nextx_x4_if_nextx_x10 if_nextx_x9_if_nextx_x10
$phi xx_x124170 :=  ( $cast ($uint<32>) xx_x124166) $on if_nextx_x9_if_nextx_x10 ( $cast ($uint<32>) xx_x124171) $on if_nextx_x4_if_nextx_x10 
$phi xx_x113159 :=  ( $cast ($uint<64>) xx_x113155) $on if_nextx_x9_if_nextx_x10 ( $cast ($uint<64>) xx_x113160) $on if_nextx_x4_if_nextx_x10 
$phi xx_x189118 :=  ( $cast ($uint<32>) xx_x189119) $on if_nextx_x9_if_nextx_x10 ( $cast ($uint<32>) xx_x5634) $on if_nextx_x4_if_nextx_x10 
$phi xx_x178108 :=  ( $cast ($uint<64>) xx_x178109) $on if_nextx_x9_if_nextx_x10 ( $cast ($uint<64>) xx_x6039) $on if_nextx_x4_if_nextx_x10 
$phi xx_x16495 :=  ( $cast ($uint<64>) xx_x16496) $on if_nextx_x9_if_nextx_x10 ( $cast ($uint<64>) xx_x16498) $on if_nextx_x4_if_nextx_x10 
$phi xx_x9992 :=  ( $cast ($uint<64>) xx_x8876) $on if_nextx_x9_if_nextx_x10 ( $cast ($uint<64>) xx_x9993) $on if_nextx_x4_if_nextx_x10 
$phi xx_x8874x_xoff0 :=  ( $cast ($uint<8>) extractx_xt182) $on if_nextx_x9_if_nextx_x10 ( $cast ($uint<8>) xx_x8875) $on if_nextx_x4_if_nextx_x10 
$phi xx_x8069 :=  ( $cast ($uint<64>) xx_x8070) $on if_nextx_x9_if_nextx_x10 ( $cast ($uint<64>) xx_x6039) $on if_nextx_x4_if_nextx_x10 
$phi xx_x7158 :=  ( $cast ($uint<64>) xx_x7159) $on if_nextx_x9_if_nextx_x10 ( $cast ($uint<64>) xx_x6039) $on if_nextx_x4_if_nextx_x10 
$phi xx_x6038 :=  ( $cast ($uint<64>) xx_x6040) $on if_nextx_x9_if_nextx_x10 ( $cast ($uint<64>) xx_x6039) $on if_nextx_x4_if_nextx_x10 
$phi xx_x5631 :=  ( $cast ($uint<32>) xx_x5632) $on if_nextx_x9_if_nextx_x10 ( $cast ($uint<32>) xx_x5634) $on if_nextx_x4_if_nextx_x10 
$phi xx_x5024 :=  ( $cast ($uint<64>) xx_x5026) $on if_nextx_x9_if_nextx_x10 ( $cast ($uint<64>) xx_x5025) $on if_nextx_x4_if_nextx_x10 
$phi xx_x4916 :=  ( $cast ($uint<64>) xx_x4917) $on if_nextx_x9_if_nextx_x10 ( $cast ($uint<64>) xx_x4919) $on if_nextx_x4_if_nextx_x10 
$endmerge
xx_x230 := (xx_x229199 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
// compare instruction
xx_x43 := (xx_x230 < xx_x35 )
$if xx_x43 $then  $place [if_nextx_x10_for_body] $else $place [if_nextx_x10_forx_xfor_out_crit_edge] $endif 
//begin: basic-block forx_xfor_out_crit_edge
$merge if_nextx_x10_forx_xfor_out_crit_edge
$endmerge
$place [forx_xfor_out_crit_edge_for_out]
//begin: basic-block for_out
$merge forx_xfor_out_crit_edge_for_out vars_for_out
$endmerge
enti2 := time_val
accelerator_reg[7] := ($slice (enti2 - sti2) 31 0)
}
}
$module [loadForward] 
 $in (num_chn_present : $uint<32> ker_size : $uint<32> )
 $out ()
 $is 
{
$branchblock [body] {
//begin: basic-block vars
xx_x11 := (ker_size * ker_size)
xx_x13 := (xx_x11 * num_chn_present)
xx_x78 :=  ($bitcast ($uint<64>) ( $cast ($int< 64 > ) num_chn_present) )
xx_x89 :=  ($bitcast ($uint<64>) ( $cast ($int< 64 > ) ker_size) )
// compare instruction
xx_x1732 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  < xx_x13 )
$if xx_x1732 $then  $place [vars_for_bodyx_xlrx_xph] $else $place [vars_for_out] $endif 
//begin: basic-block for_bodyx_xlrx_xph
$merge vars_for_bodyx_xlrx_xph
$endmerge
$place [for_bodyx_xlrx_xph_for_body]
//begin: basic-block for_body
//   this is a do-while loop.
$merge for_bodyx_xlrx_xph_for_body
$endmerge
$dopipeline $depth 31 $buffering 7 
$fullrate
$merge $entry $loopback
$phi xx_x9841 :=  ( $cast ($uint<32>) xx_x99) $on $loopback ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on $entry
$phi xx_x2040 :=  ( $cast ($uint<64>) xx_x202) $on $loopback ( $cast ($uint<64>) ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) ) $on $entry
$phi xx_x2839 :=  ( $cast ($uint<64>) xx_x288) $on $loopback ( $cast ($uint<64>) ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) ) $on $entry
$phi xx_x3838 :=  ( $cast ($uint<64>) xx_x3812) $on $loopback ( $cast ($uint<64>) ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) ) $on $entry
$phi xx_x4837 :=  ( $cast ($uint<64>) xx_x4817) $on $loopback ( $cast ($uint<64>) ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) ) $on $entry
$phi xx_x9236 :=  ( $cast ($uint<64>) xx_x5823) $on $loopback ( $cast ($uint<64>) ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) ) $on $entry
$phi xx_x7335 :=  ( $cast ($uint<64>) xx_x7326) $on $loopback ( $cast ($uint<64>) ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) ) $on $entry
$phi xx_x8234 :=  ( $cast ($uint<64>) xx_x8228) $on $loopback ( $cast ($uint<64>) ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) ) $on $entry
$phi xx_x872933 :=  ( $cast ($uint<64>) xx_x8730) $on $loopback ( $cast ($uint<64>) ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) ) $on $entry
$endmerge
// compare instruction
xx_x21 := (xx_x2040 == ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 )  )
for_body_if_true_taken := xx_x21
for_body_if_false_taken := ( ~xx_x21)
if_false_exec_guard := for_body_if_false_taken
//begin: basic-block if_false
// compare instruction
$guard (if_false_exec_guard) xx_x29 := (xx_x2839 == ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000001 )  )
if_false_if_truex_x1_taken := (if_false_exec_guard & xx_x29)
if_false_if_falsex_x1_taken := (if_false_exec_guard & (~xx_x29))
if_falsex_x1_exec_guard := if_false_if_falsex_x1_taken
//begin: basic-block if_falsex_x1
// compare instruction
$guard (if_falsex_x1_exec_guard) xx_x39 := (xx_x3838 == ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000010 )  )
if_falsex_x1_if_truex_x2_taken := (if_falsex_x1_exec_guard & xx_x39)
if_falsex_x1_if_falsex_x2_taken := (if_falsex_x1_exec_guard & (~xx_x39))
if_falsex_x2_exec_guard := if_falsex_x1_if_falsex_x2_taken
//begin: basic-block if_falsex_x2
// compare instruction
$guard (if_falsex_x2_exec_guard) xx_x49 := (xx_x4837 == ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000011 )  )
if_falsex_x2_if_truex_x3_taken := (if_falsex_x2_exec_guard & xx_x49)
if_falsex_x2_if_falsex_x3_taken := (if_falsex_x2_exec_guard & (~xx_x49))
if_falsex_x3_exec_guard := if_falsex_x2_if_falsex_x3_taken
//begin: basic-block if_falsex_x3
// compare instruction
$guard (if_falsex_x3_exec_guard) xx_x59 := (xx_x9236 == ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000100 )  )
if_falsex_x3_if_truex_x4_taken := (if_falsex_x3_exec_guard & xx_x59)
if_falsex_x3_if_falsex_x4_taken := (if_falsex_x3_exec_guard & (~xx_x59))
if_falsex_x4_exec_guard := if_falsex_x3_if_falsex_x4_taken
//begin: basic-block if_falsex_x4
if_falsex_x4_if_next_taken := if_falsex_x4_exec_guard
if_truex_x4_exec_guard := if_falsex_x3_if_truex_x4_taken
//begin: basic-block if_truex_x4
$guard (if_truex_x4_exec_guard) xx_x61 := in_data_4
$guard (if_truex_x4_exec_guard) conv_input_data := xx_x61
$guard (if_truex_x4_exec_guard) in_data_3 := xx_x61
if_truex_x4_if_next_taken := if_truex_x4_exec_guard
if_next_exec_guard := (if_falsex_x4_if_next_taken | if_truex_x4_if_next_taken )
//begin: basic-block if_next
if_next_if_nextx_x1_taken := if_next_exec_guard
if_truex_x3_exec_guard := if_falsex_x2_if_truex_x3_taken
//begin: basic-block if_truex_x3
$guard (if_truex_x3_exec_guard) xx_x51 := in_data_3
$guard (if_truex_x3_exec_guard) conv_input_data := xx_x51
$guard (if_truex_x3_exec_guard) in_data_2 := xx_x51
if_truex_x3_if_nextx_x1_taken := if_truex_x3_exec_guard
if_nextx_x1_exec_guard := (if_next_if_nextx_x1_taken | if_truex_x3_if_nextx_x1_taken )
//begin: basic-block if_nextx_x1
xx_x4821 := ($mux if_next_if_nextx_x1_taken ( $bitcast ($uint<64>) xx_x9236) ($mux if_truex_x3_if_nextx_x1_taken ( $bitcast ($uint<64>) ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000011 ) ) ($bitcast ($uint<64>) 0)))
xx_x207 := ($mux if_next_if_nextx_x1_taken ( $bitcast ($uint<64>) xx_x9236) ($mux if_truex_x3_if_nextx_x1_taken ( $bitcast ($uint<64>) ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000011 ) ) ($bitcast ($uint<64>) 0)))
if_nextx_x1_if_nextx_x2_taken := if_nextx_x1_exec_guard
if_truex_x2_exec_guard := if_falsex_x1_if_truex_x2_taken
//begin: basic-block if_truex_x2
$guard (if_truex_x2_exec_guard) xx_x41 := in_data_2
$guard (if_truex_x2_exec_guard) conv_input_data := xx_x41
$guard (if_truex_x2_exec_guard) in_data_1 := xx_x41
if_truex_x2_if_nextx_x2_taken := if_truex_x2_exec_guard
if_nextx_x2_exec_guard := (if_nextx_x1_if_nextx_x2_taken | if_truex_x2_if_nextx_x2_taken )
//begin: basic-block if_nextx_x2
xx_x4820 := ($mux if_nextx_x1_if_nextx_x2_taken ( $bitcast ($uint<64>) xx_x4821) ($mux if_truex_x2_if_nextx_x2_taken ( $bitcast ($uint<64>) xx_x4837) ($bitcast ($uint<64>) 0)))
xx_x3815 := ($mux if_nextx_x1_if_nextx_x2_taken ( $bitcast ($uint<64>) xx_x207) ($mux if_truex_x2_if_nextx_x2_taken ( $bitcast ($uint<64>) ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000010 ) ) ($bitcast ($uint<64>) 0)))
xx_x206 := ($mux if_nextx_x1_if_nextx_x2_taken ( $bitcast ($uint<64>) xx_x207) ($mux if_truex_x2_if_nextx_x2_taken ( $bitcast ($uint<64>) ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000010 ) ) ($bitcast ($uint<64>) 0)))
if_nextx_x2_if_nextx_x3_taken := if_nextx_x2_exec_guard
if_truex_x1_exec_guard := if_false_if_truex_x1_taken
//begin: basic-block if_truex_x1
$guard (if_truex_x1_exec_guard) xx_x31 := in_data_1
$guard (if_truex_x1_exec_guard) conv_input_data := xx_x31
$guard (if_truex_x1_exec_guard) in_data_0 := xx_x31
if_truex_x1_if_nextx_x3_taken := if_truex_x1_exec_guard
if_nextx_x3_exec_guard := (if_nextx_x2_if_nextx_x3_taken | if_truex_x1_if_nextx_x3_taken )
//begin: basic-block if_nextx_x3
xx_x4819 := ($mux if_nextx_x2_if_nextx_x3_taken ( $bitcast ($uint<64>) xx_x4820) ($mux if_truex_x1_if_nextx_x3_taken ( $bitcast ($uint<64>) xx_x4837) ($bitcast ($uint<64>) 0)))
xx_x3814 := ($mux if_nextx_x2_if_nextx_x3_taken ( $bitcast ($uint<64>) xx_x3815) ($mux if_truex_x1_if_nextx_x3_taken ( $bitcast ($uint<64>) xx_x3838) ($bitcast ($uint<64>) 0)))
xx_x2810 := ($mux if_nextx_x2_if_nextx_x3_taken ( $bitcast ($uint<64>) xx_x206) ($mux if_truex_x1_if_nextx_x3_taken ( $bitcast ($uint<64>) ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000001 ) ) ($bitcast ($uint<64>) 0)))
xx_x205 := ($mux if_nextx_x2_if_nextx_x3_taken ( $bitcast ($uint<64>) xx_x206) ($mux if_truex_x1_if_nextx_x3_taken ( $bitcast ($uint<64>) ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000001 ) ) ($bitcast ($uint<64>) 0)))
if_nextx_x3_if_nextx_x4_taken := if_nextx_x3_exec_guard
if_true_exec_guard := for_body_if_true_taken
//begin: basic-block if_true
$guard (if_true_exec_guard) xx_x23 := in_data_0
$guard (if_true_exec_guard) conv_input_data := xx_x23
if_true_if_nextx_x4_taken := if_true_exec_guard
if_nextx_x4_exec_guard := (if_nextx_x3_if_nextx_x4_taken | if_true_if_nextx_x4_taken )
//begin: basic-block if_nextx_x4
xx_x4818 := ($mux if_nextx_x3_if_nextx_x4_taken ( $bitcast ($uint<64>) xx_x4819) ($mux if_true_if_nextx_x4_taken ( $bitcast ($uint<64>) xx_x4837) ($bitcast ($uint<64>) 0)))
xx_x3813 := ($mux if_nextx_x3_if_nextx_x4_taken ( $bitcast ($uint<64>) xx_x3814) ($mux if_true_if_nextx_x4_taken ( $bitcast ($uint<64>) xx_x3838) ($bitcast ($uint<64>) 0)))
xx_x289 := ($mux if_nextx_x3_if_nextx_x4_taken ( $bitcast ($uint<64>) xx_x2810) ($mux if_true_if_nextx_x4_taken ( $bitcast ($uint<64>) xx_x2839) ($bitcast ($uint<64>) 0)))
xx_x203 := ($mux if_nextx_x3_if_nextx_x4_taken ( $bitcast ($uint<64>) xx_x205) ($mux if_true_if_nextx_x4_taken ( $bitcast ($uint<64>) ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) ) ($bitcast ($uint<64>) 0)))
$guard (if_nextx_x4_exec_guard) xx_x74 := (xx_x7335 + ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000001 ) )
// compare instruction
$guard (if_nextx_x4_exec_guard) xx_x79 := (xx_x74 == xx_x78 )
if_nextx_x4_if_truex_x5_taken := (if_nextx_x4_exec_guard & xx_x79)
if_nextx_x4_if_falsex_x5_taken := (if_nextx_x4_exec_guard & (~xx_x79))
if_falsex_x5_exec_guard := if_nextx_x4_if_falsex_x5_taken
//begin: basic-block if_falsex_x5
if_falsex_x5_if_nextx_x5_taken := if_falsex_x5_exec_guard
if_truex_x5_exec_guard := if_nextx_x4_if_truex_x5_taken
//begin: basic-block if_truex_x5
$guard (if_truex_x5_exec_guard) xx_x83 := (xx_x8234 + ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000001 ) )
if_truex_x5_if_nextx_x5_taken := if_truex_x5_exec_guard
if_nextx_x5_exec_guard := (if_falsex_x5_if_nextx_x5_taken | if_truex_x5_if_nextx_x5_taken )
//begin: basic-block if_nextx_x5
xx_x87 := ($mux if_falsex_x5_if_nextx_x5_taken ( $bitcast ($uint<64>) xx_x872933) ($mux if_truex_x5_if_nextx_x5_taken ( $bitcast ($uint<64>) xx_x83) ($bitcast ($uint<64>) 0)))
xx_x7326 := ($mux if_falsex_x5_if_nextx_x5_taken ( $bitcast ($uint<64>) xx_x74) ($mux if_truex_x5_if_nextx_x5_taken ( $bitcast ($uint<64>) ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) ) ($bitcast ($uint<64>) 0)))
// compare instruction
$guard (if_nextx_x5_exec_guard) xx_x90 := (xx_x87 == xx_x89 )
if_nextx_x5_if_truex_x6_taken := (if_nextx_x5_exec_guard & xx_x90)
if_nextx_x5_if_falsex_x6_taken := (if_nextx_x5_exec_guard & (~xx_x90))
if_falsex_x6_exec_guard := if_nextx_x5_if_falsex_x6_taken
//begin: basic-block if_falsex_x6
if_falsex_x6_if_nextx_x6_taken := if_falsex_x6_exec_guard
if_truex_x6_exec_guard := if_nextx_x5_if_truex_x6_taken
//begin: basic-block if_truex_x6
$guard (if_truex_x6_exec_guard) xx_x93 := (xx_x9236 + ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000001 ) )
if_truex_x6_if_nextx_x6_taken := if_truex_x6_exec_guard
//begin: basic-block if_nextx_x6
xx_x8730 := ($mux if_falsex_x6_if_nextx_x6_taken ( $bitcast ($uint<64>) xx_x87) ($mux if_truex_x6_if_nextx_x6_taken ( $bitcast ($uint<64>) ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) ) ($bitcast ($uint<64>) 0)))
xx_x8228 := ($mux if_falsex_x6_if_nextx_x6_taken ( $bitcast ($uint<64>) xx_x87) ($mux if_truex_x6_if_nextx_x6_taken ( $bitcast ($uint<64>) ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) ) ($bitcast ($uint<64>) 0)))
xx_x5823 := ($mux if_falsex_x6_if_nextx_x6_taken ( $bitcast ($uint<64>) xx_x9236) ($mux if_truex_x6_if_nextx_x6_taken ( $bitcast ($uint<64>) xx_x93) ($bitcast ($uint<64>) 0)))
xx_x4817 := ($mux if_falsex_x6_if_nextx_x6_taken ( $bitcast ($uint<64>) xx_x4818) ($mux if_truex_x6_if_nextx_x6_taken ( $bitcast ($uint<64>) xx_x93) ($bitcast ($uint<64>) 0)))
xx_x3812 := ($mux if_falsex_x6_if_nextx_x6_taken ( $bitcast ($uint<64>) xx_x3813) ($mux if_truex_x6_if_nextx_x6_taken ( $bitcast ($uint<64>) xx_x93) ($bitcast ($uint<64>) 0)))
xx_x288 := ($mux if_falsex_x6_if_nextx_x6_taken ( $bitcast ($uint<64>) xx_x289) ($mux if_truex_x6_if_nextx_x6_taken ( $bitcast ($uint<64>) xx_x93) ($bitcast ($uint<64>) 0)))
xx_x202 := ($mux if_falsex_x6_if_nextx_x6_taken ( $bitcast ($uint<64>) xx_x203) ($mux if_truex_x6_if_nextx_x6_taken ( $bitcast ($uint<64>) xx_x93) ($bitcast ($uint<64>) 0)))
xx_x99 := (xx_x9841 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
// compare instruction
xx_x17 := (xx_x99 < xx_x13 )
if_nextx_x6_forx_xfor_out_crit_edge_taken := ( ~xx_x17)
$while xx_x17
$if if_nextx_x6_forx_xfor_out_crit_edge_taken $then 
  $place [if_nextx_x6_forx_xfor_out_crit_edge]
$endif
//begin: basic-block forx_xfor_out_crit_edge
$merge if_nextx_x6_forx_xfor_out_crit_edge
$endmerge
$place [forx_xfor_out_crit_edge_for_out]
//begin: basic-block for_out
$merge forx_xfor_out_crit_edge_for_out vars_for_out
$endmerge
}
}
$module [loadBackward] 
 $in (num_chn_present : $uint<32> ker_size : $uint<32> )
 $out ()
 $is 
{
$branchblock [body] {
//begin: basic-block vars
xx_x11 := (ker_size * ker_size)
xx_x13 := (xx_x11 * num_chn_present)
xx_x78 :=  ($bitcast ($uint<64>) ( $cast ($int< 64 > ) num_chn_present) )
xx_x89 :=  ($bitcast ($uint<64>) ( $cast ($int< 64 > ) ker_size) )
// compare instruction
xx_x1732 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  < xx_x13 )
$if xx_x1732 $then  $place [vars_for_bodyx_xlrx_xph] $else $place [vars_for_out] $endif 
//begin: basic-block for_bodyx_xlrx_xph
$merge vars_for_bodyx_xlrx_xph
$endmerge
$place [for_bodyx_xlrx_xph_for_body]
//begin: basic-block for_body
//   this is a do-while loop.
$merge for_bodyx_xlrx_xph_for_body
$endmerge
$dopipeline $depth 31 $buffering 7 
$fullrate
$merge $entry $loopback
$phi xx_x9841 :=  ( $cast ($uint<32>) xx_x99) $on $loopback ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on $entry
$phi xx_x2040 :=  ( $cast ($uint<64>) xx_x202) $on $loopback ( $cast ($uint<64>) ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) ) $on $entry
$phi xx_x3039 :=  ( $cast ($uint<64>) xx_x308) $on $loopback ( $cast ($uint<64>) ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) ) $on $entry
$phi xx_x4038 :=  ( $cast ($uint<64>) xx_x4012) $on $loopback ( $cast ($uint<64>) ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) ) $on $entry
$phi xx_x5037 :=  ( $cast ($uint<64>) xx_x5017) $on $loopback ( $cast ($uint<64>) ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) ) $on $entry
$phi xx_x9236 :=  ( $cast ($uint<64>) xx_x6023) $on $loopback ( $cast ($uint<64>) ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) ) $on $entry
$phi xx_x7335 :=  ( $cast ($uint<64>) xx_x7326) $on $loopback ( $cast ($uint<64>) ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) ) $on $entry
$phi xx_x8234 :=  ( $cast ($uint<64>) xx_x8228) $on $loopback ( $cast ($uint<64>) ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) ) $on $entry
$phi xx_x872933 :=  ( $cast ($uint<64>) xx_x8730) $on $loopback ( $cast ($uint<64>) ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) ) $on $entry
$endmerge
// compare instruction
xx_x21 := (xx_x2040 == ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 )  )
for_body_if_true_taken := xx_x21
for_body_if_false_taken := ( ~xx_x21)
if_false_exec_guard := for_body_if_false_taken
//begin: basic-block if_false
// compare instruction
$guard (if_false_exec_guard) xx_x31 := (xx_x3039 == ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000001 )  )
if_false_if_truex_x1_taken := (if_false_exec_guard & xx_x31)
if_false_if_falsex_x1_taken := (if_false_exec_guard & (~xx_x31))
if_falsex_x1_exec_guard := if_false_if_falsex_x1_taken
//begin: basic-block if_falsex_x1
// compare instruction
$guard (if_falsex_x1_exec_guard) xx_x41 := (xx_x4038 == ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000010 )  )
if_falsex_x1_if_truex_x2_taken := (if_falsex_x1_exec_guard & xx_x41)
if_falsex_x1_if_falsex_x2_taken := (if_falsex_x1_exec_guard & (~xx_x41))
if_falsex_x2_exec_guard := if_falsex_x1_if_falsex_x2_taken
//begin: basic-block if_falsex_x2
// compare instruction
$guard (if_falsex_x2_exec_guard) xx_x51 := (xx_x5037 == ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000011 )  )
if_falsex_x2_if_truex_x3_taken := (if_falsex_x2_exec_guard & xx_x51)
if_falsex_x2_if_falsex_x3_taken := (if_falsex_x2_exec_guard & (~xx_x51))
if_falsex_x3_exec_guard := if_falsex_x2_if_falsex_x3_taken
//begin: basic-block if_falsex_x3
// compare instruction
$guard (if_falsex_x3_exec_guard) xx_x61 := (xx_x9236 == ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000100 )  )
if_falsex_x3_if_truex_x4_taken := (if_falsex_x3_exec_guard & xx_x61)
if_falsex_x3_if_falsex_x4_taken := (if_falsex_x3_exec_guard & (~xx_x61))
if_falsex_x4_exec_guard := if_falsex_x3_if_falsex_x4_taken
//begin: basic-block if_falsex_x4
if_falsex_x4_if_next_taken := if_falsex_x4_exec_guard
if_truex_x4_exec_guard := if_falsex_x3_if_truex_x4_taken
//begin: basic-block if_truex_x4
$guard (if_truex_x4_exec_guard) xx_x63 := in_data_4
$guard (if_truex_x4_exec_guard) conv_input_data := xx_x63
if_truex_x4_if_next_taken := if_truex_x4_exec_guard
if_next_exec_guard := (if_falsex_x4_if_next_taken | if_truex_x4_if_next_taken )
//begin: basic-block if_next
if_next_if_nextx_x1_taken := if_next_exec_guard
if_truex_x3_exec_guard := if_falsex_x2_if_truex_x3_taken
//begin: basic-block if_truex_x3
$guard (if_truex_x3_exec_guard) xx_x53 := in_data_3
$guard (if_truex_x3_exec_guard) conv_input_data := xx_x53
$guard (if_truex_x3_exec_guard) in_data_4 := xx_x53
if_truex_x3_if_nextx_x1_taken := if_truex_x3_exec_guard
if_nextx_x1_exec_guard := (if_next_if_nextx_x1_taken | if_truex_x3_if_nextx_x1_taken )
//begin: basic-block if_nextx_x1
xx_x5021 := ($mux if_next_if_nextx_x1_taken ( $bitcast ($uint<64>) xx_x9236) ($mux if_truex_x3_if_nextx_x1_taken ( $bitcast ($uint<64>) ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000011 ) ) ($bitcast ($uint<64>) 0)))
xx_x207 := ($mux if_next_if_nextx_x1_taken ( $bitcast ($uint<64>) xx_x9236) ($mux if_truex_x3_if_nextx_x1_taken ( $bitcast ($uint<64>) ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000011 ) ) ($bitcast ($uint<64>) 0)))
if_nextx_x1_if_nextx_x2_taken := if_nextx_x1_exec_guard
if_truex_x2_exec_guard := if_falsex_x1_if_truex_x2_taken
//begin: basic-block if_truex_x2
$guard (if_truex_x2_exec_guard) xx_x43 := in_data_2
$guard (if_truex_x2_exec_guard) conv_input_data := xx_x43
$guard (if_truex_x2_exec_guard) in_data_3 := xx_x43
if_truex_x2_if_nextx_x2_taken := if_truex_x2_exec_guard
if_nextx_x2_exec_guard := (if_nextx_x1_if_nextx_x2_taken | if_truex_x2_if_nextx_x2_taken )
//begin: basic-block if_nextx_x2
xx_x5020 := ($mux if_nextx_x1_if_nextx_x2_taken ( $bitcast ($uint<64>) xx_x5021) ($mux if_truex_x2_if_nextx_x2_taken ( $bitcast ($uint<64>) xx_x5037) ($bitcast ($uint<64>) 0)))
xx_x4015 := ($mux if_nextx_x1_if_nextx_x2_taken ( $bitcast ($uint<64>) xx_x207) ($mux if_truex_x2_if_nextx_x2_taken ( $bitcast ($uint<64>) ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000010 ) ) ($bitcast ($uint<64>) 0)))
xx_x206 := ($mux if_nextx_x1_if_nextx_x2_taken ( $bitcast ($uint<64>) xx_x207) ($mux if_truex_x2_if_nextx_x2_taken ( $bitcast ($uint<64>) ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000010 ) ) ($bitcast ($uint<64>) 0)))
if_nextx_x2_if_nextx_x3_taken := if_nextx_x2_exec_guard
if_truex_x1_exec_guard := if_false_if_truex_x1_taken
//begin: basic-block if_truex_x1
$guard (if_truex_x1_exec_guard) xx_x33 := in_data_1
$guard (if_truex_x1_exec_guard) conv_input_data := xx_x33
$guard (if_truex_x1_exec_guard) in_data_2 := xx_x33
if_truex_x1_if_nextx_x3_taken := if_truex_x1_exec_guard
if_nextx_x3_exec_guard := (if_nextx_x2_if_nextx_x3_taken | if_truex_x1_if_nextx_x3_taken )
//begin: basic-block if_nextx_x3
xx_x5019 := ($mux if_nextx_x2_if_nextx_x3_taken ( $bitcast ($uint<64>) xx_x5020) ($mux if_truex_x1_if_nextx_x3_taken ( $bitcast ($uint<64>) xx_x5037) ($bitcast ($uint<64>) 0)))
xx_x4014 := ($mux if_nextx_x2_if_nextx_x3_taken ( $bitcast ($uint<64>) xx_x4015) ($mux if_truex_x1_if_nextx_x3_taken ( $bitcast ($uint<64>) xx_x4038) ($bitcast ($uint<64>) 0)))
xx_x3010 := ($mux if_nextx_x2_if_nextx_x3_taken ( $bitcast ($uint<64>) xx_x206) ($mux if_truex_x1_if_nextx_x3_taken ( $bitcast ($uint<64>) ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000001 ) ) ($bitcast ($uint<64>) 0)))
xx_x205 := ($mux if_nextx_x2_if_nextx_x3_taken ( $bitcast ($uint<64>) xx_x206) ($mux if_truex_x1_if_nextx_x3_taken ( $bitcast ($uint<64>) ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000001 ) ) ($bitcast ($uint<64>) 0)))
if_nextx_x3_if_nextx_x4_taken := if_nextx_x3_exec_guard
if_true_exec_guard := for_body_if_true_taken
//begin: basic-block if_true
$guard (if_true_exec_guard) xx_x23 := in_data_0
$guard (if_true_exec_guard) conv_input_data := xx_x23
$guard (if_true_exec_guard) in_data_1 := xx_x23
if_true_if_nextx_x4_taken := if_true_exec_guard
if_nextx_x4_exec_guard := (if_nextx_x3_if_nextx_x4_taken | if_true_if_nextx_x4_taken )
//begin: basic-block if_nextx_x4
xx_x5018 := ($mux if_nextx_x3_if_nextx_x4_taken ( $bitcast ($uint<64>) xx_x5019) ($mux if_true_if_nextx_x4_taken ( $bitcast ($uint<64>) xx_x5037) ($bitcast ($uint<64>) 0)))
xx_x4013 := ($mux if_nextx_x3_if_nextx_x4_taken ( $bitcast ($uint<64>) xx_x4014) ($mux if_true_if_nextx_x4_taken ( $bitcast ($uint<64>) xx_x4038) ($bitcast ($uint<64>) 0)))
xx_x309 := ($mux if_nextx_x3_if_nextx_x4_taken ( $bitcast ($uint<64>) xx_x3010) ($mux if_true_if_nextx_x4_taken ( $bitcast ($uint<64>) xx_x3039) ($bitcast ($uint<64>) 0)))
xx_x203 := ($mux if_nextx_x3_if_nextx_x4_taken ( $bitcast ($uint<64>) xx_x205) ($mux if_true_if_nextx_x4_taken ( $bitcast ($uint<64>) ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) ) ($bitcast ($uint<64>) 0)))
$guard (if_nextx_x4_exec_guard) xx_x74 := (xx_x7335 + ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000001 ) )
// compare instruction
$guard (if_nextx_x4_exec_guard) xx_x79 := (xx_x74 == xx_x78 )
if_nextx_x4_if_truex_x5_taken := (if_nextx_x4_exec_guard & xx_x79)
if_nextx_x4_if_falsex_x5_taken := (if_nextx_x4_exec_guard & (~xx_x79))
if_falsex_x5_exec_guard := if_nextx_x4_if_falsex_x5_taken
//begin: basic-block if_falsex_x5
if_falsex_x5_if_nextx_x5_taken := if_falsex_x5_exec_guard
if_truex_x5_exec_guard := if_nextx_x4_if_truex_x5_taken
//begin: basic-block if_truex_x5
$guard (if_truex_x5_exec_guard) xx_x83 := (xx_x8234 + ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000001 ) )
if_truex_x5_if_nextx_x5_taken := if_truex_x5_exec_guard
if_nextx_x5_exec_guard := (if_falsex_x5_if_nextx_x5_taken | if_truex_x5_if_nextx_x5_taken )
//begin: basic-block if_nextx_x5
xx_x87 := ($mux if_falsex_x5_if_nextx_x5_taken ( $bitcast ($uint<64>) xx_x872933) ($mux if_truex_x5_if_nextx_x5_taken ( $bitcast ($uint<64>) xx_x83) ($bitcast ($uint<64>) 0)))
xx_x7326 := ($mux if_falsex_x5_if_nextx_x5_taken ( $bitcast ($uint<64>) xx_x74) ($mux if_truex_x5_if_nextx_x5_taken ( $bitcast ($uint<64>) ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) ) ($bitcast ($uint<64>) 0)))
// compare instruction
$guard (if_nextx_x5_exec_guard) xx_x90 := (xx_x87 == xx_x89 )
if_nextx_x5_if_truex_x6_taken := (if_nextx_x5_exec_guard & xx_x90)
if_nextx_x5_if_falsex_x6_taken := (if_nextx_x5_exec_guard & (~xx_x90))
if_falsex_x6_exec_guard := if_nextx_x5_if_falsex_x6_taken
//begin: basic-block if_falsex_x6
if_falsex_x6_if_nextx_x6_taken := if_falsex_x6_exec_guard
if_truex_x6_exec_guard := if_nextx_x5_if_truex_x6_taken
//begin: basic-block if_truex_x6
$guard (if_truex_x6_exec_guard) xx_x93 := (xx_x9236 + ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000001 ) )
if_truex_x6_if_nextx_x6_taken := if_truex_x6_exec_guard
//begin: basic-block if_nextx_x6
xx_x8730 := ($mux if_falsex_x6_if_nextx_x6_taken ( $bitcast ($uint<64>) xx_x87) ($mux if_truex_x6_if_nextx_x6_taken ( $bitcast ($uint<64>) ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) ) ($bitcast ($uint<64>) 0)))
xx_x8228 := ($mux if_falsex_x6_if_nextx_x6_taken ( $bitcast ($uint<64>) xx_x87) ($mux if_truex_x6_if_nextx_x6_taken ( $bitcast ($uint<64>) ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) ) ($bitcast ($uint<64>) 0)))
xx_x6023 := ($mux if_falsex_x6_if_nextx_x6_taken ( $bitcast ($uint<64>) xx_x9236) ($mux if_truex_x6_if_nextx_x6_taken ( $bitcast ($uint<64>) xx_x93) ($bitcast ($uint<64>) 0)))
xx_x5017 := ($mux if_falsex_x6_if_nextx_x6_taken ( $bitcast ($uint<64>) xx_x5018) ($mux if_truex_x6_if_nextx_x6_taken ( $bitcast ($uint<64>) xx_x93) ($bitcast ($uint<64>) 0)))
xx_x4012 := ($mux if_falsex_x6_if_nextx_x6_taken ( $bitcast ($uint<64>) xx_x4013) ($mux if_truex_x6_if_nextx_x6_taken ( $bitcast ($uint<64>) xx_x93) ($bitcast ($uint<64>) 0)))
xx_x308 := ($mux if_falsex_x6_if_nextx_x6_taken ( $bitcast ($uint<64>) xx_x309) ($mux if_truex_x6_if_nextx_x6_taken ( $bitcast ($uint<64>) xx_x93) ($bitcast ($uint<64>) 0)))
xx_x202 := ($mux if_falsex_x6_if_nextx_x6_taken ( $bitcast ($uint<64>) xx_x203) ($mux if_truex_x6_if_nextx_x6_taken ( $bitcast ($uint<64>) xx_x93) ($bitcast ($uint<64>) 0)))
xx_x99 := (xx_x9841 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
// compare instruction
xx_x17 := (xx_x99 < xx_x13 )
if_nextx_x6_forx_xfor_out_crit_edge_taken := ( ~xx_x17)
$while xx_x17
$if if_nextx_x6_forx_xfor_out_crit_edge_taken $then 
  $place [if_nextx_x6_forx_xfor_out_crit_edge]
$endif
//begin: basic-block forx_xfor_out_crit_edge
$merge if_nextx_x6_forx_xfor_out_crit_edge
$endmerge
$place [forx_xfor_out_crit_edge_for_out]
//begin: basic-block for_out
$merge forx_xfor_out_crit_edge_for_out vars_for_out
$endmerge
}
}
$module [loadNeutral] 
 $in (num_chn_present : $uint<32> ker_size : $uint<32> )
 $out ()
 $is 
{
$branchblock [body] {
//begin: basic-block vars
xx_x11 := (ker_size * ker_size)
xx_x13 := (xx_x11 * num_chn_present)
xx_x105 :=  ($bitcast ($uint<64>) ( $cast ($int< 64 > ) num_chn_present) )
xx_x116 :=  ($bitcast ($uint<64>) ( $cast ($int< 64 > ) ker_size) )
// compare instruction
xx_x1769 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  < xx_x13 )
$if xx_x1769 $then  $place [vars_for_bodyx_xlrx_xph] $else $place [vars_for_out] $endif 
//begin: basic-block for_bodyx_xlrx_xph
$merge vars_for_bodyx_xlrx_xph
$endmerge
$place [for_bodyx_xlrx_xph_for_body]
//begin: basic-block for_body
//   this is a do-while loop.
$merge for_bodyx_xlrx_xph_for_body
$endmerge
$dopipeline $depth 31 $buffering 7 
$fullrate
$merge $entry $loopback
$phi xx_x12578 :=  ( $cast ($uint<32>) xx_x126) $on $loopback ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on $entry
$phi xx_x2077 :=  ( $cast ($uint<64>) xx_x2031) $on $loopback ( $cast ($uint<64>) ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) ) $on $entry
$phi xx_x3576 :=  ( $cast ($uint<64>) xx_x3537) $on $loopback ( $cast ($uint<64>) ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) ) $on $entry
$phi xx_x5075 :=  ( $cast ($uint<64>) xx_x5041) $on $loopback ( $cast ($uint<64>) ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) ) $on $entry
$phi xx_x6574 :=  ( $cast ($uint<64>) xx_x6546) $on $loopback ( $cast ($uint<64>) ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) ) $on $entry
$phi xx_x11973 :=  ( $cast ($uint<64>) xx_x8052) $on $loopback ( $cast ($uint<64>) ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) ) $on $entry
$phi xx_x10972 :=  ( $cast ($uint<64>) xx_x8755) $on $loopback ( $cast ($uint<64>) ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) ) $on $entry
$phi xx_x10071 :=  ( $cast ($uint<64>) xx_x10057) $on $loopback ( $cast ($uint<64>) ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) ) $on $entry
$phi xx_x1145870 :=  ( $cast ($uint<64>) xx_x11459) $on $loopback ( $cast ($uint<64>) ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) ) $on $entry
$endmerge
// compare instruction
xx_x21 := (xx_x2077 == ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 )  )
for_body_if_true_taken := xx_x21
for_body_if_falsex_x1_taken := ( ~xx_x21)
if_falsex_x1_exec_guard := for_body_if_falsex_x1_taken
//begin: basic-block if_falsex_x1
// compare instruction
$guard (if_falsex_x1_exec_guard) xx_x36 := (xx_x3576 == ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000001 )  )
if_falsex_x1_if_truex_x2_taken := (if_falsex_x1_exec_guard & xx_x36)
if_falsex_x1_if_falsex_x3_taken := (if_falsex_x1_exec_guard & (~xx_x36))
if_falsex_x3_exec_guard := if_falsex_x1_if_falsex_x3_taken
//begin: basic-block if_falsex_x3
// compare instruction
$guard (if_falsex_x3_exec_guard) xx_x51 := (xx_x5075 == ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000010 )  )
if_falsex_x3_if_truex_x4_taken := (if_falsex_x3_exec_guard & xx_x51)
if_falsex_x3_if_falsex_x5_taken := (if_falsex_x3_exec_guard & (~xx_x51))
if_falsex_x5_exec_guard := if_falsex_x3_if_falsex_x5_taken
//begin: basic-block if_falsex_x5
// compare instruction
$guard (if_falsex_x5_exec_guard) xx_x66 := (xx_x6574 == ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000011 )  )
if_falsex_x5_if_truex_x6_taken := (if_falsex_x5_exec_guard & xx_x66)
if_falsex_x5_if_falsex_x7_taken := (if_falsex_x5_exec_guard & (~xx_x66))
if_falsex_x7_exec_guard := if_falsex_x5_if_falsex_x7_taken
//begin: basic-block if_falsex_x7
// compare instruction
$guard (if_falsex_x7_exec_guard) xx_x81 := (xx_x11973 == ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000100 )  )
if_falsex_x7_if_truex_x8_taken := (if_falsex_x7_exec_guard & xx_x81)
if_falsex_x7_if_falsex_x9_taken := (if_falsex_x7_exec_guard & (~xx_x81))
if_falsex_x9_exec_guard := if_falsex_x7_if_falsex_x9_taken
//begin: basic-block if_falsex_x9
if_falsex_x9_if_nextx_x5_taken := if_falsex_x9_exec_guard
if_truex_x8_exec_guard := if_falsex_x7_if_truex_x8_taken
//begin: basic-block if_truex_x8
$guard (if_truex_x8_exec_guard) xx_x83 := in_data_4
$guard (if_truex_x8_exec_guard) conv_input_data := xx_x83
// compare instruction
$guard (if_truex_x8_exec_guard) xx_x88 := ( ($bitcast ( $int<64>) xx_x10972) >  ($bitcast ( $int<64>) ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 )  ) )
if_truex_x8_if_truex_x9_taken := (if_truex_x8_exec_guard & xx_x88)
if_truex_x8_if_falsex_x8_taken := (if_truex_x8_exec_guard & (~xx_x88))
if_falsex_x8_exec_guard := if_truex_x8_if_falsex_x8_taken
//begin: basic-block if_falsex_x8
if_falsex_x8_if_nextx_x4_taken := if_falsex_x8_exec_guard
if_truex_x9_exec_guard := if_truex_x8_if_truex_x9_taken
//begin: basic-block if_truex_x9
$guard (if_truex_x9_exec_guard) in_data_4 := xx_x83
if_truex_x9_if_nextx_x4_taken := if_truex_x9_exec_guard
if_nextx_x4_exec_guard := (if_falsex_x8_if_nextx_x4_taken | if_truex_x9_if_nextx_x4_taken )
//begin: basic-block if_nextx_x4
if_nextx_x4_if_nextx_x5_taken := if_nextx_x4_exec_guard
if_nextx_x5_exec_guard := (if_falsex_x9_if_nextx_x5_taken | if_nextx_x4_if_nextx_x5_taken )
//begin: basic-block if_nextx_x5
if_nextx_x5_if_nextx_x6_taken := if_nextx_x5_exec_guard
if_truex_x6_exec_guard := if_falsex_x5_if_truex_x6_taken
//begin: basic-block if_truex_x6
$guard (if_truex_x6_exec_guard) xx_x68 := in_data_3
$guard (if_truex_x6_exec_guard) conv_input_data := xx_x68
// compare instruction
$guard (if_truex_x6_exec_guard) xx_x73 := ( ($bitcast ( $int<64>) xx_x10972) >  ($bitcast ( $int<64>) ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 )  ) )
if_truex_x6_if_truex_x7_taken := (if_truex_x6_exec_guard & xx_x73)
if_truex_x6_if_falsex_x6_taken := (if_truex_x6_exec_guard & (~xx_x73))
if_falsex_x6_exec_guard := if_truex_x6_if_falsex_x6_taken
//begin: basic-block if_falsex_x6
if_falsex_x6_if_nextx_x3_taken := if_falsex_x6_exec_guard
if_truex_x7_exec_guard := if_truex_x6_if_truex_x7_taken
//begin: basic-block if_truex_x7
$guard (if_truex_x7_exec_guard) in_data_3 := xx_x68
if_truex_x7_if_nextx_x3_taken := if_truex_x7_exec_guard
if_nextx_x3_exec_guard := (if_falsex_x6_if_nextx_x3_taken | if_truex_x7_if_nextx_x3_taken )
//begin: basic-block if_nextx_x3
if_nextx_x3_if_nextx_x6_taken := if_nextx_x3_exec_guard
if_nextx_x6_exec_guard := (if_nextx_x3_if_nextx_x6_taken | if_nextx_x5_if_nextx_x6_taken )
//begin: basic-block if_nextx_x6
xx_x6550 := ($mux if_nextx_x5_if_nextx_x6_taken ( $bitcast ($uint<64>) xx_x11973) ($mux if_nextx_x3_if_nextx_x6_taken ( $bitcast ($uint<64>) ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000011 ) ) ($bitcast ($uint<64>) 0)))
xx_x2036 := ($mux if_nextx_x5_if_nextx_x6_taken ( $bitcast ($uint<64>) xx_x11973) ($mux if_nextx_x3_if_nextx_x6_taken ( $bitcast ($uint<64>) ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000011 ) ) ($bitcast ($uint<64>) 0)))
if_nextx_x6_if_nextx_x7_taken := if_nextx_x6_exec_guard
if_truex_x4_exec_guard := if_falsex_x3_if_truex_x4_taken
//begin: basic-block if_truex_x4
$guard (if_truex_x4_exec_guard) xx_x53 := in_data_2
$guard (if_truex_x4_exec_guard) conv_input_data := xx_x53
// compare instruction
$guard (if_truex_x4_exec_guard) xx_x58 := ( ($bitcast ( $int<64>) xx_x10972) >  ($bitcast ( $int<64>) ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 )  ) )
if_truex_x4_if_truex_x5_taken := (if_truex_x4_exec_guard & xx_x58)
if_truex_x4_if_falsex_x4_taken := (if_truex_x4_exec_guard & (~xx_x58))
if_falsex_x4_exec_guard := if_truex_x4_if_falsex_x4_taken
//begin: basic-block if_falsex_x4
if_falsex_x4_if_nextx_x2_taken := if_falsex_x4_exec_guard
if_truex_x5_exec_guard := if_truex_x4_if_truex_x5_taken
//begin: basic-block if_truex_x5
$guard (if_truex_x5_exec_guard) in_data_2 := xx_x53
if_truex_x5_if_nextx_x2_taken := if_truex_x5_exec_guard
if_nextx_x2_exec_guard := (if_falsex_x4_if_nextx_x2_taken | if_truex_x5_if_nextx_x2_taken )
//begin: basic-block if_nextx_x2
if_nextx_x2_if_nextx_x7_taken := if_nextx_x2_exec_guard
if_nextx_x7_exec_guard := (if_nextx_x2_if_nextx_x7_taken | if_nextx_x6_if_nextx_x7_taken )
//begin: basic-block if_nextx_x7
xx_x6549 := ($mux if_nextx_x6_if_nextx_x7_taken ( $bitcast ($uint<64>) xx_x6550) ($mux if_nextx_x2_if_nextx_x7_taken ( $bitcast ($uint<64>) xx_x6574) ($bitcast ($uint<64>) 0)))
xx_x5044 := ($mux if_nextx_x6_if_nextx_x7_taken ( $bitcast ($uint<64>) xx_x2036) ($mux if_nextx_x2_if_nextx_x7_taken ( $bitcast ($uint<64>) ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000010 ) ) ($bitcast ($uint<64>) 0)))
xx_x2035 := ($mux if_nextx_x6_if_nextx_x7_taken ( $bitcast ($uint<64>) xx_x2036) ($mux if_nextx_x2_if_nextx_x7_taken ( $bitcast ($uint<64>) ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000010 ) ) ($bitcast ($uint<64>) 0)))
if_nextx_x7_if_nextx_x8_taken := if_nextx_x7_exec_guard
if_truex_x2_exec_guard := if_falsex_x1_if_truex_x2_taken
//begin: basic-block if_truex_x2
$guard (if_truex_x2_exec_guard) xx_x38 := in_data_1
$guard (if_truex_x2_exec_guard) conv_input_data := xx_x38
// compare instruction
$guard (if_truex_x2_exec_guard) xx_x43 := ( ($bitcast ( $int<64>) xx_x10972) >  ($bitcast ( $int<64>) ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 )  ) )
if_truex_x2_if_truex_x3_taken := (if_truex_x2_exec_guard & xx_x43)
if_truex_x2_if_falsex_x2_taken := (if_truex_x2_exec_guard & (~xx_x43))
if_falsex_x2_exec_guard := if_truex_x2_if_falsex_x2_taken
//begin: basic-block if_falsex_x2
if_falsex_x2_if_nextx_x1_taken := if_falsex_x2_exec_guard
if_truex_x3_exec_guard := if_truex_x2_if_truex_x3_taken
//begin: basic-block if_truex_x3
$guard (if_truex_x3_exec_guard) in_data_1 := xx_x38
if_truex_x3_if_nextx_x1_taken := if_truex_x3_exec_guard
if_nextx_x1_exec_guard := (if_falsex_x2_if_nextx_x1_taken | if_truex_x3_if_nextx_x1_taken )
//begin: basic-block if_nextx_x1
if_nextx_x1_if_nextx_x8_taken := if_nextx_x1_exec_guard
if_nextx_x8_exec_guard := (if_nextx_x1_if_nextx_x8_taken | if_nextx_x7_if_nextx_x8_taken )
//begin: basic-block if_nextx_x8
xx_x6548 := ($mux if_nextx_x7_if_nextx_x8_taken ( $bitcast ($uint<64>) xx_x6549) ($mux if_nextx_x1_if_nextx_x8_taken ( $bitcast ($uint<64>) xx_x6574) ($bitcast ($uint<64>) 0)))
xx_x5043 := ($mux if_nextx_x7_if_nextx_x8_taken ( $bitcast ($uint<64>) xx_x5044) ($mux if_nextx_x1_if_nextx_x8_taken ( $bitcast ($uint<64>) xx_x5075) ($bitcast ($uint<64>) 0)))
xx_x3539 := ($mux if_nextx_x7_if_nextx_x8_taken ( $bitcast ($uint<64>) xx_x2035) ($mux if_nextx_x1_if_nextx_x8_taken ( $bitcast ($uint<64>) ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000001 ) ) ($bitcast ($uint<64>) 0)))
xx_x2034 := ($mux if_nextx_x7_if_nextx_x8_taken ( $bitcast ($uint<64>) xx_x2035) ($mux if_nextx_x1_if_nextx_x8_taken ( $bitcast ($uint<64>) ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000001 ) ) ($bitcast ($uint<64>) 0)))
if_nextx_x8_if_nextx_x9_taken := if_nextx_x8_exec_guard
if_true_exec_guard := for_body_if_true_taken
//begin: basic-block if_true
$guard (if_true_exec_guard) xx_x23 := in_data_0
$guard (if_true_exec_guard) conv_input_data := xx_x23
// compare instruction
$guard (if_true_exec_guard) xx_x28 := ( ($bitcast ( $int<64>) xx_x10972) >  ($bitcast ( $int<64>) ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 )  ) )
if_true_if_truex_x1_taken := (if_true_exec_guard & xx_x28)
if_true_if_false_taken := (if_true_exec_guard & (~xx_x28))
if_false_exec_guard := if_true_if_false_taken
//begin: basic-block if_false
if_false_if_next_taken := if_false_exec_guard
if_truex_x1_exec_guard := if_true_if_truex_x1_taken
//begin: basic-block if_truex_x1
$guard (if_truex_x1_exec_guard) in_data_0 := xx_x23
if_truex_x1_if_next_taken := if_truex_x1_exec_guard
if_next_exec_guard := (if_false_if_next_taken | if_truex_x1_if_next_taken )
//begin: basic-block if_next
if_next_if_nextx_x9_taken := if_next_exec_guard
if_nextx_x9_exec_guard := (if_next_if_nextx_x9_taken | if_nextx_x8_if_nextx_x9_taken )
//begin: basic-block if_nextx_x9
xx_x6547 := ($mux if_nextx_x8_if_nextx_x9_taken ( $bitcast ($uint<64>) xx_x6548) ($mux if_next_if_nextx_x9_taken ( $bitcast ($uint<64>) xx_x6574) ($bitcast ($uint<64>) 0)))
xx_x5042 := ($mux if_nextx_x8_if_nextx_x9_taken ( $bitcast ($uint<64>) xx_x5043) ($mux if_next_if_nextx_x9_taken ( $bitcast ($uint<64>) xx_x5075) ($bitcast ($uint<64>) 0)))
xx_x3538 := ($mux if_nextx_x8_if_nextx_x9_taken ( $bitcast ($uint<64>) xx_x3539) ($mux if_next_if_nextx_x9_taken ( $bitcast ($uint<64>) xx_x3576) ($bitcast ($uint<64>) 0)))
xx_x2032 := ($mux if_nextx_x8_if_nextx_x9_taken ( $bitcast ($uint<64>) xx_x2034) ($mux if_next_if_nextx_x9_taken ( $bitcast ($uint<64>) ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) ) ($bitcast ($uint<64>) 0)))
$guard (if_nextx_x9_exec_guard) xx_x101 := (xx_x10071 + ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000001 ) )
// compare instruction
$guard (if_nextx_x9_exec_guard) xx_x106 := (xx_x101 == xx_x105 )
if_nextx_x9_if_truex_x10_taken := (if_nextx_x9_exec_guard & xx_x106)
if_nextx_x9_if_falsex_x10_taken := (if_nextx_x9_exec_guard & (~xx_x106))
if_falsex_x10_exec_guard := if_nextx_x9_if_falsex_x10_taken
//begin: basic-block if_falsex_x10
if_falsex_x10_if_nextx_x10_taken := if_falsex_x10_exec_guard
if_truex_x10_exec_guard := if_nextx_x9_if_truex_x10_taken
//begin: basic-block if_truex_x10
$guard (if_truex_x10_exec_guard) xx_x110 := (xx_x10972 + ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000001 ) )
if_truex_x10_if_nextx_x10_taken := if_truex_x10_exec_guard
if_nextx_x10_exec_guard := (if_falsex_x10_if_nextx_x10_taken | if_truex_x10_if_nextx_x10_taken )
//begin: basic-block if_nextx_x10
xx_x114 := ($mux if_falsex_x10_if_nextx_x10_taken ( $bitcast ($uint<64>) xx_x1145870) ($mux if_truex_x10_if_nextx_x10_taken ( $bitcast ($uint<64>) xx_x110) ($bitcast ($uint<64>) 0)))
xx_x10057 := ($mux if_falsex_x10_if_nextx_x10_taken ( $bitcast ($uint<64>) xx_x101) ($mux if_truex_x10_if_nextx_x10_taken ( $bitcast ($uint<64>) ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) ) ($bitcast ($uint<64>) 0)))
// compare instruction
$guard (if_nextx_x10_exec_guard) xx_x117 := (xx_x114 == xx_x116 )
if_nextx_x10_if_truex_x11_taken := (if_nextx_x10_exec_guard & xx_x117)
if_nextx_x10_if_falsex_x11_taken := (if_nextx_x10_exec_guard & (~xx_x117))
if_falsex_x11_exec_guard := if_nextx_x10_if_falsex_x11_taken
//begin: basic-block if_falsex_x11
if_falsex_x11_if_nextx_x11_taken := if_falsex_x11_exec_guard
if_truex_x11_exec_guard := if_nextx_x10_if_truex_x11_taken
//begin: basic-block if_truex_x11
$guard (if_truex_x11_exec_guard) xx_x120 := (xx_x11973 + ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000001 ) )
if_truex_x11_if_nextx_x11_taken := if_truex_x11_exec_guard
//begin: basic-block if_nextx_x11
xx_x11459 := ($mux if_falsex_x11_if_nextx_x11_taken ( $bitcast ($uint<64>) xx_x114) ($mux if_truex_x11_if_nextx_x11_taken ( $bitcast ($uint<64>) ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) ) ($bitcast ($uint<64>) 0)))
xx_x8755 := ($mux if_falsex_x11_if_nextx_x11_taken ( $bitcast ($uint<64>) xx_x114) ($mux if_truex_x11_if_nextx_x11_taken ( $bitcast ($uint<64>) ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) ) ($bitcast ($uint<64>) 0)))
xx_x8052 := ($mux if_falsex_x11_if_nextx_x11_taken ( $bitcast ($uint<64>) xx_x11973) ($mux if_truex_x11_if_nextx_x11_taken ( $bitcast ($uint<64>) xx_x120) ($bitcast ($uint<64>) 0)))
xx_x6546 := ($mux if_falsex_x11_if_nextx_x11_taken ( $bitcast ($uint<64>) xx_x6547) ($mux if_truex_x11_if_nextx_x11_taken ( $bitcast ($uint<64>) xx_x120) ($bitcast ($uint<64>) 0)))
xx_x5041 := ($mux if_falsex_x11_if_nextx_x11_taken ( $bitcast ($uint<64>) xx_x5042) ($mux if_truex_x11_if_nextx_x11_taken ( $bitcast ($uint<64>) xx_x120) ($bitcast ($uint<64>) 0)))
xx_x3537 := ($mux if_falsex_x11_if_nextx_x11_taken ( $bitcast ($uint<64>) xx_x3538) ($mux if_truex_x11_if_nextx_x11_taken ( $bitcast ($uint<64>) xx_x120) ($bitcast ($uint<64>) 0)))
xx_x2031 := ($mux if_falsex_x11_if_nextx_x11_taken ( $bitcast ($uint<64>) xx_x2032) ($mux if_truex_x11_if_nextx_x11_taken ( $bitcast ($uint<64>) xx_x120) ($bitcast ($uint<64>) 0)))
xx_x126 := (xx_x12578 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
// compare instruction
xx_x17 := (xx_x126 < xx_x13 )
if_nextx_x11_forx_xfor_out_crit_edge_taken := ( ~xx_x17)
$while xx_x17
$if if_nextx_x11_forx_xfor_out_crit_edge_taken $then 
  $place [if_nextx_x11_forx_xfor_out_crit_edge]
$endif
//begin: basic-block forx_xfor_out_crit_edge
$merge if_nextx_x11_forx_xfor_out_crit_edge
$endmerge
$place [forx_xfor_out_crit_edge_for_out]
//begin: basic-block for_out
$merge forx_xfor_out_crit_edge_for_out vars_for_out
$endmerge
xx_x133 := (ker_size * num_chn_present)
xx_x182 :=  ($bitcast ($uint<64>) ( $cast ($int< 64 > ) num_chn_present) )
// compare instruction
xx_x13761 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  < xx_x133 )
$if xx_x13761 $then  $place [for_out_for_bodyx_x1x_xlrx_xph] $else $place [for_out_for_outx_x1] $endif 
//begin: basic-block for_bodyx_x1x_xlrx_xph
$merge for_out_for_bodyx_x1x_xlrx_xph
$endmerge
$place [for_bodyx_x1x_xlrx_xph_for_bodyx_x1]
//begin: basic-block for_bodyx_x1
//   this is a do-while loop.
$merge for_bodyx_x1x_xlrx_xph_for_bodyx_x1
$endmerge
$dopipeline $depth 31 $buffering 7 
$fullrate
$merge $entry $loopback
$phi xx_x19168 :=  ( $cast ($uint<32>) xx_x192) $on $loopback ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on $entry
$phi xx_x14267 :=  ( $cast ($uint<64>) xx_x1426) $on $loopback ( $cast ($uint<64>) ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) ) $on $entry
$phi xx_x14866 :=  ( $cast ($uint<64>) xx_x14812) $on $loopback ( $cast ($uint<64>) ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) ) $on $entry
$phi xx_x15465 :=  ( $cast ($uint<64>) xx_x15416) $on $loopback ( $cast ($uint<64>) ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) ) $on $entry
$phi xx_x16064 :=  ( $cast ($uint<64>) xx_x16021) $on $loopback ( $cast ($uint<64>) ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) ) $on $entry
$phi xx_x18663 :=  ( $cast ($uint<64>) xx_x16627) $on $loopback ( $cast ($uint<64>) ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) ) $on $entry
$phi xx_x17762 :=  ( $cast ($uint<64>) xx_x17730) $on $loopback ( $cast ($uint<64>) ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) ) $on $entry
$endmerge
xx_x140 := hor_slice_pipe
// compare instruction
xx_x143 := (xx_x14267 == ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 )  )
for_bodyx_x1_if_truex_x12_taken := xx_x143
for_bodyx_x1_if_falsex_x12_taken := ( ~xx_x143)
if_falsex_x12_exec_guard := for_bodyx_x1_if_falsex_x12_taken
//begin: basic-block if_falsex_x12
// compare instruction
$guard (if_falsex_x12_exec_guard) xx_x149 := (xx_x14866 == ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000001 )  )
if_falsex_x12_if_truex_x13_taken := (if_falsex_x12_exec_guard & xx_x149)
if_falsex_x12_if_falsex_x13_taken := (if_falsex_x12_exec_guard & (~xx_x149))
if_falsex_x13_exec_guard := if_falsex_x12_if_falsex_x13_taken
//begin: basic-block if_falsex_x13
// compare instruction
$guard (if_falsex_x13_exec_guard) xx_x155 := (xx_x15465 == ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000010 )  )
if_falsex_x13_if_truex_x14_taken := (if_falsex_x13_exec_guard & xx_x155)
if_falsex_x13_if_falsex_x14_taken := (if_falsex_x13_exec_guard & (~xx_x155))
if_falsex_x14_exec_guard := if_falsex_x13_if_falsex_x14_taken
//begin: basic-block if_falsex_x14
// compare instruction
$guard (if_falsex_x14_exec_guard) xx_x161 := (xx_x16064 == ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000011 )  )
if_falsex_x14_if_truex_x15_taken := (if_falsex_x14_exec_guard & xx_x161)
if_falsex_x14_if_falsex_x15_taken := (if_falsex_x14_exec_guard & (~xx_x161))
if_falsex_x15_exec_guard := if_falsex_x14_if_falsex_x15_taken
//begin: basic-block if_falsex_x15
// compare instruction
$guard (if_falsex_x15_exec_guard) xx_x167 := (xx_x18663 == ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000100 )  )
if_falsex_x15_if_truex_x16_taken := (if_falsex_x15_exec_guard & xx_x167)
if_falsex_x15_if_falsex_x16_taken := (if_falsex_x15_exec_guard & (~xx_x167))
if_falsex_x16_exec_guard := if_falsex_x15_if_falsex_x16_taken
//begin: basic-block if_falsex_x16
if_falsex_x16_if_nextx_x12_taken := if_falsex_x16_exec_guard
if_truex_x16_exec_guard := if_falsex_x15_if_truex_x16_taken
//begin: basic-block if_truex_x16
$guard (if_truex_x16_exec_guard) in_data_4 := xx_x140
if_truex_x16_if_nextx_x12_taken := if_truex_x16_exec_guard
if_nextx_x12_exec_guard := (if_falsex_x16_if_nextx_x12_taken | if_truex_x16_if_nextx_x12_taken )
//begin: basic-block if_nextx_x12
if_nextx_x12_if_nextx_x13_taken := if_nextx_x12_exec_guard
if_truex_x15_exec_guard := if_falsex_x14_if_truex_x15_taken
//begin: basic-block if_truex_x15
$guard (if_truex_x15_exec_guard) in_data_3 := xx_x140
if_truex_x15_if_nextx_x13_taken := if_truex_x15_exec_guard
if_nextx_x13_exec_guard := (if_nextx_x12_if_nextx_x13_taken | if_truex_x15_if_nextx_x13_taken )
//begin: basic-block if_nextx_x13
xx_x16025 := ($mux if_nextx_x12_if_nextx_x13_taken ( $bitcast ($uint<64>) xx_x18663) ($mux if_truex_x15_if_nextx_x13_taken ( $bitcast ($uint<64>) ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000011 ) ) ($bitcast ($uint<64>) 0)))
xx_x14211 := ($mux if_nextx_x12_if_nextx_x13_taken ( $bitcast ($uint<64>) xx_x18663) ($mux if_truex_x15_if_nextx_x13_taken ( $bitcast ($uint<64>) ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000011 ) ) ($bitcast ($uint<64>) 0)))
if_nextx_x13_if_nextx_x14_taken := if_nextx_x13_exec_guard
if_truex_x14_exec_guard := if_falsex_x13_if_truex_x14_taken
//begin: basic-block if_truex_x14
$guard (if_truex_x14_exec_guard) in_data_2 := xx_x140
if_truex_x14_if_nextx_x14_taken := if_truex_x14_exec_guard
if_nextx_x14_exec_guard := (if_nextx_x13_if_nextx_x14_taken | if_truex_x14_if_nextx_x14_taken )
//begin: basic-block if_nextx_x14
xx_x16024 := ($mux if_nextx_x13_if_nextx_x14_taken ( $bitcast ($uint<64>) xx_x16025) ($mux if_truex_x14_if_nextx_x14_taken ( $bitcast ($uint<64>) xx_x16064) ($bitcast ($uint<64>) 0)))
xx_x15419 := ($mux if_nextx_x13_if_nextx_x14_taken ( $bitcast ($uint<64>) xx_x14211) ($mux if_truex_x14_if_nextx_x14_taken ( $bitcast ($uint<64>) ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000010 ) ) ($bitcast ($uint<64>) 0)))
xx_x14210 := ($mux if_nextx_x13_if_nextx_x14_taken ( $bitcast ($uint<64>) xx_x14211) ($mux if_truex_x14_if_nextx_x14_taken ( $bitcast ($uint<64>) ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000010 ) ) ($bitcast ($uint<64>) 0)))
if_nextx_x14_if_nextx_x15_taken := if_nextx_x14_exec_guard
if_truex_x13_exec_guard := if_falsex_x12_if_truex_x13_taken
//begin: basic-block if_truex_x13
$guard (if_truex_x13_exec_guard) in_data_1 := xx_x140
if_truex_x13_if_nextx_x15_taken := if_truex_x13_exec_guard
if_nextx_x15_exec_guard := (if_nextx_x14_if_nextx_x15_taken | if_truex_x13_if_nextx_x15_taken )
//begin: basic-block if_nextx_x15
xx_x16023 := ($mux if_nextx_x14_if_nextx_x15_taken ( $bitcast ($uint<64>) xx_x16024) ($mux if_truex_x13_if_nextx_x15_taken ( $bitcast ($uint<64>) xx_x16064) ($bitcast ($uint<64>) 0)))
xx_x15418 := ($mux if_nextx_x14_if_nextx_x15_taken ( $bitcast ($uint<64>) xx_x15419) ($mux if_truex_x13_if_nextx_x15_taken ( $bitcast ($uint<64>) xx_x15465) ($bitcast ($uint<64>) 0)))
xx_x14814 := ($mux if_nextx_x14_if_nextx_x15_taken ( $bitcast ($uint<64>) xx_x14210) ($mux if_truex_x13_if_nextx_x15_taken ( $bitcast ($uint<64>) ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000001 ) ) ($bitcast ($uint<64>) 0)))
xx_x1429 := ($mux if_nextx_x14_if_nextx_x15_taken ( $bitcast ($uint<64>) xx_x14210) ($mux if_truex_x13_if_nextx_x15_taken ( $bitcast ($uint<64>) ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000001 ) ) ($bitcast ($uint<64>) 0)))
if_nextx_x15_if_nextx_x16_taken := if_nextx_x15_exec_guard
if_truex_x12_exec_guard := for_bodyx_x1_if_truex_x12_taken
//begin: basic-block if_truex_x12
$guard (if_truex_x12_exec_guard) in_data_0 := xx_x140
if_truex_x12_if_nextx_x16_taken := if_truex_x12_exec_guard
if_nextx_x16_exec_guard := (if_nextx_x15_if_nextx_x16_taken | if_truex_x12_if_nextx_x16_taken )
//begin: basic-block if_nextx_x16
xx_x16022 := ($mux if_nextx_x15_if_nextx_x16_taken ( $bitcast ($uint<64>) xx_x16023) ($mux if_truex_x12_if_nextx_x16_taken ( $bitcast ($uint<64>) xx_x16064) ($bitcast ($uint<64>) 0)))
xx_x15417 := ($mux if_nextx_x15_if_nextx_x16_taken ( $bitcast ($uint<64>) xx_x15418) ($mux if_truex_x12_if_nextx_x16_taken ( $bitcast ($uint<64>) xx_x15465) ($bitcast ($uint<64>) 0)))
xx_x14813 := ($mux if_nextx_x15_if_nextx_x16_taken ( $bitcast ($uint<64>) xx_x14814) ($mux if_truex_x12_if_nextx_x16_taken ( $bitcast ($uint<64>) xx_x14866) ($bitcast ($uint<64>) 0)))
xx_x1427 := ($mux if_nextx_x15_if_nextx_x16_taken ( $bitcast ($uint<64>) xx_x1429) ($mux if_truex_x12_if_nextx_x16_taken ( $bitcast ($uint<64>) ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) ) ($bitcast ($uint<64>) 0)))
$guard (if_nextx_x16_exec_guard) xx_x178 := (xx_x17762 + ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000001 ) )
// compare instruction
$guard (if_nextx_x16_exec_guard) xx_x183 := (xx_x178 == xx_x182 )
if_nextx_x16_if_truex_x17_taken := (if_nextx_x16_exec_guard & xx_x183)
if_nextx_x16_if_falsex_x17_taken := (if_nextx_x16_exec_guard & (~xx_x183))
if_falsex_x17_exec_guard := if_nextx_x16_if_falsex_x17_taken
//begin: basic-block if_falsex_x17
if_falsex_x17_if_nextx_x17_taken := if_falsex_x17_exec_guard
if_truex_x17_exec_guard := if_nextx_x16_if_truex_x17_taken
//begin: basic-block if_truex_x17
$guard (if_truex_x17_exec_guard) xx_x187 := (xx_x18663 + ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000001 ) )
if_truex_x17_if_nextx_x17_taken := if_truex_x17_exec_guard
//begin: basic-block if_nextx_x17
xx_x17730 := ($mux if_falsex_x17_if_nextx_x17_taken ( $bitcast ($uint<64>) xx_x178) ($mux if_truex_x17_if_nextx_x17_taken ( $bitcast ($uint<64>) ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) ) ($bitcast ($uint<64>) 0)))
xx_x16627 := ($mux if_falsex_x17_if_nextx_x17_taken ( $bitcast ($uint<64>) xx_x18663) ($mux if_truex_x17_if_nextx_x17_taken ( $bitcast ($uint<64>) xx_x187) ($bitcast ($uint<64>) 0)))
xx_x16021 := ($mux if_falsex_x17_if_nextx_x17_taken ( $bitcast ($uint<64>) xx_x16022) ($mux if_truex_x17_if_nextx_x17_taken ( $bitcast ($uint<64>) xx_x187) ($bitcast ($uint<64>) 0)))
xx_x15416 := ($mux if_falsex_x17_if_nextx_x17_taken ( $bitcast ($uint<64>) xx_x15417) ($mux if_truex_x17_if_nextx_x17_taken ( $bitcast ($uint<64>) xx_x187) ($bitcast ($uint<64>) 0)))
xx_x14812 := ($mux if_falsex_x17_if_nextx_x17_taken ( $bitcast ($uint<64>) xx_x14813) ($mux if_truex_x17_if_nextx_x17_taken ( $bitcast ($uint<64>) xx_x187) ($bitcast ($uint<64>) 0)))
xx_x1426 := ($mux if_falsex_x17_if_nextx_x17_taken ( $bitcast ($uint<64>) xx_x1427) ($mux if_truex_x17_if_nextx_x17_taken ( $bitcast ($uint<64>) xx_x187) ($bitcast ($uint<64>) 0)))
xx_x192 := (xx_x19168 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
// compare instruction
xx_x137 := (xx_x192 < xx_x133 )
if_nextx_x17_forx_x1x_xfor_outx_x1_crit_edge_taken := ( ~xx_x137)
$while xx_x137
$if if_nextx_x17_forx_x1x_xfor_outx_x1_crit_edge_taken $then 
  $place [if_nextx_x17_forx_x1x_xfor_outx_x1_crit_edge]
$endif
//begin: basic-block forx_x1x_xfor_outx_x1_crit_edge
$merge if_nextx_x17_forx_x1x_xfor_outx_x1_crit_edge
$endmerge
$place [forx_x1x_xfor_outx_x1_crit_edge_for_outx_x1]
//begin: basic-block for_outx_x1
$merge for_out_for_outx_x1 forx_x1x_xfor_outx_x1_crit_edge_for_outx_x1
$endmerge
}
}
$module [loadNeutralLast] 
 $in (num_chn_present : $uint<32> ker_size : $uint<32> )
 $out ()
 $is 
{
$branchblock [body] {
//begin: basic-block vars
xx_x11 := (ker_size * ker_size)
xx_x13 := (xx_x11 * num_chn_present)
xx_x70 :=  ($bitcast ($uint<64>) ( $cast ($int< 64 > ) num_chn_present) )
xx_x81 :=  ($bitcast ($uint<64>) ( $cast ($int< 64 > ) ker_size) )
// compare instruction
xx_x1732 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  < xx_x13 )
$if xx_x1732 $then  $place [vars_for_bodyx_xlrx_xph] $else $place [vars_for_out] $endif 
//begin: basic-block for_bodyx_xlrx_xph
$merge vars_for_bodyx_xlrx_xph
$endmerge
$place [for_bodyx_xlrx_xph_for_body]
//begin: basic-block for_body
//   this is a do-while loop.
$merge for_bodyx_xlrx_xph_for_body
$endmerge
$dopipeline $depth 31 $buffering 7 
$fullrate
$merge $entry $loopback
$phi xx_x9041 :=  ( $cast ($uint<32>) xx_x91) $on $loopback ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on $entry
$phi xx_x2040 :=  ( $cast ($uint<64>) xx_x202) $on $loopback ( $cast ($uint<64>) ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) ) $on $entry
$phi xx_x2839 :=  ( $cast ($uint<64>) xx_x288) $on $loopback ( $cast ($uint<64>) ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) ) $on $entry
$phi xx_x3638 :=  ( $cast ($uint<64>) xx_x3612) $on $loopback ( $cast ($uint<64>) ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) ) $on $entry
$phi xx_x4437 :=  ( $cast ($uint<64>) xx_x4417) $on $loopback ( $cast ($uint<64>) ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) ) $on $entry
$phi xx_x8436 :=  ( $cast ($uint<64>) xx_x5223) $on $loopback ( $cast ($uint<64>) ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) ) $on $entry
$phi xx_x6535 :=  ( $cast ($uint<64>) xx_x6526) $on $loopback ( $cast ($uint<64>) ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) ) $on $entry
$phi xx_x7434 :=  ( $cast ($uint<64>) xx_x7428) $on $loopback ( $cast ($uint<64>) ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) ) $on $entry
$phi xx_x792933 :=  ( $cast ($uint<64>) xx_x7930) $on $loopback ( $cast ($uint<64>) ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) ) $on $entry
$endmerge
// compare instruction
xx_x21 := (xx_x2040 == ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 )  )
for_body_if_true_taken := xx_x21
for_body_if_false_taken := ( ~xx_x21)
if_false_exec_guard := for_body_if_false_taken
//begin: basic-block if_false
// compare instruction
$guard (if_false_exec_guard) xx_x29 := (xx_x2839 == ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000001 )  )
if_false_if_truex_x1_taken := (if_false_exec_guard & xx_x29)
if_false_if_falsex_x1_taken := (if_false_exec_guard & (~xx_x29))
if_falsex_x1_exec_guard := if_false_if_falsex_x1_taken
//begin: basic-block if_falsex_x1
// compare instruction
$guard (if_falsex_x1_exec_guard) xx_x37 := (xx_x3638 == ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000010 )  )
if_falsex_x1_if_truex_x2_taken := (if_falsex_x1_exec_guard & xx_x37)
if_falsex_x1_if_falsex_x2_taken := (if_falsex_x1_exec_guard & (~xx_x37))
if_falsex_x2_exec_guard := if_falsex_x1_if_falsex_x2_taken
//begin: basic-block if_falsex_x2
// compare instruction
$guard (if_falsex_x2_exec_guard) xx_x45 := (xx_x4437 == ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000011 )  )
if_falsex_x2_if_truex_x3_taken := (if_falsex_x2_exec_guard & xx_x45)
if_falsex_x2_if_falsex_x3_taken := (if_falsex_x2_exec_guard & (~xx_x45))
if_falsex_x3_exec_guard := if_falsex_x2_if_falsex_x3_taken
//begin: basic-block if_falsex_x3
// compare instruction
$guard (if_falsex_x3_exec_guard) xx_x53 := (xx_x8436 == ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000100 )  )
if_falsex_x3_if_truex_x4_taken := (if_falsex_x3_exec_guard & xx_x53)
if_falsex_x3_if_falsex_x4_taken := (if_falsex_x3_exec_guard & (~xx_x53))
if_falsex_x4_exec_guard := if_falsex_x3_if_falsex_x4_taken
//begin: basic-block if_falsex_x4
if_falsex_x4_if_next_taken := if_falsex_x4_exec_guard
if_truex_x4_exec_guard := if_falsex_x3_if_truex_x4_taken
//begin: basic-block if_truex_x4
$guard (if_truex_x4_exec_guard) xx_x55 := in_data_4
$guard (if_truex_x4_exec_guard) conv_input_data := xx_x55
if_truex_x4_if_next_taken := if_truex_x4_exec_guard
if_next_exec_guard := (if_falsex_x4_if_next_taken | if_truex_x4_if_next_taken )
//begin: basic-block if_next
if_next_if_nextx_x1_taken := if_next_exec_guard
if_truex_x3_exec_guard := if_falsex_x2_if_truex_x3_taken
//begin: basic-block if_truex_x3
$guard (if_truex_x3_exec_guard) xx_x47 := in_data_3
$guard (if_truex_x3_exec_guard) conv_input_data := xx_x47
if_truex_x3_if_nextx_x1_taken := if_truex_x3_exec_guard
if_nextx_x1_exec_guard := (if_next_if_nextx_x1_taken | if_truex_x3_if_nextx_x1_taken )
//begin: basic-block if_nextx_x1
xx_x4421 := ($mux if_next_if_nextx_x1_taken ( $bitcast ($uint<64>) xx_x8436) ($mux if_truex_x3_if_nextx_x1_taken ( $bitcast ($uint<64>) ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000011 ) ) ($bitcast ($uint<64>) 0)))
xx_x207 := ($mux if_next_if_nextx_x1_taken ( $bitcast ($uint<64>) xx_x8436) ($mux if_truex_x3_if_nextx_x1_taken ( $bitcast ($uint<64>) ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000011 ) ) ($bitcast ($uint<64>) 0)))
if_nextx_x1_if_nextx_x2_taken := if_nextx_x1_exec_guard
if_truex_x2_exec_guard := if_falsex_x1_if_truex_x2_taken
//begin: basic-block if_truex_x2
$guard (if_truex_x2_exec_guard) xx_x39 := in_data_2
$guard (if_truex_x2_exec_guard) conv_input_data := xx_x39
if_truex_x2_if_nextx_x2_taken := if_truex_x2_exec_guard
if_nextx_x2_exec_guard := (if_nextx_x1_if_nextx_x2_taken | if_truex_x2_if_nextx_x2_taken )
//begin: basic-block if_nextx_x2
xx_x4420 := ($mux if_nextx_x1_if_nextx_x2_taken ( $bitcast ($uint<64>) xx_x4421) ($mux if_truex_x2_if_nextx_x2_taken ( $bitcast ($uint<64>) xx_x4437) ($bitcast ($uint<64>) 0)))
xx_x3615 := ($mux if_nextx_x1_if_nextx_x2_taken ( $bitcast ($uint<64>) xx_x207) ($mux if_truex_x2_if_nextx_x2_taken ( $bitcast ($uint<64>) ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000010 ) ) ($bitcast ($uint<64>) 0)))
xx_x206 := ($mux if_nextx_x1_if_nextx_x2_taken ( $bitcast ($uint<64>) xx_x207) ($mux if_truex_x2_if_nextx_x2_taken ( $bitcast ($uint<64>) ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000010 ) ) ($bitcast ($uint<64>) 0)))
if_nextx_x2_if_nextx_x3_taken := if_nextx_x2_exec_guard
if_truex_x1_exec_guard := if_false_if_truex_x1_taken
//begin: basic-block if_truex_x1
$guard (if_truex_x1_exec_guard) xx_x31 := in_data_1
$guard (if_truex_x1_exec_guard) conv_input_data := xx_x31
if_truex_x1_if_nextx_x3_taken := if_truex_x1_exec_guard
if_nextx_x3_exec_guard := (if_nextx_x2_if_nextx_x3_taken | if_truex_x1_if_nextx_x3_taken )
//begin: basic-block if_nextx_x3
xx_x4419 := ($mux if_nextx_x2_if_nextx_x3_taken ( $bitcast ($uint<64>) xx_x4420) ($mux if_truex_x1_if_nextx_x3_taken ( $bitcast ($uint<64>) xx_x4437) ($bitcast ($uint<64>) 0)))
xx_x3614 := ($mux if_nextx_x2_if_nextx_x3_taken ( $bitcast ($uint<64>) xx_x3615) ($mux if_truex_x1_if_nextx_x3_taken ( $bitcast ($uint<64>) xx_x3638) ($bitcast ($uint<64>) 0)))
xx_x2810 := ($mux if_nextx_x2_if_nextx_x3_taken ( $bitcast ($uint<64>) xx_x206) ($mux if_truex_x1_if_nextx_x3_taken ( $bitcast ($uint<64>) ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000001 ) ) ($bitcast ($uint<64>) 0)))
xx_x205 := ($mux if_nextx_x2_if_nextx_x3_taken ( $bitcast ($uint<64>) xx_x206) ($mux if_truex_x1_if_nextx_x3_taken ( $bitcast ($uint<64>) ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000001 ) ) ($bitcast ($uint<64>) 0)))
if_nextx_x3_if_nextx_x4_taken := if_nextx_x3_exec_guard
if_true_exec_guard := for_body_if_true_taken
//begin: basic-block if_true
$guard (if_true_exec_guard) xx_x23 := in_data_0
$guard (if_true_exec_guard) conv_input_data := xx_x23
if_true_if_nextx_x4_taken := if_true_exec_guard
if_nextx_x4_exec_guard := (if_nextx_x3_if_nextx_x4_taken | if_true_if_nextx_x4_taken )
//begin: basic-block if_nextx_x4
xx_x4418 := ($mux if_nextx_x3_if_nextx_x4_taken ( $bitcast ($uint<64>) xx_x4419) ($mux if_true_if_nextx_x4_taken ( $bitcast ($uint<64>) xx_x4437) ($bitcast ($uint<64>) 0)))
xx_x3613 := ($mux if_nextx_x3_if_nextx_x4_taken ( $bitcast ($uint<64>) xx_x3614) ($mux if_true_if_nextx_x4_taken ( $bitcast ($uint<64>) xx_x3638) ($bitcast ($uint<64>) 0)))
xx_x289 := ($mux if_nextx_x3_if_nextx_x4_taken ( $bitcast ($uint<64>) xx_x2810) ($mux if_true_if_nextx_x4_taken ( $bitcast ($uint<64>) xx_x2839) ($bitcast ($uint<64>) 0)))
xx_x203 := ($mux if_nextx_x3_if_nextx_x4_taken ( $bitcast ($uint<64>) xx_x205) ($mux if_true_if_nextx_x4_taken ( $bitcast ($uint<64>) ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) ) ($bitcast ($uint<64>) 0)))
$guard (if_nextx_x4_exec_guard) xx_x66 := (xx_x6535 + ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000001 ) )
// compare instruction
$guard (if_nextx_x4_exec_guard) xx_x71 := (xx_x66 == xx_x70 )
if_nextx_x4_if_truex_x5_taken := (if_nextx_x4_exec_guard & xx_x71)
if_nextx_x4_if_falsex_x5_taken := (if_nextx_x4_exec_guard & (~xx_x71))
if_falsex_x5_exec_guard := if_nextx_x4_if_falsex_x5_taken
//begin: basic-block if_falsex_x5
if_falsex_x5_if_nextx_x5_taken := if_falsex_x5_exec_guard
if_truex_x5_exec_guard := if_nextx_x4_if_truex_x5_taken
//begin: basic-block if_truex_x5
$guard (if_truex_x5_exec_guard) xx_x75 := (xx_x7434 + ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000001 ) )
if_truex_x5_if_nextx_x5_taken := if_truex_x5_exec_guard
if_nextx_x5_exec_guard := (if_falsex_x5_if_nextx_x5_taken | if_truex_x5_if_nextx_x5_taken )
//begin: basic-block if_nextx_x5
xx_x79 := ($mux if_falsex_x5_if_nextx_x5_taken ( $bitcast ($uint<64>) xx_x792933) ($mux if_truex_x5_if_nextx_x5_taken ( $bitcast ($uint<64>) xx_x75) ($bitcast ($uint<64>) 0)))
xx_x6526 := ($mux if_falsex_x5_if_nextx_x5_taken ( $bitcast ($uint<64>) xx_x66) ($mux if_truex_x5_if_nextx_x5_taken ( $bitcast ($uint<64>) ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) ) ($bitcast ($uint<64>) 0)))
// compare instruction
$guard (if_nextx_x5_exec_guard) xx_x82 := (xx_x79 == xx_x81 )
if_nextx_x5_if_truex_x6_taken := (if_nextx_x5_exec_guard & xx_x82)
if_nextx_x5_if_falsex_x6_taken := (if_nextx_x5_exec_guard & (~xx_x82))
if_falsex_x6_exec_guard := if_nextx_x5_if_falsex_x6_taken
//begin: basic-block if_falsex_x6
if_falsex_x6_if_nextx_x6_taken := if_falsex_x6_exec_guard
if_truex_x6_exec_guard := if_nextx_x5_if_truex_x6_taken
//begin: basic-block if_truex_x6
$guard (if_truex_x6_exec_guard) xx_x85 := (xx_x8436 + ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000001 ) )
if_truex_x6_if_nextx_x6_taken := if_truex_x6_exec_guard
//begin: basic-block if_nextx_x6
xx_x7930 := ($mux if_falsex_x6_if_nextx_x6_taken ( $bitcast ($uint<64>) xx_x79) ($mux if_truex_x6_if_nextx_x6_taken ( $bitcast ($uint<64>) ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) ) ($bitcast ($uint<64>) 0)))
xx_x7428 := ($mux if_falsex_x6_if_nextx_x6_taken ( $bitcast ($uint<64>) xx_x79) ($mux if_truex_x6_if_nextx_x6_taken ( $bitcast ($uint<64>) ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) ) ($bitcast ($uint<64>) 0)))
xx_x5223 := ($mux if_falsex_x6_if_nextx_x6_taken ( $bitcast ($uint<64>) xx_x8436) ($mux if_truex_x6_if_nextx_x6_taken ( $bitcast ($uint<64>) xx_x85) ($bitcast ($uint<64>) 0)))
xx_x4417 := ($mux if_falsex_x6_if_nextx_x6_taken ( $bitcast ($uint<64>) xx_x4418) ($mux if_truex_x6_if_nextx_x6_taken ( $bitcast ($uint<64>) xx_x85) ($bitcast ($uint<64>) 0)))
xx_x3612 := ($mux if_falsex_x6_if_nextx_x6_taken ( $bitcast ($uint<64>) xx_x3613) ($mux if_truex_x6_if_nextx_x6_taken ( $bitcast ($uint<64>) xx_x85) ($bitcast ($uint<64>) 0)))
xx_x288 := ($mux if_falsex_x6_if_nextx_x6_taken ( $bitcast ($uint<64>) xx_x289) ($mux if_truex_x6_if_nextx_x6_taken ( $bitcast ($uint<64>) xx_x85) ($bitcast ($uint<64>) 0)))
xx_x202 := ($mux if_falsex_x6_if_nextx_x6_taken ( $bitcast ($uint<64>) xx_x203) ($mux if_truex_x6_if_nextx_x6_taken ( $bitcast ($uint<64>) xx_x85) ($bitcast ($uint<64>) 0)))
xx_x91 := (xx_x9041 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
// compare instruction
xx_x17 := (xx_x91 < xx_x13 )
if_nextx_x6_forx_xfor_out_crit_edge_taken := ( ~xx_x17)
$while xx_x17
$if if_nextx_x6_forx_xfor_out_crit_edge_taken $then 
  $place [if_nextx_x6_forx_xfor_out_crit_edge]
$endif
//begin: basic-block forx_xfor_out_crit_edge
$merge if_nextx_x6_forx_xfor_out_crit_edge
$endmerge
$place [forx_xfor_out_crit_edge_for_out]
//begin: basic-block for_out
$merge forx_xfor_out_crit_edge_for_out vars_for_out
$endmerge
}
}
$module [inputLoader] 
 $in (ker_size : $uint<32> in_channels : $uint<32> groups : $uint<32> out_rows : $uint<32> out_cols : $uint<32> )
 $out ()
 $is 
{
  $storage sti3: $uint<64>
  $storage enti3: $uint<64>
$branchblock [body] {
//begin: basic-block vars
xx_x18 := (out_rows * out_cols)
xx_x20 := (xx_x18 * groups)
xx_x38 :=  ($bitcast ($uint<64>) ( $cast ($int< 64 > ) in_channels) )
xx_x85 :=  ($bitcast ($uint<64>) ( $cast ($int< 64 > ) groups) )
xx_x96 := (out_cols + ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 ) )
xx_x97 :=  ($bitcast ($uint<64>) ( $cast ($int< 64 > ) xx_x96) )
xx_x116 :=  ($bitcast ($uint<64>) ( $cast ($int< 64 > ) out_cols) )
xx_x129 := (xx_x20 + ( $bitcast ($uint<32> ) _b11111111111111111111111111111111 ) )
xx_x130 :=  ($bitcast ($uint<64>) ( $cast ($int< 64 > ) xx_x129) )
// compare instruction
xx_x2844 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  < xx_x20 )
sti3 := time_val
$if xx_x2844 $then  $place [vars_for_bodyx_xlrx_xph] $else $place [vars_for_out] $endif 
//begin: basic-block for_bodyx_xlrx_xph
$merge vars_for_bodyx_xlrx_xph
$endmerge
$place [for_bodyx_xlrx_xph_for_body]
//begin: basic-block for_body
$merge for_bodyx_xlrx_xph_for_body if_nextx_x9_for_body
$phi xx_x13656 :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on for_bodyx_xlrx_xph_for_body ( $cast ($uint<32>) xx_x137) $on if_nextx_x9_for_body 
$phi xx_x3055 :=  ( $cast ($uint<64>) ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) ) $on for_bodyx_xlrx_xph_for_body ( $cast ($uint<64>) xx_x31) $on if_nextx_x9_for_body 
$phi xx_x8054 :=  ( $cast ($uint<64>) ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) ) $on for_bodyx_xlrx_xph_for_body ( $cast ($uint<64>) xx_x356) $on if_nextx_x9_for_body 
$phi xx_x5053 :=  ( $cast ($uint<64>) ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000001 ) ) $on for_bodyx_xlrx_xph_for_body ( $cast ($uint<64>) xx_x507) $on if_nextx_x9_for_body 
$phi xx_x10552 :=  ( $cast ($uint<64>) ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000001 ) ) $on for_bodyx_xlrx_xph_for_body ( $cast ($uint<64>) xx_x5811) $on if_nextx_x9_for_body 
$phi xx_x6649 :=  ( $cast ($uint<1>) ( $bitcast ($uint<1> ) _b0 ) ) $on for_bodyx_xlrx_xph_for_body ( $cast ($uint<1>) xx_x6614) $on if_nextx_x9_for_body 
$phi xx_x8948 :=  ( $cast ($uint<64>) ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) ) $on for_bodyx_xlrx_xph_for_body ( $cast ($uint<64>) xx_x8927) $on if_nextx_x9_for_body 
$phi xx_x942947 :=  ( $cast ($uint<64>) ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) ) $on for_bodyx_xlrx_xph_for_body ( $cast ($uint<64>) xx_x9430) $on if_nextx_x9_for_body 
$phi xx_x1143446 :=  ( $cast ($uint<64>) ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) ) $on for_bodyx_xlrx_xph_for_body ( $cast ($uint<64>) xx_x11435) $on if_nextx_x9_for_body 
$phi xx_x12045 :=  ( $cast ($uint<64>) ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) ) $on for_bodyx_xlrx_xph_for_body ( $cast ($uint<64>) xx_x12038) $on if_nextx_x9_for_body 
$endmerge
xx_x31 := (xx_x3055 + ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000001 ) )
xx_x36 := (xx_x8054 + ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000001 ) )
xx_x37 := (xx_x36 << ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000011 ) )
// compare instruction
xx_x39x_xnot := ( ($bitcast ( $int<64>) xx_x37) >  ($bitcast ( $int<64>) xx_x38 ) )
$if xx_x39x_xnot $then  $place [for_body_if_false] $else $place [for_body_if_true] $endif 
//begin: basic-block if_true
$merge for_body_if_true
$endmerge
$place [if_true_if_next]
//begin: basic-block if_false
$merge for_body_if_false
$endmerge
xx_x80x_xtr := ($cast ($uint<32>) xx_x8054)
iNsTr_4 := (xx_x80x_xtr << ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) )
extractx_xt := (in_channels - iNsTr_4)
$place [if_false_if_next]
//begin: basic-block if_next
$merge if_false_if_next if_true_if_next
$phi xx_x53x_xoff0 :=  ( $cast ($uint<32>) extractx_xt) $on if_false_if_next ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000001000 ) ) $on if_true_if_next 
$endmerge
// compare instruction
xx_x51 := (xx_x5053 == ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000001 )  )
$if xx_x51 $then  $place [if_next_if_truex_x1] $else $place [if_next_if_falsex_x1] $endif 
//begin: basic-block if_truex_x1
$merge if_next_if_truex_x1
$endmerge
$call loadForward (xx_x53x_xoff0 ker_size )  ()
$place [if_truex_x1_if_nextx_x3]
//begin: basic-block if_falsex_x1
$merge if_next_if_falsex_x1
$endmerge
// compare instruction
xx_x59 := (xx_x10552 == ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000010 )  )
$if xx_x59 $then  $place [if_falsex_x1_if_truex_x2] $else $place [if_falsex_x1_if_falsex_x2] $endif 
//begin: basic-block if_truex_x2
$merge if_falsex_x1_if_truex_x2
$endmerge
$call loadBackward (xx_x53x_xoff0 ker_size )  ()
$place [if_truex_x2_if_nextx_x2]
//begin: basic-block if_falsex_x2
$merge if_falsex_x1_if_falsex_x2
$endmerge
$if xx_x6649 $then  $place [if_falsex_x2_if_truex_x3] $else $place [if_falsex_x2_if_falsex_x3] $endif 
//begin: basic-block if_truex_x3
$merge if_falsex_x2_if_truex_x3
$endmerge
$call loadNeutralLast (xx_x53x_xoff0 ker_size )  ()
$place [if_truex_x3_if_nextx_x1]
//begin: basic-block if_falsex_x3
$merge if_falsex_x2_if_falsex_x3
$endmerge
$call loadNeutral (xx_x53x_xoff0 ker_size )  ()
$place [if_falsex_x3_if_nextx_x1]
//begin: basic-block if_nextx_x1
$merge if_falsex_x3_if_nextx_x1 if_truex_x3_if_nextx_x1
$endmerge
$place [if_nextx_x1_if_nextx_x2]
//begin: basic-block if_nextx_x2
$merge if_nextx_x1_if_nextx_x2 if_truex_x2_if_nextx_x2
$phi xx_x6651 :=  ( $cast ($uint<1>) xx_x6649) $on if_nextx_x1_if_nextx_x2 ( $cast ($uint<1>) xx_x6649) $on if_truex_x2_if_nextx_x2 
$endmerge
$place [if_nextx_x2_if_nextx_x3]
//begin: basic-block if_nextx_x3
$merge if_nextx_x2_if_nextx_x3 if_truex_x1_if_nextx_x3
$phi xx_x6650 :=  ( $cast ($uint<1>) xx_x6651) $on if_nextx_x2_if_nextx_x3 ( $cast ($uint<1>) xx_x6649) $on if_truex_x1_if_nextx_x3 
$phi xx_x509 :=  ( $cast ($uint<64>) xx_x10552) $on if_nextx_x2_if_nextx_x3 ( $cast ($uint<64>) ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000001 ) ) $on if_truex_x1_if_nextx_x3 
$endmerge
// compare instruction
xx_x86 := (xx_x36 == xx_x85 )
$if xx_x86 $then  $place [if_nextx_x3_if_truex_x4] $else $place [if_nextx_x3_if_falsex_x4] $endif 
//begin: basic-block if_truex_x4
$merge if_nextx_x3_if_truex_x4
$endmerge
xx_x90 := (xx_x8948 + ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000001 ) )
$place [if_truex_x4_if_nextx_x4]
//begin: basic-block if_falsex_x4
$merge if_nextx_x3_if_falsex_x4
$endmerge
$place [if_falsex_x4_if_nextx_x4]
//begin: basic-block if_nextx_x4
$merge if_falsex_x4_if_nextx_x4 if_truex_x4_if_nextx_x4
$phi xx_x114 :=  ( $cast ($uint<64>) xx_x1143446) $on if_falsex_x4_if_nextx_x4 ( $cast ($uint<64>) xx_x90) $on if_truex_x4_if_nextx_x4 
$phi xx_x94 :=  ( $cast ($uint<64>) xx_x942947) $on if_falsex_x4_if_nextx_x4 ( $cast ($uint<64>) xx_x90) $on if_truex_x4_if_nextx_x4 
$phi xx_x356 :=  ( $cast ($uint<64>) xx_x36) $on if_falsex_x4_if_nextx_x4 ( $cast ($uint<64>) ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) ) $on if_truex_x4_if_nextx_x4 
$endmerge
// compare instruction
xx_x98 := (xx_x94 == xx_x97 )
$if xx_x98 $then  $place [if_nextx_x4_if_truex_x5] $else $place [if_nextx_x4_if_falsex_x7] $endif 
//begin: basic-block if_truex_x5
$merge if_nextx_x4_if_truex_x5
$endmerge
// compare instruction
xx_x101 := (xx_x10552 == ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000001 )  )
$if xx_x101 $then  $place [if_truex_x5_if_truex_x6] $else $place [if_truex_x5_if_falsex_x5] $endif 
//begin: basic-block if_truex_x6
$merge if_truex_x5_if_truex_x6
$endmerge
$place [if_truex_x6_if_nextx_x6]
//begin: basic-block if_falsex_x5
$merge if_truex_x5_if_falsex_x5
$endmerge
// compare instruction
xx_x106 := (xx_x10552 == ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000010 )  )
$if xx_x106 $then  $place [if_falsex_x5_if_truex_x7] $else $place [if_falsex_x5_if_falsex_x6] $endif 
//begin: basic-block if_truex_x7
$merge if_falsex_x5_if_truex_x7
$endmerge
$place [if_truex_x7_if_nextx_x5]
//begin: basic-block if_falsex_x6
$merge if_falsex_x5_if_falsex_x6
$endmerge
$place [if_falsex_x6_if_nextx_x5]
//begin: basic-block if_nextx_x5
$merge if_falsex_x6_if_nextx_x5 if_truex_x7_if_nextx_x5
$phi xx_x12041 :=  ( $cast ($uint<64>) xx_x12045) $on if_falsex_x6_if_nextx_x5 ( $cast ($uint<64>) ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000001 ) ) $on if_truex_x7_if_nextx_x5 
$endmerge
$place [if_nextx_x5_if_nextx_x6]
//begin: basic-block if_nextx_x6
$merge if_nextx_x5_if_nextx_x6 if_truex_x6_if_nextx_x6
$phi xx_x12040 :=  ( $cast ($uint<64>) xx_x12041) $on if_nextx_x5_if_nextx_x6 ( $cast ($uint<64>) ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000010 ) ) $on if_truex_x6_if_nextx_x6 
$endmerge
$place [if_nextx_x6_if_nextx_x8]
//begin: basic-block if_falsex_x7
$merge if_nextx_x4_if_falsex_x7
$endmerge
// compare instruction
xx_x117 := (xx_x114 == xx_x116 )
$if xx_x117 $then  $place [if_falsex_x7_if_truex_x8] $else $place [if_falsex_x7_if_falsex_x8] $endif 
//begin: basic-block if_truex_x8
$merge if_falsex_x7_if_truex_x8
$endmerge
fetch_start := ( $bitcast ($uint<8> ) _b00000001 ) 
$place [if_truex_x8_if_nextx_x7]
//begin: basic-block if_falsex_x8
$merge if_falsex_x7_if_falsex_x8
$endmerge
$place [if_falsex_x8_if_nextx_x7]
//begin: basic-block if_nextx_x7
$merge if_falsex_x8_if_nextx_x7 if_truex_x8_if_nextx_x7
$phi xx_x12039 :=  ( $cast ($uint<64>) xx_x12045) $on if_falsex_x8_if_nextx_x7 ( $cast ($uint<64>) ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) ) $on if_truex_x8_if_nextx_x7 
$phi xx_x11436 :=  ( $cast ($uint<64>) xx_x114) $on if_falsex_x8_if_nextx_x7 ( $cast ($uint<64>) ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) ) $on if_truex_x8_if_nextx_x7 
$phi xx_x8928 :=  ( $cast ($uint<64>) xx_x114) $on if_falsex_x8_if_nextx_x7 ( $cast ($uint<64>) ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) ) $on if_truex_x8_if_nextx_x7 
$phi xx_x5812 :=  ( $cast ($uint<64>) xx_x10552) $on if_falsex_x8_if_nextx_x7 ( $cast ($uint<64>) xx_x12045) $on if_truex_x8_if_nextx_x7 
$phi xx_x508 :=  ( $cast ($uint<64>) xx_x509) $on if_falsex_x8_if_nextx_x7 ( $cast ($uint<64>) xx_x12045) $on if_truex_x8_if_nextx_x7 
$endmerge
$place [if_nextx_x7_if_nextx_x8]
//begin: basic-block if_nextx_x8
$merge if_nextx_x6_if_nextx_x8 if_nextx_x7_if_nextx_x8
$phi xx_x12038 :=  ( $cast ($uint<64>) xx_x12039) $on if_nextx_x7_if_nextx_x8 ( $cast ($uint<64>) xx_x12040) $on if_nextx_x6_if_nextx_x8 
$phi xx_x11435 :=  ( $cast ($uint<64>) xx_x11436) $on if_nextx_x7_if_nextx_x8 ( $cast ($uint<64>) xx_x114) $on if_nextx_x6_if_nextx_x8 
$phi xx_x9430 :=  ( $cast ($uint<64>) xx_x8928) $on if_nextx_x7_if_nextx_x8 ( $cast ($uint<64>) xx_x94) $on if_nextx_x6_if_nextx_x8 
$phi xx_x8927 :=  ( $cast ($uint<64>) xx_x8928) $on if_nextx_x7_if_nextx_x8 ( $cast ($uint<64>) xx_x94) $on if_nextx_x6_if_nextx_x8 
$phi xx_x5811 :=  ( $cast ($uint<64>) xx_x5812) $on if_nextx_x7_if_nextx_x8 ( $cast ($uint<64>) ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) ) $on if_nextx_x6_if_nextx_x8 
$phi xx_x507 :=  ( $cast ($uint<64>) xx_x508) $on if_nextx_x7_if_nextx_x8 ( $cast ($uint<64>) ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) ) $on if_nextx_x6_if_nextx_x8 
$endmerge
// compare instruction
xx_x131 := (xx_x31 == xx_x130 )
$if xx_x131 $then  $place [if_nextx_x8_if_truex_x9] $else $place [if_nextx_x8_if_falsex_x9] $endif 
//begin: basic-block if_truex_x9
$merge if_nextx_x8_if_truex_x9
$endmerge
$place [if_truex_x9_if_nextx_x9]
//begin: basic-block if_falsex_x9
$merge if_nextx_x8_if_falsex_x9
$endmerge
$place [if_falsex_x9_if_nextx_x9]
//begin: basic-block if_nextx_x9
$merge if_falsex_x9_if_nextx_x9 if_truex_x9_if_nextx_x9
$phi xx_x6614 :=  ( $cast ($uint<1>) xx_x6650) $on if_falsex_x9_if_nextx_x9 ( $cast ($uint<1>) ( $bitcast ($uint<1> ) _b1 ) ) $on if_truex_x9_if_nextx_x9 
$endmerge
xx_x137 := (xx_x13656 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
// compare instruction
xx_x28 := (xx_x137 < xx_x20 )
$if xx_x28 $then  $place [if_nextx_x9_for_body] $else $place [if_nextx_x9_forx_xfor_out_crit_edge] $endif 
//begin: basic-block forx_xfor_out_crit_edge
$merge if_nextx_x9_forx_xfor_out_crit_edge
$endmerge
$place [forx_xfor_out_crit_edge_for_out]
//begin: basic-block for_out
$merge forx_xfor_out_crit_edge_for_out vars_for_out
$endmerge
enti3 := time_val
accelerator_reg[8] := ($slice (enti3 - sti3) 31 0)
}
}
$module [kernelLoader] 
 $in (num_iterations : $uint<32> stopCond : $uint<32> )
 $out ()
 $is 
{
  $storage sti4: $uint<64>
  $storage enti4: $uint<64>
$branchblock [body] {
//begin: basic-block vars
xx_x32 := (num_iterations - stopCond)
xx_x33 :=  ($bitcast ($uint<64>) ( $cast ($int< 64 > ) xx_x32) )
// compare instruction
xx_x125 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  < num_iterations )
sti4 := time_val
$if xx_x125 $then  $place [vars_for_bodyx_xlrx_xph] $else $place [vars_for_out] $endif 
//begin: basic-block for_bodyx_xlrx_xph
$merge vars_for_bodyx_xlrx_xph
$endmerge
$place [for_bodyx_xlrx_xph_for_body]
//begin: basic-block for_body
//   this is a do-while loop.
$merge for_bodyx_xlrx_xph_for_body
$endmerge
$dopipeline $depth 31 $buffering 7 
$fullrate
$merge $entry $loopback
$phi xx_x398 :=  ( $cast ($uint<32>) xx_x40) $on $loopback ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on $entry
$phi xx_x157 :=  ( $cast ($uint<64>) xx_x16) $on $loopback ( $cast ($uint<64>) ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) ) $on $entry
$phi xx_x206 :=  ( $cast ($uint<1>) xx_x203) $on $loopback ( $cast ($uint<1>) ( $bitcast ($uint<1> ) _b0 ) ) $on $entry
$endmerge
xx_x16 := (xx_x157 + ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000001 ) )
xx_x18 := ($bitcast ($float<8,23> ) ker_data ) 
for_body_if_false_taken := xx_x206
for_body_if_true_taken := ( ~xx_x206)
if_true_exec_guard := for_body_if_true_taken
//begin: basic-block if_true
$guard (if_true_exec_guard) ker_data := ($bitcast ( $uint<64> ) xx_x18 )
if_true_if_next_taken := if_true_exec_guard
if_false_exec_guard := for_body_if_false_taken
//begin: basic-block if_false
if_false_if_next_taken := if_false_exec_guard
if_next_exec_guard := (if_false_if_next_taken | if_true_if_next_taken )
//begin: basic-block if_next
$guard (if_next_exec_guard) conv_ker_data := xx_x18
// compare instruction
$guard (if_next_exec_guard) xx_x34 := (xx_x16 == xx_x33 )
if_next_if_truex_x1_taken := (if_next_exec_guard & xx_x34)
if_next_if_falsex_x1_taken := (if_next_exec_guard & (~xx_x34))
if_falsex_x1_exec_guard := if_next_if_falsex_x1_taken
//begin: basic-block if_falsex_x1
if_falsex_x1_if_nextx_x1_taken := if_falsex_x1_exec_guard
if_truex_x1_exec_guard := if_next_if_truex_x1_taken
//begin: basic-block if_truex_x1
if_truex_x1_if_nextx_x1_taken := if_truex_x1_exec_guard
//begin: basic-block if_nextx_x1
xx_x203 := ($mux if_falsex_x1_if_nextx_x1_taken ( $bitcast ($uint<1>) xx_x206) ($mux if_truex_x1_if_nextx_x1_taken ( $bitcast ($uint<1>) ( $bitcast ($uint<1> ) _b1 ) ) ($bitcast ($uint<1>) 0)))
xx_x40 := (xx_x398 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
// compare instruction
xx_x12 := (xx_x40 < num_iterations )
if_nextx_x1_forx_xfor_out_crit_edge_taken := ( ~xx_x12)
$while xx_x12
$if if_nextx_x1_forx_xfor_out_crit_edge_taken $then 
  $place [if_nextx_x1_forx_xfor_out_crit_edge]
$endif
//begin: basic-block forx_xfor_out_crit_edge
$merge if_nextx_x1_forx_xfor_out_crit_edge
$endmerge
$place [forx_xfor_out_crit_edge_for_out]
//begin: basic-block for_out
$merge forx_xfor_out_crit_edge_for_out vars_for_out
$endmerge
enti4 := time_val
accelerator_reg[9] := ($slice (enti4 - sti4) 31 0)
}
}
$module [fetchInputLinear] 
 $in (base_addr : $uint<32> groups : $uint<32> in_channels : $uint<32> inp_scale : $float<8,23> inp_zero_point : $float<8,23> )
 $out ()
 $is 
{
$branchblock [body] {
//begin: basic-block vars
// compare instruction
xx_x1654 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  < groups )
$if xx_x1654 $then  $place [vars_for_bodyx_xlrx_xph] $else $place [vars_for_outx_x1] $endif 
//begin: basic-block for_bodyx_xlrx_xph
$merge vars_for_bodyx_xlrx_xph
$endmerge
$place [for_bodyx_xlrx_xph_for_body]
//begin: basic-block for_body
$merge for_bodyx_xlrx_xph_for_body for_out_for_body
$phi xx_x11056 :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on for_bodyx_xlrx_xph_for_body ( $cast ($uint<32>) xx_x24) $on for_out_for_body 
$phi xx_x984155 :=  ( $cast ($uint<8>) ( $bitcast ($uint<8> ) _b0 ) ) $on for_bodyx_xlrx_xph_for_body ( $cast ($uint<8>) xx_x9849x_xlcssa) $on for_out_for_body 
$endmerge
xx_x19 := (xx_x11056 << ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) )
$call readModule_convolution (base_addr xx_x19 )  (xx_x20)
xx_x24 := (xx_x11056 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
xx_x25 := (xx_x24 << ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) )
// compare instruction
xx_x26x_xnot := ( ($bitcast ( $int<32>) xx_x25) >  ($bitcast ( $int<32>) in_channels ) )
$if xx_x26x_xnot $then  $place [for_body_if_false] $else $place [for_body_if_true] $endif 
//begin: basic-block if_true
$merge for_body_if_true
$endmerge
$place [if_true_if_next]
//begin: basic-block if_false
$merge for_body_if_false
$endmerge
xx_x32 := (in_channels - xx_x19)
xx_x33 := ($cast ($uint<64>) xx_x32)
$place [if_false_if_next]
//begin: basic-block if_next
$merge if_false_if_next if_true_if_next
$phi xx_x36 :=  ( $cast ($uint<64>) xx_x33) $on if_false_if_next ( $cast ($uint<64>) ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000001000 ) ) $on if_true_if_next 
$endmerge
// compare instruction
xx_x4051 := (( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 )  < xx_x36 )
$if xx_x4051 $then  $place [if_next_for_bodyx_x1x_xlrx_xph] $else $place [if_next_for_out] $endif 
//begin: basic-block for_bodyx_x1x_xlrx_xph
$merge if_next_for_bodyx_x1x_xlrx_xph
$endmerge
$place [for_bodyx_x1x_xlrx_xph_for_bodyx_x1]
//begin: basic-block for_bodyx_x1
$merge for_bodyx_x1x_xlrx_xph_for_bodyx_x1 if_nextx_x8_for_bodyx_x1
$phi xx_x10653 :=  ( $cast ($uint<64>) ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) ) $on for_bodyx_x1x_xlrx_xph_for_bodyx_x1 ( $cast ($uint<64>) xx_x107) $on if_nextx_x8_for_bodyx_x1 
$phi xx_x984952 :=  ( $cast ($uint<8>) xx_x984155) $on for_bodyx_x1x_xlrx_xph_for_bodyx_x1 ( $cast ($uint<8>) xx_x98) $on if_nextx_x8_for_bodyx_x1 
$endmerge
// compare instruction
xx_x42 := (xx_x10653 == ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 )  )
$if xx_x42 $then  $place [for_bodyx_x1_if_truex_x1] $else $place [for_bodyx_x1_if_falsex_x1] $endif 
//begin: basic-block if_truex_x1
$merge for_bodyx_x1_if_truex_x1
$endmerge
xx_x45 := ($slice xx_x20 63 56)
$place [if_truex_x1_if_nextx_x8]
//begin: basic-block if_falsex_x1
$merge for_bodyx_x1_if_falsex_x1
$endmerge
// compare instruction
xx_x48 := (xx_x10653 == ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000001 )  )
$if xx_x48 $then  $place [if_falsex_x1_if_truex_x2] $else $place [if_falsex_x1_if_falsex_x2] $endif 
//begin: basic-block if_truex_x2
$merge if_falsex_x1_if_truex_x2
$endmerge
xx_x51 := ($slice xx_x20 55 48)
$place [if_truex_x2_if_nextx_x7]
//begin: basic-block if_falsex_x2
$merge if_falsex_x1_if_falsex_x2
$endmerge
// compare instruction
xx_x54 := (xx_x10653 == ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000010 )  )
$if xx_x54 $then  $place [if_falsex_x2_if_truex_x3] $else $place [if_falsex_x2_if_falsex_x3] $endif 
//begin: basic-block if_truex_x3
$merge if_falsex_x2_if_truex_x3
$endmerge
xx_x57 := ($slice xx_x20 47 40)
$place [if_truex_x3_if_nextx_x6]
//begin: basic-block if_falsex_x3
$merge if_falsex_x2_if_falsex_x3
$endmerge
// compare instruction
xx_x60 := (xx_x10653 == ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000011 )  )
$if xx_x60 $then  $place [if_falsex_x3_if_truex_x4] $else $place [if_falsex_x3_if_falsex_x4] $endif 
//begin: basic-block if_truex_x4
$merge if_falsex_x3_if_truex_x4
$endmerge
xx_x63 := ($slice xx_x20 39 32)
$place [if_truex_x4_if_nextx_x5]
//begin: basic-block if_falsex_x4
$merge if_falsex_x3_if_falsex_x4
$endmerge
// compare instruction
xx_x66 := (xx_x10653 == ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000100 )  )
$if xx_x66 $then  $place [if_falsex_x4_if_truex_x5] $else $place [if_falsex_x4_if_falsex_x5] $endif 
//begin: basic-block if_truex_x5
$merge if_falsex_x4_if_truex_x5
$endmerge
xx_x69 := ($slice xx_x20 31 24)
$place [if_truex_x5_if_nextx_x4]
//begin: basic-block if_falsex_x5
$merge if_falsex_x4_if_falsex_x5
$endmerge
// compare instruction
xx_x72 := (xx_x10653 == ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000101 )  )
$if xx_x72 $then  $place [if_falsex_x5_if_truex_x6] $else $place [if_falsex_x5_if_falsex_x6] $endif 
//begin: basic-block if_truex_x6
$merge if_falsex_x5_if_truex_x6
$endmerge
xx_x75 := ($slice xx_x20 23 16)
$place [if_truex_x6_if_nextx_x3]
//begin: basic-block if_falsex_x6
$merge if_falsex_x5_if_falsex_x6
$endmerge
// compare instruction
xx_x78 := (xx_x10653 == ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000110 )  )
$if xx_x78 $then  $place [if_falsex_x6_if_truex_x7] $else $place [if_falsex_x6_if_falsex_x7] $endif 
//begin: basic-block if_truex_x7
$merge if_falsex_x6_if_truex_x7
$endmerge
xx_x81 := ($slice xx_x20 15 8)
$place [if_truex_x7_if_nextx_x2]
//begin: basic-block if_falsex_x7
$merge if_falsex_x6_if_falsex_x7
$endmerge
// compare instruction
xx_x84 := (xx_x10653 == ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000111 )  )
$if xx_x84 $then  $place [if_falsex_x7_if_truex_x8] $else $place [if_falsex_x7_if_falsex_x8] $endif 
//begin: basic-block if_truex_x8
$merge if_falsex_x7_if_truex_x8
$endmerge
xx_x87 := ($slice xx_x20 7 0)
$place [if_truex_x8_if_nextx_x1]
//begin: basic-block if_falsex_x8
$merge if_falsex_x7_if_falsex_x8
$endmerge
$place [if_falsex_x8_if_nextx_x1]
//begin: basic-block if_nextx_x1
$merge if_falsex_x8_if_nextx_x1 if_truex_x8_if_nextx_x1
$phi xx_x9848 :=  ( $cast ($uint<8>) xx_x984952) $on if_falsex_x8_if_nextx_x1 ( $cast ($uint<8>) xx_x87) $on if_truex_x8_if_nextx_x1 
$endmerge
$place [if_nextx_x1_if_nextx_x2]
//begin: basic-block if_nextx_x2
$merge if_nextx_x1_if_nextx_x2 if_truex_x7_if_nextx_x2
$phi xx_x9847 :=  ( $cast ($uint<8>) xx_x9848) $on if_nextx_x1_if_nextx_x2 ( $cast ($uint<8>) xx_x81) $on if_truex_x7_if_nextx_x2 
$endmerge
$place [if_nextx_x2_if_nextx_x3]
//begin: basic-block if_nextx_x3
$merge if_nextx_x2_if_nextx_x3 if_truex_x6_if_nextx_x3
$phi xx_x9846 :=  ( $cast ($uint<8>) xx_x9847) $on if_nextx_x2_if_nextx_x3 ( $cast ($uint<8>) xx_x75) $on if_truex_x6_if_nextx_x3 
$endmerge
$place [if_nextx_x3_if_nextx_x4]
//begin: basic-block if_nextx_x4
$merge if_nextx_x3_if_nextx_x4 if_truex_x5_if_nextx_x4
$phi xx_x9845 :=  ( $cast ($uint<8>) xx_x9846) $on if_nextx_x3_if_nextx_x4 ( $cast ($uint<8>) xx_x69) $on if_truex_x5_if_nextx_x4 
$endmerge
$place [if_nextx_x4_if_nextx_x5]
//begin: basic-block if_nextx_x5
$merge if_nextx_x4_if_nextx_x5 if_truex_x4_if_nextx_x5
$phi xx_x9844 :=  ( $cast ($uint<8>) xx_x9845) $on if_nextx_x4_if_nextx_x5 ( $cast ($uint<8>) xx_x63) $on if_truex_x4_if_nextx_x5 
$endmerge
$place [if_nextx_x5_if_nextx_x6]
//begin: basic-block if_nextx_x6
$merge if_nextx_x5_if_nextx_x6 if_truex_x3_if_nextx_x6
$phi xx_x9843 :=  ( $cast ($uint<8>) xx_x9844) $on if_nextx_x5_if_nextx_x6 ( $cast ($uint<8>) xx_x57) $on if_truex_x3_if_nextx_x6 
$endmerge
$place [if_nextx_x6_if_nextx_x7]
//begin: basic-block if_nextx_x7
$merge if_nextx_x6_if_nextx_x7 if_truex_x2_if_nextx_x7
$phi xx_x9842 :=  ( $cast ($uint<8>) xx_x9843) $on if_nextx_x6_if_nextx_x7 ( $cast ($uint<8>) xx_x51) $on if_truex_x2_if_nextx_x7 
$endmerge
$place [if_nextx_x7_if_nextx_x8]
//begin: basic-block if_nextx_x8
$merge if_nextx_x7_if_nextx_x8 if_truex_x1_if_nextx_x8
$phi xx_x98 :=  ( $cast ($uint<8>) xx_x9842) $on if_nextx_x7_if_nextx_x8 ( $cast ($uint<8>) xx_x45) $on if_truex_x1_if_nextx_x8 
$endmerge
$call dequant_inp (xx_x98 inp_scale inp_zero_point )  (xx_x101)
xx_x104 := ( $bitcast ($uint<32> ) ( $cast ( $int< 32 > ) xx_x101) )
in_data_0 := ($bitcast ( $float<8,23> ) xx_x104 )
xx_x107 := (xx_x10653 + ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000001 ) )
// compare instruction
xx_x40 := (xx_x107 < xx_x36 )
$if xx_x40 $then  $place [if_nextx_x8_for_bodyx_x1] $else $place [if_nextx_x8_forx_x1x_xfor_out_crit_edge] $endif 
//begin: basic-block forx_x1x_xfor_out_crit_edge
$merge if_nextx_x8_forx_x1x_xfor_out_crit_edge
$phi split :=  ( $cast ($uint<8>) xx_x98) $on if_nextx_x8_forx_x1x_xfor_out_crit_edge 
$endmerge
$place [forx_x1x_xfor_out_crit_edge_for_out]
//begin: basic-block for_out
$merge forx_x1x_xfor_out_crit_edge_for_out if_next_for_out
$phi xx_x9849x_xlcssa :=  ( $cast ($uint<8>) split) $on forx_x1x_xfor_out_crit_edge_for_out ( $cast ($uint<8>) xx_x984155) $on if_next_for_out 
$endmerge
// compare instruction
xx_x16 := (xx_x24 < groups )
$if xx_x16 $then  $place [for_out_for_body] $else $place [for_out_forx_xfor_outx_x1_crit_edge] $endif 
//begin: basic-block forx_xfor_outx_x1_crit_edge
$merge for_out_forx_xfor_outx_x1_crit_edge
$endmerge
$place [forx_xfor_outx_x1_crit_edge_for_outx_x1]
//begin: basic-block for_outx_x1
$merge forx_xfor_outx_x1_crit_edge_for_outx_x1 vars_for_outx_x1
$endmerge
}
}
$module [fetchKernelLinear] 
 $in (base_addr : $uint<32> groups : $uint<32> chn_no : $uint<32> in_channels : $uint<32> ker_scale : $float<8,23> ker_zero_point : $float<8,23> )
 $out ()
 $is 
{
$branchblock [body] {
//begin: basic-block vars
xx_x24 := (groups * chn_no)
xx_x25 := (xx_x24 << ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) )
// compare instruction
xx_x1854 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  < groups )
$if xx_x1854 $then  $place [vars_for_bodyx_xlrx_xph] $else $place [vars_for_outx_x1] $endif 
//begin: basic-block for_bodyx_xlrx_xph
$merge vars_for_bodyx_xlrx_xph
$endmerge
$place [for_bodyx_xlrx_xph_for_body]
//begin: basic-block for_body
$merge for_bodyx_xlrx_xph_for_body for_out_for_body
$phi xx_x11756 :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on for_bodyx_xlrx_xph_for_body ( $cast ($uint<32>) xx_x31) $on for_out_for_body 
$phi xx_x1054155 :=  ( $cast ($uint<8>) ( $bitcast ($uint<8> ) _b0 ) ) $on for_bodyx_xlrx_xph_for_body ( $cast ($uint<8>) xx_x10549x_xlcssa) $on for_out_for_body 
$endmerge
xx_x21 := (xx_x11756 << ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) )
xx_x26 := (xx_x21 + xx_x25)
$call readModule_convolution (base_addr xx_x26 )  (xx_x27)
xx_x31 := (xx_x11756 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
xx_x32 := (xx_x31 << ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) )
// compare instruction
xx_x33x_xnot := ( ($bitcast ( $int<32>) xx_x32) >  ($bitcast ( $int<32>) in_channels ) )
$if xx_x33x_xnot $then  $place [for_body_if_false] $else $place [for_body_if_true] $endif 
//begin: basic-block if_true
$merge for_body_if_true
$endmerge
$place [if_true_if_next]
//begin: basic-block if_false
$merge for_body_if_false
$endmerge
xx_x39 := (in_channels - xx_x21)
xx_x40 := ($cast ($uint<64>) xx_x39)
$place [if_false_if_next]
//begin: basic-block if_next
$merge if_false_if_next if_true_if_next
$phi xx_x43 :=  ( $cast ($uint<64>) xx_x40) $on if_false_if_next ( $cast ($uint<64>) ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000001000 ) ) $on if_true_if_next 
$endmerge
// compare instruction
xx_x4751 := (( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 )  < xx_x43 )
$if xx_x4751 $then  $place [if_next_for_bodyx_x1x_xlrx_xph] $else $place [if_next_for_out] $endif 
//begin: basic-block for_bodyx_x1x_xlrx_xph
$merge if_next_for_bodyx_x1x_xlrx_xph
$endmerge
$place [for_bodyx_x1x_xlrx_xph_for_bodyx_x1]
//begin: basic-block for_bodyx_x1
$merge for_bodyx_x1x_xlrx_xph_for_bodyx_x1 if_nextx_x8_for_bodyx_x1
$phi xx_x11353 :=  ( $cast ($uint<64>) ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) ) $on for_bodyx_x1x_xlrx_xph_for_bodyx_x1 ( $cast ($uint<64>) xx_x114) $on if_nextx_x8_for_bodyx_x1 
$phi xx_x1054952 :=  ( $cast ($uint<8>) xx_x1054155) $on for_bodyx_x1x_xlrx_xph_for_bodyx_x1 ( $cast ($uint<8>) xx_x105) $on if_nextx_x8_for_bodyx_x1 
$endmerge
// compare instruction
xx_x49 := (xx_x11353 == ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 )  )
$if xx_x49 $then  $place [for_bodyx_x1_if_truex_x1] $else $place [for_bodyx_x1_if_falsex_x1] $endif 
//begin: basic-block if_truex_x1
$merge for_bodyx_x1_if_truex_x1
$endmerge
xx_x52 := ($slice xx_x27 63 56)
$place [if_truex_x1_if_nextx_x8]
//begin: basic-block if_falsex_x1
$merge for_bodyx_x1_if_falsex_x1
$endmerge
// compare instruction
xx_x55 := (xx_x11353 == ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000001 )  )
$if xx_x55 $then  $place [if_falsex_x1_if_truex_x2] $else $place [if_falsex_x1_if_falsex_x2] $endif 
//begin: basic-block if_truex_x2
$merge if_falsex_x1_if_truex_x2
$endmerge
xx_x58 := ($slice xx_x27 55 48)
$place [if_truex_x2_if_nextx_x7]
//begin: basic-block if_falsex_x2
$merge if_falsex_x1_if_falsex_x2
$endmerge
// compare instruction
xx_x61 := (xx_x11353 == ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000010 )  )
$if xx_x61 $then  $place [if_falsex_x2_if_truex_x3] $else $place [if_falsex_x2_if_falsex_x3] $endif 
//begin: basic-block if_truex_x3
$merge if_falsex_x2_if_truex_x3
$endmerge
xx_x64 := ($slice xx_x27 47 40)
$place [if_truex_x3_if_nextx_x6]
//begin: basic-block if_falsex_x3
$merge if_falsex_x2_if_falsex_x3
$endmerge
// compare instruction
xx_x67 := (xx_x11353 == ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000011 )  )
$if xx_x67 $then  $place [if_falsex_x3_if_truex_x4] $else $place [if_falsex_x3_if_falsex_x4] $endif 
//begin: basic-block if_truex_x4
$merge if_falsex_x3_if_truex_x4
$endmerge
xx_x70 := ($slice xx_x27 39 32)
$place [if_truex_x4_if_nextx_x5]
//begin: basic-block if_falsex_x4
$merge if_falsex_x3_if_falsex_x4
$endmerge
// compare instruction
xx_x73 := (xx_x11353 == ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000100 )  )
$if xx_x73 $then  $place [if_falsex_x4_if_truex_x5] $else $place [if_falsex_x4_if_falsex_x5] $endif 
//begin: basic-block if_truex_x5
$merge if_falsex_x4_if_truex_x5
$endmerge
xx_x76 := ($slice xx_x27 31 24)
$place [if_truex_x5_if_nextx_x4]
//begin: basic-block if_falsex_x5
$merge if_falsex_x4_if_falsex_x5
$endmerge
// compare instruction
xx_x79 := (xx_x11353 == ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000101 )  )
$if xx_x79 $then  $place [if_falsex_x5_if_truex_x6] $else $place [if_falsex_x5_if_falsex_x6] $endif 
//begin: basic-block if_truex_x6
$merge if_falsex_x5_if_truex_x6
$endmerge
xx_x82 := ($slice xx_x27 23 16)
$place [if_truex_x6_if_nextx_x3]
//begin: basic-block if_falsex_x6
$merge if_falsex_x5_if_falsex_x6
$endmerge
// compare instruction
xx_x85 := (xx_x11353 == ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000110 )  )
$if xx_x85 $then  $place [if_falsex_x6_if_truex_x7] $else $place [if_falsex_x6_if_falsex_x7] $endif 
//begin: basic-block if_truex_x7
$merge if_falsex_x6_if_truex_x7
$endmerge
xx_x88 := ($slice xx_x27 15 8)
$place [if_truex_x7_if_nextx_x2]
//begin: basic-block if_falsex_x7
$merge if_falsex_x6_if_falsex_x7
$endmerge
// compare instruction
xx_x91 := (xx_x11353 == ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000111 )  )
$if xx_x91 $then  $place [if_falsex_x7_if_truex_x8] $else $place [if_falsex_x7_if_falsex_x8] $endif 
//begin: basic-block if_truex_x8
$merge if_falsex_x7_if_truex_x8
$endmerge
xx_x94 := ($slice xx_x27 7 0)
$place [if_truex_x8_if_nextx_x1]
//begin: basic-block if_falsex_x8
$merge if_falsex_x7_if_falsex_x8
$endmerge
$place [if_falsex_x8_if_nextx_x1]
//begin: basic-block if_nextx_x1
$merge if_falsex_x8_if_nextx_x1 if_truex_x8_if_nextx_x1
$phi xx_x10548 :=  ( $cast ($uint<8>) xx_x1054952) $on if_falsex_x8_if_nextx_x1 ( $cast ($uint<8>) xx_x94) $on if_truex_x8_if_nextx_x1 
$endmerge
$place [if_nextx_x1_if_nextx_x2]
//begin: basic-block if_nextx_x2
$merge if_nextx_x1_if_nextx_x2 if_truex_x7_if_nextx_x2
$phi xx_x10547 :=  ( $cast ($uint<8>) xx_x10548) $on if_nextx_x1_if_nextx_x2 ( $cast ($uint<8>) xx_x88) $on if_truex_x7_if_nextx_x2 
$endmerge
$place [if_nextx_x2_if_nextx_x3]
//begin: basic-block if_nextx_x3
$merge if_nextx_x2_if_nextx_x3 if_truex_x6_if_nextx_x3
$phi xx_x10546 :=  ( $cast ($uint<8>) xx_x10547) $on if_nextx_x2_if_nextx_x3 ( $cast ($uint<8>) xx_x82) $on if_truex_x6_if_nextx_x3 
$endmerge
$place [if_nextx_x3_if_nextx_x4]
//begin: basic-block if_nextx_x4
$merge if_nextx_x3_if_nextx_x4 if_truex_x5_if_nextx_x4
$phi xx_x10545 :=  ( $cast ($uint<8>) xx_x10546) $on if_nextx_x3_if_nextx_x4 ( $cast ($uint<8>) xx_x76) $on if_truex_x5_if_nextx_x4 
$endmerge
$place [if_nextx_x4_if_nextx_x5]
//begin: basic-block if_nextx_x5
$merge if_nextx_x4_if_nextx_x5 if_truex_x4_if_nextx_x5
$phi xx_x10544 :=  ( $cast ($uint<8>) xx_x10545) $on if_nextx_x4_if_nextx_x5 ( $cast ($uint<8>) xx_x70) $on if_truex_x4_if_nextx_x5 
$endmerge
$place [if_nextx_x5_if_nextx_x6]
//begin: basic-block if_nextx_x6
$merge if_nextx_x5_if_nextx_x6 if_truex_x3_if_nextx_x6
$phi xx_x10543 :=  ( $cast ($uint<8>) xx_x10544) $on if_nextx_x5_if_nextx_x6 ( $cast ($uint<8>) xx_x64) $on if_truex_x3_if_nextx_x6 
$endmerge
$place [if_nextx_x6_if_nextx_x7]
//begin: basic-block if_nextx_x7
$merge if_nextx_x6_if_nextx_x7 if_truex_x2_if_nextx_x7
$phi xx_x10542 :=  ( $cast ($uint<8>) xx_x10543) $on if_nextx_x6_if_nextx_x7 ( $cast ($uint<8>) xx_x58) $on if_truex_x2_if_nextx_x7 
$endmerge
$place [if_nextx_x7_if_nextx_x8]
//begin: basic-block if_nextx_x8
$merge if_nextx_x7_if_nextx_x8 if_truex_x1_if_nextx_x8
$phi xx_x105 :=  ( $cast ($uint<8>) xx_x10542) $on if_nextx_x7_if_nextx_x8 ( $cast ($uint<8>) xx_x52) $on if_truex_x1_if_nextx_x8 
$endmerge
$call dequant_ker (xx_x105 ker_scale ker_zero_point )  (xx_x108)
xx_x111 := ( $bitcast ($uint<32> ) ( $cast ( $int< 32 > ) xx_x108) )
conv_ker_data := ($bitcast ( $float<8,23> ) xx_x111 )
xx_x114 := (xx_x11353 + ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000001 ) )
// compare instruction
xx_x47 := (xx_x114 < xx_x43 )
$if xx_x47 $then  $place [if_nextx_x8_for_bodyx_x1] $else $place [if_nextx_x8_forx_x1x_xfor_out_crit_edge] $endif 
//begin: basic-block forx_x1x_xfor_out_crit_edge
$merge if_nextx_x8_forx_x1x_xfor_out_crit_edge
$phi split :=  ( $cast ($uint<8>) xx_x105) $on if_nextx_x8_forx_x1x_xfor_out_crit_edge 
$endmerge
$place [forx_x1x_xfor_out_crit_edge_for_out]
//begin: basic-block for_out
$merge forx_x1x_xfor_out_crit_edge_for_out if_next_for_out
$phi xx_x10549x_xlcssa :=  ( $cast ($uint<8>) split) $on forx_x1x_xfor_out_crit_edge_for_out ( $cast ($uint<8>) xx_x1054155) $on if_next_for_out 
$endmerge
// compare instruction
xx_x18 := (xx_x31 < groups )
$if xx_x18 $then  $place [for_out_for_body] $else $place [for_out_forx_xfor_outx_x1_crit_edge] $endif 
//begin: basic-block forx_xfor_outx_x1_crit_edge
$merge for_out_forx_xfor_outx_x1_crit_edge
$endmerge
$place [forx_xfor_outx_x1_crit_edge_for_outx_x1]
//begin: basic-block for_outx_x1
$merge forx_xfor_outx_x1_crit_edge_for_outx_x1 vars_for_outx_x1
$endmerge
}
}
$module [inputLoaderLinear] 
 $in (num_iterations : $uint<32> stopCond : $uint<32> )
 $out ()
 $is 
{
$branchblock [body] {
//begin: basic-block vars
xx_x32 := (num_iterations - stopCond)
xx_x33 :=  ($bitcast ($uint<64>) ( $cast ($int< 64 > ) xx_x32) )
// compare instruction
xx_x125 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  < num_iterations )
$if xx_x125 $then  $place [vars_for_bodyx_xlrx_xph] $else $place [vars_for_out] $endif 
//begin: basic-block for_bodyx_xlrx_xph
$merge vars_for_bodyx_xlrx_xph
$endmerge
$place [for_bodyx_xlrx_xph_for_body]
//begin: basic-block for_body
//   this is a do-while loop.
$merge for_bodyx_xlrx_xph_for_body
$endmerge
$dopipeline $depth 31 $buffering 7 
$fullrate
$merge $entry $loopback
$phi xx_x398 :=  ( $cast ($uint<32>) xx_x40) $on $loopback ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on $entry
$phi xx_x157 :=  ( $cast ($uint<64>) xx_x16) $on $loopback ( $cast ($uint<64>) ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) ) $on $entry
$phi xx_x206 :=  ( $cast ($uint<1>) xx_x203) $on $loopback ( $cast ($uint<1>) ( $bitcast ($uint<1> ) _b0 ) ) $on $entry
$endmerge
xx_x16 := (xx_x157 + ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000001 ) )
xx_x18 := in_data_0
for_body_if_false_taken := xx_x206
for_body_if_true_taken := ( ~xx_x206)
if_true_exec_guard := for_body_if_true_taken
//begin: basic-block if_true
$guard (if_true_exec_guard) in_data_0 := xx_x18
if_true_if_next_taken := if_true_exec_guard
if_false_exec_guard := for_body_if_false_taken
//begin: basic-block if_false
if_false_if_next_taken := if_false_exec_guard
if_next_exec_guard := (if_false_if_next_taken | if_true_if_next_taken )
//begin: basic-block if_next
$guard (if_next_exec_guard) conv_input_data := xx_x18
// compare instruction
$guard (if_next_exec_guard) xx_x34 := (xx_x16 == xx_x33 )
if_next_if_truex_x1_taken := (if_next_exec_guard & xx_x34)
if_next_if_falsex_x1_taken := (if_next_exec_guard & (~xx_x34))
if_falsex_x1_exec_guard := if_next_if_falsex_x1_taken
//begin: basic-block if_falsex_x1
if_falsex_x1_if_nextx_x1_taken := if_falsex_x1_exec_guard
if_truex_x1_exec_guard := if_next_if_truex_x1_taken
//begin: basic-block if_truex_x1
if_truex_x1_if_nextx_x1_taken := if_truex_x1_exec_guard
//begin: basic-block if_nextx_x1
xx_x203 := ($mux if_falsex_x1_if_nextx_x1_taken ( $bitcast ($uint<1>) xx_x206) ($mux if_truex_x1_if_nextx_x1_taken ( $bitcast ($uint<1>) ( $bitcast ($uint<1> ) _b1 ) ) ($bitcast ($uint<1>) 0)))
xx_x40 := (xx_x398 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
// compare instruction
xx_x12 := (xx_x40 < num_iterations )
if_nextx_x1_forx_xfor_out_crit_edge_taken := ( ~xx_x12)
$while xx_x12
$if if_nextx_x1_forx_xfor_out_crit_edge_taken $then 
  $place [if_nextx_x1_forx_xfor_out_crit_edge]
$endif
//begin: basic-block forx_xfor_out_crit_edge
$merge if_nextx_x1_forx_xfor_out_crit_edge
$endmerge
$place [forx_xfor_out_crit_edge_for_out]
//begin: basic-block for_out
$merge forx_xfor_out_crit_edge_for_out vars_for_out
$endmerge
}
}
$module [kernelLoaderLinear] 
 $in (ker_start_addr : $uint<32> groups : $uint<32> in_channels : $uint<32> out_channels : $uint<32> ker_scale : $float<8,23> ker_zero_point : $float<8,23> )
 $out ()
 $is 
{
$branchblock [body] {
//begin: basic-block vars
// compare instruction
xx_x182 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  < out_channels )
$if xx_x182 $then  $place [vars_for_bodyx_xlrx_xph] $else $place [vars_for_out] $endif 
//begin: basic-block for_bodyx_xlrx_xph
$merge vars_for_bodyx_xlrx_xph
$endmerge
$place [for_bodyx_xlrx_xph_for_body]
//begin: basic-block for_body
$merge for_body_for_body for_bodyx_xlrx_xph_for_body
$phi xx_x263 :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on for_bodyx_xlrx_xph_for_body ( $cast ($uint<32>) xx_x27) $on for_body_for_body 
$endmerge
$call fetchKernelLinear (ker_start_addr groups xx_x263 in_channels ker_scale ker_zero_point )  ()
xx_x27 := (xx_x263 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
// compare instruction
xx_x18 := (xx_x27 < out_channels )
$if xx_x18 $then  $place [for_body_for_body] $else $place [for_body_forx_xfor_out_crit_edge] $endif 
//begin: basic-block forx_xfor_out_crit_edge
$merge for_body_forx_xfor_out_crit_edge
$endmerge
$place [forx_xfor_out_crit_edge_for_out]
//begin: basic-block for_out
$merge forx_xfor_out_crit_edge_for_out vars_for_out
$endmerge
}
}
$module [pooling] 
 $in (pool_cols : $uint<32> )
 $out ()
 $is 
{
$branchblock [body] {
//begin: basic-block vars
// compare instruction
xx_x86 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  < pool_cols )
$if xx_x86 $then  $place [vars_for_bodyx_xlrx_xph] $else $place [vars_for_out] $endif 
//begin: basic-block for_bodyx_xlrx_xph
$merge vars_for_bodyx_xlrx_xph
$endmerge
$place [for_bodyx_xlrx_xph_for_body]
//begin: basic-block for_body
$merge for_bodyx_xlrx_xph_for_body if_nextx_x2_for_body
$phi xx_x707 :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on for_bodyx_xlrx_xph_for_body ( $cast ($uint<32>) xx_x71) $on if_nextx_x2_for_body 
$endmerge
xx_x10 := pool_data_fifo_r0
xx_x12 := pool_data_fifo_r0
xx_x14 := pool_data_lifo_r1
xx_x16 := pool_data_lifo_r1
// compare instruction
xx_x20 := ( ($bitcast ( $int<8>) xx_x10) >=   ($bitcast ( $int<8>) xx_x12 ) )
// compare instruction
xx_x23 := ( ($bitcast ( $int<8>) xx_x10) >=   ($bitcast ( $int<8>) xx_x14 ) )
// compare instruction
xx_x26 := ( ($bitcast ( $int<8>) xx_x10) >=   ($bitcast ( $int<8>) xx_x16 ) )
xx_x27 := (xx_x20 & xx_x23)
xx_x28 := (xx_x27 & xx_x26)
$if xx_x28 $then  $place [for_body_if_true] $else $place [for_body_if_false] $endif 
//begin: basic-block if_true
$merge for_body_if_true
$endmerge
$place [if_true_if_nextx_x2]
//begin: basic-block if_false
$merge for_body_if_false
$endmerge
// compare instruction
xx_x35 := ( ($bitcast ( $int<8>) xx_x12) >=   ($bitcast ( $int<8>) xx_x10 ) )
// compare instruction
xx_x38 := ( ($bitcast ( $int<8>) xx_x12) >=   ($bitcast ( $int<8>) xx_x14 ) )
// compare instruction
xx_x41 := ( ($bitcast ( $int<8>) xx_x12) >=   ($bitcast ( $int<8>) xx_x16 ) )
xx_x42 := (xx_x35 & xx_x38)
xx_x43 := (xx_x42 & xx_x41)
$if xx_x43 $then  $place [if_false_if_truex_x1] $else $place [if_false_if_falsex_x1] $endif 
//begin: basic-block if_truex_x1
$merge if_false_if_truex_x1
$endmerge
$place [if_truex_x1_if_nextx_x1]
//begin: basic-block if_falsex_x1
$merge if_false_if_falsex_x1
$endmerge
// compare instruction
xx_x50 := ( ($bitcast ( $int<8>) xx_x14) >=   ($bitcast ( $int<8>) xx_x10 ) )
// compare instruction
xx_x53 := ( ($bitcast ( $int<8>) xx_x14) >=   ($bitcast ( $int<8>) xx_x12 ) )
// compare instruction
xx_x56 := ( ($bitcast ( $int<8>) xx_x14) >=   ($bitcast ( $int<8>) xx_x16 ) )
xx_x57 := (xx_x50 & xx_x53)
xx_x58 := (xx_x57 & xx_x56)
$if xx_x58 $then  $place [if_falsex_x1_if_truex_x2] $else $place [if_falsex_x1_if_falsex_x2] $endif 
//begin: basic-block if_truex_x2
$merge if_falsex_x1_if_truex_x2
$endmerge
$place [if_truex_x2_if_next]
//begin: basic-block if_falsex_x2
$merge if_falsex_x1_if_falsex_x2
$endmerge
$place [if_falsex_x2_if_next]
//begin: basic-block if_next
$merge if_falsex_x2_if_next if_truex_x2_if_next
$phi xx_x685 :=  ( $cast ($uint<8>) xx_x16) $on if_falsex_x2_if_next ( $cast ($uint<8>) xx_x14) $on if_truex_x2_if_next 
$endmerge
$place [if_next_if_nextx_x1]
//begin: basic-block if_nextx_x1
$merge if_next_if_nextx_x1 if_truex_x1_if_nextx_x1
$phi xx_x684 :=  ( $cast ($uint<8>) xx_x685) $on if_next_if_nextx_x1 ( $cast ($uint<8>) xx_x12) $on if_truex_x1_if_nextx_x1 
$endmerge
$place [if_nextx_x1_if_nextx_x2]
//begin: basic-block if_nextx_x2
$merge if_nextx_x1_if_nextx_x2 if_true_if_nextx_x2
$phi xx_x68 :=  ( $cast ($uint<8>) xx_x684) $on if_nextx_x1_if_nextx_x2 ( $cast ($uint<8>) xx_x10) $on if_true_if_nextx_x2 
$endmerge
pool_out_data := xx_x68
xx_x71 := (xx_x707 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
// compare instruction
xx_x8 := (xx_x71 < pool_cols )
$if xx_x8 $then  $place [if_nextx_x2_for_body] $else $place [if_nextx_x2_forx_xfor_out_crit_edge] $endif 
//begin: basic-block forx_xfor_out_crit_edge
$merge if_nextx_x2_forx_xfor_out_crit_edge
$endmerge
$place [forx_xfor_out_crit_edge_for_out]
//begin: basic-block for_out
$merge forx_xfor_out_crit_edge_for_out vars_for_out
$endmerge
}
}
$module [output_module] 
 $in (out_start_addr : $uint<32> conv_scale : $float<8,23> conv_zero_point : $float<8,23> offsetStart : $uint<32> pool_cols : $uint<32> isLinear : $uint<1> isFlatten : $uint<1> isActivation : $uint<1> out_rows : $uint<32> out_cols : $uint<32> out_channels : $uint<32> out_grp_no : $uint<32> out_chn_ind : $uint<32> )
 $out ()
 $is 
{
  $storage sti5: $uint<64>
  $storage enti5: $uint<64>
$branchblock [body] {
//begin: basic-block vars
sti5 := time_val
$if isLinear $then  $place [vars_if_true] $else $place [vars_if_falsex_x2] $endif 
//begin: basic-block if_true
$merge vars_if_true
$endmerge
// compare instruction
xx_x3752 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  < out_channels )
$if xx_x3752 $then  $place [if_true_for_bodyx_xlrx_xph] $else $place [if_true_for_out] $endif 
//begin: basic-block for_bodyx_xlrx_xph
$merge if_true_for_bodyx_xlrx_xph
$endmerge
$place [for_bodyx_xlrx_xph_for_body]
//begin: basic-block for_body
$merge for_bodyx_xlrx_xph_for_body if_nextx_x1_for_body
$phi xx_x8255 :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on for_bodyx_xlrx_xph_for_body ( $cast ($uint<32>) xx_x83) $on if_nextx_x1_for_body 
$phi xx_x7054 :=  ( $cast ($uint<64>) ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000001000 ) ) $on for_bodyx_xlrx_xph_for_body ( $cast ($uint<64>) xx_x5449) $on if_nextx_x1_for_body 
$phi xx_x7753 :=  ( $cast ($uint<32>) offsetStart) $on for_bodyx_xlrx_xph_for_body ( $cast ($uint<32>) xx_x6550) $on if_nextx_x1_for_body 
$endmerge
xx_x39 := conv_out_data
$if isActivation $then  $place [for_body_if_truex_x1] $else $place [for_body_if_false] $endif 
//begin: basic-block if_truex_x1
$merge for_body_if_truex_x1
$endmerge
$call relu (xx_x39 )  (xx_x44)
$place [if_truex_x1_if_next]
//begin: basic-block if_false
$merge for_body_if_false
$endmerge
$place [if_false_if_next]
//begin: basic-block if_next
$merge if_false_if_next if_truex_x1_if_next
$phi xx_x48 :=  ( $cast ($float<8,23>) xx_x39) $on if_false_if_next ( $cast ($float<8,23>) xx_x44) $on if_truex_x1_if_next 
$endmerge
$call uint_quant (xx_x48 conv_scale conv_zero_point )  (xx_x51)
xx_x55 := (xx_x7054 + ( $bitcast ($uint<64> ) _b1111111111111111111111111111111111111111111111111111111111111111 ) )
xx_x56 := (xx_x55 << ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000011 ) )
xx_x57 :=  ($bitcast ($uint<64>)  xx_x51) 
xx_x58 := (xx_x57 << xx_x56)
xx_x62 := (( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000001 )  << xx_x55)
xx_x68 := ($cast ($uint<8>) xx_x62)
$call writeModule_convolution (out_start_addr xx_x7753 xx_x58 xx_x68 )  (d1)
// compare instruction
xx_x74 := (xx_x55 == ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 )  )
$if xx_x74 $then  $place [if_next_if_truex_x2] $else $place [if_next_if_falsex_x1] $endif 
//begin: basic-block if_truex_x2
$merge if_next_if_truex_x2
$endmerge
xx_x78 := (xx_x7753 + ( $bitcast ($uint<32> ) _b00000000000000000000000000001000 ) )
$place [if_truex_x2_if_nextx_x1]
//begin: basic-block if_falsex_x1
$merge if_next_if_falsex_x1
$endmerge
$place [if_falsex_x1_if_nextx_x1]
//begin: basic-block if_nextx_x1
$merge if_falsex_x1_if_nextx_x1 if_truex_x2_if_nextx_x1
$phi xx_x6550 :=  ( $cast ($uint<32>) xx_x7753) $on if_falsex_x1_if_nextx_x1 ( $cast ($uint<32>) xx_x78) $on if_truex_x2_if_nextx_x1 
$phi xx_x5449 :=  ( $cast ($uint<64>) xx_x55) $on if_falsex_x1_if_nextx_x1 ( $cast ($uint<64>) ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000001000 ) ) $on if_truex_x2_if_nextx_x1 
$endmerge
xx_x83 := (xx_x8255 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
// compare instruction
xx_x37 := (xx_x83 < out_channels )
$if xx_x37 $then  $place [if_nextx_x1_for_body] $else $place [if_nextx_x1_forx_xfor_out_crit_edge] $endif 
//begin: basic-block forx_xfor_out_crit_edge
$merge if_nextx_x1_forx_xfor_out_crit_edge
$endmerge
$place [forx_xfor_out_crit_edge_for_out]
//begin: basic-block for_out
$merge forx_xfor_out_crit_edge_for_out if_true_for_out
$endmerge
$place [for_out_if_nextx_x9]
//begin: basic-block if_falsex_x2
$merge vars_if_falsex_x2
$endmerge
xx_x97 := (out_rows * out_cols)
xx_x129 := (out_cols << ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
xx_x130 := ($cast ($uint<64>) xx_x129)
xx_x177 := (out_channels * pool_cols)
xx_x179 := ($cast ($uint<64>) xx_x177)
xx_x183 := ($cast ($uint<64>) out_channels)
xx_x187 := (out_grp_no << ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) )
xx_x192 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000111 )  - out_chn_ind)
xx_x193 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000001 )  << xx_x192)
xx_x197 := (out_chn_ind << ( $bitcast ($uint<32> ) _b00000000000000000000000000000011 ) )
xx_x198 := (( $bitcast ($uint<32> ) _b00000000000000000000000000111000 )  - xx_x197)
xx_x208 := ($cast ($uint<8>) xx_x193)
xx_x216 := ($cast ($uint<64>) pool_cols)
xx_x239 := ($cast ($uint<64>) out_cols)
// compare instruction
xx_x10167 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  < xx_x97 )
$if xx_x10167 $then  $place [if_falsex_x2_for_bodyx_x1x_xlrx_xph] $else $place [if_falsex_x2_for_outx_x2] $endif 
//begin: basic-block for_bodyx_x1x_xlrx_xph
$merge if_falsex_x2_for_bodyx_x1x_xlrx_xph
$endmerge
$place [for_bodyx_x1x_xlrx_xph_for_bodyx_x1]
//begin: basic-block for_bodyx_x1
$merge for_bodyx_x1x_xlrx_xph_for_bodyx_x1 if_nextx_x8_for_bodyx_x1
$phi xx_x24875 :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on for_bodyx_x1x_xlrx_xph_for_bodyx_x1 ( $cast ($uint<32>) xx_x249) $on if_nextx_x8_for_bodyx_x1 
$phi xx_x24374 :=  ( $cast ($uint<64>) ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) ) $on for_bodyx_x1x_xlrx_xph_for_bodyx_x1 ( $cast ($uint<64>) xx_x1173) $on if_nextx_x8_for_bodyx_x1 
$phi xx_x23173 :=  ( $cast ($uint<64>) ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000001 ) ) $on for_bodyx_x1x_xlrx_xph_for_bodyx_x1 ( $cast ($uint<64>) xx_x232) $on if_nextx_x8_for_bodyx_x1 
$phi xx_x23472 :=  ( $cast ($uint<64>) ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) ) $on for_bodyx_x1x_xlrx_xph_for_bodyx_x1 ( $cast ($uint<64>) xx_x23415) $on if_nextx_x8_for_bodyx_x1 
$phi xx_x1782371 :=  ( $cast ($uint<64>) ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) ) $on for_bodyx_x1x_xlrx_xph_for_bodyx_x1 ( $cast ($uint<64>) xx_x17820) $on if_nextx_x8_for_bodyx_x1 
$phi xx_x1822670 :=  ( $cast ($uint<64>) ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) ) $on for_bodyx_x1x_xlrx_xph_for_bodyx_x1 ( $cast ($uint<64>) xx_x18224) $on if_nextx_x8_for_bodyx_x1 
$phi xx_x1463969 :=  ( $cast ($uint<64>) ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000001000 ) ) $on for_bodyx_x1x_xlrx_xph_for_bodyx_x1 ( $cast ($uint<64>) xx_x14636) $on if_nextx_x8_for_bodyx_x1 
$phi xx_x1574568 :=  ( $cast ($uint<32>) offsetStart) $on for_bodyx_x1x_xlrx_xph_for_bodyx_x1 ( $cast ($uint<32>) xx_x15741) $on if_nextx_x8_for_bodyx_x1 
$endmerge
xx_x103 := conv_out_data
accelerator_reg[14] := ( $bitcast ($uint<32> ) xx_x103)
// accelerator_reg[15] := ($slice time_taken2 31 0)
$if isActivation $then  $place [for_bodyx_x1_if_truex_x3] $else $place [for_bodyx_x1_if_falsex_x3] $endif 
//begin: basic-block if_truex_x3
$merge for_bodyx_x1_if_truex_x3
$endmerge
$call relu (xx_x103 )  (xx_x108)
$place [if_truex_x3_if_nextx_x2]
//begin: basic-block if_falsex_x3
$merge for_bodyx_x1_if_falsex_x3
$endmerge
$place [if_falsex_x3_if_nextx_x2]
//begin: basic-block if_nextx_x2
$merge if_falsex_x3_if_nextx_x2 if_truex_x3_if_nextx_x2
$phi xx_x112 :=  ( $cast ($float<8,23>) xx_x103) $on if_falsex_x3_if_nextx_x2 ( $cast ($float<8,23>) xx_x108) $on if_truex_x3_if_nextx_x2 
$endmerge
$call uint_quant (xx_x112 conv_scale conv_zero_point )  (xx_x115)
iNsTr_16 := (xx_x24374 & ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000001 ) )
// compare instruction
xx_x119 := (iNsTr_16 == ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 )  )
$if xx_x119 $then  $place [if_nextx_x2_if_truex_x4] $else $place [if_nextx_x2_if_falsex_x4] $endif 
//begin: basic-block if_truex_x4
$merge if_nextx_x2_if_truex_x4
$endmerge
pool_data_fifo_r0 := xx_x115
$place [if_truex_x4_if_nextx_x3]
//begin: basic-block if_falsex_x4
$merge if_nextx_x2_if_falsex_x4
$endmerge
pool_data_lifo_r1 := xx_x115
$place [if_falsex_x4_if_nextx_x3]
//begin: basic-block if_nextx_x3
$merge if_falsex_x4_if_nextx_x3 if_truex_x4_if_nextx_x3
$endmerge
// compare instruction
xx_x131 := (xx_x23173 == xx_x130 )
$if xx_x131 $then  $place [if_nextx_x3_if_truex_x5] $else $place [if_nextx_x3_if_falsex_x8] $endif 
//begin: basic-block if_truex_x5
$merge if_nextx_x3_if_truex_x5
$endmerge
$call pooling (pool_cols )  ()
// compare instruction
xx_x13956 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  < pool_cols )
$if xx_x13956 $then  $place [if_truex_x5_for_bodyx_x2x_xlrx_xph] $else $place [if_truex_x5_for_outx_x1] $endif 
//begin: basic-block for_bodyx_x2x_xlrx_xph
$merge if_truex_x5_for_bodyx_x2x_xlrx_xph
$endmerge
$place [for_bodyx_x2x_xlrx_xph_for_bodyx_x2]
//begin: basic-block for_bodyx_x2
$merge for_bodyx_x2x_xlrx_xph_for_bodyx_x2 if_nextx_x6_for_bodyx_x2
$phi xx_x22563 :=  ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on for_bodyx_x2x_xlrx_xph_for_bodyx_x2 ( $cast ($uint<32>) xx_x226) $on if_nextx_x6_for_bodyx_x2 
$phi xx_x22061 :=  ( $cast ($uint<64>) xx_x1782371) $on for_bodyx_x2x_xlrx_xph_for_bodyx_x2 ( $cast ($uint<64>) xx_x17821) $on if_nextx_x6_for_bodyx_x2 
$phi xx_x21159 :=  ( $cast ($uint<64>) xx_x1822670) $on for_bodyx_x2x_xlrx_xph_for_bodyx_x2 ( $cast ($uint<64>) xx_x18227) $on if_nextx_x6_for_bodyx_x2 
$phi xx_x16258 :=  ( $cast ($uint<64>) xx_x1463969) $on for_bodyx_x2x_xlrx_xph_for_bodyx_x2 ( $cast ($uint<64>) xx_x14637) $on if_nextx_x6_for_bodyx_x2 
$phi xx_x16957 :=  ( $cast ($uint<32>) xx_x1574568) $on for_bodyx_x2x_xlrx_xph_for_bodyx_x2 ( $cast ($uint<32>) xx_x15742) $on if_nextx_x6_for_bodyx_x2 
$endmerge
xx_x141 := pool_out_data
$if isFlatten $then  $place [for_bodyx_x2_if_truex_x6] $else $place [for_bodyx_x2_if_falsex_x6] $endif 
//begin: basic-block if_truex_x6
$merge for_bodyx_x2_if_truex_x6
$endmerge
xx_x147 := (xx_x16258 + ( $bitcast ($uint<64> ) _b1111111111111111111111111111111111111111111111111111111111111111 ) )
xx_x148 := (xx_x147 << ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000011 ) )
xx_x149 :=  ($bitcast ($uint<64>) xx_x141) 
xx_x150 := (xx_x149 << xx_x148)
xx_x154 := (( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000001 )  << xx_x147)
xx_x160 := ($cast ($uint<8>) xx_x154)
$call writeModule_convolution (out_start_addr xx_x16957 xx_x150 xx_x160 )  (d2)
// compare instruction
xx_x166 := (xx_x147 == ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 )  )
$if xx_x166 $then  $place [if_truex_x6_if_truex_x7] $else $place [if_truex_x6_if_falsex_x5] $endif 
//begin: basic-block if_truex_x7
$merge if_truex_x6_if_truex_x7
$endmerge
xx_x170 := (xx_x16957 + ( $bitcast ($uint<32> ) _b00000000000000000000000000001000 ) )
$place [if_truex_x7_if_nextx_x4]
//begin: basic-block if_falsex_x5
$merge if_truex_x6_if_falsex_x5
$endmerge
$place [if_falsex_x5_if_nextx_x4]
//begin: basic-block if_nextx_x4
$merge if_falsex_x5_if_nextx_x4 if_truex_x7_if_nextx_x4
$phi xx_x15743 :=  ( $cast ($uint<32>) xx_x16957) $on if_falsex_x5_if_nextx_x4 ( $cast ($uint<32>) xx_x170) $on if_truex_x7_if_nextx_x4 
$phi xx_x14640 :=  ( $cast ($uint<64>) xx_x147) $on if_falsex_x5_if_nextx_x4 ( $cast ($uint<64>) ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000001000 ) ) $on if_truex_x7_if_nextx_x4 
$endmerge
$place [if_nextx_x4_if_nextx_x5]
//begin: basic-block if_falsex_x6
$merge for_bodyx_x2_if_falsex_x6
$endmerge
xx_x180 := (xx_x22061 * xx_x179)
xx_x184 := (xx_x21159 * xx_x183)
xx_x185 := (xx_x180 + xx_x184)
xx_x199 :=  ($bitcast ($uint<64>) xx_x141) 
xx_x200 := (xx_x199 << ($bitcast ($uint<64>)xx_x198))
// xx_x201 :=  ($bitcast ($uint<64>) ( $cast ($int< 64 > ) xx_x200) )
iNsTr_36 := ($cast ($uint<32>) xx_x185)
xx_x207 := (xx_x187 + iNsTr_36)
$call writeModule_convolution (out_start_addr xx_x207 xx_x200 xx_x208 )  (d3)
$place [if_falsex_x6_if_nextx_x5]
//begin: basic-block if_nextx_x5
$merge if_falsex_x6_if_nextx_x5 if_nextx_x4_if_nextx_x5
$phi xx_x22062 :=  ( $cast ($uint<64>) xx_x22061) $on if_falsex_x6_if_nextx_x5 ( $cast ($uint<64>) xx_x22061) $on if_nextx_x4_if_nextx_x5 
$phi xx_x21160 :=  ( $cast ($uint<64>) xx_x21159) $on if_falsex_x6_if_nextx_x5 ( $cast ($uint<64>) xx_x21159) $on if_nextx_x4_if_nextx_x5 
$phi xx_x15742 :=  ( $cast ($uint<32>) xx_x16957) $on if_falsex_x6_if_nextx_x5 ( $cast ($uint<32>) xx_x15743) $on if_nextx_x4_if_nextx_x5 
$phi xx_x14637 :=  ( $cast ($uint<64>) xx_x16258) $on if_falsex_x6_if_nextx_x5 ( $cast ($uint<64>) xx_x14640) $on if_nextx_x4_if_nextx_x5 
$endmerge
xx_x212 := (xx_x21160 + ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000001 ) )
// compare instruction
xx_x217 := (xx_x212 == xx_x216 )
$if xx_x217 $then  $place [if_nextx_x5_if_truex_x8] $else $place [if_nextx_x5_if_falsex_x7] $endif 
//begin: basic-block if_truex_x8
$merge if_nextx_x5_if_truex_x8
$endmerge
xx_x221 := (xx_x22062 + ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000001 ) )
$place [if_truex_x8_if_nextx_x6]
//begin: basic-block if_falsex_x7
$merge if_nextx_x5_if_falsex_x7
$endmerge
$place [if_falsex_x7_if_nextx_x6]
//begin: basic-block if_nextx_x6
$merge if_falsex_x7_if_nextx_x6 if_truex_x8_if_nextx_x6
$phi xx_x18227 :=  ( $cast ($uint<64>) xx_x212) $on if_falsex_x7_if_nextx_x6 ( $cast ($uint<64>) ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) ) $on if_truex_x8_if_nextx_x6 
$phi xx_x17821 :=  ( $cast ($uint<64>) xx_x22062) $on if_falsex_x7_if_nextx_x6 ( $cast ($uint<64>) xx_x221) $on if_truex_x8_if_nextx_x6 
$endmerge
xx_x226 := (xx_x22563 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
// compare instruction
xx_x139 := (xx_x226 < pool_cols )
$if xx_x139 $then  $place [if_nextx_x6_for_bodyx_x2] $else $place [if_nextx_x6_forx_x2x_xfor_outx_x1_crit_edge] $endif 
//begin: basic-block forx_x2x_xfor_outx_x1_crit_edge
$merge if_nextx_x6_forx_x2x_xfor_outx_x1_crit_edge
$phi split :=  ( $cast ($uint<32>) xx_x15742) $on if_nextx_x6_forx_x2x_xfor_outx_x1_crit_edge 
$phi split64 :=  ( $cast ($uint<64>) xx_x14637) $on if_nextx_x6_forx_x2x_xfor_outx_x1_crit_edge 
$phi split65 :=  ( $cast ($uint<64>) xx_x18227) $on if_nextx_x6_forx_x2x_xfor_outx_x1_crit_edge 
$phi split66 :=  ( $cast ($uint<64>) xx_x17821) $on if_nextx_x6_forx_x2x_xfor_outx_x1_crit_edge 
$endmerge
$place [forx_x2x_xfor_outx_x1_crit_edge_for_outx_x1]
//begin: basic-block for_outx_x1
$merge forx_x2x_xfor_outx_x1_crit_edge_for_outx_x1 if_truex_x5_for_outx_x1
$phi xx_x169x_xlcssa :=  ( $cast ($uint<32>) split) $on forx_x2x_xfor_outx_x1_crit_edge_for_outx_x1 ( $cast ($uint<32>) xx_x1574568) $on if_truex_x5_for_outx_x1 
$phi xx_x162x_xlcssa :=  ( $cast ($uint<64>) split64) $on forx_x2x_xfor_outx_x1_crit_edge_for_outx_x1 ( $cast ($uint<64>) xx_x1463969) $on if_truex_x5_for_outx_x1 
$phi xx_x211x_xlcssa :=  ( $cast ($uint<64>) split65) $on forx_x2x_xfor_outx_x1_crit_edge_for_outx_x1 ( $cast ($uint<64>) xx_x1822670) $on if_truex_x5_for_outx_x1 
$phi xx_x220x_xlcssa :=  ( $cast ($uint<64>) split66) $on forx_x2x_xfor_outx_x1_crit_edge_for_outx_x1 ( $cast ($uint<64>) xx_x1782371) $on if_truex_x5_for_outx_x1 
$endmerge
$place [for_outx_x1_if_nextx_x7]
//begin: basic-block if_falsex_x8
$merge if_nextx_x3_if_falsex_x8
$endmerge
$place [if_falsex_x8_if_nextx_x7]
//begin: basic-block if_nextx_x7
$merge for_outx_x1_if_nextx_x7 if_falsex_x8_if_nextx_x7
$phi xx_x15741 :=  ( $cast ($uint<32>) xx_x1574568) $on if_falsex_x8_if_nextx_x7 ( $cast ($uint<32>) xx_x169x_xlcssa) $on for_outx_x1_if_nextx_x7 
$phi xx_x14636 :=  ( $cast ($uint<64>) xx_x1463969) $on if_falsex_x8_if_nextx_x7 ( $cast ($uint<64>) xx_x162x_xlcssa) $on for_outx_x1_if_nextx_x7 
$phi xx_x18224 :=  ( $cast ($uint<64>) xx_x1822670) $on if_falsex_x8_if_nextx_x7 ( $cast ($uint<64>) xx_x211x_xlcssa) $on for_outx_x1_if_nextx_x7 
$phi xx_x17820 :=  ( $cast ($uint<64>) xx_x1782371) $on if_falsex_x8_if_nextx_x7 ( $cast ($uint<64>) xx_x220x_xlcssa) $on for_outx_x1_if_nextx_x7 
$endmerge
xx_x232 := (xx_x23173 + ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000001 ) )
xx_x235 := (xx_x23472 + ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000001 ) )
// compare instruction
xx_x240 := (xx_x235 == xx_x239 )
$if xx_x240 $then  $place [if_nextx_x7_if_truex_x9] $else $place [if_nextx_x7_if_falsex_x9] $endif 
//begin: basic-block if_truex_x9
$merge if_nextx_x7_if_truex_x9
$endmerge
xx_x244 := (xx_x24374 + ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000001 ) )
$place [if_truex_x9_if_nextx_x8]
//begin: basic-block if_falsex_x9
$merge if_nextx_x7_if_falsex_x9
$endmerge
$place [if_falsex_x9_if_nextx_x8]
//begin: basic-block if_nextx_x8
$merge if_falsex_x9_if_nextx_x8 if_truex_x9_if_nextx_x8
$phi xx_x23415 :=  ( $cast ($uint<64>) xx_x235) $on if_falsex_x9_if_nextx_x8 ( $cast ($uint<64>) ( $bitcast ($uint<64> ) _b0000000000000000000000000000000000000000000000000000000000000000 ) ) $on if_truex_x9_if_nextx_x8 
$phi xx_x1173 :=  ( $cast ($uint<64>) xx_x24374) $on if_falsex_x9_if_nextx_x8 ( $cast ($uint<64>) xx_x244) $on if_truex_x9_if_nextx_x8 
$endmerge
xx_x249 := (xx_x24875 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
// compare instruction
xx_x101 := (xx_x249 < xx_x97 )
$if xx_x101 $then  $place [if_nextx_x8_for_bodyx_x1] $else $place [if_nextx_x8_forx_x1x_xfor_outx_x2_crit_edge] $endif 
//begin: basic-block forx_x1x_xfor_outx_x2_crit_edge
$merge if_nextx_x8_forx_x1x_xfor_outx_x2_crit_edge
$endmerge
$place [forx_x1x_xfor_outx_x2_crit_edge_for_outx_x2]
//begin: basic-block for_outx_x2
$merge forx_x1x_xfor_outx_x2_crit_edge_for_outx_x2 if_falsex_x2_for_outx_x2
$endmerge
$place [for_outx_x2_if_nextx_x9]
//begin: basic-block if_nextx_x9
$merge for_out_if_nextx_x9 for_outx_x2_if_nextx_x9
$endmerge
enti5 := time_val
// accelerator_reg[6] := ($slice (enti5 - sti5) 31 0)
}
}
$module [compute_mul] 
 $in (ker_size : $uint<32> num_chn_present : $uint<32> num_iterations : $uint<32> )
 $out ()
 $is 
{
  $storage sti: $uint<64>
  $storage enti: $uint<64>

$branchblock [body] {
//begin: basic-block vars
xx_x35 := (ker_size * ker_size)
xx_x37 := (xx_x35 * num_chn_present)
// compare instruction
xx_x138 := ( ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) <   ($bitcast ( $int<32>) num_iterations ) )
$if xx_x138 $then  $place [vars_while_bodyx_xlrx_xph] $else $place [vars_while_out] $endif 
//begin: basic-block while_bodyx_xlrx_xph
$merge vars_while_bodyx_xlrx_xph
$endmerge
$place [while_bodyx_xlrx_xph_while_body]
//begin: basic-block while_body
//   this is a do-while loop.
$merge while_bodyx_xlrx_xph_while_body
$endmerge
sti := time_val
$dopipeline $depth 31 $buffering 7 
$fullrate
$merge $entry $loopback
$phi xx_x2910 :=  ( $cast ($uint<32>) xx_x112) $on $loopback ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on $entry
$phi xx_x269 :=  ( $cast ($uint<32>) xx_x264) $on $loopback ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on $entry
$endmerge
xx_x16 := conv_input_data
xx_x18 := conv_ker_data
$call fp32_mul_for_ecg (xx_x16 xx_x18 )  (xx_x22)
accumulator_pipe_even := xx_x22
xx_x27 := (xx_x269 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
// compare instruction
xx_x38 := ( ($bitcast ( $int<32>) xx_x27) <   ($bitcast ( $int<32>) xx_x37 ) )
while_body_if_true_taken := xx_x38
while_body_if_false_taken := ( ~xx_x38)
if_false_exec_guard := while_body_if_false_taken
//begin: basic-block if_false
$guard (if_false_exec_guard) xx_x30 := (xx_x2910 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
if_false_if_next_taken := if_false_exec_guard
if_true_exec_guard := while_body_if_true_taken
//begin: basic-block if_true
$guard (if_true_exec_guard) xx_x40 := conv_input_data
$guard (if_true_exec_guard) xx_x42 := conv_ker_data
$guard (if_true_exec_guard) $call fp32_mul_for_ecg (xx_x40 xx_x42 )  (xx_x46)
$guard (if_true_exec_guard) accumulator_pipe_odd := xx_x46
$guard (if_true_exec_guard) xx_x51 := (xx_x269 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
$guard (if_true_exec_guard) xx_x54 := (xx_x2910 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
if_true_if_next_taken := if_true_exec_guard
if_next_exec_guard := (if_false_if_next_taken | if_true_if_next_taken )
//begin: basic-block if_next
xx_x60 := ($mux if_false_if_next_taken ( $bitcast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) ($mux if_true_if_next_taken ( $bitcast ($uint<32>) xx_x51) ($bitcast ($uint<32>) 0)))
xx_x112 := ($mux if_false_if_next_taken ( $bitcast ($uint<32>) xx_x30) ($mux if_true_if_next_taken ( $bitcast ($uint<32>) xx_x54) ($bitcast ($uint<32>) 0)))
// compare instruction
$guard (if_next_exec_guard) xx_x66 := (xx_x60 == xx_x37 )
if_next_if_truex_x1_taken := (if_next_exec_guard & xx_x66)
if_next_if_falsex_x1_taken := (if_next_exec_guard & (~xx_x66))
if_falsex_x1_exec_guard := if_next_if_falsex_x1_taken
//begin: basic-block if_falsex_x1
if_falsex_x1_if_nextx_x1_taken := if_falsex_x1_exec_guard
if_truex_x1_exec_guard := if_next_if_truex_x1_taken
//begin: basic-block if_truex_x1
if_truex_x1_if_nextx_x1_taken := if_truex_x1_exec_guard
//begin: basic-block if_nextx_x1
xx_x264 := ($mux if_falsex_x1_if_nextx_x1_taken ( $bitcast ($uint<32>) xx_x60) ($mux if_truex_x1_if_nextx_x1_taken ( $bitcast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) ($bitcast ($uint<32>) 0)))
// compare instruction
xx_x13 := ( ($bitcast ( $int<32>) xx_x112) <   ($bitcast ( $int<32>) num_iterations ) )
if_nextx_x1_whilex_xwhile_out_crit_edge_taken := ( ~xx_x13)
$while xx_x13
$if if_nextx_x1_whilex_xwhile_out_crit_edge_taken $then 
  $place [if_nextx_x1_whilex_xwhile_out_crit_edge]
$endif
//begin: basic-block whilex_xwhile_out_crit_edge
$merge if_nextx_x1_whilex_xwhile_out_crit_edge
$endmerge
$place [whilex_xwhile_out_crit_edge_while_out]
//begin: basic-block while_out
$merge vars_while_out whilex_xwhile_out_crit_edge_while_out
$endmerge
enti := time_val
accelerator_reg[10] := ($slice (enti - sti) 31 0)
}
}
$module [compute_accumulate] 
 $in (ker_size : $uint<32> num_chn_present : $uint<32> num_iterations : $uint<32> )
 $out ()
 $is 
{
  $storage sti1: $uint<64>
  $storage enti1: $uint<64>
$branchblock [body] {
//begin: basic-block vars
xx_x12 := (ker_size * ker_size)
xx_x14 := (xx_x12 * num_chn_present)
// compare instruction
xx_x2010 := ( ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) <   ($bitcast ( $int<32>) num_iterations ) )
$if xx_x2010 $then  $place [vars_while_bodyx_xlrx_xph] $else $place [vars_while_out] $endif 
//begin: basic-block while_bodyx_xlrx_xph
$merge vars_while_bodyx_xlrx_xph
$endmerge
$place [while_bodyx_xlrx_xph_while_body]
//begin: basic-block while_body
//   this is a do-while loop.
$merge while_bodyx_xlrx_xph_while_body
$endmerge
sti1 := time_val
$dopipeline $depth 31 $buffering 7 
$fullrate
$merge $entry $loopback
$phi xx_x2813 :=  ( $cast ($uint<32>) xx_x182) $on $loopback ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on $entry
$phi xx_x2512 :=  ( $cast ($uint<32>) xx_x254) $on $loopback ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on $entry
$phi xx_x4811 :=  ( $cast ($float<8,23>) xx_x487) $on $loopback ( $cast ($float<8,23>) ( $bitcast ($float<8,23> ) _h0 ) ) $on $entry
$endmerge
xx_x23 := accumulator_pipe_even
xx_x26 := (xx_x2512 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
// compare instruction
xx_x33 := ( ($bitcast ( $int<32>) xx_x26) <   ($bitcast ( $int<32>) xx_x14 ) )
while_body_if_true_taken := xx_x33
while_body_if_false_taken := ( ~xx_x33)
if_false_exec_guard := while_body_if_false_taken
//begin: basic-block if_false
$guard (if_false_exec_guard) xx_x29 := (xx_x2813 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
if_false_if_next_taken := if_false_exec_guard
if_true_exec_guard := while_body_if_true_taken
//begin: basic-block if_true
$guard (if_true_exec_guard) xx_x35 := accumulator_pipe_odd
$guard (if_true_exec_guard) xx_x38 := (xx_x2512 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
$guard (if_true_exec_guard) xx_x41 := (xx_x2813 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
if_true_if_next_taken := if_true_exec_guard
if_next_exec_guard := (if_false_if_next_taken | if_true_if_next_taken )
//begin: basic-block if_next
xx_x56 := ($mux if_false_if_next_taken ( $bitcast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) ($mux if_true_if_next_taken ( $bitcast ($uint<32>) xx_x38) ($bitcast ($uint<32>) 0)))
xx_x50 := ($mux if_false_if_next_taken ( $bitcast ($float<8,23>) ( $bitcast ($float<8,23> ) _h0 ) ) ($mux if_true_if_next_taken ( $bitcast ($float<8,23>) xx_x35) ($bitcast ($float<8,23>) 0)))
xx_x182 := ($mux if_false_if_next_taken ( $bitcast ($uint<32>) xx_x29) ($mux if_true_if_next_taken ( $bitcast ($uint<32>) xx_x41) ($bitcast ($uint<32>) 0)))
$guard (if_next_exec_guard) $call fp32_add_for_ecg (xx_x23 xx_x50 )  (xx_x51)
$guard (if_next_exec_guard) $call fp32_add_for_ecg (xx_x4811 xx_x51 )  (xx_x52)
// compare instruction
$guard (if_next_exec_guard) xx_x55 := (xx_x56 == ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  )
// compare instruction
$guard (if_next_exec_guard) xx_x58 := (xx_x56 == xx_x14 )
$guard (if_next_exec_guard) xx_x59 := (xx_x55 | xx_x58)
if_next_if_truex_x1_taken := (if_next_exec_guard & xx_x59)
if_next_if_falsex_x1_taken := (if_next_exec_guard & (~xx_x59))
if_falsex_x1_exec_guard := if_next_if_falsex_x1_taken
//begin: basic-block if_falsex_x1
if_falsex_x1_if_nextx_x1_taken := if_falsex_x1_exec_guard
if_truex_x1_exec_guard := if_next_if_truex_x1_taken
//begin: basic-block if_truex_x1
$guard (if_truex_x1_exec_guard) conv_out_data := xx_x52
accelerator_reg[15] := ( $bitcast ($uint<32> ) xx_x52)
if_truex_x1_if_nextx_x1_taken := if_truex_x1_exec_guard
//begin: basic-block if_nextx_x1
xx_x487 := ($mux if_falsex_x1_if_nextx_x1_taken ( $bitcast ($float<8,23>) xx_x52) ($mux if_truex_x1_if_nextx_x1_taken ( $bitcast ($float<8,23>) ( $bitcast ($float<8,23> ) _h0 ) ) ($bitcast ($float<8,23>) 0)))
xx_x254 := ($mux if_falsex_x1_if_nextx_x1_taken ( $bitcast ($uint<32>) xx_x56) ($mux if_truex_x1_if_nextx_x1_taken ( $bitcast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) ($bitcast ($uint<32>) 0)))
// compare instruction
xx_x20 := ( ($bitcast ( $int<32>) xx_x182) <   ($bitcast ( $int<32>) num_iterations ) )
if_nextx_x1_whilex_xwhile_out_crit_edge_taken := ( ~xx_x20)
$while xx_x20
$if if_nextx_x1_whilex_xwhile_out_crit_edge_taken $then 
  $place [if_nextx_x1_whilex_xwhile_out_crit_edge]
$endif
//begin: basic-block whilex_xwhile_out_crit_edge
$merge if_nextx_x1_whilex_xwhile_out_crit_edge
$endmerge
$place [whilex_xwhile_out_crit_edge_while_out]
//begin: basic-block while_out
$merge vars_while_out whilex_xwhile_out_crit_edge_while_out
$endmerge
enti1 := time_val
accelerator_reg[11] := ($slice (enti1 - sti1) 31 0)
}
}
$module [compute_mul_linear] 
 $in (num_iterations : $uint<32> )
 $out ()
 $is 
{
$branchblock [body] {
//begin: basic-block vars
// compare instruction
xx_x82 := (( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  < num_iterations )
$if xx_x82 $then  $place [vars_for_bodyx_xlrx_xph] $else $place [vars_for_out] $endif 
//begin: basic-block for_bodyx_xlrx_xph
$merge vars_for_bodyx_xlrx_xph
$endmerge
$place [for_bodyx_xlrx_xph_for_body]
//begin: basic-block for_body
//   this is a do-while loop.
$merge for_bodyx_xlrx_xph_for_body
$endmerge
$dopipeline $depth 31 $buffering 7 
$fullrate
$merge $entry $loopback
$phi xx_x283 :=  ( $cast ($uint<32>) xx_x29) $on $loopback ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on $entry
$endmerge
xx_x11 := conv_input_data
xx_x13 := conv_ker_data
$call fp32_mul_for_ecg (xx_x11 xx_x13 )  (xx_x17)
iNsTr_3 := (xx_x283 & ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
// compare instruction
xx_x20 := (iNsTr_3 == ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 )  )
for_body_if_true_taken := xx_x20
for_body_if_false_taken := ( ~xx_x20)
if_false_exec_guard := for_body_if_false_taken
//begin: basic-block if_false
$guard (if_false_exec_guard) accumulator_pipe_odd := xx_x17
if_false_if_next_taken := if_false_exec_guard
if_true_exec_guard := for_body_if_true_taken
//begin: basic-block if_true
$guard (if_true_exec_guard) accumulator_pipe_even := xx_x17
if_true_if_next_taken := if_true_exec_guard
//begin: basic-block if_next
xx_x29 := (xx_x283 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
// compare instruction
xx_x8 := (xx_x29 < num_iterations )
if_next_forx_xfor_out_crit_edge_taken := ( ~xx_x8)
$while xx_x8
$if if_next_forx_xfor_out_crit_edge_taken $then 
  $place [if_next_forx_xfor_out_crit_edge]
$endif
//begin: basic-block forx_xfor_out_crit_edge
$merge if_next_forx_xfor_out_crit_edge
$endmerge
$place [forx_xfor_out_crit_edge_for_out]
//begin: basic-block for_out
$merge forx_xfor_out_crit_edge_for_out vars_for_out
$endmerge
}
}
$module [compute_accumulate_linear] 
 $in (num_chn_present : $uint<32> num_iterations : $uint<32> )
 $out ()
 $is 
{
$branchblock [body] {
//begin: basic-block vars
// compare instruction
xx_x126 := ( ($bitcast ( $int<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) <   ($bitcast ( $int<32>) num_iterations ) )
$if xx_x126 $then  $place [vars_while_bodyx_xlrx_xph] $else $place [vars_while_out] $endif 
//begin: basic-block while_bodyx_xlrx_xph
$merge vars_while_bodyx_xlrx_xph
$endmerge
$place [while_bodyx_xlrx_xph_while_body]
//begin: basic-block while_body
//   this is a do-while loop.
$merge while_bodyx_xlrx_xph_while_body
$endmerge
$dopipeline $depth 31 $buffering 7 
$fullrate
$merge $entry $loopback
$phi xx_x199 :=  ( $cast ($uint<32>) xx_x20) $on $loopback ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on $entry
$phi xx_x228 :=  ( $cast ($float<8,23>) xx_x223) $on $loopback ( $cast ($float<8,23>) ( $bitcast ($float<8,23> ) _h0 ) ) $on $entry
$phi xx_x287 :=  ( $cast ($uint<32>) xx_x285) $on $loopback ( $cast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) $on $entry
$endmerge
xx_x15 := accumulator_pipe_even
xx_x17 := accumulator_pipe_odd
xx_x20 := (xx_x199 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
$call fp32_add_for_ecg (xx_x15 xx_x17 )  (xx_x25)
$call fp32_add_for_ecg (xx_x228 xx_x25 )  (xx_x26)
xx_x29 := (xx_x287 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000010 ) )
// compare instruction
xx_x33 := (xx_x29 == num_chn_present )
while_body_if_true_taken := xx_x33
while_body_if_false_taken := ( ~xx_x33)
if_false_exec_guard := while_body_if_false_taken
//begin: basic-block if_false
if_false_if_next_taken := if_false_exec_guard
if_true_exec_guard := while_body_if_true_taken
//begin: basic-block if_true
$guard (if_true_exec_guard) conv_out_data := xx_x26
if_true_if_next_taken := if_true_exec_guard
//begin: basic-block if_next
xx_x285 := ($mux if_false_if_next_taken ( $bitcast ($uint<32>) xx_x29) ($mux if_true_if_next_taken ( $bitcast ($uint<32>) ( $bitcast ($uint<32> ) _b00000000000000000000000000000000 ) ) ($bitcast ($uint<32>) 0)))
xx_x223 := ($mux if_false_if_next_taken ( $bitcast ($float<8,23>) xx_x26) ($mux if_true_if_next_taken ( $bitcast ($float<8,23>) ( $bitcast ($float<8,23> ) _h0 ) ) ($bitcast ($float<8,23>) 0)))
// compare instruction
xx_x12 := ( ($bitcast ( $int<32>) xx_x20) <   ($bitcast ( $int<32>) num_iterations ) )
if_next_whilex_xwhile_out_crit_edge_taken := ( ~xx_x12)
$while xx_x12
$if if_next_whilex_xwhile_out_crit_edge_taken $then 
  $place [if_next_whilex_xwhile_out_crit_edge]
$endif
//begin: basic-block whilex_xwhile_out_crit_edge
$merge if_next_whilex_xwhile_out_crit_edge
$endmerge
$place [whilex_xwhile_out_crit_edge_while_out]
//begin: basic-block while_out
$merge vars_while_out whilex_xwhile_out_crit_edge_while_out
$endmerge
}
}

$module [convengine] 
 $in (in_start_addr : $uint<32> out_start_addr : $uint<32> ker_start_addr : $uint<32> out_grp_no : $uint<32> in_rows : $uint<32> in_cols : $uint<32> in_channels : $uint<32> out_channels : $uint<32> groups : $uint<32> ker_size : $uint<32> pool_cols : $uint<32> inp_scale : $float<8,23> inp_zero_point : $float<8,23> ker_scale : $float<8,23> ker_zero_point : $float<8,23> conv_scale : $float<8,23> conv_zero_point : $float<8,23> padReq : $uint<1> poolReq : $uint<1> isLinear : $uint<1> isActivation : $uint<1> isFlatten : $uint<1> offsetStart : $uint<32> out_chn_ind : $uint<32> )
 $out ()
 $is 
{
$storage start_time1: $uint<64>
$storage start_time2: $uint<64>
$storage end_time1: $uint<64>
$storage end_time2: $uint<64>
$storage time_taken1: $uint<64>
$storage time_taken2: $uint<64>
//begin: basic-block vars
xx_x52 := (in_rows - ker_size)
xx_x53 := (xx_x52 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
xx_x57 := (in_cols - ker_size)
xx_x58 := (xx_x57 + ( $bitcast ($uint<32> ) _b00000000000000000000000000000001 ) )
vars_if_true_taken := isLinear
vars_if_false_taken := ( ~isLinear)
if_false_exec_guard := vars_if_false_taken
//begin: basic-block if_false
$guard (if_false_exec_guard) $call fetchAll (in_start_addr groups ker_size in_channels inp_scale inp_zero_point )  ()
$guard (if_false_exec_guard) $call fetchKernel (ker_start_addr groups ker_size in_channels ker_scale ker_zero_point )  ()
$guard (if_false_exec_guard) xx_x124 := (xx_x53 * xx_x58)
$guard (if_false_exec_guard) xx_x126 := (xx_x124 * ker_size)
$guard (if_false_exec_guard) xx_x128 := (xx_x126 * ker_size)
$guard (if_false_exec_guard) xx_x130 := (xx_x128 * in_channels)
$guard (if_false_exec_guard) xx_x142 := inp_scale
$guard (if_false_exec_guard) xx_x143 :=  inp_zero_point
$guard (if_false_exec_guard) xx_x154 := (ker_size * ker_size)
$guard (if_false_exec_guard) xx_x156 := (xx_x154 * in_channels)

start_time1 := time_val
$parallelblock [parsum1] 
{
  $guard (if_false_exec_guard) $call fetchPartial (in_start_addr ker_size in_channels groups in_rows in_cols xx_x53 xx_x58 xx_x142 xx_x143 )  ()
  $guard (if_false_exec_guard) $call inputLoader (ker_size in_channels groups xx_x53 xx_x58 )  ()
  // $guard (if_false_exec_guard) $call pipeReadTest () ()
  $guard (if_false_exec_guard) $call kernelLoader (xx_x130 xx_x156 )  ()
  $guard (if_false_exec_guard) $call compute_mul (ker_size in_channels xx_x130 )  ()
  $guard (if_false_exec_guard) $call compute_accumulate (ker_size in_channels xx_x130 )  ()
  $guard (if_false_exec_guard) $call output_module (out_start_addr conv_scale conv_zero_point offsetStart pool_cols ( $bitcast ($uint<1> ) _b0 )  isFlatten isActivation xx_x53 xx_x58 out_channels out_grp_no out_chn_ind )  ()

}
end_time1 := time_val
time_taken1 := (time_taken1+(end_time1 - start_time1))

if_false_if_next_taken := if_false_exec_guard
if_true_exec_guard := vars_if_true_taken
//begin: basic-block if_true
$guard (if_true_exec_guard) $call fetchInputLinear (in_start_addr groups in_channels inp_scale inp_zero_point )  ()
$guard (if_true_exec_guard) xx_x76 := (in_channels * out_channels)
start_time2 := time_val
$parallelblock [parsum2] 
{
  $guard (if_true_exec_guard) $call inputLoaderLinear (xx_x76 in_channels )  ()
  $guard (if_true_exec_guard) $call kernelLoaderLinear (ker_start_addr groups in_channels out_channels ker_scale ker_zero_point )  ()
  $guard (if_true_exec_guard) $call compute_mul_linear (xx_x76 )  ()
  // $guard (if_true_exec_guard) $call pipeReadTest () ()
  $guard (if_true_exec_guard) $call compute_accumulate_linear (in_channels xx_x76 )  ()
  $guard (if_true_exec_guard) $call output_module (out_start_addr conv_scale conv_zero_point offsetStart pool_cols ( $bitcast ($uint<1> ) _b1 )  isFlatten isActivation xx_x53 xx_x58 out_channels out_grp_no out_chn_ind )  ()

}
end_time2 := time_val
time_taken2 := (time_taken2+(end_time2 - start_time2))

accelerator_reg[12] := ($slice time_taken1 31 0)
accelerator_reg[13] := ($slice time_taken2 31 0)


if_true_if_next_taken := if_true_exec_guard
//begin: basic-block if_next
}
