1. About
----------
   The contents of this directory are related to work
   done in two directions
	- SBC with network interface
	- AI/ML SOC with accelerator.



2. Contents
-----------------
  The following directories are present:
	exports.sh
		Source this before continuing.

	AA/
		Aa code for the AI accelerator
		(Aman Dhammani)

	Accelerator_new_src/
		Aa code for AI accelerator
		(Indrahas Reddy)

	BUILD/
		Implementation of NIC
		and NIC glue logic.

	CNN_Models/
		Trained python (pyTorch) models
		for lenet, resnet (Indrahas)
		
	docs/
		Documents

	Docs/
		More Documents

	Integration/
		SOC implementation with Aman's accel
		and Harshad's SOC with ethernet,
		for the VCU128 FPGA board.


	Links/
		Links to useful websites (rCONNX)

	lwip/
		lwip (Dunkels), a light-weight IP stack.
		Check the README.  Also contains some
		examples of its use.
	
		Specifically, contains the ping and 
		network caching applications which 
		were used to characterize the SBC

	Networking/
		Contains the NIC implementation and test setup.

		
	patterns/
		Some design patterns for building accelerators (MPD)

	README/ 
		This file

	SBC/
		Single-board computer implementation using kc705.

	Scratch/
		scratch

	SOURCE/
		links to sources required to build SBC

	STUDENTS/
		Area for student reports etc.

3. Links to follow
----------------------
	
	To find out more about using LWIP to build software
	applications running on the SBC, check lwip/README

	To find out more about building and using the SBC
	check  SBC/README

	For actual run setup of the KC705 SBC using host PC 
	and FPGA card, see ./SBC/kc705/testing/latestNICTesting/README

	To build the Aman-Harshad SOC on VCU128, go to
	Integration and check the README

	To run the Aman-Harshad SOC on vcu128, go to
	SBC/vcu128/testing/lenet_test/README

	To build the Aman-Harshad-Indrahas SOC on VCU128,
	go to SBC/vcu128/README
		


4. Pre-requisites
----------------------

	You will need access to the following

		AHIR-V2 setup
			either locally installed
			or docker.
				(madhav@ee.iitb.ac.in)

		PyAHIR setup
			contact Rutuja 
				(rutuja_e@iitb.ac.in)

		AJIT tool-chain setup
			either locally installed 
			or docker.

		VIVADO 
			to synthesize and generate
			bitfiles, and use the FPGA.


		fp_enhanced.aa
			implemention of FP operators
				(madhav@ee.iitb.ac.in)

		
