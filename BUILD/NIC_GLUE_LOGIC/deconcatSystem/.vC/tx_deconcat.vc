// Virtual circuit produced from Aa description by Aa2VC 
// $pipe  tx_in_pipe : $uint<73>  $depth 2 
// can point into 
// in scope  top-level
$pipe [tx_in_pipe] 73 $depth 2 
// $pipe  tx_out_pipe : $uint<10>  $depth 2 
// can point into 
// in scope  top-level
$pipe [tx_out_pipe] 10 $depth 2 
// Declared gated clocks.
$module [global_storage_initializer_] 
{
  // pipe-declarations for block %global_storage_initializer_
  //  file .Aa/tx_deconcat.linked.aa, line 5
  // there are no memory spaces local to this module.
  $CP 
  {
    // begin control-path 
  }
  // end control-path
  $DP 
  {
    // begin data-path 
    // constant-object-declarations for block %global_storage_initializer_
    //  file .Aa/tx_deconcat.linked.aa, line 5
  }
  // end data-path
}
$module [tx_deconcat] 
{
  // pipe-declarations for block %tx_deconcat
  //  file .Aa/tx_deconcat.linked.aa, line 12
  // pipe-declarations for block %tx_deconcat%loop
  //  file .Aa/tx_deconcat.linked.aa, line 17
  // there are no memory spaces local to this module.
  $CP 
  {
    // begin control-path 
    <>[branch_block_stmt_8] // Branch Block  file .Aa/tx_deconcat.linked.aa, line 17
    {
      $P [branch_block_stmt_8__entry__]
      branch_block_stmt_8__entry__ <-| ($entry)
      $P [branch_block_stmt_8__exit__]
      branch_block_stmt_8__exit__ |-> ($exit)
      $P [do_while_stmt_9__entry__] 
      $P [do_while_stmt_9__exit__] 
      // do-while-statement  
      //  file .Aa/tx_deconcat.linked.aa, line 19
      <o> [do_while_stmt_9]  $depth 7 $buffering 1 
      {
        $P[do_while_stmt_9__entry__] 
        $P[do_while_stmt_9__exit__] 
        $P[loop_back] 
        $P[condition_done] 
        $P[loop_body_done] 
        $pipeline [do_while_stmt_9_loop_body] 
        {
          // Pipelined!
          $T[back_edge_to_loop_body] 
          $T[first_time_through_loop_body] 
          $T[loop_body_start] 
          $T[condition_evaluated] 
          $transitionmerge [entry_tmerge] (back_edge_to_loop_body first_time_through_loop_body) (loop_body_start)
          $entry <-& (loop_body_start)
          // start:  			RX := tx_in_pipe $buffering 1// bits of buffering = 73. 
          //  file .Aa/tx_deconcat.linked.aa, line 22
          // Source expression
          // tx_in_pipe
          $T[RPIPE_tx_in_pipe_12_sample_start_] 
          $T[RPIPE_tx_in_pipe_12_sample_completed_] 
          $T[RPIPE_tx_in_pipe_12_update_start_] 
          $T[RPIPE_tx_in_pipe_12_update_completed_] 
          ;;[RPIPE_tx_in_pipe_12_Sample] 
          {
            // pipe read sample
            $T [rr] $T [ra] 
          }
          ;;[RPIPE_tx_in_pipe_12_Update] 
          {
            // pipe read update
            $T [cr] $T [ca] 
          }
          RPIPE_tx_in_pipe_12_sample_start_ &-> (RPIPE_tx_in_pipe_12_Sample)
          RPIPE_tx_in_pipe_12_sample_completed_ <-& (RPIPE_tx_in_pipe_12_Sample)
          RPIPE_tx_in_pipe_12_update_start_ <-& (RPIPE_tx_in_pipe_12_sample_completed_)
          RPIPE_tx_in_pipe_12_update_start_ &-> (RPIPE_tx_in_pipe_12_Update)
          RPIPE_tx_in_pipe_12_update_completed_ <-& (RPIPE_tx_in_pipe_12_Update)
          RPIPE_tx_in_pipe_12_sample_start_ o<-& (RPIPE_tx_in_pipe_12_update_completed_ 0)
          // Target expression
          // (as target) RX
          // start: WAR dependencies for RX
          // done: WAR dependencies for RX
          // end:  			RX := tx_in_pipe $buffering 1// bits of buffering = 73. 
          // start: WAR dependencies for tlast
          // done: WAR dependencies for tlast
          // start:  			$volatile tlast := ( $slice RX 72 72 )  $buffering 1
          //  file .Aa/tx_deconcat.linked.aa, line 23
          // volatile! 
          // Source expression
          // ( $slice RX 72 72 ) 
          // RX
          // Target expression
          // (as target) tlast
          // start: WAR dependencies for tlast
          // done: WAR dependencies for tlast
          // end:  			$volatile tlast := ( $slice RX 72 72 )  $buffering 1
          // start: WAR dependencies for d0
          // done: WAR dependencies for d0
          // start:  			$volatile d0 := ( $slice RX 71 64 )  $buffering 1
          //  file .Aa/tx_deconcat.linked.aa, line 24
          // volatile! 
          // Source expression
          // ( $slice RX 71 64 ) 
          // RX
          // Target expression
          // (as target) d0
          // start: WAR dependencies for d0
          // done: WAR dependencies for d0
          // end:  			$volatile d0 := ( $slice RX 71 64 )  $buffering 1
          // start: WAR dependencies for d1
          // done: WAR dependencies for d1
          // start:  			$volatile d1 := ( $slice RX 63 56 )  $buffering 1
          //  file .Aa/tx_deconcat.linked.aa, line 25
          // volatile! 
          // Source expression
          // ( $slice RX 63 56 ) 
          // RX
          // Target expression
          // (as target) d1
          // start: WAR dependencies for d1
          // done: WAR dependencies for d1
          // end:  			$volatile d1 := ( $slice RX 63 56 )  $buffering 1
          // start: WAR dependencies for d2
          // done: WAR dependencies for d2
          // start:  			$volatile d2 := ( $slice RX 55 48 )  $buffering 1
          //  file .Aa/tx_deconcat.linked.aa, line 26
          // volatile! 
          // Source expression
          // ( $slice RX 55 48 ) 
          // RX
          // Target expression
          // (as target) d2
          // start: WAR dependencies for d2
          // done: WAR dependencies for d2
          // end:  			$volatile d2 := ( $slice RX 55 48 )  $buffering 1
          // start: WAR dependencies for d3
          // done: WAR dependencies for d3
          // start:  			$volatile d3 := ( $slice RX 47 40 )  $buffering 1
          //  file .Aa/tx_deconcat.linked.aa, line 27
          // volatile! 
          // Source expression
          // ( $slice RX 47 40 ) 
          // RX
          // Target expression
          // (as target) d3
          // start: WAR dependencies for d3
          // done: WAR dependencies for d3
          // end:  			$volatile d3 := ( $slice RX 47 40 )  $buffering 1
          // start: WAR dependencies for d4
          // done: WAR dependencies for d4
          // start:  			$volatile d4 := ( $slice RX 39 32 )  $buffering 1
          //  file .Aa/tx_deconcat.linked.aa, line 28
          // volatile! 
          // Source expression
          // ( $slice RX 39 32 ) 
          // RX
          // Target expression
          // (as target) d4
          // start: WAR dependencies for d4
          // done: WAR dependencies for d4
          // end:  			$volatile d4 := ( $slice RX 39 32 )  $buffering 1
          // start: WAR dependencies for d5
          // done: WAR dependencies for d5
          // start:  			$volatile d5 := ( $slice RX 31 24 )  $buffering 1
          //  file .Aa/tx_deconcat.linked.aa, line 29
          // volatile! 
          // Source expression
          // ( $slice RX 31 24 ) 
          // RX
          // Target expression
          // (as target) d5
          // start: WAR dependencies for d5
          // done: WAR dependencies for d5
          // end:  			$volatile d5 := ( $slice RX 31 24 )  $buffering 1
          // start: WAR dependencies for d6
          // done: WAR dependencies for d6
          // start:  			$volatile d6 := ( $slice RX 23 16 )  $buffering 1
          //  file .Aa/tx_deconcat.linked.aa, line 30
          // volatile! 
          // Source expression
          // ( $slice RX 23 16 ) 
          // RX
          // Target expression
          // (as target) d6
          // start: WAR dependencies for d6
          // done: WAR dependencies for d6
          // end:  			$volatile d6 := ( $slice RX 23 16 )  $buffering 1
          // start: WAR dependencies for d7
          // done: WAR dependencies for d7
          // start:  			$volatile d7 := ( $slice RX 15 8 )  $buffering 1
          //  file .Aa/tx_deconcat.linked.aa, line 31
          // volatile! 
          // Source expression
          // ( $slice RX 15 8 ) 
          // RX
          // Target expression
          // (as target) d7
          // start: WAR dependencies for d7
          // done: WAR dependencies for d7
          // end:  			$volatile d7 := ( $slice RX 15 8 )  $buffering 1
          // start: WAR dependencies for b0
          // done: WAR dependencies for b0
          // start:  			$volatile b0 := ( $slice RX 7 7 )  $buffering 1
          //  file .Aa/tx_deconcat.linked.aa, line 32
          // volatile! 
          // Source expression
          // ( $slice RX 7 7 ) 
          // RX
          // Target expression
          // (as target) b0
          // start: WAR dependencies for b0
          // done: WAR dependencies for b0
          // end:  			$volatile b0 := ( $slice RX 7 7 )  $buffering 1
          // start: WAR dependencies for b1
          // done: WAR dependencies for b1
          // start:  			$volatile b1 := ( $slice RX 6 6 )  $buffering 1
          //  file .Aa/tx_deconcat.linked.aa, line 33
          // volatile! 
          // Source expression
          // ( $slice RX 6 6 ) 
          // RX
          // Target expression
          // (as target) b1
          // start: WAR dependencies for b1
          // done: WAR dependencies for b1
          // end:  			$volatile b1 := ( $slice RX 6 6 )  $buffering 1
          // start: WAR dependencies for b2
          // done: WAR dependencies for b2
          // start:  			$volatile b2 := ( $slice RX 5 5 )  $buffering 1
          //  file .Aa/tx_deconcat.linked.aa, line 34
          // volatile! 
          // Source expression
          // ( $slice RX 5 5 ) 
          // RX
          // Target expression
          // (as target) b2
          // start: WAR dependencies for b2
          // done: WAR dependencies for b2
          // end:  			$volatile b2 := ( $slice RX 5 5 )  $buffering 1
          // start: WAR dependencies for b3
          // done: WAR dependencies for b3
          // start:  			$volatile b3 := ( $slice RX 4 4 )  $buffering 1
          //  file .Aa/tx_deconcat.linked.aa, line 35
          // volatile! 
          // Source expression
          // ( $slice RX 4 4 ) 
          // RX
          // Target expression
          // (as target) b3
          // start: WAR dependencies for b3
          // done: WAR dependencies for b3
          // end:  			$volatile b3 := ( $slice RX 4 4 )  $buffering 1
          // start: WAR dependencies for b4
          // done: WAR dependencies for b4
          // start:  			$volatile b4 := ( $slice RX 3 3 )  $buffering 1
          //  file .Aa/tx_deconcat.linked.aa, line 36
          // volatile! 
          // Source expression
          // ( $slice RX 3 3 ) 
          // RX
          // Target expression
          // (as target) b4
          // start: WAR dependencies for b4
          // done: WAR dependencies for b4
          // end:  			$volatile b4 := ( $slice RX 3 3 )  $buffering 1
          // start: WAR dependencies for b5
          // done: WAR dependencies for b5
          // start:  			$volatile b5 := ( $slice RX 2 2 )  $buffering 1
          //  file .Aa/tx_deconcat.linked.aa, line 37
          // volatile! 
          // Source expression
          // ( $slice RX 2 2 ) 
          // RX
          // Target expression
          // (as target) b5
          // start: WAR dependencies for b5
          // done: WAR dependencies for b5
          // end:  			$volatile b5 := ( $slice RX 2 2 )  $buffering 1
          // start: WAR dependencies for b6
          // done: WAR dependencies for b6
          // start:  			$volatile b6 := ( $slice RX 1 1 )  $buffering 1
          //  file .Aa/tx_deconcat.linked.aa, line 38
          // volatile! 
          // Source expression
          // ( $slice RX 1 1 ) 
          // RX
          // Target expression
          // (as target) b6
          // start: WAR dependencies for b6
          // done: WAR dependencies for b6
          // end:  			$volatile b6 := ( $slice RX 1 1 )  $buffering 1
          // start: WAR dependencies for b7
          // done: WAR dependencies for b7
          // start:  			$volatile b7 := ( $slice RX 0 0 )  $buffering 1
          //  file .Aa/tx_deconcat.linked.aa, line 39
          // volatile! 
          // Source expression
          // ( $slice RX 0 0 ) 
          // RX
          // Target expression
          // (as target) b7
          // start: WAR dependencies for b7
          // done: WAR dependencies for b7
          // end:  			$volatile b7 := ( $slice RX 0 0 )  $buffering 1
          // start: WAR dependencies for s0
          // done: WAR dependencies for s0
          // start:  			$volatile s0 := (((tlast & (b0 & ( ~ b1 ))) && d0) && ($bitcast ($uint<1>) _b1  )) $buffering 1
          //  file .Aa/tx_deconcat.linked.aa, line 40
          // volatile! 
          // Source expression
          // (((tlast & (b0 & ( ~ b1 ))) && d0) && ($bitcast ($uint<1>) _b1  ))
          // ((tlast & (b0 & ( ~ b1 ))) && d0)
          // (tlast & (b0 & ( ~ b1 )))
          // tlast
          // (b0 & ( ~ b1 ))
          // b0
          // ( ~ b1 )
          // b1
          // d0
          // Target expression
          // (as target) s0
          // start: WAR dependencies for s0
          // done: WAR dependencies for s0
          // end:  			$volatile s0 := (((tlast & (b0 & ( ~ b1 ))) && d0) && ($bitcast ($uint<1>) _b1  )) $buffering 1
          // start: WAR dependencies for s1
          // done: WAR dependencies for s1
          // start:  			$volatile s1 := (((tlast & (b1 & ( ~ b2 ))) && d1) && ($bitcast ($uint<1>) _b1  )) $buffering 1
          //  file .Aa/tx_deconcat.linked.aa, line 41
          // volatile! 
          // Source expression
          // (((tlast & (b1 & ( ~ b2 ))) && d1) && ($bitcast ($uint<1>) _b1  ))
          // ((tlast & (b1 & ( ~ b2 ))) && d1)
          // (tlast & (b1 & ( ~ b2 )))
          // tlast
          // (b1 & ( ~ b2 ))
          // b1
          // ( ~ b2 )
          // b2
          // d1
          // Target expression
          // (as target) s1
          // start: WAR dependencies for s1
          // done: WAR dependencies for s1
          // end:  			$volatile s1 := (((tlast & (b1 & ( ~ b2 ))) && d1) && ($bitcast ($uint<1>) _b1  )) $buffering 1
          // start: WAR dependencies for s2
          // done: WAR dependencies for s2
          // start:  			$volatile s2 := (((tlast & (b2 & ( ~ b3 ))) && d2) && ($bitcast ($uint<1>) _b1  )) $buffering 1
          //  file .Aa/tx_deconcat.linked.aa, line 42
          // volatile! 
          // Source expression
          // (((tlast & (b2 & ( ~ b3 ))) && d2) && ($bitcast ($uint<1>) _b1  ))
          // ((tlast & (b2 & ( ~ b3 ))) && d2)
          // (tlast & (b2 & ( ~ b3 )))
          // tlast
          // (b2 & ( ~ b3 ))
          // b2
          // ( ~ b3 )
          // b3
          // d2
          // Target expression
          // (as target) s2
          // start: WAR dependencies for s2
          // done: WAR dependencies for s2
          // end:  			$volatile s2 := (((tlast & (b2 & ( ~ b3 ))) && d2) && ($bitcast ($uint<1>) _b1  )) $buffering 1
          // start: WAR dependencies for s3
          // done: WAR dependencies for s3
          // start:  			$volatile s3 := (((tlast & (b3 & ( ~ b4 ))) && d3) && ($bitcast ($uint<1>) _b1  )) $buffering 1
          //  file .Aa/tx_deconcat.linked.aa, line 43
          // volatile! 
          // Source expression
          // (((tlast & (b3 & ( ~ b4 ))) && d3) && ($bitcast ($uint<1>) _b1  ))
          // ((tlast & (b3 & ( ~ b4 ))) && d3)
          // (tlast & (b3 & ( ~ b4 )))
          // tlast
          // (b3 & ( ~ b4 ))
          // b3
          // ( ~ b4 )
          // b4
          // d3
          // Target expression
          // (as target) s3
          // start: WAR dependencies for s3
          // done: WAR dependencies for s3
          // end:  			$volatile s3 := (((tlast & (b3 & ( ~ b4 ))) && d3) && ($bitcast ($uint<1>) _b1  )) $buffering 1
          // start: WAR dependencies for s4
          // done: WAR dependencies for s4
          // start:  			$volatile s4 := (((tlast & (b4 & ( ~ b5 ))) && d4) && ($bitcast ($uint<1>) _b1  )) $buffering 1
          //  file .Aa/tx_deconcat.linked.aa, line 44
          // volatile! 
          // Source expression
          // (((tlast & (b4 & ( ~ b5 ))) && d4) && ($bitcast ($uint<1>) _b1  ))
          // ((tlast & (b4 & ( ~ b5 ))) && d4)
          // (tlast & (b4 & ( ~ b5 )))
          // tlast
          // (b4 & ( ~ b5 ))
          // b4
          // ( ~ b5 )
          // b5
          // d4
          // Target expression
          // (as target) s4
          // start: WAR dependencies for s4
          // done: WAR dependencies for s4
          // end:  			$volatile s4 := (((tlast & (b4 & ( ~ b5 ))) && d4) && ($bitcast ($uint<1>) _b1  )) $buffering 1
          // start: WAR dependencies for s5
          // done: WAR dependencies for s5
          // start:  			$volatile s5 := (((tlast & (b5 & ( ~ b6 ))) && d5) && ($bitcast ($uint<1>) _b1  )) $buffering 1
          //  file .Aa/tx_deconcat.linked.aa, line 45
          // volatile! 
          // Source expression
          // (((tlast & (b5 & ( ~ b6 ))) && d5) && ($bitcast ($uint<1>) _b1  ))
          // ((tlast & (b5 & ( ~ b6 ))) && d5)
          // (tlast & (b5 & ( ~ b6 )))
          // tlast
          // (b5 & ( ~ b6 ))
          // b5
          // ( ~ b6 )
          // b6
          // d5
          // Target expression
          // (as target) s5
          // start: WAR dependencies for s5
          // done: WAR dependencies for s5
          // end:  			$volatile s5 := (((tlast & (b5 & ( ~ b6 ))) && d5) && ($bitcast ($uint<1>) _b1  )) $buffering 1
          // start: WAR dependencies for s6
          // done: WAR dependencies for s6
          // start:  			$volatile s6 := (((tlast & (b6 & ( ~ b7 ))) && d6) && ($bitcast ($uint<1>) _b1  )) $buffering 1
          //  file .Aa/tx_deconcat.linked.aa, line 46
          // volatile! 
          // Source expression
          // (((tlast & (b6 & ( ~ b7 ))) && d6) && ($bitcast ($uint<1>) _b1  ))
          // ((tlast & (b6 & ( ~ b7 ))) && d6)
          // (tlast & (b6 & ( ~ b7 )))
          // tlast
          // (b6 & ( ~ b7 ))
          // b6
          // ( ~ b7 )
          // b7
          // d6
          // Target expression
          // (as target) s6
          // start: WAR dependencies for s6
          // done: WAR dependencies for s6
          // end:  			$volatile s6 := (((tlast & (b6 & ( ~ b7 ))) && d6) && ($bitcast ($uint<1>) _b1  )) $buffering 1
          // start: WAR dependencies for s7
          // done: WAR dependencies for s7
          // start:  			$volatile s7 := (((tlast & b7) && d7) && ($bitcast ($uint<1>) _b1  )) $buffering 1
          //  file .Aa/tx_deconcat.linked.aa, line 47
          // volatile! 
          // Source expression
          // (((tlast & b7) && d7) && ($bitcast ($uint<1>) _b1  ))
          // ((tlast & b7) && d7)
          // (tlast & b7)
          // tlast
          // b7
          // d7
          // Target expression
          // (as target) s7
          // start: WAR dependencies for s7
          // done: WAR dependencies for s7
          // end:  			$volatile s7 := (((tlast & b7) && d7) && ($bitcast ($uint<1>) _b1  )) $buffering 1
          // start:  			$guard (b0) tx_out_pipe := s0 $buffering 1// bits of buffering = 10. 
          //  file .Aa/tx_deconcat.linked.aa, line 48
          // Guard expression 
          // b0
          // Source expression
          // s0
          // Target expression
          // (as target) tx_out_pipe
          $T[WPIPE_tx_out_pipe_186_sample_start_] 
          $T[WPIPE_tx_out_pipe_186_sample_completed_] 
          $T[WPIPE_tx_out_pipe_186_update_start_] 
          $T[WPIPE_tx_out_pipe_186_update_completed_] 
          // Guard dependency for expression WPIPE_tx_out_pipe_186 with guard R_b0_185
          // Guard forward dependency 
          WPIPE_tx_out_pipe_186_sample_start_ <-& (RPIPE_tx_in_pipe_12_update_completed_)
          // RAW reenables for b0
          RPIPE_tx_in_pipe_12_update_start_ o<-& (WPIPE_tx_out_pipe_186_sample_completed_ 0)
          ;;[WPIPE_tx_out_pipe_186_Sample] 
          {
            // pipe write sample-start tx_out_pipe
            $T [req] $T [ack] 
          }
          ;;[WPIPE_tx_out_pipe_186_Update] 
          {
            // pipe write update (complete) tx_out_pipe
            $T [req] $T [ack] 
          }
          WPIPE_tx_out_pipe_186_sample_start_ &-> (WPIPE_tx_out_pipe_186_Sample)
          WPIPE_tx_out_pipe_186_sample_completed_ <-& (WPIPE_tx_out_pipe_186_Sample)
          WPIPE_tx_out_pipe_186_update_start_ <-& (WPIPE_tx_out_pipe_186_sample_completed_)
          WPIPE_tx_out_pipe_186_update_start_ &-> (WPIPE_tx_out_pipe_186_Update)
          WPIPE_tx_out_pipe_186_update_completed_ <-& (WPIPE_tx_out_pipe_186_Update)
          WPIPE_tx_out_pipe_186_sample_start_ o<-& (WPIPE_tx_out_pipe_186_update_completed_ 0)
          // start: Forward dependencies from s0 to transition WPIPE_tx_out_pipe_186_sample_start_
          WPIPE_tx_out_pipe_186_sample_start_ <-& (RPIPE_tx_in_pipe_12_update_completed_)
          // done: Forward dependencies from s0 to transition WPIPE_tx_out_pipe_186_sample_start_
          // RAW reenables for s0
          RPIPE_tx_in_pipe_12_update_start_ o<-& (WPIPE_tx_out_pipe_186_sample_completed_ 0)
          // end:  			$guard (b0) tx_out_pipe := s0 $buffering 1// bits of buffering = 10. 
          // start:  			$guard (b1) tx_out_pipe := s1 $buffering 1// bits of buffering = 10. 
          //  file .Aa/tx_deconcat.linked.aa, line 49
          // Guard expression 
          // b1
          // Source expression
          // s1
          // Target expression
          // (as target) tx_out_pipe
          $T[WPIPE_tx_out_pipe_190_sample_start_] 
          $T[WPIPE_tx_out_pipe_190_sample_completed_] 
          $T[WPIPE_tx_out_pipe_190_update_start_] 
          $T[WPIPE_tx_out_pipe_190_update_completed_] 
          // Guard dependency for expression WPIPE_tx_out_pipe_190 with guard R_b1_189
          // Guard forward dependency 
          WPIPE_tx_out_pipe_190_sample_start_ <-& (RPIPE_tx_in_pipe_12_update_completed_)
          // RAW reenables for b1
          RPIPE_tx_in_pipe_12_update_start_ o<-& (WPIPE_tx_out_pipe_190_sample_completed_ 0)
          ;;[WPIPE_tx_out_pipe_190_Sample] 
          {
            // pipe write sample-start tx_out_pipe
            $T [req] $T [ack] 
          }
          ;;[WPIPE_tx_out_pipe_190_Update] 
          {
            // pipe write update (complete) tx_out_pipe
            $T [req] $T [ack] 
          }
          WPIPE_tx_out_pipe_190_sample_start_ &-> (WPIPE_tx_out_pipe_190_Sample)
          WPIPE_tx_out_pipe_190_sample_completed_ <-& (WPIPE_tx_out_pipe_190_Sample)
          WPIPE_tx_out_pipe_190_update_start_ <-& (WPIPE_tx_out_pipe_190_sample_completed_)
          WPIPE_tx_out_pipe_190_update_start_ &-> (WPIPE_tx_out_pipe_190_Update)
          WPIPE_tx_out_pipe_190_update_completed_ <-& (WPIPE_tx_out_pipe_190_Update)
          WPIPE_tx_out_pipe_190_sample_start_ o<-& (WPIPE_tx_out_pipe_190_update_completed_ 0)
          // start: Forward dependencies from s1 to transition WPIPE_tx_out_pipe_190_sample_start_
          WPIPE_tx_out_pipe_190_sample_start_ <-& (RPIPE_tx_in_pipe_12_update_completed_)
          // done: Forward dependencies from s1 to transition WPIPE_tx_out_pipe_190_sample_start_
          // RAW reenables for s1
          RPIPE_tx_in_pipe_12_update_start_ o<-& (WPIPE_tx_out_pipe_190_sample_completed_ 0)
          // end:  			$guard (b1) tx_out_pipe := s1 $buffering 1// bits of buffering = 10. 
          // start:  			$guard (b2) tx_out_pipe := s2 $buffering 1// bits of buffering = 10. 
          //  file .Aa/tx_deconcat.linked.aa, line 50
          // Guard expression 
          // b2
          // Source expression
          // s2
          // Target expression
          // (as target) tx_out_pipe
          $T[WPIPE_tx_out_pipe_194_sample_start_] 
          $T[WPIPE_tx_out_pipe_194_sample_completed_] 
          $T[WPIPE_tx_out_pipe_194_update_start_] 
          $T[WPIPE_tx_out_pipe_194_update_completed_] 
          // Guard dependency for expression WPIPE_tx_out_pipe_194 with guard R_b2_193
          // Guard forward dependency 
          WPIPE_tx_out_pipe_194_sample_start_ <-& (RPIPE_tx_in_pipe_12_update_completed_)
          // RAW reenables for b2
          RPIPE_tx_in_pipe_12_update_start_ o<-& (WPIPE_tx_out_pipe_194_sample_completed_ 0)
          ;;[WPIPE_tx_out_pipe_194_Sample] 
          {
            // pipe write sample-start tx_out_pipe
            $T [req] $T [ack] 
          }
          ;;[WPIPE_tx_out_pipe_194_Update] 
          {
            // pipe write update (complete) tx_out_pipe
            $T [req] $T [ack] 
          }
          WPIPE_tx_out_pipe_194_sample_start_ &-> (WPIPE_tx_out_pipe_194_Sample)
          WPIPE_tx_out_pipe_194_sample_completed_ <-& (WPIPE_tx_out_pipe_194_Sample)
          WPIPE_tx_out_pipe_194_update_start_ <-& (WPIPE_tx_out_pipe_194_sample_completed_)
          WPIPE_tx_out_pipe_194_update_start_ &-> (WPIPE_tx_out_pipe_194_Update)
          WPIPE_tx_out_pipe_194_update_completed_ <-& (WPIPE_tx_out_pipe_194_Update)
          WPIPE_tx_out_pipe_194_sample_start_ o<-& (WPIPE_tx_out_pipe_194_update_completed_ 0)
          // start: Forward dependencies from s2 to transition WPIPE_tx_out_pipe_194_sample_start_
          WPIPE_tx_out_pipe_194_sample_start_ <-& (RPIPE_tx_in_pipe_12_update_completed_)
          // done: Forward dependencies from s2 to transition WPIPE_tx_out_pipe_194_sample_start_
          // RAW reenables for s2
          RPIPE_tx_in_pipe_12_update_start_ o<-& (WPIPE_tx_out_pipe_194_sample_completed_ 0)
          // end:  			$guard (b2) tx_out_pipe := s2 $buffering 1// bits of buffering = 10. 
          // start:  			$guard (b3) tx_out_pipe := s3 $buffering 1// bits of buffering = 10. 
          //  file .Aa/tx_deconcat.linked.aa, line 51
          // Guard expression 
          // b3
          // Source expression
          // s3
          // Target expression
          // (as target) tx_out_pipe
          $T[WPIPE_tx_out_pipe_198_sample_start_] 
          $T[WPIPE_tx_out_pipe_198_sample_completed_] 
          $T[WPIPE_tx_out_pipe_198_update_start_] 
          $T[WPIPE_tx_out_pipe_198_update_completed_] 
          // Guard dependency for expression WPIPE_tx_out_pipe_198 with guard R_b3_197
          // Guard forward dependency 
          WPIPE_tx_out_pipe_198_sample_start_ <-& (RPIPE_tx_in_pipe_12_update_completed_)
          // RAW reenables for b3
          RPIPE_tx_in_pipe_12_update_start_ o<-& (WPIPE_tx_out_pipe_198_sample_completed_ 0)
          ;;[WPIPE_tx_out_pipe_198_Sample] 
          {
            // pipe write sample-start tx_out_pipe
            $T [req] $T [ack] 
          }
          ;;[WPIPE_tx_out_pipe_198_Update] 
          {
            // pipe write update (complete) tx_out_pipe
            $T [req] $T [ack] 
          }
          WPIPE_tx_out_pipe_198_sample_start_ &-> (WPIPE_tx_out_pipe_198_Sample)
          WPIPE_tx_out_pipe_198_sample_completed_ <-& (WPIPE_tx_out_pipe_198_Sample)
          WPIPE_tx_out_pipe_198_update_start_ <-& (WPIPE_tx_out_pipe_198_sample_completed_)
          WPIPE_tx_out_pipe_198_update_start_ &-> (WPIPE_tx_out_pipe_198_Update)
          WPIPE_tx_out_pipe_198_update_completed_ <-& (WPIPE_tx_out_pipe_198_Update)
          WPIPE_tx_out_pipe_198_sample_start_ o<-& (WPIPE_tx_out_pipe_198_update_completed_ 0)
          // start: Forward dependencies from s3 to transition WPIPE_tx_out_pipe_198_sample_start_
          WPIPE_tx_out_pipe_198_sample_start_ <-& (RPIPE_tx_in_pipe_12_update_completed_)
          // done: Forward dependencies from s3 to transition WPIPE_tx_out_pipe_198_sample_start_
          // RAW reenables for s3
          RPIPE_tx_in_pipe_12_update_start_ o<-& (WPIPE_tx_out_pipe_198_sample_completed_ 0)
          // end:  			$guard (b3) tx_out_pipe := s3 $buffering 1// bits of buffering = 10. 
          // start:  			$guard (b4) tx_out_pipe := s4 $buffering 1// bits of buffering = 10. 
          //  file .Aa/tx_deconcat.linked.aa, line 52
          // Guard expression 
          // b4
          // Source expression
          // s4
          // Target expression
          // (as target) tx_out_pipe
          $T[WPIPE_tx_out_pipe_202_sample_start_] 
          $T[WPIPE_tx_out_pipe_202_sample_completed_] 
          $T[WPIPE_tx_out_pipe_202_update_start_] 
          $T[WPIPE_tx_out_pipe_202_update_completed_] 
          // Guard dependency for expression WPIPE_tx_out_pipe_202 with guard R_b4_201
          // Guard forward dependency 
          WPIPE_tx_out_pipe_202_sample_start_ <-& (RPIPE_tx_in_pipe_12_update_completed_)
          // RAW reenables for b4
          RPIPE_tx_in_pipe_12_update_start_ o<-& (WPIPE_tx_out_pipe_202_sample_completed_ 0)
          ;;[WPIPE_tx_out_pipe_202_Sample] 
          {
            // pipe write sample-start tx_out_pipe
            $T [req] $T [ack] 
          }
          ;;[WPIPE_tx_out_pipe_202_Update] 
          {
            // pipe write update (complete) tx_out_pipe
            $T [req] $T [ack] 
          }
          WPIPE_tx_out_pipe_202_sample_start_ &-> (WPIPE_tx_out_pipe_202_Sample)
          WPIPE_tx_out_pipe_202_sample_completed_ <-& (WPIPE_tx_out_pipe_202_Sample)
          WPIPE_tx_out_pipe_202_update_start_ <-& (WPIPE_tx_out_pipe_202_sample_completed_)
          WPIPE_tx_out_pipe_202_update_start_ &-> (WPIPE_tx_out_pipe_202_Update)
          WPIPE_tx_out_pipe_202_update_completed_ <-& (WPIPE_tx_out_pipe_202_Update)
          WPIPE_tx_out_pipe_202_sample_start_ o<-& (WPIPE_tx_out_pipe_202_update_completed_ 0)
          // start: Forward dependencies from s4 to transition WPIPE_tx_out_pipe_202_sample_start_
          WPIPE_tx_out_pipe_202_sample_start_ <-& (RPIPE_tx_in_pipe_12_update_completed_)
          // done: Forward dependencies from s4 to transition WPIPE_tx_out_pipe_202_sample_start_
          // RAW reenables for s4
          RPIPE_tx_in_pipe_12_update_start_ o<-& (WPIPE_tx_out_pipe_202_sample_completed_ 0)
          // end:  			$guard (b4) tx_out_pipe := s4 $buffering 1// bits of buffering = 10. 
          // start:  			$guard (b5) tx_out_pipe := s5 $buffering 1// bits of buffering = 10. 
          //  file .Aa/tx_deconcat.linked.aa, line 53
          // Guard expression 
          // b5
          // Source expression
          // s5
          // Target expression
          // (as target) tx_out_pipe
          $T[WPIPE_tx_out_pipe_206_sample_start_] 
          $T[WPIPE_tx_out_pipe_206_sample_completed_] 
          $T[WPIPE_tx_out_pipe_206_update_start_] 
          $T[WPIPE_tx_out_pipe_206_update_completed_] 
          // Guard dependency for expression WPIPE_tx_out_pipe_206 with guard R_b5_205
          // Guard forward dependency 
          WPIPE_tx_out_pipe_206_sample_start_ <-& (RPIPE_tx_in_pipe_12_update_completed_)
          // RAW reenables for b5
          RPIPE_tx_in_pipe_12_update_start_ o<-& (WPIPE_tx_out_pipe_206_sample_completed_ 0)
          ;;[WPIPE_tx_out_pipe_206_Sample] 
          {
            // pipe write sample-start tx_out_pipe
            $T [req] $T [ack] 
          }
          ;;[WPIPE_tx_out_pipe_206_Update] 
          {
            // pipe write update (complete) tx_out_pipe
            $T [req] $T [ack] 
          }
          WPIPE_tx_out_pipe_206_sample_start_ &-> (WPIPE_tx_out_pipe_206_Sample)
          WPIPE_tx_out_pipe_206_sample_completed_ <-& (WPIPE_tx_out_pipe_206_Sample)
          WPIPE_tx_out_pipe_206_update_start_ <-& (WPIPE_tx_out_pipe_206_sample_completed_)
          WPIPE_tx_out_pipe_206_update_start_ &-> (WPIPE_tx_out_pipe_206_Update)
          WPIPE_tx_out_pipe_206_update_completed_ <-& (WPIPE_tx_out_pipe_206_Update)
          WPIPE_tx_out_pipe_206_sample_start_ o<-& (WPIPE_tx_out_pipe_206_update_completed_ 0)
          // start: Forward dependencies from s5 to transition WPIPE_tx_out_pipe_206_sample_start_
          WPIPE_tx_out_pipe_206_sample_start_ <-& (RPIPE_tx_in_pipe_12_update_completed_)
          // done: Forward dependencies from s5 to transition WPIPE_tx_out_pipe_206_sample_start_
          // RAW reenables for s5
          RPIPE_tx_in_pipe_12_update_start_ o<-& (WPIPE_tx_out_pipe_206_sample_completed_ 0)
          // end:  			$guard (b5) tx_out_pipe := s5 $buffering 1// bits of buffering = 10. 
          // start:  			$guard (b6) tx_out_pipe := s6 $buffering 1// bits of buffering = 10. 
          //  file .Aa/tx_deconcat.linked.aa, line 54
          // Guard expression 
          // b6
          // Source expression
          // s6
          // Target expression
          // (as target) tx_out_pipe
          $T[WPIPE_tx_out_pipe_210_sample_start_] 
          $T[WPIPE_tx_out_pipe_210_sample_completed_] 
          $T[WPIPE_tx_out_pipe_210_update_start_] 
          $T[WPIPE_tx_out_pipe_210_update_completed_] 
          // Guard dependency for expression WPIPE_tx_out_pipe_210 with guard R_b6_209
          // Guard forward dependency 
          WPIPE_tx_out_pipe_210_sample_start_ <-& (RPIPE_tx_in_pipe_12_update_completed_)
          // RAW reenables for b6
          RPIPE_tx_in_pipe_12_update_start_ o<-& (WPIPE_tx_out_pipe_210_sample_completed_ 0)
          ;;[WPIPE_tx_out_pipe_210_Sample] 
          {
            // pipe write sample-start tx_out_pipe
            $T [req] $T [ack] 
          }
          ;;[WPIPE_tx_out_pipe_210_Update] 
          {
            // pipe write update (complete) tx_out_pipe
            $T [req] $T [ack] 
          }
          WPIPE_tx_out_pipe_210_sample_start_ &-> (WPIPE_tx_out_pipe_210_Sample)
          WPIPE_tx_out_pipe_210_sample_completed_ <-& (WPIPE_tx_out_pipe_210_Sample)
          WPIPE_tx_out_pipe_210_update_start_ <-& (WPIPE_tx_out_pipe_210_sample_completed_)
          WPIPE_tx_out_pipe_210_update_start_ &-> (WPIPE_tx_out_pipe_210_Update)
          WPIPE_tx_out_pipe_210_update_completed_ <-& (WPIPE_tx_out_pipe_210_Update)
          WPIPE_tx_out_pipe_210_sample_start_ o<-& (WPIPE_tx_out_pipe_210_update_completed_ 0)
          // start: Forward dependencies from s6 to transition WPIPE_tx_out_pipe_210_sample_start_
          WPIPE_tx_out_pipe_210_sample_start_ <-& (RPIPE_tx_in_pipe_12_update_completed_)
          // done: Forward dependencies from s6 to transition WPIPE_tx_out_pipe_210_sample_start_
          // RAW reenables for s6
          RPIPE_tx_in_pipe_12_update_start_ o<-& (WPIPE_tx_out_pipe_210_sample_completed_ 0)
          // end:  			$guard (b6) tx_out_pipe := s6 $buffering 1// bits of buffering = 10. 
          // start:  			$guard (b7) tx_out_pipe := s7 $buffering 1// bits of buffering = 10. 
          //  file .Aa/tx_deconcat.linked.aa, line 55
          // Guard expression 
          // b7
          // Source expression
          // s7
          // Target expression
          // (as target) tx_out_pipe
          $T[WPIPE_tx_out_pipe_214_sample_start_] 
          $T[WPIPE_tx_out_pipe_214_sample_completed_] 
          $T[WPIPE_tx_out_pipe_214_update_start_] 
          $T[WPIPE_tx_out_pipe_214_update_completed_] 
          // Guard dependency for expression WPIPE_tx_out_pipe_214 with guard R_b7_213
          // Guard forward dependency 
          WPIPE_tx_out_pipe_214_sample_start_ <-& (RPIPE_tx_in_pipe_12_update_completed_)
          // RAW reenables for b7
          RPIPE_tx_in_pipe_12_update_start_ o<-& (WPIPE_tx_out_pipe_214_sample_completed_ 0)
          ;;[WPIPE_tx_out_pipe_214_Sample] 
          {
            // pipe write sample-start tx_out_pipe
            $T [req] $T [ack] 
          }
          ;;[WPIPE_tx_out_pipe_214_Update] 
          {
            // pipe write update (complete) tx_out_pipe
            $T [req] $T [ack] 
          }
          WPIPE_tx_out_pipe_214_sample_start_ &-> (WPIPE_tx_out_pipe_214_Sample)
          WPIPE_tx_out_pipe_214_sample_completed_ <-& (WPIPE_tx_out_pipe_214_Sample)
          WPIPE_tx_out_pipe_214_update_start_ <-& (WPIPE_tx_out_pipe_214_sample_completed_)
          WPIPE_tx_out_pipe_214_update_start_ &-> (WPIPE_tx_out_pipe_214_Update)
          WPIPE_tx_out_pipe_214_update_completed_ <-& (WPIPE_tx_out_pipe_214_Update)
          WPIPE_tx_out_pipe_214_sample_start_ o<-& (WPIPE_tx_out_pipe_214_update_completed_ 0)
          // start: Forward dependencies from s7 to transition WPIPE_tx_out_pipe_214_sample_start_
          WPIPE_tx_out_pipe_214_sample_start_ <-& (RPIPE_tx_in_pipe_12_update_completed_)
          // done: Forward dependencies from s7 to transition WPIPE_tx_out_pipe_214_sample_start_
          // RAW reenables for s7
          RPIPE_tx_in_pipe_12_update_start_ o<-& (WPIPE_tx_out_pipe_214_sample_completed_ 0)
          // end:  			$guard (b7) tx_out_pipe := s7 $buffering 1// bits of buffering = 10. 
          $T [loop_body_delay_to_condition_start] $delay
          loop_body_start &-> (loop_body_delay_to_condition_start)
          loop_body_delay_to_condition_start &-> (condition_evaluated)
          condition_evaluated &-> ($null)
          // load-store dependencies..
          // pipe read/write dependencies for pipe tx_in_pipe
          // read-dependencies for pipe tx_in_pipe
          // write-dependencies for pipe tx_in_pipe
          // signal write dependencies for tx_in_pipe
          // pipe read/write dependencies for pipe tx_out_pipe
          // read-dependencies for pipe tx_out_pipe
          // write-dependencies for pipe tx_out_pipe
          WPIPE_tx_out_pipe_190_sample_start_ <-& (WPIPE_tx_out_pipe_186_update_completed_)
          WPIPE_tx_out_pipe_194_sample_start_ <-& (WPIPE_tx_out_pipe_190_update_completed_)
          WPIPE_tx_out_pipe_198_sample_start_ <-& (WPIPE_tx_out_pipe_194_update_completed_)
          WPIPE_tx_out_pipe_202_sample_start_ <-& (WPIPE_tx_out_pipe_198_update_completed_)
          WPIPE_tx_out_pipe_206_sample_start_ <-& (WPIPE_tx_out_pipe_202_update_completed_)
          WPIPE_tx_out_pipe_210_sample_start_ <-& (WPIPE_tx_out_pipe_206_update_completed_)
          WPIPE_tx_out_pipe_214_sample_start_ <-& (WPIPE_tx_out_pipe_210_update_completed_)
          // ring dependency in pipeline.
          WPIPE_tx_out_pipe_186_sample_start_ o<-& (WPIPE_tx_out_pipe_214_update_completed_ 0)
          // signal write dependencies for tx_out_pipe
        }
        ( first_time_through_loop_body  back_edge_to_loop_body) 
        ( condition_evaluated )
        ;; [loop_exit] 
        {
          $T [ack] 
        }
        ;; [loop_taken] 
        {
          $T [ack] 
        }
        do_while_stmt_9__entry__ <-| ($entry)
        loop_body_done <-| ( do_while_stmt_9_loop_body ) 
        condition_done |-> (loop_exit loop_taken)
        do_while_stmt_9__exit__ |-> ($exit)
        $bind condition_done <= do_while_stmt_9_loop_body : condition_evaluated
        $bind do_while_stmt_9__entry__  => do_while_stmt_9_loop_body : first_time_through_loop_body 
        $bind loop_back  => do_while_stmt_9_loop_body : back_edge_to_loop_body 
        $terminate (loop_exit loop_taken loop_body_done) (loop_back do_while_stmt_9__exit__)
      }
      do_while_stmt_9__entry__ |-> (do_while_stmt_9)
      do_while_stmt_9__exit__ <-| (do_while_stmt_9)
      do_while_stmt_9__entry__ <-| (branch_block_stmt_8__entry__)
      do_while_stmt_9__exit__ |-> (branch_block_stmt_8__exit__)
    }
  }
  // end control-path
  $DP 
  {
    // begin data-path 
    // constant-object-declarations for block %tx_deconcat%loop%
    //  file .Aa/tx_deconcat.linked.aa, line 20
    // constant-object-declarations for block %tx_deconcat%loop
    //  file .Aa/tx_deconcat.linked.aa, line 17
    // constant-object-declarations for block %tx_deconcat
    //  file .Aa/tx_deconcat.linked.aa, line 12
    // constant-declarations for block %tx_deconcat%loop
    //  file .Aa/tx_deconcat.linked.aa, line 17
    // do-while statement  
    //  file .Aa/tx_deconcat.linked.aa, line 19
    // 1 
    $constant $W[konst_218_wire_constant] : $int<1> := _b1// 1
    // constant-declarations for block %tx_deconcat%loop%
    //  file .Aa/tx_deconcat.linked.aa, line 20
    // ($bitcast ($uint<1>) _b1  )
    $constant $W[type_cast_94_wire_constant] : $int<1> := _b1// 1
    // ($bitcast ($uint<1>) _b1  )
    $constant $W[type_cast_107_wire_constant] : $int<1> := _b1// 1
    // ($bitcast ($uint<1>) _b1  )
    $constant $W[type_cast_120_wire_constant] : $int<1> := _b1// 1
    // ($bitcast ($uint<1>) _b1  )
    $constant $W[type_cast_133_wire_constant] : $int<1> := _b1// 1
    // ($bitcast ($uint<1>) _b1  )
    $constant $W[type_cast_146_wire_constant] : $int<1> := _b1// 1
    // ($bitcast ($uint<1>) _b1  )
    $constant $W[type_cast_159_wire_constant] : $int<1> := _b1// 1
    // ($bitcast ($uint<1>) _b1  )
    $constant $W[type_cast_172_wire_constant] : $int<1> := _b1// 1
    // ($bitcast ($uint<1>) _b1  )
    $constant $W[type_cast_182_wire_constant] : $int<1> := _b1// 1
    // block %tx_deconcat%loop
    //  file .Aa/tx_deconcat.linked.aa, line 17
    // do-while statement  
    //  file .Aa/tx_deconcat.linked.aa, line 19
    // 			RX := tx_in_pipe $buffering 1// bits of buffering = 73. 
    //  file .Aa/tx_deconcat.linked.aa, line 22
    // RX
    $W[RX_13] : $int<73>
    // 			$volatile tlast := ( $slice RX 72 72 )  $buffering 1
    //  file .Aa/tx_deconcat.linked.aa, line 23
    // tlast
    $W[tlast_18] : $int<1>
    // 			$volatile d0 := ( $slice RX 71 64 )  $buffering 1
    //  file .Aa/tx_deconcat.linked.aa, line 24
    // d0
    $W[d0_23] : $int<8>
    // 			$volatile d1 := ( $slice RX 63 56 )  $buffering 1
    //  file .Aa/tx_deconcat.linked.aa, line 25
    // d1
    $W[d1_27] : $int<8>
    // 			$volatile d2 := ( $slice RX 55 48 )  $buffering 1
    //  file .Aa/tx_deconcat.linked.aa, line 26
    // d2
    $W[d2_31] : $int<8>
    // 			$volatile d3 := ( $slice RX 47 40 )  $buffering 1
    //  file .Aa/tx_deconcat.linked.aa, line 27
    // d3
    $W[d3_35] : $int<8>
    // 			$volatile d4 := ( $slice RX 39 32 )  $buffering 1
    //  file .Aa/tx_deconcat.linked.aa, line 28
    // d4
    $W[d4_39] : $int<8>
    // 			$volatile d5 := ( $slice RX 31 24 )  $buffering 1
    //  file .Aa/tx_deconcat.linked.aa, line 29
    // d5
    $W[d5_43] : $int<8>
    // 			$volatile d6 := ( $slice RX 23 16 )  $buffering 1
    //  file .Aa/tx_deconcat.linked.aa, line 30
    // d6
    $W[d6_47] : $int<8>
    // 			$volatile d7 := ( $slice RX 15 8 )  $buffering 1
    //  file .Aa/tx_deconcat.linked.aa, line 31
    // d7
    $W[d7_51] : $int<8>
    // 			$volatile b0 := ( $slice RX 7 7 )  $buffering 1
    //  file .Aa/tx_deconcat.linked.aa, line 32
    // b0
    $W[b0_55] : $int<1>
    // 			$volatile b1 := ( $slice RX 6 6 )  $buffering 1
    //  file .Aa/tx_deconcat.linked.aa, line 33
    // b1
    $W[b1_59] : $int<1>
    // 			$volatile b2 := ( $slice RX 5 5 )  $buffering 1
    //  file .Aa/tx_deconcat.linked.aa, line 34
    // b2
    $W[b2_63] : $int<1>
    // 			$volatile b3 := ( $slice RX 4 4 )  $buffering 1
    //  file .Aa/tx_deconcat.linked.aa, line 35
    // b3
    $W[b3_67] : $int<1>
    // 			$volatile b4 := ( $slice RX 3 3 )  $buffering 1
    //  file .Aa/tx_deconcat.linked.aa, line 36
    // b4
    $W[b4_71] : $int<1>
    // 			$volatile b5 := ( $slice RX 2 2 )  $buffering 1
    //  file .Aa/tx_deconcat.linked.aa, line 37
    // b5
    $W[b5_75] : $int<1>
    // 			$volatile b6 := ( $slice RX 1 1 )  $buffering 1
    //  file .Aa/tx_deconcat.linked.aa, line 38
    // b6
    $W[b6_79] : $int<1>
    // 			$volatile b7 := ( $slice RX 0 0 )  $buffering 1
    //  file .Aa/tx_deconcat.linked.aa, line 39
    // b7
    $W[b7_83] : $int<1>
    // 			$volatile s0 := (((tlast & (b0 & ( ~ b1 ))) && d0) && ($bitcast ($uint<1>) _b1  )) $buffering 1
    //  file .Aa/tx_deconcat.linked.aa, line 40
    // ( ~ b1 )
    $intermediate $W[NOT_u1_u1_88_wire] : $int<1>
    // (b0 & ( ~ b1 ))
    $intermediate $W[AND_u1_u1_89_wire] : $int<1>
    // (tlast & (b0 & ( ~ b1 )))
    $intermediate $W[AND_u1_u1_90_wire] : $int<1>
    // ((tlast & (b0 & ( ~ b1 ))) && d0)
    $intermediate $W[CONCAT_u1_u9_92_wire] : $int<9>
    // s0
    $W[s0_96] : $int<10>
    // 			$volatile s1 := (((tlast & (b1 & ( ~ b2 ))) && d1) && ($bitcast ($uint<1>) _b1  )) $buffering 1
    //  file .Aa/tx_deconcat.linked.aa, line 41
    // ( ~ b2 )
    $intermediate $W[NOT_u1_u1_101_wire] : $int<1>
    // (b1 & ( ~ b2 ))
    $intermediate $W[AND_u1_u1_102_wire] : $int<1>
    // (tlast & (b1 & ( ~ b2 )))
    $intermediate $W[AND_u1_u1_103_wire] : $int<1>
    // ((tlast & (b1 & ( ~ b2 ))) && d1)
    $intermediate $W[CONCAT_u1_u9_105_wire] : $int<9>
    // s1
    $W[s1_109] : $int<10>
    // 			$volatile s2 := (((tlast & (b2 & ( ~ b3 ))) && d2) && ($bitcast ($uint<1>) _b1  )) $buffering 1
    //  file .Aa/tx_deconcat.linked.aa, line 42
    // ( ~ b3 )
    $intermediate $W[NOT_u1_u1_114_wire] : $int<1>
    // (b2 & ( ~ b3 ))
    $intermediate $W[AND_u1_u1_115_wire] : $int<1>
    // (tlast & (b2 & ( ~ b3 )))
    $intermediate $W[AND_u1_u1_116_wire] : $int<1>
    // ((tlast & (b2 & ( ~ b3 ))) && d2)
    $intermediate $W[CONCAT_u1_u9_118_wire] : $int<9>
    // s2
    $W[s2_122] : $int<10>
    // 			$volatile s3 := (((tlast & (b3 & ( ~ b4 ))) && d3) && ($bitcast ($uint<1>) _b1  )) $buffering 1
    //  file .Aa/tx_deconcat.linked.aa, line 43
    // ( ~ b4 )
    $intermediate $W[NOT_u1_u1_127_wire] : $int<1>
    // (b3 & ( ~ b4 ))
    $intermediate $W[AND_u1_u1_128_wire] : $int<1>
    // (tlast & (b3 & ( ~ b4 )))
    $intermediate $W[AND_u1_u1_129_wire] : $int<1>
    // ((tlast & (b3 & ( ~ b4 ))) && d3)
    $intermediate $W[CONCAT_u1_u9_131_wire] : $int<9>
    // s3
    $W[s3_135] : $int<10>
    // 			$volatile s4 := (((tlast & (b4 & ( ~ b5 ))) && d4) && ($bitcast ($uint<1>) _b1  )) $buffering 1
    //  file .Aa/tx_deconcat.linked.aa, line 44
    // ( ~ b5 )
    $intermediate $W[NOT_u1_u1_140_wire] : $int<1>
    // (b4 & ( ~ b5 ))
    $intermediate $W[AND_u1_u1_141_wire] : $int<1>
    // (tlast & (b4 & ( ~ b5 )))
    $intermediate $W[AND_u1_u1_142_wire] : $int<1>
    // ((tlast & (b4 & ( ~ b5 ))) && d4)
    $intermediate $W[CONCAT_u1_u9_144_wire] : $int<9>
    // s4
    $W[s4_148] : $int<10>
    // 			$volatile s5 := (((tlast & (b5 & ( ~ b6 ))) && d5) && ($bitcast ($uint<1>) _b1  )) $buffering 1
    //  file .Aa/tx_deconcat.linked.aa, line 45
    // ( ~ b6 )
    $intermediate $W[NOT_u1_u1_153_wire] : $int<1>
    // (b5 & ( ~ b6 ))
    $intermediate $W[AND_u1_u1_154_wire] : $int<1>
    // (tlast & (b5 & ( ~ b6 )))
    $intermediate $W[AND_u1_u1_155_wire] : $int<1>
    // ((tlast & (b5 & ( ~ b6 ))) && d5)
    $intermediate $W[CONCAT_u1_u9_157_wire] : $int<9>
    // s5
    $W[s5_161] : $int<10>
    // 			$volatile s6 := (((tlast & (b6 & ( ~ b7 ))) && d6) && ($bitcast ($uint<1>) _b1  )) $buffering 1
    //  file .Aa/tx_deconcat.linked.aa, line 46
    // ( ~ b7 )
    $intermediate $W[NOT_u1_u1_166_wire] : $int<1>
    // (b6 & ( ~ b7 ))
    $intermediate $W[AND_u1_u1_167_wire] : $int<1>
    // (tlast & (b6 & ( ~ b7 )))
    $intermediate $W[AND_u1_u1_168_wire] : $int<1>
    // ((tlast & (b6 & ( ~ b7 ))) && d6)
    $intermediate $W[CONCAT_u1_u9_170_wire] : $int<9>
    // s6
    $W[s6_174] : $int<10>
    // 			$volatile s7 := (((tlast & b7) && d7) && ($bitcast ($uint<1>) _b1  )) $buffering 1
    //  file .Aa/tx_deconcat.linked.aa, line 47
    // (tlast & b7)
    $intermediate $W[AND_u1_u1_178_wire] : $int<1>
    // ((tlast & b7) && d7)
    $intermediate $W[CONCAT_u1_u9_180_wire] : $int<9>
    // s7
    $W[s7_184] : $int<10>
    // 			$guard (b0) tx_out_pipe := s0 $buffering 1// bits of buffering = 10. 
    //  file .Aa/tx_deconcat.linked.aa, line 48
    // tx_out_pipe
    // 			$guard (b1) tx_out_pipe := s1 $buffering 1// bits of buffering = 10. 
    //  file .Aa/tx_deconcat.linked.aa, line 49
    // tx_out_pipe
    // 			$guard (b2) tx_out_pipe := s2 $buffering 1// bits of buffering = 10. 
    //  file .Aa/tx_deconcat.linked.aa, line 50
    // tx_out_pipe
    // 			$guard (b3) tx_out_pipe := s3 $buffering 1// bits of buffering = 10. 
    //  file .Aa/tx_deconcat.linked.aa, line 51
    // tx_out_pipe
    // 			$guard (b4) tx_out_pipe := s4 $buffering 1// bits of buffering = 10. 
    //  file .Aa/tx_deconcat.linked.aa, line 52
    // tx_out_pipe
    // 			$guard (b5) tx_out_pipe := s5 $buffering 1// bits of buffering = 10. 
    //  file .Aa/tx_deconcat.linked.aa, line 53
    // tx_out_pipe
    // 			$guard (b6) tx_out_pipe := s6 $buffering 1// bits of buffering = 10. 
    //  file .Aa/tx_deconcat.linked.aa, line 54
    // tx_out_pipe
    // 			$guard (b7) tx_out_pipe := s7 $buffering 1// bits of buffering = 10. 
    //  file .Aa/tx_deconcat.linked.aa, line 55
    // tx_out_pipe
    // datapath-instances for block %tx_deconcat%loop
    //  file .Aa/tx_deconcat.linked.aa, line 17
    // datapath-instances for do-while  
    //  file .Aa/tx_deconcat.linked.aa, line 19
    ==0? [do_while_stmt_9_branch] (konst_218_wire_constant)
    $flowthrough
    // 			RX := tx_in_pipe $buffering 1// bits of buffering = 73. 
    //  file .Aa/tx_deconcat.linked.aa, line 22
    // tx_in_pipe
    $ioport $in [RPIPE_tx_in_pipe_12_inst] (tx_in_pipe) (RX_13) 
    $buffering $out RPIPE_tx_in_pipe_12_inst RX_13 1
    // 			$volatile tlast := ( $slice RX 72 72 )  $buffering 1
    //  file .Aa/tx_deconcat.linked.aa, line 23
    // ( $slice RX 72 72 ) 
    [:] [slice_17_inst] (RX_13 72 72) (tlast_18)  $flowthrough
    $delay slice_17_inst 0
    // 			$volatile d0 := ( $slice RX 71 64 )  $buffering 1
    //  file .Aa/tx_deconcat.linked.aa, line 24
    // ( $slice RX 71 64 ) 
    [:] [slice_22_inst] (RX_13 71 64) (d0_23)  $flowthrough
    $delay slice_22_inst 0
    // 			$volatile d1 := ( $slice RX 63 56 )  $buffering 1
    //  file .Aa/tx_deconcat.linked.aa, line 25
    // ( $slice RX 63 56 ) 
    [:] [slice_26_inst] (RX_13 63 56) (d1_27)  $flowthrough
    $delay slice_26_inst 0
    // 			$volatile d2 := ( $slice RX 55 48 )  $buffering 1
    //  file .Aa/tx_deconcat.linked.aa, line 26
    // ( $slice RX 55 48 ) 
    [:] [slice_30_inst] (RX_13 55 48) (d2_31)  $flowthrough
    $delay slice_30_inst 0
    // 			$volatile d3 := ( $slice RX 47 40 )  $buffering 1
    //  file .Aa/tx_deconcat.linked.aa, line 27
    // ( $slice RX 47 40 ) 
    [:] [slice_34_inst] (RX_13 47 40) (d3_35)  $flowthrough
    $delay slice_34_inst 0
    // 			$volatile d4 := ( $slice RX 39 32 )  $buffering 1
    //  file .Aa/tx_deconcat.linked.aa, line 28
    // ( $slice RX 39 32 ) 
    [:] [slice_38_inst] (RX_13 39 32) (d4_39)  $flowthrough
    $delay slice_38_inst 0
    // 			$volatile d5 := ( $slice RX 31 24 )  $buffering 1
    //  file .Aa/tx_deconcat.linked.aa, line 29
    // ( $slice RX 31 24 ) 
    [:] [slice_42_inst] (RX_13 31 24) (d5_43)  $flowthrough
    $delay slice_42_inst 0
    // 			$volatile d6 := ( $slice RX 23 16 )  $buffering 1
    //  file .Aa/tx_deconcat.linked.aa, line 30
    // ( $slice RX 23 16 ) 
    [:] [slice_46_inst] (RX_13 23 16) (d6_47)  $flowthrough
    $delay slice_46_inst 0
    // 			$volatile d7 := ( $slice RX 15 8 )  $buffering 1
    //  file .Aa/tx_deconcat.linked.aa, line 31
    // ( $slice RX 15 8 ) 
    [:] [slice_50_inst] (RX_13 15 8) (d7_51)  $flowthrough
    $delay slice_50_inst 0
    // 			$volatile b0 := ( $slice RX 7 7 )  $buffering 1
    //  file .Aa/tx_deconcat.linked.aa, line 32
    // ( $slice RX 7 7 ) 
    [:] [slice_54_inst] (RX_13 7 7) (b0_55)  $flowthrough
    $delay slice_54_inst 0
    // 			$volatile b1 := ( $slice RX 6 6 )  $buffering 1
    //  file .Aa/tx_deconcat.linked.aa, line 33
    // ( $slice RX 6 6 ) 
    [:] [slice_58_inst] (RX_13 6 6) (b1_59)  $flowthrough
    $delay slice_58_inst 0
    // 			$volatile b2 := ( $slice RX 5 5 )  $buffering 1
    //  file .Aa/tx_deconcat.linked.aa, line 34
    // ( $slice RX 5 5 ) 
    [:] [slice_62_inst] (RX_13 5 5) (b2_63)  $flowthrough
    $delay slice_62_inst 0
    // 			$volatile b3 := ( $slice RX 4 4 )  $buffering 1
    //  file .Aa/tx_deconcat.linked.aa, line 35
    // ( $slice RX 4 4 ) 
    [:] [slice_66_inst] (RX_13 4 4) (b3_67)  $flowthrough
    $delay slice_66_inst 0
    // 			$volatile b4 := ( $slice RX 3 3 )  $buffering 1
    //  file .Aa/tx_deconcat.linked.aa, line 36
    // ( $slice RX 3 3 ) 
    [:] [slice_70_inst] (RX_13 3 3) (b4_71)  $flowthrough
    $delay slice_70_inst 0
    // 			$volatile b5 := ( $slice RX 2 2 )  $buffering 1
    //  file .Aa/tx_deconcat.linked.aa, line 37
    // ( $slice RX 2 2 ) 
    [:] [slice_74_inst] (RX_13 2 2) (b5_75)  $flowthrough
    $delay slice_74_inst 0
    // 			$volatile b6 := ( $slice RX 1 1 )  $buffering 1
    //  file .Aa/tx_deconcat.linked.aa, line 38
    // ( $slice RX 1 1 ) 
    [:] [slice_78_inst] (RX_13 1 1) (b6_79)  $flowthrough
    $delay slice_78_inst 0
    // 			$volatile b7 := ( $slice RX 0 0 )  $buffering 1
    //  file .Aa/tx_deconcat.linked.aa, line 39
    // ( $slice RX 0 0 ) 
    [:] [slice_82_inst] (RX_13 0 0) (b7_83)  $flowthrough
    $delay slice_82_inst 0
    // 			$volatile s0 := (((tlast & (b0 & ( ~ b1 ))) && d0) && ($bitcast ($uint<1>) _b1  )) $buffering 1
    //  file .Aa/tx_deconcat.linked.aa, line 40
    // ( ~ b1 )
    ~ [NOT_u1_u1_88_inst] (b1_59) (NOT_u1_u1_88_wire)   $flowthrough
    $delay NOT_u1_u1_88_inst 0
    // (b0 & ( ~ b1 ))
    &[AND_u1_u1_89_inst] (b0_55 NOT_u1_u1_88_wire) (AND_u1_u1_89_wire)   $flowthrough 
    $delay AND_u1_u1_89_inst 0
    // (tlast & (b0 & ( ~ b1 )))
    &[AND_u1_u1_90_inst] (tlast_18 AND_u1_u1_89_wire) (AND_u1_u1_90_wire)   $flowthrough 
    $delay AND_u1_u1_90_inst 0
    // ((tlast & (b0 & ( ~ b1 ))) && d0)
    &&[CONCAT_u1_u9_92_inst] (AND_u1_u1_90_wire d0_23) (CONCAT_u1_u9_92_wire)   $flowthrough 
    $delay CONCAT_u1_u9_92_inst 0
    // (((tlast & (b0 & ( ~ b1 ))) && d0) && ($bitcast ($uint<1>) _b1  ))
    &&[CONCAT_u9_u10_95_inst] (CONCAT_u1_u9_92_wire type_cast_94_wire_constant) (s0_96)   $flowthrough 
    $delay CONCAT_u9_u10_95_inst 0
    // 			$volatile s1 := (((tlast & (b1 & ( ~ b2 ))) && d1) && ($bitcast ($uint<1>) _b1  )) $buffering 1
    //  file .Aa/tx_deconcat.linked.aa, line 41
    // ( ~ b2 )
    ~ [NOT_u1_u1_101_inst] (b2_63) (NOT_u1_u1_101_wire)   $flowthrough
    $delay NOT_u1_u1_101_inst 0
    // (b1 & ( ~ b2 ))
    &[AND_u1_u1_102_inst] (b1_59 NOT_u1_u1_101_wire) (AND_u1_u1_102_wire)   $flowthrough 
    $delay AND_u1_u1_102_inst 0
    // (tlast & (b1 & ( ~ b2 )))
    &[AND_u1_u1_103_inst] (tlast_18 AND_u1_u1_102_wire) (AND_u1_u1_103_wire)   $flowthrough 
    $delay AND_u1_u1_103_inst 0
    // ((tlast & (b1 & ( ~ b2 ))) && d1)
    &&[CONCAT_u1_u9_105_inst] (AND_u1_u1_103_wire d1_27) (CONCAT_u1_u9_105_wire)   $flowthrough 
    $delay CONCAT_u1_u9_105_inst 0
    // (((tlast & (b1 & ( ~ b2 ))) && d1) && ($bitcast ($uint<1>) _b1  ))
    &&[CONCAT_u9_u10_108_inst] (CONCAT_u1_u9_105_wire type_cast_107_wire_constant) (s1_109)   $flowthrough 
    $delay CONCAT_u9_u10_108_inst 0
    // 			$volatile s2 := (((tlast & (b2 & ( ~ b3 ))) && d2) && ($bitcast ($uint<1>) _b1  )) $buffering 1
    //  file .Aa/tx_deconcat.linked.aa, line 42
    // ( ~ b3 )
    ~ [NOT_u1_u1_114_inst] (b3_67) (NOT_u1_u1_114_wire)   $flowthrough
    $delay NOT_u1_u1_114_inst 0
    // (b2 & ( ~ b3 ))
    &[AND_u1_u1_115_inst] (b2_63 NOT_u1_u1_114_wire) (AND_u1_u1_115_wire)   $flowthrough 
    $delay AND_u1_u1_115_inst 0
    // (tlast & (b2 & ( ~ b3 )))
    &[AND_u1_u1_116_inst] (tlast_18 AND_u1_u1_115_wire) (AND_u1_u1_116_wire)   $flowthrough 
    $delay AND_u1_u1_116_inst 0
    // ((tlast & (b2 & ( ~ b3 ))) && d2)
    &&[CONCAT_u1_u9_118_inst] (AND_u1_u1_116_wire d2_31) (CONCAT_u1_u9_118_wire)   $flowthrough 
    $delay CONCAT_u1_u9_118_inst 0
    // (((tlast & (b2 & ( ~ b3 ))) && d2) && ($bitcast ($uint<1>) _b1  ))
    &&[CONCAT_u9_u10_121_inst] (CONCAT_u1_u9_118_wire type_cast_120_wire_constant) (s2_122)   $flowthrough 
    $delay CONCAT_u9_u10_121_inst 0
    // 			$volatile s3 := (((tlast & (b3 & ( ~ b4 ))) && d3) && ($bitcast ($uint<1>) _b1  )) $buffering 1
    //  file .Aa/tx_deconcat.linked.aa, line 43
    // ( ~ b4 )
    ~ [NOT_u1_u1_127_inst] (b4_71) (NOT_u1_u1_127_wire)   $flowthrough
    $delay NOT_u1_u1_127_inst 0
    // (b3 & ( ~ b4 ))
    &[AND_u1_u1_128_inst] (b3_67 NOT_u1_u1_127_wire) (AND_u1_u1_128_wire)   $flowthrough 
    $delay AND_u1_u1_128_inst 0
    // (tlast & (b3 & ( ~ b4 )))
    &[AND_u1_u1_129_inst] (tlast_18 AND_u1_u1_128_wire) (AND_u1_u1_129_wire)   $flowthrough 
    $delay AND_u1_u1_129_inst 0
    // ((tlast & (b3 & ( ~ b4 ))) && d3)
    &&[CONCAT_u1_u9_131_inst] (AND_u1_u1_129_wire d3_35) (CONCAT_u1_u9_131_wire)   $flowthrough 
    $delay CONCAT_u1_u9_131_inst 0
    // (((tlast & (b3 & ( ~ b4 ))) && d3) && ($bitcast ($uint<1>) _b1  ))
    &&[CONCAT_u9_u10_134_inst] (CONCAT_u1_u9_131_wire type_cast_133_wire_constant) (s3_135)   $flowthrough 
    $delay CONCAT_u9_u10_134_inst 0
    // 			$volatile s4 := (((tlast & (b4 & ( ~ b5 ))) && d4) && ($bitcast ($uint<1>) _b1  )) $buffering 1
    //  file .Aa/tx_deconcat.linked.aa, line 44
    // ( ~ b5 )
    ~ [NOT_u1_u1_140_inst] (b5_75) (NOT_u1_u1_140_wire)   $flowthrough
    $delay NOT_u1_u1_140_inst 0
    // (b4 & ( ~ b5 ))
    &[AND_u1_u1_141_inst] (b4_71 NOT_u1_u1_140_wire) (AND_u1_u1_141_wire)   $flowthrough 
    $delay AND_u1_u1_141_inst 0
    // (tlast & (b4 & ( ~ b5 )))
    &[AND_u1_u1_142_inst] (tlast_18 AND_u1_u1_141_wire) (AND_u1_u1_142_wire)   $flowthrough 
    $delay AND_u1_u1_142_inst 0
    // ((tlast & (b4 & ( ~ b5 ))) && d4)
    &&[CONCAT_u1_u9_144_inst] (AND_u1_u1_142_wire d4_39) (CONCAT_u1_u9_144_wire)   $flowthrough 
    $delay CONCAT_u1_u9_144_inst 0
    // (((tlast & (b4 & ( ~ b5 ))) && d4) && ($bitcast ($uint<1>) _b1  ))
    &&[CONCAT_u9_u10_147_inst] (CONCAT_u1_u9_144_wire type_cast_146_wire_constant) (s4_148)   $flowthrough 
    $delay CONCAT_u9_u10_147_inst 0
    // 			$volatile s5 := (((tlast & (b5 & ( ~ b6 ))) && d5) && ($bitcast ($uint<1>) _b1  )) $buffering 1
    //  file .Aa/tx_deconcat.linked.aa, line 45
    // ( ~ b6 )
    ~ [NOT_u1_u1_153_inst] (b6_79) (NOT_u1_u1_153_wire)   $flowthrough
    $delay NOT_u1_u1_153_inst 0
    // (b5 & ( ~ b6 ))
    &[AND_u1_u1_154_inst] (b5_75 NOT_u1_u1_153_wire) (AND_u1_u1_154_wire)   $flowthrough 
    $delay AND_u1_u1_154_inst 0
    // (tlast & (b5 & ( ~ b6 )))
    &[AND_u1_u1_155_inst] (tlast_18 AND_u1_u1_154_wire) (AND_u1_u1_155_wire)   $flowthrough 
    $delay AND_u1_u1_155_inst 0
    // ((tlast & (b5 & ( ~ b6 ))) && d5)
    &&[CONCAT_u1_u9_157_inst] (AND_u1_u1_155_wire d5_43) (CONCAT_u1_u9_157_wire)   $flowthrough 
    $delay CONCAT_u1_u9_157_inst 0
    // (((tlast & (b5 & ( ~ b6 ))) && d5) && ($bitcast ($uint<1>) _b1  ))
    &&[CONCAT_u9_u10_160_inst] (CONCAT_u1_u9_157_wire type_cast_159_wire_constant) (s5_161)   $flowthrough 
    $delay CONCAT_u9_u10_160_inst 0
    // 			$volatile s6 := (((tlast & (b6 & ( ~ b7 ))) && d6) && ($bitcast ($uint<1>) _b1  )) $buffering 1
    //  file .Aa/tx_deconcat.linked.aa, line 46
    // ( ~ b7 )
    ~ [NOT_u1_u1_166_inst] (b7_83) (NOT_u1_u1_166_wire)   $flowthrough
    $delay NOT_u1_u1_166_inst 0
    // (b6 & ( ~ b7 ))
    &[AND_u1_u1_167_inst] (b6_79 NOT_u1_u1_166_wire) (AND_u1_u1_167_wire)   $flowthrough 
    $delay AND_u1_u1_167_inst 0
    // (tlast & (b6 & ( ~ b7 )))
    &[AND_u1_u1_168_inst] (tlast_18 AND_u1_u1_167_wire) (AND_u1_u1_168_wire)   $flowthrough 
    $delay AND_u1_u1_168_inst 0
    // ((tlast & (b6 & ( ~ b7 ))) && d6)
    &&[CONCAT_u1_u9_170_inst] (AND_u1_u1_168_wire d6_47) (CONCAT_u1_u9_170_wire)   $flowthrough 
    $delay CONCAT_u1_u9_170_inst 0
    // (((tlast & (b6 & ( ~ b7 ))) && d6) && ($bitcast ($uint<1>) _b1  ))
    &&[CONCAT_u9_u10_173_inst] (CONCAT_u1_u9_170_wire type_cast_172_wire_constant) (s6_174)   $flowthrough 
    $delay CONCAT_u9_u10_173_inst 0
    // 			$volatile s7 := (((tlast & b7) && d7) && ($bitcast ($uint<1>) _b1  )) $buffering 1
    //  file .Aa/tx_deconcat.linked.aa, line 47
    // (tlast & b7)
    &[AND_u1_u1_178_inst] (tlast_18 b7_83) (AND_u1_u1_178_wire)   $flowthrough 
    $delay AND_u1_u1_178_inst 0
    // ((tlast & b7) && d7)
    &&[CONCAT_u1_u9_180_inst] (AND_u1_u1_178_wire d7_51) (CONCAT_u1_u9_180_wire)   $flowthrough 
    $delay CONCAT_u1_u9_180_inst 0
    // (((tlast & b7) && d7) && ($bitcast ($uint<1>) _b1  ))
    &&[CONCAT_u9_u10_183_inst] (CONCAT_u1_u9_180_wire type_cast_182_wire_constant) (s7_184)   $flowthrough 
    $delay CONCAT_u9_u10_183_inst 0
    // 			$guard (b0) tx_out_pipe := s0 $buffering 1// bits of buffering = 10. 
    //  file .Aa/tx_deconcat.linked.aa, line 48
    // tx_out_pipe
    $ioport $out [WPIPE_tx_out_pipe_186_inst]  (s0_96) (tx_out_pipe) $guard ( b0_55 ) 
    // 			$guard (b1) tx_out_pipe := s1 $buffering 1// bits of buffering = 10. 
    //  file .Aa/tx_deconcat.linked.aa, line 49
    // tx_out_pipe
    $ioport $out [WPIPE_tx_out_pipe_190_inst]  (s1_109) (tx_out_pipe) $guard ( b1_59 ) 
    // 			$guard (b2) tx_out_pipe := s2 $buffering 1// bits of buffering = 10. 
    //  file .Aa/tx_deconcat.linked.aa, line 50
    // tx_out_pipe
    $ioport $out [WPIPE_tx_out_pipe_194_inst]  (s2_122) (tx_out_pipe) $guard ( b2_63 ) 
    // 			$guard (b3) tx_out_pipe := s3 $buffering 1// bits of buffering = 10. 
    //  file .Aa/tx_deconcat.linked.aa, line 51
    // tx_out_pipe
    $ioport $out [WPIPE_tx_out_pipe_198_inst]  (s3_135) (tx_out_pipe) $guard ( b3_67 ) 
    // 			$guard (b4) tx_out_pipe := s4 $buffering 1// bits of buffering = 10. 
    //  file .Aa/tx_deconcat.linked.aa, line 52
    // tx_out_pipe
    $ioport $out [WPIPE_tx_out_pipe_202_inst]  (s4_148) (tx_out_pipe) $guard ( b4_71 ) 
    // 			$guard (b5) tx_out_pipe := s5 $buffering 1// bits of buffering = 10. 
    //  file .Aa/tx_deconcat.linked.aa, line 53
    // tx_out_pipe
    $ioport $out [WPIPE_tx_out_pipe_206_inst]  (s5_161) (tx_out_pipe) $guard ( b5_75 ) 
    // 			$guard (b6) tx_out_pipe := s6 $buffering 1// bits of buffering = 10. 
    //  file .Aa/tx_deconcat.linked.aa, line 54
    // tx_out_pipe
    $ioport $out [WPIPE_tx_out_pipe_210_inst]  (s6_174) (tx_out_pipe) $guard ( b6_79 ) 
    // 			$guard (b7) tx_out_pipe := s7 $buffering 1// bits of buffering = 10. 
    //  file .Aa/tx_deconcat.linked.aa, line 55
    // tx_out_pipe
    $ioport $out [WPIPE_tx_out_pipe_214_inst]  (s7_184) (tx_out_pipe) $guard ( b7_83 ) 
  }
  // end data-path
  // CP-DP links for do-while  do_while_stmt_9
  //  file .Aa/tx_deconcat.linked.aa, line 19
  // 			RX := tx_in_pipe $buffering 1// bits of buffering = 73. 
  //  file .Aa/tx_deconcat.linked.aa, line 22
  // tx_in_pipe
  RPIPE_tx_in_pipe_12_inst <=> (branch_block_stmt_8/do_while_stmt_9/do_while_stmt_9_loop_body/RPIPE_tx_in_pipe_12_Sample/rr branch_block_stmt_8/do_while_stmt_9/do_while_stmt_9_loop_body/RPIPE_tx_in_pipe_12_Update/cr) (branch_block_stmt_8/do_while_stmt_9/do_while_stmt_9_loop_body/RPIPE_tx_in_pipe_12_Sample/ra branch_block_stmt_8/do_while_stmt_9/do_while_stmt_9_loop_body/RPIPE_tx_in_pipe_12_Update/ca)
  // 			$volatile tlast := ( $slice RX 72 72 )  $buffering 1
  //  file .Aa/tx_deconcat.linked.aa, line 23
  // RX
  // 			$volatile d0 := ( $slice RX 71 64 )  $buffering 1
  //  file .Aa/tx_deconcat.linked.aa, line 24
  // RX
  // 			$volatile d1 := ( $slice RX 63 56 )  $buffering 1
  //  file .Aa/tx_deconcat.linked.aa, line 25
  // RX
  // 			$volatile d2 := ( $slice RX 55 48 )  $buffering 1
  //  file .Aa/tx_deconcat.linked.aa, line 26
  // RX
  // 			$volatile d3 := ( $slice RX 47 40 )  $buffering 1
  //  file .Aa/tx_deconcat.linked.aa, line 27
  // RX
  // 			$volatile d4 := ( $slice RX 39 32 )  $buffering 1
  //  file .Aa/tx_deconcat.linked.aa, line 28
  // RX
  // 			$volatile d5 := ( $slice RX 31 24 )  $buffering 1
  //  file .Aa/tx_deconcat.linked.aa, line 29
  // RX
  // 			$volatile d6 := ( $slice RX 23 16 )  $buffering 1
  //  file .Aa/tx_deconcat.linked.aa, line 30
  // RX
  // 			$volatile d7 := ( $slice RX 15 8 )  $buffering 1
  //  file .Aa/tx_deconcat.linked.aa, line 31
  // RX
  // 			$volatile b0 := ( $slice RX 7 7 )  $buffering 1
  //  file .Aa/tx_deconcat.linked.aa, line 32
  // RX
  // 			$volatile b1 := ( $slice RX 6 6 )  $buffering 1
  //  file .Aa/tx_deconcat.linked.aa, line 33
  // RX
  // 			$volatile b2 := ( $slice RX 5 5 )  $buffering 1
  //  file .Aa/tx_deconcat.linked.aa, line 34
  // RX
  // 			$volatile b3 := ( $slice RX 4 4 )  $buffering 1
  //  file .Aa/tx_deconcat.linked.aa, line 35
  // RX
  // 			$volatile b4 := ( $slice RX 3 3 )  $buffering 1
  //  file .Aa/tx_deconcat.linked.aa, line 36
  // RX
  // 			$volatile b5 := ( $slice RX 2 2 )  $buffering 1
  //  file .Aa/tx_deconcat.linked.aa, line 37
  // RX
  // 			$volatile b6 := ( $slice RX 1 1 )  $buffering 1
  //  file .Aa/tx_deconcat.linked.aa, line 38
  // RX
  // 			$volatile b7 := ( $slice RX 0 0 )  $buffering 1
  //  file .Aa/tx_deconcat.linked.aa, line 39
  // RX
  // 			$volatile s0 := (((tlast & (b0 & ( ~ b1 ))) && d0) && ($bitcast ($uint<1>) _b1  )) $buffering 1
  //  file .Aa/tx_deconcat.linked.aa, line 40
  // (((tlast & (b0 & ( ~ b1 ))) && d0) && ($bitcast ($uint<1>) _b1  ))
  // ((tlast & (b0 & ( ~ b1 ))) && d0)
  // (tlast & (b0 & ( ~ b1 )))
  // tlast
  // (b0 & ( ~ b1 ))
  // b0
  // b1
  // d0
  // 			$volatile s1 := (((tlast & (b1 & ( ~ b2 ))) && d1) && ($bitcast ($uint<1>) _b1  )) $buffering 1
  //  file .Aa/tx_deconcat.linked.aa, line 41
  // (((tlast & (b1 & ( ~ b2 ))) && d1) && ($bitcast ($uint<1>) _b1  ))
  // ((tlast & (b1 & ( ~ b2 ))) && d1)
  // (tlast & (b1 & ( ~ b2 )))
  // tlast
  // (b1 & ( ~ b2 ))
  // b1
  // b2
  // d1
  // 			$volatile s2 := (((tlast & (b2 & ( ~ b3 ))) && d2) && ($bitcast ($uint<1>) _b1  )) $buffering 1
  //  file .Aa/tx_deconcat.linked.aa, line 42
  // (((tlast & (b2 & ( ~ b3 ))) && d2) && ($bitcast ($uint<1>) _b1  ))
  // ((tlast & (b2 & ( ~ b3 ))) && d2)
  // (tlast & (b2 & ( ~ b3 )))
  // tlast
  // (b2 & ( ~ b3 ))
  // b2
  // b3
  // d2
  // 			$volatile s3 := (((tlast & (b3 & ( ~ b4 ))) && d3) && ($bitcast ($uint<1>) _b1  )) $buffering 1
  //  file .Aa/tx_deconcat.linked.aa, line 43
  // (((tlast & (b3 & ( ~ b4 ))) && d3) && ($bitcast ($uint<1>) _b1  ))
  // ((tlast & (b3 & ( ~ b4 ))) && d3)
  // (tlast & (b3 & ( ~ b4 )))
  // tlast
  // (b3 & ( ~ b4 ))
  // b3
  // b4
  // d3
  // 			$volatile s4 := (((tlast & (b4 & ( ~ b5 ))) && d4) && ($bitcast ($uint<1>) _b1  )) $buffering 1
  //  file .Aa/tx_deconcat.linked.aa, line 44
  // (((tlast & (b4 & ( ~ b5 ))) && d4) && ($bitcast ($uint<1>) _b1  ))
  // ((tlast & (b4 & ( ~ b5 ))) && d4)
  // (tlast & (b4 & ( ~ b5 )))
  // tlast
  // (b4 & ( ~ b5 ))
  // b4
  // b5
  // d4
  // 			$volatile s5 := (((tlast & (b5 & ( ~ b6 ))) && d5) && ($bitcast ($uint<1>) _b1  )) $buffering 1
  //  file .Aa/tx_deconcat.linked.aa, line 45
  // (((tlast & (b5 & ( ~ b6 ))) && d5) && ($bitcast ($uint<1>) _b1  ))
  // ((tlast & (b5 & ( ~ b6 ))) && d5)
  // (tlast & (b5 & ( ~ b6 )))
  // tlast
  // (b5 & ( ~ b6 ))
  // b5
  // b6
  // d5
  // 			$volatile s6 := (((tlast & (b6 & ( ~ b7 ))) && d6) && ($bitcast ($uint<1>) _b1  )) $buffering 1
  //  file .Aa/tx_deconcat.linked.aa, line 46
  // (((tlast & (b6 & ( ~ b7 ))) && d6) && ($bitcast ($uint<1>) _b1  ))
  // ((tlast & (b6 & ( ~ b7 ))) && d6)
  // (tlast & (b6 & ( ~ b7 )))
  // tlast
  // (b6 & ( ~ b7 ))
  // b6
  // b7
  // d6
  // 			$volatile s7 := (((tlast & b7) && d7) && ($bitcast ($uint<1>) _b1  )) $buffering 1
  //  file .Aa/tx_deconcat.linked.aa, line 47
  // (((tlast & b7) && d7) && ($bitcast ($uint<1>) _b1  ))
  // ((tlast & b7) && d7)
  // (tlast & b7)
  // tlast
  // b7
  // d7
  // 			$guard (b0) tx_out_pipe := s0 $buffering 1// bits of buffering = 10. 
  //  file .Aa/tx_deconcat.linked.aa, line 48
  // s0
  // tx_out_pipe
  WPIPE_tx_out_pipe_186_inst <=> (branch_block_stmt_8/do_while_stmt_9/do_while_stmt_9_loop_body/WPIPE_tx_out_pipe_186_Sample/req branch_block_stmt_8/do_while_stmt_9/do_while_stmt_9_loop_body/WPIPE_tx_out_pipe_186_Update/req) (branch_block_stmt_8/do_while_stmt_9/do_while_stmt_9_loop_body/WPIPE_tx_out_pipe_186_Sample/ack branch_block_stmt_8/do_while_stmt_9/do_while_stmt_9_loop_body/WPIPE_tx_out_pipe_186_Update/ack)
  // 			$guard (b1) tx_out_pipe := s1 $buffering 1// bits of buffering = 10. 
  //  file .Aa/tx_deconcat.linked.aa, line 49
  // s1
  // tx_out_pipe
  WPIPE_tx_out_pipe_190_inst <=> (branch_block_stmt_8/do_while_stmt_9/do_while_stmt_9_loop_body/WPIPE_tx_out_pipe_190_Sample/req branch_block_stmt_8/do_while_stmt_9/do_while_stmt_9_loop_body/WPIPE_tx_out_pipe_190_Update/req) (branch_block_stmt_8/do_while_stmt_9/do_while_stmt_9_loop_body/WPIPE_tx_out_pipe_190_Sample/ack branch_block_stmt_8/do_while_stmt_9/do_while_stmt_9_loop_body/WPIPE_tx_out_pipe_190_Update/ack)
  // 			$guard (b2) tx_out_pipe := s2 $buffering 1// bits of buffering = 10. 
  //  file .Aa/tx_deconcat.linked.aa, line 50
  // s2
  // tx_out_pipe
  WPIPE_tx_out_pipe_194_inst <=> (branch_block_stmt_8/do_while_stmt_9/do_while_stmt_9_loop_body/WPIPE_tx_out_pipe_194_Sample/req branch_block_stmt_8/do_while_stmt_9/do_while_stmt_9_loop_body/WPIPE_tx_out_pipe_194_Update/req) (branch_block_stmt_8/do_while_stmt_9/do_while_stmt_9_loop_body/WPIPE_tx_out_pipe_194_Sample/ack branch_block_stmt_8/do_while_stmt_9/do_while_stmt_9_loop_body/WPIPE_tx_out_pipe_194_Update/ack)
  // 			$guard (b3) tx_out_pipe := s3 $buffering 1// bits of buffering = 10. 
  //  file .Aa/tx_deconcat.linked.aa, line 51
  // s3
  // tx_out_pipe
  WPIPE_tx_out_pipe_198_inst <=> (branch_block_stmt_8/do_while_stmt_9/do_while_stmt_9_loop_body/WPIPE_tx_out_pipe_198_Sample/req branch_block_stmt_8/do_while_stmt_9/do_while_stmt_9_loop_body/WPIPE_tx_out_pipe_198_Update/req) (branch_block_stmt_8/do_while_stmt_9/do_while_stmt_9_loop_body/WPIPE_tx_out_pipe_198_Sample/ack branch_block_stmt_8/do_while_stmt_9/do_while_stmt_9_loop_body/WPIPE_tx_out_pipe_198_Update/ack)
  // 			$guard (b4) tx_out_pipe := s4 $buffering 1// bits of buffering = 10. 
  //  file .Aa/tx_deconcat.linked.aa, line 52
  // s4
  // tx_out_pipe
  WPIPE_tx_out_pipe_202_inst <=> (branch_block_stmt_8/do_while_stmt_9/do_while_stmt_9_loop_body/WPIPE_tx_out_pipe_202_Sample/req branch_block_stmt_8/do_while_stmt_9/do_while_stmt_9_loop_body/WPIPE_tx_out_pipe_202_Update/req) (branch_block_stmt_8/do_while_stmt_9/do_while_stmt_9_loop_body/WPIPE_tx_out_pipe_202_Sample/ack branch_block_stmt_8/do_while_stmt_9/do_while_stmt_9_loop_body/WPIPE_tx_out_pipe_202_Update/ack)
  // 			$guard (b5) tx_out_pipe := s5 $buffering 1// bits of buffering = 10. 
  //  file .Aa/tx_deconcat.linked.aa, line 53
  // s5
  // tx_out_pipe
  WPIPE_tx_out_pipe_206_inst <=> (branch_block_stmt_8/do_while_stmt_9/do_while_stmt_9_loop_body/WPIPE_tx_out_pipe_206_Sample/req branch_block_stmt_8/do_while_stmt_9/do_while_stmt_9_loop_body/WPIPE_tx_out_pipe_206_Update/req) (branch_block_stmt_8/do_while_stmt_9/do_while_stmt_9_loop_body/WPIPE_tx_out_pipe_206_Sample/ack branch_block_stmt_8/do_while_stmt_9/do_while_stmt_9_loop_body/WPIPE_tx_out_pipe_206_Update/ack)
  // 			$guard (b6) tx_out_pipe := s6 $buffering 1// bits of buffering = 10. 
  //  file .Aa/tx_deconcat.linked.aa, line 54
  // s6
  // tx_out_pipe
  WPIPE_tx_out_pipe_210_inst <=> (branch_block_stmt_8/do_while_stmt_9/do_while_stmt_9_loop_body/WPIPE_tx_out_pipe_210_Sample/req branch_block_stmt_8/do_while_stmt_9/do_while_stmt_9_loop_body/WPIPE_tx_out_pipe_210_Update/req) (branch_block_stmt_8/do_while_stmt_9/do_while_stmt_9_loop_body/WPIPE_tx_out_pipe_210_Sample/ack branch_block_stmt_8/do_while_stmt_9/do_while_stmt_9_loop_body/WPIPE_tx_out_pipe_210_Update/ack)
  // 			$guard (b7) tx_out_pipe := s7 $buffering 1// bits of buffering = 10. 
  //  file .Aa/tx_deconcat.linked.aa, line 55
  // s7
  // tx_out_pipe
  WPIPE_tx_out_pipe_214_inst <=> (branch_block_stmt_8/do_while_stmt_9/do_while_stmt_9_loop_body/WPIPE_tx_out_pipe_214_Sample/req branch_block_stmt_8/do_while_stmt_9/do_while_stmt_9_loop_body/WPIPE_tx_out_pipe_214_Update/req) (branch_block_stmt_8/do_while_stmt_9/do_while_stmt_9_loop_body/WPIPE_tx_out_pipe_214_Sample/ack branch_block_stmt_8/do_while_stmt_9/do_while_stmt_9_loop_body/WPIPE_tx_out_pipe_214_Update/ack)
  do_while_stmt_9_branch <=> (branch_block_stmt_8/do_while_stmt_9/do_while_stmt_9_loop_body/condition_evaluated) (branch_block_stmt_8/do_while_stmt_9/loop_exit/ack branch_block_stmt_8/do_while_stmt_9/loop_taken/ack)
}
