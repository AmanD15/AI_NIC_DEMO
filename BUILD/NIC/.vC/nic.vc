// Virtual circuit produced from Aa description by Aa2VC 
// $pipe  AFB_NIC_REQUEST : $uint<74>  $depth 2 
// can point into 
// in scope  top-level
$pipe [AFB_NIC_REQUEST] 74 $depth 2 
// $pipe  AFB_NIC_RESPONSE : $uint<33>  $depth 2 
// can point into  foreign( $void )
// in scope  top-level
$pipe [AFB_NIC_RESPONSE] 33 $depth 2 
// $pipe  LAST_READ_TX_QUEUE_INDEX : $uint<8>  $depth 1  $signal 
// can point into  foreign( $void )
// in scope  top-level
$pipe [LAST_READ_TX_QUEUE_INDEX] 8 $depth 1 $signal 
// $pipe  LAST_WRITTEN_RX_QUEUE_INDEX : $uint<8>  $depth 1  $signal 
// can point into  foreign( $void )
// in scope  top-level
$pipe [LAST_WRITTEN_RX_QUEUE_INDEX] 8 $depth 1 $signal 
// $pipe  MAC_ENABLE : $uint<1>  $depth 1  $signal 
// can point into  foreign( $void )
// in scope  top-level
$pipe [MAC_ENABLE] 1 $depth 1 $signal 
// $pipe  MEMORY_TO_NIC_RESPONSE : $uint<65>  $depth 2 
// can point into 
// in scope  top-level
$pipe [MEMORY_TO_NIC_RESPONSE] 65 $depth 2 
// $pipe  NIC_DEBUG_SIGNAL : $uint<256>  $depth 1  $signal 
// can point into  foreign( $void )
// in scope  top-level
$pipe [NIC_DEBUG_SIGNAL] 256 $depth 1 $signal 
// $pipe  NIC_INTR : $uint<1>  $depth 1  $signal 
// can point into  foreign( $void )
// in scope  top-level
$pipe [NIC_INTR] 1 $depth 1 $signal 
// $pipe  NIC_INTR_ENABLE : $uint<1>  $depth 1  $signal 
// can point into  foreign( $void )
// in scope  top-level
$pipe [NIC_INTR_ENABLE] 1 $depth 1 $signal 
// $pipe  NIC_INTR_INTERNAL : $uint<1>  $depth 1  $signal 
// can point into 
// in scope  top-level
$pipe [NIC_INTR_INTERNAL] 1 $depth 1 $signal 
// $pipe  NIC_TO_MEMORY_REQUEST : $uint<110>  $depth 2 
// can point into  foreign( $void )
// in scope  top-level
$pipe [NIC_TO_MEMORY_REQUEST] 110 $depth 2 
// $pipe  QUEUE_MONITOR_SIGNAL : $uint<32>  $depth 1  $signal 
// can point into  foreign( $void )
// in scope  top-level
$pipe [QUEUE_MONITOR_SIGNAL] 32 $depth 1 $signal 
// $pipe  RX_ACTIVITY_LOGGER : $uint<8>  $depth 1 
// can point into 
// in scope  top-level
$pipe [RX_ACTIVITY_LOGGER] 8 $depth 1 
// $pipe  S_CONTROL_REGISTER : $uint<32>  $depth 1  $signal 
// can point into  foreign( $void )
// in scope  top-level
$pipe [S_CONTROL_REGISTER] 32 $depth 1 $signal 
// $pipe  S_FREE_Q : $uint<36>  $depth 1  $signal 
// can point into 
// in scope  top-level
$pipe [S_FREE_Q] 36 $depth 1 $signal 
// $pipe  S_NUMBER_OF_SERVERS : $uint<32>  $depth 1  $signal 
// can point into  foreign( $void )
// in scope  top-level
$pipe [S_NUMBER_OF_SERVERS] 32 $depth 1 $signal 
// $pipe  TX_ACTIVITY_LOGGER : $uint<8>  $depth 1 
// can point into 
// in scope  top-level
$pipe [TX_ACTIVITY_LOGGER] 8 $depth 1 
// $pipe  debug_queue_command : $uint<64>  $depth 1 
// can point into 
// in scope  top-level
$pipe [debug_queue_command] 64 $depth 1 
// $pipe  debug_queue_response : $uint<64>  $depth 1 
// can point into  foreign( $void )
// in scope  top-level
$pipe [debug_queue_response] 64 $depth 1 
// $pipe  enable_mac : $uint<1>  $depth 1 
// can point into 
// in scope  top-level
$pipe [enable_mac] 1 $depth 1 
// $pipe  mac_to_nic_data : $uint<73>  $depth 2 
// can point into 
// in scope  top-level
$pipe [mac_to_nic_data] 73 $depth 2 
// $pipe  memory_access_lock : $uint<1>  $depth 1 
// can point into 
// in scope  top-level
$pipe [memory_access_lock] 1 $depth 1 
// $pipe  nic_rx_to_header : $uint<73>  $depth 2 
// can point into 
// in scope  top-level
$pipe [nic_rx_to_header] 73 $depth 2 
// $pipe  nic_rx_to_packet : $uint<73>  $depth 2 
// can point into 
// in scope  top-level
$pipe [nic_rx_to_packet] 73 $depth 2 
// $pipe  nic_to_mac_transmit_pipe : $uint<73>  $depth 2 
// can point into  foreign( $void )
// in scope  top-level
$pipe [nic_to_mac_transmit_pipe] 73 $depth 2 
$constant $W[BAD_PACKET_DATA] : $int<64> := _b1111111111111111111111111111111111111111111111111111111111111111// -1
$constant $W[FREEQUEUE] : $int<2> := _b00// 0
$constant $W[FULL_BYTE_MASK] : $int<8> := _b11111111// 255
$constant $W[HEADER_TKEEP] : $int<8> := _b11111100// 252
$constant $W[LD] : $int<3> := _b100// 4
$constant $W[LDB] : $int<3> := _b110// 6
$constant $W[LDD] : $int<3> := _b101// 5
$constant $W[LDSTUB] : $int<3> := _b111// 7
$constant $W[LOCKMEM] : $int<1> := _b1// 1
$constant $W[POPQ] : $int<4> := _b0001// 1
$constant $W[PREPOPQ] : $int<4> := _b0011// 3
$constant $W[PREPUSHQ] : $int<4> := _b0100// 4
$constant $W[PUSHQ] : $int<4> := _b0010// 2
$constant $W[QUEUE_SIZE_MASK] : $int<32> := _b00000000000000000000000000000100// 4
$constant $W[READMEM] : $int<1> := _b1// 1
$constant $W[RXQUEUE] : $int<2> := _b10// 2
$constant $W[S0] : $int<2> := _b00// 0
$constant $W[S1] : $int<2> := _b01// 1
$constant $W[S2] : $int<2> := _b10// 2
$constant $W[S3] : $int<2> := _b11// 3
$constant $W[ST] : $int<3> := _b001// 1
$constant $W[STB] : $int<3> := _b011// 3
$constant $W[STD] : $int<3> := _b010// 2
$constant $W[TXQUEUE] : $int<2> := _b01// 1
$constant $W[UNLOCKMEM] : $int<1> := _b0// 0
$constant $W[WAIT_TIME] : $int<10> := _b0000001010// 10
$constant $W[WRITEMEM] : $int<1> := _b0// 0
// load store constants for object nic_registers
$constant $W[nic_registers_base_address] : $int<8> := _b00000000
// Declared gated clocks.
$memoryspace [memory_space_0] 
{
  $capacity 255
  $datawidth 32
  $addrwidth 8
  $maxaccesswidth 32
  // $storage  nic_registers : $array[255] $of $uint<32> // memory space index = 0  base address = 0  word size = 32
  // can point into  foreign( $void )
  // in scope  top-level
  $object [nic_registers] : $array[255] $of $int<32>
}
$volatile $module [getBaseIndex] 
{
  $in queue_type:$int<2>
  // can point into 
  server_id:$int<8>
  // can point into 
  $out base_index:$int<8>
  // can point into 
  // pipe-declarations for block %getBaseIndex
  //  file .Aa/nic.linked.opt.aa, line 80
  // there are no memory spaces local to this module.
  $CP 
  {
    // begin control-path 
    // Volatile! CP is left blank 
  }
  // end control-path
  $DP 
  {
    // begin data-path 
    // constant-object-declarations for block %getBaseIndex
    //  file .Aa/nic.linked.opt.aa, line 80
    // ( $mux (queue_type == FREEQUEUE) 200   _b0  ) 
    // FREEQUEUE
    $constant $W[R_FREEQUEUE_129_wire_constant] : $int<2> := _b00// 0
    // 200 
    $constant $W[konst_131_wire_constant] : $int<8> := _b11001000// 200
    // _b0 
    $constant $W[konst_132_wire_constant] : $int<8> := _b00000000// 0
    // ( $mux (queue_type == TXQUEUE) (128  + (server_id * 8 ))  _b0  ) 
    // TXQUEUE
    $constant $W[R_TXQUEUE_135_wire_constant] : $int<2> := _b01// 1
    // 128 
    $constant $W[konst_137_wire_constant] : $int<8> := _b10000000// 128
    // 8 
    $constant $W[konst_139_wire_constant] : $int<8> := _b00001000// 8
    // _b0 
    $constant $W[konst_142_wire_constant] : $int<8> := _b00000000// 0
    // ( $mux (queue_type == RXQUEUE) (8  + (server_id * 8 ))  _b0  ) 
    // RXQUEUE
    $constant $W[R_RXQUEUE_146_wire_constant] : $int<2> := _b10// 2
    // 8 
    $constant $W[konst_148_wire_constant] : $int<8> := _b00001000// 8
    // 8 
    $constant $W[konst_150_wire_constant] : $int<8> := _b00001000// 8
    // _b0 
    $constant $W[konst_153_wire_constant] : $int<8> := _b00000000// 0
    // 	base_index := ((( $mux (queue_type == FREEQUEUE) 200   _b0  )  | ( $mux (queue_type == TXQUEUE) (128  + (server_id * 8 ))  _b0  ) ) | ( $mux (queue_type == RXQUEUE) (8  + (server_id * 8 ))  _b0  ) ) $buffering 1
    //  file .Aa/nic.linked.opt.aa, line 85
    // (queue_type == FREEQUEUE)
    $intermediate $W[EQ_u2_u1_130_wire] : $int<1>
    // ( $mux (queue_type == FREEQUEUE) 200   _b0  ) 
    $intermediate $W[MUX_133_wire] : $int<8>
    // (queue_type == TXQUEUE)
    $intermediate $W[EQ_u2_u1_136_wire] : $int<1>
    // (server_id * 8 )
    $intermediate $W[MUL_u8_u8_140_wire] : $int<8>
    // (128  + (server_id * 8 ))
    $intermediate $W[ADD_u8_u8_141_wire] : $int<8>
    // ( $mux (queue_type == TXQUEUE) (128  + (server_id * 8 ))  _b0  ) 
    $intermediate $W[MUX_143_wire] : $int<8>
    // (( $mux (queue_type == FREEQUEUE) 200   _b0  )  | ( $mux (queue_type == TXQUEUE) (128  + (server_id * 8 ))  _b0  ) )
    $intermediate $W[OR_u8_u8_144_wire] : $int<8>
    // (queue_type == RXQUEUE)
    $intermediate $W[EQ_u2_u1_147_wire] : $int<1>
    // (server_id * 8 )
    $intermediate $W[MUL_u8_u8_151_wire] : $int<8>
    // (8  + (server_id * 8 ))
    $intermediate $W[ADD_u8_u8_152_wire] : $int<8>
    // ( $mux (queue_type == RXQUEUE) (8  + (server_id * 8 ))  _b0  ) 
    $intermediate $W[MUX_154_wire] : $int<8>
    // base_index
    // 	base_index := ((( $mux (queue_type == FREEQUEUE) 200   _b0  )  | ( $mux (queue_type == TXQUEUE) (128  + (server_id * 8 ))  _b0  ) ) | ( $mux (queue_type == RXQUEUE) (8  + (server_id * 8 ))  _b0  ) ) $buffering 1
    //  file .Aa/nic.linked.opt.aa, line 85
    // (queue_type == FREEQUEUE)
    ==[EQ_u2_u1_130_inst] (queue_type R_FREEQUEUE_129_wire_constant) (EQ_u2_u1_130_wire)   $flowthrough 
    $delay EQ_u2_u1_130_inst 0
    // ( $mux (queue_type == FREEQUEUE) 200   _b0  ) 
    ? [MUX_133_inst] (EQ_u2_u1_130_wire konst_131_wire_constant konst_132_wire_constant) (MUX_133_wire)  $flowthrough
    // (queue_type == TXQUEUE)
    ==[EQ_u2_u1_136_inst] (queue_type R_TXQUEUE_135_wire_constant) (EQ_u2_u1_136_wire)   $flowthrough 
    $delay EQ_u2_u1_136_inst 0
    // (server_id * 8 )
    *[MUL_u8_u8_140_inst] (server_id konst_139_wire_constant) (MUL_u8_u8_140_wire)   $flowthrough 
    $delay MUL_u8_u8_140_inst 0
    // (128  + (server_id * 8 ))
    +[ADD_u8_u8_141_inst] (konst_137_wire_constant MUL_u8_u8_140_wire) (ADD_u8_u8_141_wire)   $flowthrough 
    $delay ADD_u8_u8_141_inst 0
    // ( $mux (queue_type == TXQUEUE) (128  + (server_id * 8 ))  _b0  ) 
    ? [MUX_143_inst] (EQ_u2_u1_136_wire ADD_u8_u8_141_wire konst_142_wire_constant) (MUX_143_wire)  $flowthrough
    // (( $mux (queue_type == FREEQUEUE) 200   _b0  )  | ( $mux (queue_type == TXQUEUE) (128  + (server_id * 8 ))  _b0  ) )
    |[OR_u8_u8_144_inst] (MUX_133_wire MUX_143_wire) (OR_u8_u8_144_wire)   $flowthrough 
    $delay OR_u8_u8_144_inst 0
    // (queue_type == RXQUEUE)
    ==[EQ_u2_u1_147_inst] (queue_type R_RXQUEUE_146_wire_constant) (EQ_u2_u1_147_wire)   $flowthrough 
    $delay EQ_u2_u1_147_inst 0
    // (server_id * 8 )
    *[MUL_u8_u8_151_inst] (server_id konst_150_wire_constant) (MUL_u8_u8_151_wire)   $flowthrough 
    $delay MUL_u8_u8_151_inst 0
    // (8  + (server_id * 8 ))
    +[ADD_u8_u8_152_inst] (konst_148_wire_constant MUL_u8_u8_151_wire) (ADD_u8_u8_152_wire)   $flowthrough 
    $delay ADD_u8_u8_152_inst 0
    // ( $mux (queue_type == RXQUEUE) (8  + (server_id * 8 ))  _b0  ) 
    ? [MUX_154_inst] (EQ_u2_u1_147_wire ADD_u8_u8_152_wire konst_153_wire_constant) (MUX_154_wire)  $flowthrough
    // ((( $mux (queue_type == FREEQUEUE) 200   _b0  )  | ( $mux (queue_type == TXQUEUE) (128  + (server_id * 8 ))  _b0  ) ) | ( $mux (queue_type == RXQUEUE) (8  + (server_id * 8 ))  _b0  ) )
    |[OR_u8_u8_155_inst] (OR_u8_u8_144_wire MUX_154_wire) (base_index)   
    $buffering  $out OR_u8_u8_155_inst base_index 1
    $delay OR_u8_u8_155_inst 1
  }
  // end data-path
  // Volatile module.. no links.
}
$module [accessRegister] 
{
  $in rwbar:$int<1>
  // can point into 
  bmask:$int<4>
  // can point into 
  index:$int<8>
  // can point into  foreign( $void )
  wdata:$int<32>
  // can point into  foreign( $void )
  $out rdata:$int<32>
  // can point into  foreign( $void )
  // pipe-declarations for block %accessRegister
  //  file .Aa/nic.linked.opt.aa, line 87
  // memory-space 0 is written into.
  // memory-space 0 is read from.
  // there are no memory spaces local to this module.
  $CP 
  {
    // begin control-path 
    ::[assign_stmt_167_to_assign_stmt_241] 
    {
      // start:  	rdata := nic_registers[index] $buffering 1// bits of buffering = 32. 
      //  file .Aa/nic.linked.opt.aa, line 92
      // Source expression
      // nic_registers[index]
      $T[array_obj_ref_166_sample_start_] 
      $T[array_obj_ref_166_sample_completed_] 
      $T[array_obj_ref_166_update_start_] 
      $T[array_obj_ref_166_update_completed_] 
      $T[array_obj_ref_166_word_address_calculated] 
      $T[array_obj_ref_166_root_address_calculated] 
      $T[array_obj_ref_166_offset_calculated] 
      $T[array_obj_ref_166_index_resized_0] 
      $T[array_obj_ref_166_index_scaled_0] 
      $T[array_obj_ref_166_index_computed_0] 
      // index
      // start: Forward dependencies from index to transition array_obj_ref_166_index_computed_0
      // done: Forward dependencies from index to transition array_obj_ref_166_index_computed_0
      ;;[array_obj_ref_166_index_resize_0] 
      {
        $T [index_resize_req] $T [index_resize_ack] // resize index to address-width
      }
      array_obj_ref_166_index_computed_0 &-> (array_obj_ref_166_index_resize_0)
      array_obj_ref_166_index_resized_0 <-& (array_obj_ref_166_index_resize_0)
      ;;[array_obj_ref_166_index_scale_0] 
      {
        $T [scale_rename_req] $T [scale_rename_ack] // rename 
      }
      array_obj_ref_166_index_resized_0 &-> (array_obj_ref_166_index_scale_0)
      array_obj_ref_166_index_scaled_0 <-& (array_obj_ref_166_index_scale_0)
      ;;[array_obj_ref_166_final_index_sum_regn] 
      {
        $T [req] $T [ack] // rename
      }
      array_obj_ref_166_index_scaled_0 &-> (array_obj_ref_166_final_index_sum_regn)
      array_obj_ref_166_offset_calculated <-& (array_obj_ref_166_final_index_sum_regn)
      ;;[array_obj_ref_166_base_plus_offset] 
      {
        $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
      }
      array_obj_ref_166_offset_calculated &-> (array_obj_ref_166_base_plus_offset)
      array_obj_ref_166_root_address_calculated <-& (array_obj_ref_166_base_plus_offset)
      ;;[array_obj_ref_166_word_addrgen] 
      {
        $T [root_register_req] $T [root_register_ack]
      }
      array_obj_ref_166_root_address_calculated &-> (array_obj_ref_166_word_addrgen)
      array_obj_ref_166_word_address_calculated <-& (array_obj_ref_166_word_addrgen)
      ;;[array_obj_ref_166_Sample] 
      {
        ||[word_access_start] 
        {
          ;;[word_0] 
          {
            $T [rr] $T [ra] 
          }
        }
      }
      ;;[array_obj_ref_166_Update] 
      {
        ||[word_access_complete] 
        {
          ;;[word_0] 
          {
            $T [cr] $T [ca] 
          }
        }
        ;;[array_obj_ref_166_Merge] 
        {
          $T [merge_req] $T [merge_ack]
        }
      }
      array_obj_ref_166_sample_start_ <-& (array_obj_ref_166_word_address_calculated)
      array_obj_ref_166_sample_start_ &-> (array_obj_ref_166_Sample)
      array_obj_ref_166_sample_completed_ <-& (array_obj_ref_166_Sample)
      array_obj_ref_166_sample_completed_ &-> ($null)
      array_obj_ref_166_update_start_ &-> (array_obj_ref_166_Update)
      array_obj_ref_166_update_completed_ <-& (array_obj_ref_166_Update)
      // Target expression
      // (as target) rdata
      // rdata
      // write to interface object
      // start: WAR dependencies for rdata
      // done: WAR dependencies for rdata
      // rdata
      // write to interface object
      // end:  	rdata := nic_registers[index] $buffering 1// bits of buffering = 32. 
      // start: WAR dependencies for b0
      // ignored out-of-scope w_root  bmask : $uint<4> 
      // done: WAR dependencies for b0
      // start:  	$volatile b0 := ( $slice bmask 3 3 )  $buffering 1
      //  file .Aa/nic.linked.opt.aa, line 93
      // volatile! 
      // Source expression
      // ( $slice bmask 3 3 ) 
      // bmask
      // Target expression
      // (as target) b0
      // start: WAR dependencies for b0
      // ignored out-of-scope w_root  bmask : $uint<4> 
      // done: WAR dependencies for b0
      // end:  	$volatile b0 := ( $slice bmask 3 3 )  $buffering 1
      // start: WAR dependencies for b1
      // ignored out-of-scope w_root  bmask : $uint<4> 
      // done: WAR dependencies for b1
      // start:  	$volatile b1 := ( $slice bmask 2 2 )  $buffering 1
      //  file .Aa/nic.linked.opt.aa, line 94
      // volatile! 
      // Source expression
      // ( $slice bmask 2 2 ) 
      // bmask
      // Target expression
      // (as target) b1
      // start: WAR dependencies for b1
      // ignored out-of-scope w_root  bmask : $uint<4> 
      // done: WAR dependencies for b1
      // end:  	$volatile b1 := ( $slice bmask 2 2 )  $buffering 1
      // start: WAR dependencies for b2
      // ignored out-of-scope w_root  bmask : $uint<4> 
      // done: WAR dependencies for b2
      // start:  	$volatile b2 := ( $slice bmask 1 1 )  $buffering 1
      //  file .Aa/nic.linked.opt.aa, line 95
      // volatile! 
      // Source expression
      // ( $slice bmask 1 1 ) 
      // bmask
      // Target expression
      // (as target) b2
      // start: WAR dependencies for b2
      // ignored out-of-scope w_root  bmask : $uint<4> 
      // done: WAR dependencies for b2
      // end:  	$volatile b2 := ( $slice bmask 1 1 )  $buffering 1
      // start: WAR dependencies for b3
      // ignored out-of-scope w_root  bmask : $uint<4> 
      // done: WAR dependencies for b3
      // start:  	$volatile b3 := ( $slice bmask 0 0 )  $buffering 1
      //  file .Aa/nic.linked.opt.aa, line 96
      // volatile! 
      // Source expression
      // ( $slice bmask 0 0 ) 
      // bmask
      // Target expression
      // (as target) b3
      // start: WAR dependencies for b3
      // ignored out-of-scope w_root  bmask : $uint<4> 
      // done: WAR dependencies for b3
      // end:  	$volatile b3 := ( $slice bmask 0 0 )  $buffering 1
      // start: WAR dependencies for r0
      // done: WAR dependencies for r0
      // start:  	$volatile r0 := ( $slice rdata 31 24 )  $buffering 1
      //  file .Aa/nic.linked.opt.aa, line 97
      // volatile! 
      // Source expression
      // ( $slice rdata 31 24 ) 
      // rdata
      // Target expression
      // (as target) r0
      // start: WAR dependencies for r0
      // done: WAR dependencies for r0
      // end:  	$volatile r0 := ( $slice rdata 31 24 )  $buffering 1
      // start: WAR dependencies for r1
      // done: WAR dependencies for r1
      // start:  	$volatile r1 := ( $slice rdata 23 16 )  $buffering 1
      //  file .Aa/nic.linked.opt.aa, line 98
      // volatile! 
      // Source expression
      // ( $slice rdata 23 16 ) 
      // rdata
      // Target expression
      // (as target) r1
      // start: WAR dependencies for r1
      // done: WAR dependencies for r1
      // end:  	$volatile r1 := ( $slice rdata 23 16 )  $buffering 1
      // start: WAR dependencies for r2
      // done: WAR dependencies for r2
      // start:  	$volatile r2 := ( $slice rdata 15 8 )  $buffering 1
      //  file .Aa/nic.linked.opt.aa, line 99
      // volatile! 
      // Source expression
      // ( $slice rdata 15 8 ) 
      // rdata
      // Target expression
      // (as target) r2
      // start: WAR dependencies for r2
      // done: WAR dependencies for r2
      // end:  	$volatile r2 := ( $slice rdata 15 8 )  $buffering 1
      // start: WAR dependencies for r3
      // done: WAR dependencies for r3
      // start:  	$volatile r3 := ( $slice rdata 7 0 )  $buffering 1
      //  file .Aa/nic.linked.opt.aa, line 100
      // volatile! 
      // Source expression
      // ( $slice rdata 7 0 ) 
      // rdata
      // Target expression
      // (as target) r3
      // start: WAR dependencies for r3
      // done: WAR dependencies for r3
      // end:  	$volatile r3 := ( $slice rdata 7 0 )  $buffering 1
      // start: WAR dependencies for w0
      // ignored out-of-scope w_root  wdata : $uint<32> 
      // done: WAR dependencies for w0
      // start:  	$volatile w0 := ( $slice wdata 31 24 )  $buffering 1
      //  file .Aa/nic.linked.opt.aa, line 101
      // volatile! 
      // Source expression
      // ( $slice wdata 31 24 ) 
      // wdata
      // Target expression
      // (as target) w0
      // start: WAR dependencies for w0
      // ignored out-of-scope w_root  wdata : $uint<32> 
      // done: WAR dependencies for w0
      // end:  	$volatile w0 := ( $slice wdata 31 24 )  $buffering 1
      // start: WAR dependencies for w1
      // ignored out-of-scope w_root  wdata : $uint<32> 
      // done: WAR dependencies for w1
      // start:  	$volatile w1 := ( $slice wdata 23 16 )  $buffering 1
      //  file .Aa/nic.linked.opt.aa, line 102
      // volatile! 
      // Source expression
      // ( $slice wdata 23 16 ) 
      // wdata
      // Target expression
      // (as target) w1
      // start: WAR dependencies for w1
      // ignored out-of-scope w_root  wdata : $uint<32> 
      // done: WAR dependencies for w1
      // end:  	$volatile w1 := ( $slice wdata 23 16 )  $buffering 1
      // start: WAR dependencies for w2
      // ignored out-of-scope w_root  wdata : $uint<32> 
      // done: WAR dependencies for w2
      // start:  	$volatile w2 := ( $slice wdata 15 8 )  $buffering 1
      //  file .Aa/nic.linked.opt.aa, line 103
      // volatile! 
      // Source expression
      // ( $slice wdata 15 8 ) 
      // wdata
      // Target expression
      // (as target) w2
      // start: WAR dependencies for w2
      // ignored out-of-scope w_root  wdata : $uint<32> 
      // done: WAR dependencies for w2
      // end:  	$volatile w2 := ( $slice wdata 15 8 )  $buffering 1
      // start: WAR dependencies for w3
      // ignored out-of-scope w_root  wdata : $uint<32> 
      // done: WAR dependencies for w3
      // start:  	$volatile w3 := ( $slice wdata 7 0 )  $buffering 1
      //  file .Aa/nic.linked.opt.aa, line 104
      // volatile! 
      // Source expression
      // ( $slice wdata 7 0 ) 
      // wdata
      // Target expression
      // (as target) w3
      // start: WAR dependencies for w3
      // ignored out-of-scope w_root  wdata : $uint<32> 
      // done: WAR dependencies for w3
      // end:  	$volatile w3 := ( $slice wdata 7 0 )  $buffering 1
      // start: WAR dependencies for wval
      // ignored out-of-scope w_root  bmask : $uint<4> 
      // ignored out-of-scope w_root  wdata : $uint<32> 
      // done: WAR dependencies for wval
      // start:  	$volatile wval := ((( $mux b0 w0  r0 )  && ( $mux b1 w1  r1 ) ) && (( $mux b2 w2  r2 )  && ( $mux b3 w3  r3 ) )) $buffering 1
      //  file .Aa/nic.linked.opt.aa, line 105
      // volatile! 
      // Source expression
      // ((( $mux b0 w0  r0 )  && ( $mux b1 w1  r1 ) ) && (( $mux b2 w2  r2 )  && ( $mux b3 w3  r3 ) ))
      // (( $mux b0 w0  r0 )  && ( $mux b1 w1  r1 ) )
      // ( $mux b0 w0  r0 ) 
      // b0
      // w0
      // r0
      // ( $mux b1 w1  r1 ) 
      // b1
      // w1
      // r1
      // (( $mux b2 w2  r2 )  && ( $mux b3 w3  r3 ) )
      // ( $mux b2 w2  r2 ) 
      // b2
      // w2
      // r2
      // ( $mux b3 w3  r3 ) 
      // b3
      // w3
      // r3
      // Target expression
      // (as target) wval
      // start: WAR dependencies for wval
      // ignored out-of-scope w_root  bmask : $uint<4> 
      // ignored out-of-scope w_root  wdata : $uint<32> 
      // done: WAR dependencies for wval
      // end:  	$volatile wval := ((( $mux b0 w0  r0 )  && ( $mux b1 w1  r1 ) ) && (( $mux b2 w2  r2 )  && ( $mux b3 w3  r3 ) )) $buffering 1
      // start:  	$guard (~rwbar) nic_registers[index] := wval $buffering 1// bits of buffering = 32. 
      //  file .Aa/nic.linked.opt.aa, line 106
      // Guard expression 
      // rwbar
      // Source expression
      // wval
      // Target expression
      // nic_registers[index]
      $T[array_obj_ref_239_sample_start_] 
      $T[array_obj_ref_239_sample_completed_] 
      $T[array_obj_ref_239_update_start_] 
      $T[array_obj_ref_239_update_completed_] 
      $T[array_obj_ref_239_word_address_calculated] 
      $T[array_obj_ref_239_root_address_calculated] 
      $T[array_obj_ref_239_offset_calculated] 
      $T[array_obj_ref_239_index_resized_0] 
      $T[array_obj_ref_239_index_scaled_0] 
      $T[array_obj_ref_239_index_computed_0] 
      // index
      // start: Forward dependencies from index to transition array_obj_ref_239_index_computed_0
      // done: Forward dependencies from index to transition array_obj_ref_239_index_computed_0
      ;;[array_obj_ref_239_index_resize_0] 
      {
        $T [index_resize_req] $T [index_resize_ack] // resize index to address-width
      }
      array_obj_ref_239_index_computed_0 &-> (array_obj_ref_239_index_resize_0)
      array_obj_ref_239_index_resized_0 <-& (array_obj_ref_239_index_resize_0)
      ;;[array_obj_ref_239_index_scale_0] 
      {
        $T [scale_rename_req] $T [scale_rename_ack] // rename 
      }
      array_obj_ref_239_index_resized_0 &-> (array_obj_ref_239_index_scale_0)
      array_obj_ref_239_index_scaled_0 <-& (array_obj_ref_239_index_scale_0)
      ;;[array_obj_ref_239_final_index_sum_regn] 
      {
        $T [req] $T [ack] // rename
      }
      array_obj_ref_239_index_scaled_0 &-> (array_obj_ref_239_final_index_sum_regn)
      array_obj_ref_239_offset_calculated <-& (array_obj_ref_239_final_index_sum_regn)
      ;;[array_obj_ref_239_base_plus_offset] 
      {
        $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
      }
      array_obj_ref_239_offset_calculated &-> (array_obj_ref_239_base_plus_offset)
      array_obj_ref_239_root_address_calculated <-& (array_obj_ref_239_base_plus_offset)
      ;;[array_obj_ref_239_word_addrgen] 
      {
        $T [root_register_req] $T [root_register_ack]
      }
      array_obj_ref_239_root_address_calculated &-> (array_obj_ref_239_word_addrgen)
      array_obj_ref_239_word_address_calculated <-& (array_obj_ref_239_word_addrgen)
      ;;[array_obj_ref_239_Sample] 
      {
        ;;[array_obj_ref_239_Split] 
        {
          $T [split_req] $T [split_ack]
        }
        ||[word_access_start] 
        {
          ;;[word_0] 
          {
            $T [rr] $T [ra] 
          }
        }
      }
      ;;[array_obj_ref_239_Update] 
      {
        ||[word_access_complete] 
        {
          ;;[word_0] 
          {
            $T [cr] $T [ca] 
          }
        }
      }
      array_obj_ref_239_sample_start_ <-& (array_obj_ref_239_word_address_calculated)
      array_obj_ref_239_sample_start_ &-> (array_obj_ref_239_Sample)
      array_obj_ref_239_sample_completed_ <-& (array_obj_ref_239_Sample)
      array_obj_ref_239_sample_completed_ &-> ($null)
      array_obj_ref_239_update_start_ &-> (array_obj_ref_239_Update)
      array_obj_ref_239_update_completed_ <-& (array_obj_ref_239_Update)
      // Guard dependency for expression array_obj_ref_239 with guard R_rwbar_237
      // root rwbar of guard-expression not in visited elements.
      // start: Forward dependencies from wval to transition array_obj_ref_239_sample_start_
      array_obj_ref_239_sample_start_ <-& (array_obj_ref_166_update_completed_)
      // done: Forward dependencies from wval to transition array_obj_ref_239_sample_start_
      // end:  	$guard (~rwbar) nic_registers[index] := wval $buffering 1// bits of buffering = 32. 
      // load-store dependencies..
      // memory-space  memory_space_0
      //  array_obj_ref_166 load
      //  array_obj_ref_239 store
      $T [array_obj_ref_166_array_obj_ref_239_delay] $delay
      // array_obj_ref_166(load) -> array_obj_ref_239(store)
      array_obj_ref_239_sample_start_ <-& (array_obj_ref_166_array_obj_ref_239_delay)
      array_obj_ref_166_array_obj_ref_239_delay <-& (array_obj_ref_166_sample_completed_)
    }
  }
  // end control-path
  $DP 
  {
    // begin data-path 
    // constant-object-declarations for block %accessRegister
    //  file .Aa/nic.linked.opt.aa, line 87
    // nic_registers[index]
    $constant $W[array_obj_ref_166_resized_base_address] : $int<8> := _b00000000// 0
    $constant $W[array_obj_ref_166_offset_scale_factor_0] : $int<8> := _b00000001// 1
    $constant $W[array_obj_ref_166_word_offset_0] : $int<8> := _b00000000// 0
    // ( $mux b0 w0  r0 ) 
    // ( $mux b1 w1  r1 ) 
    // ( $mux b2 w2  r2 ) 
    // ( $mux b3 w3  r3 ) 
    // nic_registers[index]
    $constant $W[array_obj_ref_239_resized_base_address] : $int<8> := _b00000000// 0
    $constant $W[array_obj_ref_239_offset_scale_factor_0] : $int<8> := _b00000001// 1
    $constant $W[array_obj_ref_239_word_offset_0] : $int<8> := _b00000000// 0
    // 	rdata := nic_registers[index] $buffering 1// bits of buffering = 32. 
    //  file .Aa/nic.linked.opt.aa, line 92
    // nic_registers[index]
    $intermediate $W[R_index_165_resized] : $int<8>
    $intermediate $W[R_index_165_scaled] : $int<8>
    $intermediate $W[array_obj_ref_166_final_offset] : $int<8>
    $intermediate $W[array_obj_ref_166_root_address] : $int<8>
    $W[array_obj_ref_166_word_address_0] : $pointer<memory_space_0>
    $W[array_obj_ref_166_data_0] : $int<32>
    // rdata
    // 	$volatile b0 := ( $slice bmask 3 3 )  $buffering 1
    //  file .Aa/nic.linked.opt.aa, line 93
    // b0
    $W[b0_171] : $int<1>
    // 	$volatile b1 := ( $slice bmask 2 2 )  $buffering 1
    //  file .Aa/nic.linked.opt.aa, line 94
    // b1
    $W[b1_175] : $int<1>
    // 	$volatile b2 := ( $slice bmask 1 1 )  $buffering 1
    //  file .Aa/nic.linked.opt.aa, line 95
    // b2
    $W[b2_179] : $int<1>
    // 	$volatile b3 := ( $slice bmask 0 0 )  $buffering 1
    //  file .Aa/nic.linked.opt.aa, line 96
    // b3
    $W[b3_183] : $int<1>
    // 	$volatile r0 := ( $slice rdata 31 24 )  $buffering 1
    //  file .Aa/nic.linked.opt.aa, line 97
    // r0
    $W[r0_187] : $int<8>
    // 	$volatile r1 := ( $slice rdata 23 16 )  $buffering 1
    //  file .Aa/nic.linked.opt.aa, line 98
    // r1
    $W[r1_191] : $int<8>
    // 	$volatile r2 := ( $slice rdata 15 8 )  $buffering 1
    //  file .Aa/nic.linked.opt.aa, line 99
    // r2
    $W[r2_195] : $int<8>
    // 	$volatile r3 := ( $slice rdata 7 0 )  $buffering 1
    //  file .Aa/nic.linked.opt.aa, line 100
    // r3
    $W[r3_199] : $int<8>
    // 	$volatile w0 := ( $slice wdata 31 24 )  $buffering 1
    //  file .Aa/nic.linked.opt.aa, line 101
    // w0
    $W[w0_203] : $int<8>
    // 	$volatile w1 := ( $slice wdata 23 16 )  $buffering 1
    //  file .Aa/nic.linked.opt.aa, line 102
    // w1
    $W[w1_207] : $int<8>
    // 	$volatile w2 := ( $slice wdata 15 8 )  $buffering 1
    //  file .Aa/nic.linked.opt.aa, line 103
    // w2
    $W[w2_211] : $int<8>
    // 	$volatile w3 := ( $slice wdata 7 0 )  $buffering 1
    //  file .Aa/nic.linked.opt.aa, line 104
    // w3
    $W[w3_215] : $int<8>
    // 	$volatile wval := ((( $mux b0 w0  r0 )  && ( $mux b1 w1  r1 ) ) && (( $mux b2 w2  r2 )  && ( $mux b3 w3  r3 ) )) $buffering 1
    //  file .Aa/nic.linked.opt.aa, line 105
    // ( $mux b0 w0  r0 ) 
    $intermediate $W[MUX_220_wire] : $int<8>
    // ( $mux b1 w1  r1 ) 
    $intermediate $W[MUX_224_wire] : $int<8>
    // (( $mux b0 w0  r0 )  && ( $mux b1 w1  r1 ) )
    $intermediate $W[CONCAT_u8_u16_225_wire] : $int<16>
    // ( $mux b2 w2  r2 ) 
    $intermediate $W[MUX_229_wire] : $int<8>
    // ( $mux b3 w3  r3 ) 
    $intermediate $W[MUX_233_wire] : $int<8>
    // (( $mux b2 w2  r2 )  && ( $mux b3 w3  r3 ) )
    $intermediate $W[CONCAT_u8_u16_234_wire] : $int<16>
    // wval
    $W[wval_236] : $int<32>
    // 	$guard (~rwbar) nic_registers[index] := wval $buffering 1// bits of buffering = 32. 
    //  file .Aa/nic.linked.opt.aa, line 106
    // nic_registers[index]
    $intermediate $W[R_index_238_resized] : $int<8>
    $intermediate $W[R_index_238_scaled] : $int<8>
    $intermediate $W[array_obj_ref_239_final_offset] : $int<8>
    $intermediate $W[array_obj_ref_239_root_address] : $int<8>
    $W[array_obj_ref_239_word_address_0] : $pointer<memory_space_0>
    $W[array_obj_ref_239_data_0] : $int<32>
    // 	rdata := nic_registers[index] $buffering 1// bits of buffering = 32. 
    //  file .Aa/nic.linked.opt.aa, line 92
    // nic_registers[index]
    &/ [array_obj_ref_166_index_0_resize] (index) (R_index_165_resized) 
    $flowthrough 
    &/ [array_obj_ref_166_index_0_rename] (R_index_165_resized) (R_index_165_scaled) 
    $flowthrough 
    &/ [array_obj_ref_166_index_offset] (R_index_165_scaled) (array_obj_ref_166_final_offset) 
    $flowthrough 
    &/ [array_obj_ref_166_root_address_inst] (array_obj_ref_166_final_offset) (array_obj_ref_166_root_address) 
    $flowthrough 
    &/ [array_obj_ref_166_addr_0] (array_obj_ref_166_root_address) (array_obj_ref_166_word_address_0) 
    $flowthrough 
    $load [array_obj_ref_166_load_0] $from memory_space_0 (array_obj_ref_166_word_address_0) (array_obj_ref_166_data_0) 
    $delay array_obj_ref_166_load_0 4
    &/ [array_obj_ref_166_gather_scatter] (array_obj_ref_166_data_0) (rdata) 
    $flowthrough 
    // 	$volatile b0 := ( $slice bmask 3 3 )  $buffering 1
    //  file .Aa/nic.linked.opt.aa, line 93
    // ( $slice bmask 3 3 ) 
    [:] [slice_170_inst] (bmask 3 3) (b0_171)  $flowthrough
    $delay slice_170_inst 0
    // 	$volatile b1 := ( $slice bmask 2 2 )  $buffering 1
    //  file .Aa/nic.linked.opt.aa, line 94
    // ( $slice bmask 2 2 ) 
    [:] [slice_174_inst] (bmask 2 2) (b1_175)  $flowthrough
    $delay slice_174_inst 0
    // 	$volatile b2 := ( $slice bmask 1 1 )  $buffering 1
    //  file .Aa/nic.linked.opt.aa, line 95
    // ( $slice bmask 1 1 ) 
    [:] [slice_178_inst] (bmask 1 1) (b2_179)  $flowthrough
    $delay slice_178_inst 0
    // 	$volatile b3 := ( $slice bmask 0 0 )  $buffering 1
    //  file .Aa/nic.linked.opt.aa, line 96
    // ( $slice bmask 0 0 ) 
    [:] [slice_182_inst] (bmask 0 0) (b3_183)  $flowthrough
    $delay slice_182_inst 0
    // 	$volatile r0 := ( $slice rdata 31 24 )  $buffering 1
    //  file .Aa/nic.linked.opt.aa, line 97
    // ( $slice rdata 31 24 ) 
    [:] [slice_186_inst] (rdata 31 24) (r0_187)  $flowthrough
    $delay slice_186_inst 0
    // 	$volatile r1 := ( $slice rdata 23 16 )  $buffering 1
    //  file .Aa/nic.linked.opt.aa, line 98
    // ( $slice rdata 23 16 ) 
    [:] [slice_190_inst] (rdata 23 16) (r1_191)  $flowthrough
    $delay slice_190_inst 0
    // 	$volatile r2 := ( $slice rdata 15 8 )  $buffering 1
    //  file .Aa/nic.linked.opt.aa, line 99
    // ( $slice rdata 15 8 ) 
    [:] [slice_194_inst] (rdata 15 8) (r2_195)  $flowthrough
    $delay slice_194_inst 0
    // 	$volatile r3 := ( $slice rdata 7 0 )  $buffering 1
    //  file .Aa/nic.linked.opt.aa, line 100
    // ( $slice rdata 7 0 ) 
    [:] [slice_198_inst] (rdata 7 0) (r3_199)  $flowthrough
    $delay slice_198_inst 0
    // 	$volatile w0 := ( $slice wdata 31 24 )  $buffering 1
    //  file .Aa/nic.linked.opt.aa, line 101
    // ( $slice wdata 31 24 ) 
    [:] [slice_202_inst] (wdata 31 24) (w0_203)  $flowthrough
    $delay slice_202_inst 0
    // 	$volatile w1 := ( $slice wdata 23 16 )  $buffering 1
    //  file .Aa/nic.linked.opt.aa, line 102
    // ( $slice wdata 23 16 ) 
    [:] [slice_206_inst] (wdata 23 16) (w1_207)  $flowthrough
    $delay slice_206_inst 0
    // 	$volatile w2 := ( $slice wdata 15 8 )  $buffering 1
    //  file .Aa/nic.linked.opt.aa, line 103
    // ( $slice wdata 15 8 ) 
    [:] [slice_210_inst] (wdata 15 8) (w2_211)  $flowthrough
    $delay slice_210_inst 0
    // 	$volatile w3 := ( $slice wdata 7 0 )  $buffering 1
    //  file .Aa/nic.linked.opt.aa, line 104
    // ( $slice wdata 7 0 ) 
    [:] [slice_214_inst] (wdata 7 0) (w3_215)  $flowthrough
    $delay slice_214_inst 0
    // 	$volatile wval := ((( $mux b0 w0  r0 )  && ( $mux b1 w1  r1 ) ) && (( $mux b2 w2  r2 )  && ( $mux b3 w3  r3 ) )) $buffering 1
    //  file .Aa/nic.linked.opt.aa, line 105
    // ( $mux b0 w0  r0 ) 
    ? [MUX_220_inst] (b0_171 w0_203 r0_187) (MUX_220_wire)  $flowthrough
    // ( $mux b1 w1  r1 ) 
    ? [MUX_224_inst] (b1_175 w1_207 r1_191) (MUX_224_wire)  $flowthrough
    // (( $mux b0 w0  r0 )  && ( $mux b1 w1  r1 ) )
    &&[CONCAT_u8_u16_225_inst] (MUX_220_wire MUX_224_wire) (CONCAT_u8_u16_225_wire)   $flowthrough 
    $delay CONCAT_u8_u16_225_inst 0
    // ( $mux b2 w2  r2 ) 
    ? [MUX_229_inst] (b2_179 w2_211 r2_195) (MUX_229_wire)  $flowthrough
    // ( $mux b3 w3  r3 ) 
    ? [MUX_233_inst] (b3_183 w3_215 r3_199) (MUX_233_wire)  $flowthrough
    // (( $mux b2 w2  r2 )  && ( $mux b3 w3  r3 ) )
    &&[CONCAT_u8_u16_234_inst] (MUX_229_wire MUX_233_wire) (CONCAT_u8_u16_234_wire)   $flowthrough 
    $delay CONCAT_u8_u16_234_inst 0
    // ((( $mux b0 w0  r0 )  && ( $mux b1 w1  r1 ) ) && (( $mux b2 w2  r2 )  && ( $mux b3 w3  r3 ) ))
    &&[CONCAT_u16_u32_235_inst] (CONCAT_u8_u16_225_wire CONCAT_u8_u16_234_wire) (wval_236)   $flowthrough 
    $delay CONCAT_u16_u32_235_inst 0
    // 	$guard (~rwbar) nic_registers[index] := wval $buffering 1// bits of buffering = 32. 
    //  file .Aa/nic.linked.opt.aa, line 106
    // nic_registers[index]
    &/ [array_obj_ref_239_index_0_resize] (index) (R_index_238_resized) $guard ( ~ rwbar ) 
    $flowthrough 
    &/ [array_obj_ref_239_index_0_rename] (R_index_238_resized) (R_index_238_scaled) $guard ( ~ rwbar ) 
    $flowthrough 
    &/ [array_obj_ref_239_index_offset] (R_index_238_scaled) (array_obj_ref_239_final_offset) $guard ( ~ rwbar ) 
    $flowthrough 
    &/ [array_obj_ref_239_root_address_inst] (array_obj_ref_239_final_offset) (array_obj_ref_239_root_address) $guard ( ~ rwbar ) 
    $flowthrough 
    &/ [array_obj_ref_239_addr_0] (array_obj_ref_239_root_address) (array_obj_ref_239_word_address_0) $guard ( ~ rwbar ) 
    $flowthrough 
    $store [array_obj_ref_239_store_0] $to memory_space_0 (array_obj_ref_239_word_address_0 array_obj_ref_239_data_0) $guard ( ~ rwbar ) 
    $delay array_obj_ref_239_store_0 4
    &/ [array_obj_ref_239_gather_scatter] (wval_236) (array_obj_ref_239_data_0) $guard ( ~ rwbar ) 
    $flowthrough 
  }
  // end data-path
  // 	rdata := nic_registers[index] $buffering 1// bits of buffering = 32. 
  //  file .Aa/nic.linked.opt.aa, line 92
  // nic_registers[index]
  // index
  array_obj_ref_166_index_0_resize <=> (assign_stmt_167_to_assign_stmt_241/array_obj_ref_166_index_resize_0/index_resize_req) (assign_stmt_167_to_assign_stmt_241/array_obj_ref_166_index_resize_0/index_resize_ack)
  array_obj_ref_166_index_0_rename <=> (assign_stmt_167_to_assign_stmt_241/array_obj_ref_166_index_scale_0/scale_rename_req) (assign_stmt_167_to_assign_stmt_241/array_obj_ref_166_index_scale_0/scale_rename_ack)
  array_obj_ref_166_index_offset <=> (assign_stmt_167_to_assign_stmt_241/array_obj_ref_166_final_index_sum_regn/req) (assign_stmt_167_to_assign_stmt_241/array_obj_ref_166_final_index_sum_regn/ack)
  array_obj_ref_166_root_address_inst <=> (assign_stmt_167_to_assign_stmt_241/array_obj_ref_166_base_plus_offset/sum_rename_req) (assign_stmt_167_to_assign_stmt_241/array_obj_ref_166_base_plus_offset/sum_rename_ack)
  array_obj_ref_166_addr_0 <=> (assign_stmt_167_to_assign_stmt_241/array_obj_ref_166_word_addrgen/root_register_req) (assign_stmt_167_to_assign_stmt_241/array_obj_ref_166_word_addrgen/root_register_ack)
  array_obj_ref_166_gather_scatter <=> (assign_stmt_167_to_assign_stmt_241/array_obj_ref_166_Update/array_obj_ref_166_Merge/merge_req) (assign_stmt_167_to_assign_stmt_241/array_obj_ref_166_Update/array_obj_ref_166_Merge/merge_ack)
  array_obj_ref_166_load_0 <=> (assign_stmt_167_to_assign_stmt_241/array_obj_ref_166_Sample/word_access_start/word_0/rr assign_stmt_167_to_assign_stmt_241/array_obj_ref_166_Update/word_access_complete/word_0/cr) (assign_stmt_167_to_assign_stmt_241/array_obj_ref_166_Sample/word_access_start/word_0/ra assign_stmt_167_to_assign_stmt_241/array_obj_ref_166_Update/word_access_complete/word_0/ca)
  // 	$volatile b0 := ( $slice bmask 3 3 )  $buffering 1
  //  file .Aa/nic.linked.opt.aa, line 93
  // bmask
  // 	$volatile b1 := ( $slice bmask 2 2 )  $buffering 1
  //  file .Aa/nic.linked.opt.aa, line 94
  // bmask
  // 	$volatile b2 := ( $slice bmask 1 1 )  $buffering 1
  //  file .Aa/nic.linked.opt.aa, line 95
  // bmask
  // 	$volatile b3 := ( $slice bmask 0 0 )  $buffering 1
  //  file .Aa/nic.linked.opt.aa, line 96
  // bmask
  // 	$volatile r0 := ( $slice rdata 31 24 )  $buffering 1
  //  file .Aa/nic.linked.opt.aa, line 97
  // rdata
  // 	$volatile r1 := ( $slice rdata 23 16 )  $buffering 1
  //  file .Aa/nic.linked.opt.aa, line 98
  // rdata
  // 	$volatile r2 := ( $slice rdata 15 8 )  $buffering 1
  //  file .Aa/nic.linked.opt.aa, line 99
  // rdata
  // 	$volatile r3 := ( $slice rdata 7 0 )  $buffering 1
  //  file .Aa/nic.linked.opt.aa, line 100
  // rdata
  // 	$volatile w0 := ( $slice wdata 31 24 )  $buffering 1
  //  file .Aa/nic.linked.opt.aa, line 101
  // wdata
  // 	$volatile w1 := ( $slice wdata 23 16 )  $buffering 1
  //  file .Aa/nic.linked.opt.aa, line 102
  // wdata
  // 	$volatile w2 := ( $slice wdata 15 8 )  $buffering 1
  //  file .Aa/nic.linked.opt.aa, line 103
  // wdata
  // 	$volatile w3 := ( $slice wdata 7 0 )  $buffering 1
  //  file .Aa/nic.linked.opt.aa, line 104
  // wdata
  // 	$volatile wval := ((( $mux b0 w0  r0 )  && ( $mux b1 w1  r1 ) ) && (( $mux b2 w2  r2 )  && ( $mux b3 w3  r3 ) )) $buffering 1
  //  file .Aa/nic.linked.opt.aa, line 105
  // ((( $mux b0 w0  r0 )  && ( $mux b1 w1  r1 ) ) && (( $mux b2 w2  r2 )  && ( $mux b3 w3  r3 ) ))
  // (( $mux b0 w0  r0 )  && ( $mux b1 w1  r1 ) )
  // b0
  // w0
  // r0
  // ( $mux b0 w0  r0 ) 
  // b1
  // w1
  // r1
  // ( $mux b1 w1  r1 ) 
  // (( $mux b2 w2  r2 )  && ( $mux b3 w3  r3 ) )
  // b2
  // w2
  // r2
  // ( $mux b2 w2  r2 ) 
  // b3
  // w3
  // r3
  // ( $mux b3 w3  r3 ) 
  // 	$guard (~rwbar) nic_registers[index] := wval $buffering 1// bits of buffering = 32. 
  //  file .Aa/nic.linked.opt.aa, line 106
  // wval
  // index
  array_obj_ref_239_index_0_resize <=> (assign_stmt_167_to_assign_stmt_241/array_obj_ref_239_index_resize_0/index_resize_req) (assign_stmt_167_to_assign_stmt_241/array_obj_ref_239_index_resize_0/index_resize_ack)
  array_obj_ref_239_index_0_rename <=> (assign_stmt_167_to_assign_stmt_241/array_obj_ref_239_index_scale_0/scale_rename_req) (assign_stmt_167_to_assign_stmt_241/array_obj_ref_239_index_scale_0/scale_rename_ack)
  array_obj_ref_239_index_offset <=> (assign_stmt_167_to_assign_stmt_241/array_obj_ref_239_final_index_sum_regn/req) (assign_stmt_167_to_assign_stmt_241/array_obj_ref_239_final_index_sum_regn/ack)
  array_obj_ref_239_root_address_inst <=> (assign_stmt_167_to_assign_stmt_241/array_obj_ref_239_base_plus_offset/sum_rename_req) (assign_stmt_167_to_assign_stmt_241/array_obj_ref_239_base_plus_offset/sum_rename_ack)
  array_obj_ref_239_addr_0 <=> (assign_stmt_167_to_assign_stmt_241/array_obj_ref_239_word_addrgen/root_register_req) (assign_stmt_167_to_assign_stmt_241/array_obj_ref_239_word_addrgen/root_register_ack)
  array_obj_ref_239_gather_scatter <=> (assign_stmt_167_to_assign_stmt_241/array_obj_ref_239_Sample/array_obj_ref_239_Split/split_req) (assign_stmt_167_to_assign_stmt_241/array_obj_ref_239_Sample/array_obj_ref_239_Split/split_ack)
  array_obj_ref_239_store_0 <=> (assign_stmt_167_to_assign_stmt_241/array_obj_ref_239_Sample/word_access_start/word_0/rr assign_stmt_167_to_assign_stmt_241/array_obj_ref_239_Update/word_access_complete/word_0/cr) (assign_stmt_167_to_assign_stmt_241/array_obj_ref_239_Sample/word_access_start/word_0/ra assign_stmt_167_to_assign_stmt_241/array_obj_ref_239_Update/word_access_complete/word_0/ca)
}
$module [getQueuePointer] 
{
  $in queue_type:$int<2>
  // can point into 
  server_id:$int<8>
  // can point into  foreign( $void )
  $out qptr:$int<64>
  // can point into  foreign( $void )
  // pipe-declarations for block %getQueuePointer
  //  file .Aa/nic.linked.opt.aa, line 108
  // there are no memory spaces local to this module.
  $CP 
  {
    // begin control-path 
    ::[assign_stmt_251_to_assign_stmt_272] 
    {
      // start:  	base_idx := ( $call getBaseIndex (queue_type server_id ) ) $buffering 1// bits of buffering = 8. 
      //  file .Aa/nic.linked.opt.aa, line 113
      $T[assign_stmt_251_sample_start_] 
      $T[assign_stmt_251_sample_completed_] 
      $T[assign_stmt_251_update_start_] 
      $T[assign_stmt_251_update_completed_] 
      // Source expression
      // ( $call getBaseIndex (queue_type server_id ) )
      // queue_type
      // server_id
      // Target expression
      // (as target) base_idx
      // both source and target are implicit: use interlock 
      // Interlock 
      ;;[assign_stmt_251_Sample] 
      {
        $T [req] $T [ack] // interlock-sample.
      }
      ;;[assign_stmt_251_Update] 
      {
        $T [req] $T [ack] // interlock-update.
      }
      assign_stmt_251_sample_start_ &-> (assign_stmt_251_Sample)
      assign_stmt_251_sample_completed_ <-& (assign_stmt_251_Sample)
      assign_stmt_251_sample_completed_ &-> ($null)
      assign_stmt_251_update_start_ &-> (assign_stmt_251_Update)
      assign_stmt_251_update_completed_ <-& (assign_stmt_251_Update)
      // start: Forward dependencies from ( $call getBaseIndex (queue_type server_id ) ) to transition assign_stmt_251_sample_start_
      // done: Forward dependencies from ( $call getBaseIndex (queue_type server_id ) ) to transition assign_stmt_251_sample_start_
      // start: WAR dependencies for base_idx
      // done: WAR dependencies for base_idx
      // end:  	base_idx := ( $call getBaseIndex (queue_type server_id ) ) $buffering 1// bits of buffering = 8. 
      // start: 	$call accessRegister (READMEM _hF  base_idx ($bitcast ($uint<32>) _b0  ) ) (qptr_h ) 
      //  file .Aa/nic.linked.opt.aa, line 114
      $T[call_stmt_258_sample_start_] 
      $T[call_stmt_258_sample_completed_] 
      $T[call_stmt_258_update_start_] 
      $T[call_stmt_258_update_completed_] 
      // Call input argument 0
      // Call input argument 1
      // Call input argument 2
      // base_idx
      // Call input argument 3
      // start: Forward dependencies from base_idx to transition call_stmt_258_sample_start_
      call_stmt_258_sample_start_ <-& (assign_stmt_251_update_completed_)
      // done: Forward dependencies from base_idx to transition call_stmt_258_sample_start_
      ;;[call_stmt_258_Sample] 
      {
        $T [crr] $T [cra] 
      }
      ;;[call_stmt_258_Update] 
      {
        $T [ccr] $T [cca] 
      }
      call_stmt_258_sample_start_ &-> (call_stmt_258_Sample)
      call_stmt_258_sample_completed_ <-& (call_stmt_258_Sample)
      call_stmt_258_sample_completed_ &-> ($null)
      call_stmt_258_update_start_ &-> (call_stmt_258_Update)
      call_stmt_258_update_completed_ <-& (call_stmt_258_Update)
      // Call output argument 0
      // (as target) qptr_h
      // start: WAR dependencies for qptr_h
      // done: WAR dependencies for qptr_h
      // end: 	$call accessRegister (READMEM _hF  base_idx ($bitcast ($uint<32>) _b0  ) ) (qptr_h ) 
      // start: 	$call accessRegister (READMEM _hF  (base_idx + 1 ) ($bitcast ($uint<32>) _b0  ) ) (qptr_l ) 
      //  file .Aa/nic.linked.opt.aa, line 115
      $T[call_stmt_267_sample_start_] 
      $T[call_stmt_267_sample_completed_] 
      $T[call_stmt_267_update_start_] 
      $T[call_stmt_267_update_completed_] 
      // Call input argument 0
      // Call input argument 1
      // Call input argument 2
      // (base_idx + 1 )
      // base_idx
      // Call input argument 3
      // start: Forward dependencies from (base_idx + 1 ) to transition call_stmt_267_sample_start_
      call_stmt_267_sample_start_ <-& (assign_stmt_251_update_completed_)
      // done: Forward dependencies from (base_idx + 1 ) to transition call_stmt_267_sample_start_
      ;;[call_stmt_267_Sample] 
      {
        $T [crr] $T [cra] 
      }
      ;;[call_stmt_267_Update] 
      {
        $T [ccr] $T [cca] 
      }
      call_stmt_267_sample_start_ &-> (call_stmt_267_Sample)
      call_stmt_267_sample_completed_ <-& (call_stmt_267_Sample)
      call_stmt_267_sample_completed_ &-> ($null)
      call_stmt_267_update_start_ &-> (call_stmt_267_Update)
      call_stmt_267_update_completed_ <-& (call_stmt_267_Update)
      // Call output argument 0
      // (as target) qptr_l
      // start: WAR dependencies for qptr_l
      // done: WAR dependencies for qptr_l
      // end: 	$call accessRegister (READMEM _hF  (base_idx + 1 ) ($bitcast ($uint<32>) _b0  ) ) (qptr_l ) 
      // start:  	qptr := (qptr_h && qptr_l) $buffering 1// bits of buffering = 64. 
      //  file .Aa/nic.linked.opt.aa, line 116
      // Source expression
      // (qptr_h && qptr_l)
      $T[CONCAT_u32_u64_271_sample_start_] 
      $T[CONCAT_u32_u64_271_sample_completed_] 
      $T[CONCAT_u32_u64_271_update_start_] 
      $T[CONCAT_u32_u64_271_update_completed_] 
      // qptr_h
      // qptr_l
      // start: Forward dependencies from qptr_h to transition CONCAT_u32_u64_271_sample_start_
      CONCAT_u32_u64_271_sample_start_ <-& (call_stmt_258_update_completed_)
      // done: Forward dependencies from qptr_h to transition CONCAT_u32_u64_271_sample_start_
      // start: Forward dependencies from qptr_l to transition CONCAT_u32_u64_271_sample_start_
      CONCAT_u32_u64_271_sample_start_ <-& (call_stmt_267_update_completed_)
      // done: Forward dependencies from qptr_l to transition CONCAT_u32_u64_271_sample_start_
      ;;[CONCAT_u32_u64_271_Sample] 
      {
        // binary expression 
        $T [rr] $T [ra]  // (split) binary operation 
      }
      ;;[CONCAT_u32_u64_271_Update] 
      {
        // binary expression 
        $T [cr] $T [ca] // (split) binary operation 
      }
      CONCAT_u32_u64_271_sample_start_ &-> (CONCAT_u32_u64_271_Sample)
      CONCAT_u32_u64_271_sample_completed_ <-& (CONCAT_u32_u64_271_Sample)
      CONCAT_u32_u64_271_sample_completed_ &-> ($null)
      CONCAT_u32_u64_271_update_start_ &-> (CONCAT_u32_u64_271_Update)
      CONCAT_u32_u64_271_update_completed_ <-& (CONCAT_u32_u64_271_Update)
      // Target expression
      // (as target) qptr
      // qptr
      // write to interface object
      // start: WAR dependencies for qptr
      // done: WAR dependencies for qptr
      // qptr
      // write to interface object
      // end:  	qptr := (qptr_h && qptr_l) $buffering 1// bits of buffering = 64. 
      // load-store dependencies..
      // memory-space  memory_space_0
      //  call_stmt_258 store
      //  call_stmt_267 store
      $T [call_stmt_258_call_stmt_267_delay] $delay
      // call_stmt_258(store) -> call_stmt_267(store)
      call_stmt_267_sample_start_ <-& (call_stmt_258_call_stmt_267_delay)
      call_stmt_258_call_stmt_267_delay <-& (call_stmt_258_update_completed_)
    }
  }
  // end control-path
  $DP 
  {
    // begin data-path 
    // constant-object-declarations for block %getQueuePointer
    //  file .Aa/nic.linked.opt.aa, line 108
    // ( $call getBaseIndex (queue_type server_id ) )
    // 	$call accessRegister (READMEM _hF  base_idx ($bitcast ($uint<32>) _b0  ) ) (qptr_h ) 
    //  file .Aa/nic.linked.opt.aa, line 114
    // READMEM
    $constant $W[R_READMEM_252_wire_constant] : $int<1> := _b1// 1
    // _hF 
    $constant $W[konst_253_wire_constant] : $int<4> := _b1111// 15
    // ($bitcast ($uint<32>) _b0  )
    $constant $W[type_cast_256_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // 	$call accessRegister (READMEM _hF  (base_idx + 1 ) ($bitcast ($uint<32>) _b0  ) ) (qptr_l ) 
    //  file .Aa/nic.linked.opt.aa, line 115
    // READMEM
    $constant $W[R_READMEM_259_wire_constant] : $int<1> := _b1// 1
    // _hF 
    $constant $W[konst_260_wire_constant] : $int<4> := _b1111// 15
    // 1 
    $constant $W[konst_262_wire_constant] : $int<8> := _b00000001// 1
    // ($bitcast ($uint<32>) _b0  )
    $constant $W[type_cast_265_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // 	base_idx := ( $call getBaseIndex (queue_type server_id ) ) $buffering 1// bits of buffering = 8. 
    //  file .Aa/nic.linked.opt.aa, line 113
    // ( $call getBaseIndex (queue_type server_id ) )
    $intermediate $W[call_getBaseIndex_expr_250_wire] : $int<8>
    // base_idx
    $W[base_idx_251] : $int<8>
    // 	$call accessRegister (READMEM _hF  base_idx ($bitcast ($uint<32>) _b0  ) ) (qptr_h ) 
    //  file .Aa/nic.linked.opt.aa, line 114
    // qptr_h
    $W[qptr_h_258] : $int<32>
    // 	$call accessRegister (READMEM _hF  (base_idx + 1 ) ($bitcast ($uint<32>) _b0  ) ) (qptr_l ) 
    //  file .Aa/nic.linked.opt.aa, line 115
    // (base_idx + 1 )
    $intermediate $W[ADD_u8_u8_263_wire] : $int<8>
    // qptr_l
    $W[qptr_l_267] : $int<32>
    // 	qptr := (qptr_h && qptr_l) $buffering 1// bits of buffering = 64. 
    //  file .Aa/nic.linked.opt.aa, line 116
    // qptr
    // 	base_idx := ( $call getBaseIndex (queue_type server_id ) ) $buffering 1// bits of buffering = 8. 
    //  file .Aa/nic.linked.opt.aa, line 113
    # := [W_base_idx_247_inst] (call_getBaseIndex_expr_250_wire) (base_idx_251)     
    // ( $call getBaseIndex (queue_type server_id ) )
    //  file .Aa/nic.linked.opt.aa, line 113
    $call [call_getBaseIndex_expr_250_inst] $module getBaseIndex(queue_type server_id) (call_getBaseIndex_expr_250_wire)   $flowthrough
    // 	$call accessRegister (READMEM _hF  base_idx ($bitcast ($uint<32>) _b0  ) ) (qptr_h ) 
    //  file .Aa/nic.linked.opt.aa, line 114
    $call [call_stmt_258_call] $module accessRegister(R_READMEM_252_wire_constant konst_253_wire_constant base_idx_251 type_cast_256_wire_constant) (qptr_h_258)  
    $delay call_stmt_258_call 4
    $buffering  $in call_stmt_258_call R_READMEM_252_wire_constant 1
    $buffering  $in call_stmt_258_call konst_253_wire_constant 1
    $buffering  $in call_stmt_258_call base_idx_251 1
    $buffering  $in call_stmt_258_call type_cast_256_wire_constant 1
    $buffering  $out call_stmt_258_call qptr_h_258 1
    // 	$call accessRegister (READMEM _hF  (base_idx + 1 ) ($bitcast ($uint<32>) _b0  ) ) (qptr_l ) 
    //  file .Aa/nic.linked.opt.aa, line 115
    // (base_idx + 1 )
    +[ADD_u8_u8_263_inst] (base_idx_251 konst_262_wire_constant) (ADD_u8_u8_263_wire)   $flowthrough 
    $delay ADD_u8_u8_263_inst 0
    $call [call_stmt_267_call] $module accessRegister(R_READMEM_259_wire_constant konst_260_wire_constant ADD_u8_u8_263_wire type_cast_265_wire_constant) (qptr_l_267)  
    $delay call_stmt_267_call 4
    $buffering  $in call_stmt_267_call R_READMEM_259_wire_constant 1
    $buffering  $in call_stmt_267_call konst_260_wire_constant 1
    $buffering  $in call_stmt_267_call ADD_u8_u8_263_wire 1
    $buffering  $in call_stmt_267_call type_cast_265_wire_constant 1
    $buffering  $out call_stmt_267_call qptr_l_267 1
    // 	qptr := (qptr_h && qptr_l) $buffering 1// bits of buffering = 64. 
    //  file .Aa/nic.linked.opt.aa, line 116
    // (qptr_h && qptr_l)
    &&[CONCAT_u32_u64_271_inst] (qptr_h_258 qptr_l_267) (qptr)   
    $buffering  $out CONCAT_u32_u64_271_inst qptr 1
    $delay CONCAT_u32_u64_271_inst 1
  }
  // end data-path
  // 	base_idx := ( $call getBaseIndex (queue_type server_id ) ) $buffering 1// bits of buffering = 8. 
  //  file .Aa/nic.linked.opt.aa, line 113
  // queue_type
  // server_id
  // ( $call getBaseIndex (queue_type server_id ) )
  W_base_idx_247_inst <=> (assign_stmt_251_to_assign_stmt_272/assign_stmt_251_Sample/req assign_stmt_251_to_assign_stmt_272/assign_stmt_251_Update/req) (assign_stmt_251_to_assign_stmt_272/assign_stmt_251_Sample/ack assign_stmt_251_to_assign_stmt_272/assign_stmt_251_Update/ack)
  // 	$call accessRegister (READMEM _hF  base_idx ($bitcast ($uint<32>) _b0  ) ) (qptr_h ) 
  //  file .Aa/nic.linked.opt.aa, line 114
  // base_idx
  call_stmt_258_call <=> (assign_stmt_251_to_assign_stmt_272/call_stmt_258_Sample/crr assign_stmt_251_to_assign_stmt_272/call_stmt_258_Update/ccr) (assign_stmt_251_to_assign_stmt_272/call_stmt_258_Sample/cra assign_stmt_251_to_assign_stmt_272/call_stmt_258_Update/cca)
  // 	$call accessRegister (READMEM _hF  (base_idx + 1 ) ($bitcast ($uint<32>) _b0  ) ) (qptr_l ) 
  //  file .Aa/nic.linked.opt.aa, line 115
  // (base_idx + 1 )
  // base_idx
  call_stmt_267_call <=> (assign_stmt_251_to_assign_stmt_272/call_stmt_267_Sample/crr assign_stmt_251_to_assign_stmt_272/call_stmt_267_Update/ccr) (assign_stmt_251_to_assign_stmt_272/call_stmt_267_Sample/cra assign_stmt_251_to_assign_stmt_272/call_stmt_267_Update/cca)
  // 	qptr := (qptr_h && qptr_l) $buffering 1// bits of buffering = 64. 
  //  file .Aa/nic.linked.opt.aa, line 116
  // (qptr_h && qptr_l)
  // qptr_h
  // qptr_l
  CONCAT_u32_u64_271_inst <=> (assign_stmt_251_to_assign_stmt_272/CONCAT_u32_u64_271_Sample/rr assign_stmt_251_to_assign_stmt_272/CONCAT_u32_u64_271_Update/cr) (assign_stmt_251_to_assign_stmt_272/CONCAT_u32_u64_271_Sample/ra assign_stmt_251_to_assign_stmt_272/CONCAT_u32_u64_271_Update/ca)
  $attribute input_buffering => "0"
  $attribute output_buffering => "0"
}
$pipeline $depth 3 $buffering 1 $fullrate $module [calculateAddress36] 
{
  $in addr_base:$int<64>
  // can point into 
  offset:$int<64>
  // can point into 
  $out addr:$int<36>
  // can point into 
  // pipe-declarations for block %calculateAddress36
  //  file .Aa/nic.linked.opt.aa, line 120
  // there are no memory spaces local to this module.
  $CP 
  {
    // begin control-path 
    // pipelined module
    :|:[assign_stmt_284] 
    {
      $T [addr_base_update_enable] 
      $scc_arc addr_base_update_enable => $entry
      $T [addr_base_update_enable_out] 
      addr_base_update_enable &-> (addr_base_update_enable_out)
      $null &-> (addr_base_update_enable)
      $T [offset_update_enable] 
      $scc_arc offset_update_enable => $entry
      $T [offset_update_enable_out] 
      offset_update_enable &-> (offset_update_enable_out)
      $null &-> (offset_update_enable)
      $T [addr_update_enable] 
      $T [addr_update_enable_in] 
      $null &-> (addr_update_enable)
      $null <-& (addr_update_enable_in) 
      $null &-> (addr_update_enable)
      $scc_arc $exit => addr_update_enable
      addr_update_enable <-& (addr_update_enable_in) 
      // start:  	addr := (( $slice addr_base 35 0 )  + ( $slice offset 35 0 ) ) $buffering 1// bits of buffering = 36. 
      //  file .Aa/nic.linked.opt.aa, line 125
      // Source expression
      // (( $slice addr_base 35 0 )  + ( $slice offset 35 0 ) )
      $T[ADD_u36_u36_283_sample_start_] 
      $T[ADD_u36_u36_283_sample_completed_] 
      $T[ADD_u36_u36_283_update_start_] 
      $T[ADD_u36_u36_283_update_completed_] 
      // ( $slice addr_base 35 0 ) 
      // addr_base
      // ( $slice offset 35 0 ) 
      // offset
      // start: Forward dependencies from ( $slice addr_base 35 0 )  to transition ADD_u36_u36_283_sample_start_
      ADD_u36_u36_283_sample_start_ <-& ($entry)
      // done: Forward dependencies from ( $slice addr_base 35 0 )  to transition ADD_u36_u36_283_sample_start_
      // start: Forward dependencies from ( $slice offset 35 0 )  to transition ADD_u36_u36_283_sample_start_
      ADD_u36_u36_283_sample_start_ <-& ($entry)
      // done: Forward dependencies from ( $slice offset 35 0 )  to transition ADD_u36_u36_283_sample_start_
      ;;[ADD_u36_u36_283_Sample] 
      {
        // binary expression 
        $T [rr] $T [ra]  // (split) binary operation 
      }
      ;;[ADD_u36_u36_283_Update] 
      {
        // binary expression 
        $T [cr] $T [ca] // (split) binary operation 
      }
      ADD_u36_u36_283_sample_start_ &-> (ADD_u36_u36_283_Sample)
      ADD_u36_u36_283_sample_completed_ <-& (ADD_u36_u36_283_Sample)
      ADD_u36_u36_283_sample_completed_ &-> ($null)
      ADD_u36_u36_283_update_start_ &-> (ADD_u36_u36_283_Update)
      ADD_u36_u36_283_update_completed_ <-& (ADD_u36_u36_283_Update)
      // RAW reenables for ( $slice addr_base 35 0 ) 
      addr_base_update_enable o<-& (ADD_u36_u36_283_sample_completed_ 0)
      // RAW reenables for ( $slice offset 35 0 ) 
      offset_update_enable o<-& (ADD_u36_u36_283_sample_completed_ 0)
      // self-release: 
      ADD_u36_u36_283_sample_start_ o<-& (ADD_u36_u36_283_sample_completed_ 1)
      $null &-> (ADD_u36_u36_283_update_start_)
      ADD_u36_u36_283_update_start_ o<-& (ADD_u36_u36_283_update_completed_ 0)
      // Target expression
      // (as target) addr
      // addr
      // write to interface object
      // start: WAR dependencies for addr
      // done: WAR dependencies for addr
      // addr
      // write to interface object
      ADD_u36_u36_283_update_start_ <-& (addr_update_enable)
      // end:  	addr := (( $slice addr_base 35 0 )  + ( $slice offset 35 0 ) ) $buffering 1// bits of buffering = 36. 
      // load-store dependencies..
    }
    ( addr_update_enable_in)
    ( addr_base_update_enable_out offset_update_enable_out)
    $P [addr_base_update_enable] 
    $P [offset_update_enable] 
    $P [addr_update_enable] 
    $bind addr_base_update_enable <= assign_stmt_284 : addr_base_update_enable_out
    $bind offset_update_enable <= assign_stmt_284 : offset_update_enable_out
    $bind addr_update_enable => assign_stmt_284 : addr_update_enable_in
  }
  // end control-path
  $DP 
  {
    // begin data-path 
    // constant-object-declarations for block %calculateAddress36
    //  file .Aa/nic.linked.opt.aa, line 120
    // 	addr := (( $slice addr_base 35 0 )  + ( $slice offset 35 0 ) ) $buffering 1// bits of buffering = 36. 
    //  file .Aa/nic.linked.opt.aa, line 125
    // ( $slice addr_base 35 0 ) 
    $intermediate $W[slice_280_wire] : $int<36>
    // ( $slice offset 35 0 ) 
    $intermediate $W[slice_282_wire] : $int<36>
    // addr
    // 	addr := (( $slice addr_base 35 0 )  + ( $slice offset 35 0 ) ) $buffering 1// bits of buffering = 36. 
    //  file .Aa/nic.linked.opt.aa, line 125
    // ( $slice addr_base 35 0 ) 
    [:] [slice_280_inst] (addr_base 35 0) (slice_280_wire)  $flowthrough
    $delay slice_280_inst 0
    // ( $slice offset 35 0 ) 
    [:] [slice_282_inst] (offset 35 0) (slice_282_wire)  $flowthrough
    $delay slice_282_inst 0
    // (( $slice addr_base 35 0 )  + ( $slice offset 35 0 ) )
    +[ADD_u36_u36_283_inst] (slice_280_wire slice_282_wire) (addr)    $fullrate
    $buffering  $out ADD_u36_u36_283_inst addr 1
    $delay ADD_u36_u36_283_inst 1
  }
  // end data-path
  // 	addr := (( $slice addr_base 35 0 )  + ( $slice offset 35 0 ) ) $buffering 1// bits of buffering = 36. 
  //  file .Aa/nic.linked.opt.aa, line 125
  // (( $slice addr_base 35 0 )  + ( $slice offset 35 0 ) )
  // addr_base
  // offset
  ADD_u36_u36_283_inst <=> (assign_stmt_284/ADD_u36_u36_283_Sample/rr assign_stmt_284/ADD_u36_u36_283_Update/cr) (assign_stmt_284/ADD_u36_u36_283_Sample/ra assign_stmt_284/ADD_u36_u36_283_Update/ca)
  $attribute delay => "3"
  $attribute input_buffering => "0"
}
$pipeline $depth 7 $buffering 1 $fullrate $module [accessMemoryBase] 
{
  $in tag:$int<8>
  // can point into  foreign( $void )
  request:$int<110>
  // can point into  foreign( $void )
  $out response:$int<65>
  // can point into 
  // pipe-declarations for block %accessMemoryBase
  //  file .Aa/nic.linked.opt.aa, line 129
  // there are no memory spaces local to this module.
  $CP 
  {
    // begin control-path 
    // pipelined module
    :|:[assign_stmt_292_to_assign_stmt_308] 
    {
      $T [tag_update_enable] 
      $scc_arc tag_update_enable => $entry
      $T [tag_update_enable_out] 
      tag_update_enable &-> (tag_update_enable_out)
      $null &-> (tag_update_enable)
      $T [request_update_enable] 
      $scc_arc request_update_enable => $entry
      $T [request_update_enable_out] 
      request_update_enable &-> (request_update_enable_out)
      $null &-> (request_update_enable)
      $T [response_update_enable] 
      $T [response_update_enable_in] 
      $null &-> (response_update_enable)
      $null <-& (response_update_enable_in) 
      $null &-> (response_update_enable)
      $scc_arc $exit => response_update_enable
      response_update_enable <-& (response_update_enable_in) 
      // start:  	NIC_TO_MEMORY_REQUEST := request $buffering 1 $mark REQ // bits of buffering = 110. 
      //  file .Aa/nic.linked.opt.aa, line 134
      // Source expression
      // request
      // Target expression
      // (as target) NIC_TO_MEMORY_REQUEST
      $T[WPIPE_NIC_TO_MEMORY_REQUEST_290_sample_start_] 
      $T[WPIPE_NIC_TO_MEMORY_REQUEST_290_sample_completed_] 
      $T[WPIPE_NIC_TO_MEMORY_REQUEST_290_update_start_] 
      $T[WPIPE_NIC_TO_MEMORY_REQUEST_290_update_completed_] 
      ;;[WPIPE_NIC_TO_MEMORY_REQUEST_290_Sample] 
      {
        // pipe write sample-start NIC_TO_MEMORY_REQUEST
        $T [req] $T [ack] 
      }
      ;;[WPIPE_NIC_TO_MEMORY_REQUEST_290_Update] 
      {
        // pipe write update (complete) NIC_TO_MEMORY_REQUEST
        $T [req] $T [ack] 
      }
      WPIPE_NIC_TO_MEMORY_REQUEST_290_sample_start_ &-> (WPIPE_NIC_TO_MEMORY_REQUEST_290_Sample)
      WPIPE_NIC_TO_MEMORY_REQUEST_290_sample_completed_ <-& (WPIPE_NIC_TO_MEMORY_REQUEST_290_Sample)
      WPIPE_NIC_TO_MEMORY_REQUEST_290_update_start_ <-& (WPIPE_NIC_TO_MEMORY_REQUEST_290_sample_completed_)
      WPIPE_NIC_TO_MEMORY_REQUEST_290_update_start_ &-> (WPIPE_NIC_TO_MEMORY_REQUEST_290_Update)
      WPIPE_NIC_TO_MEMORY_REQUEST_290_update_completed_ <-& (WPIPE_NIC_TO_MEMORY_REQUEST_290_Update)
      WPIPE_NIC_TO_MEMORY_REQUEST_290_sample_start_ o<-& (WPIPE_NIC_TO_MEMORY_REQUEST_290_update_completed_ 0)
      // start: Forward dependencies from request to transition WPIPE_NIC_TO_MEMORY_REQUEST_290_sample_start_
      WPIPE_NIC_TO_MEMORY_REQUEST_290_sample_start_ <-& ($entry)
      // done: Forward dependencies from request to transition WPIPE_NIC_TO_MEMORY_REQUEST_290_sample_start_
      // RAW reenables for request
      request_update_enable o<-& (WPIPE_NIC_TO_MEMORY_REQUEST_290_sample_completed_ 0)
      // end:  	NIC_TO_MEMORY_REQUEST := request $buffering 1 $mark REQ // bits of buffering = 110. 
      // start:  	response := MEMORY_TO_NIC_RESPONSE $buffering 1 $delay (REQ 8 )  // bits of buffering = 65. 
      //  file .Aa/nic.linked.opt.aa, line 135
      // Source expression
      // MEMORY_TO_NIC_RESPONSE
      $T[RPIPE_MEMORY_TO_NIC_RESPONSE_294_sample_start_] 
      $T[RPIPE_MEMORY_TO_NIC_RESPONSE_294_sample_completed_] 
      $T[RPIPE_MEMORY_TO_NIC_RESPONSE_294_update_start_] 
      $T[RPIPE_MEMORY_TO_NIC_RESPONSE_294_update_completed_] 
      ;;[RPIPE_MEMORY_TO_NIC_RESPONSE_294_Sample] 
      {
        // pipe read sample
        $T [rr] $T [ra] 
      }
      ;;[RPIPE_MEMORY_TO_NIC_RESPONSE_294_Update] 
      {
        // pipe read update
        $T [cr] $T [ca] 
      }
      RPIPE_MEMORY_TO_NIC_RESPONSE_294_sample_start_ &-> (RPIPE_MEMORY_TO_NIC_RESPONSE_294_Sample)
      RPIPE_MEMORY_TO_NIC_RESPONSE_294_sample_completed_ <-& (RPIPE_MEMORY_TO_NIC_RESPONSE_294_Sample)
      RPIPE_MEMORY_TO_NIC_RESPONSE_294_update_start_ <-& (RPIPE_MEMORY_TO_NIC_RESPONSE_294_sample_completed_)
      RPIPE_MEMORY_TO_NIC_RESPONSE_294_update_start_ &-> (RPIPE_MEMORY_TO_NIC_RESPONSE_294_Update)
      RPIPE_MEMORY_TO_NIC_RESPONSE_294_update_completed_ <-& (RPIPE_MEMORY_TO_NIC_RESPONSE_294_Update)
      RPIPE_MEMORY_TO_NIC_RESPONSE_294_sample_start_ o<-& (RPIPE_MEMORY_TO_NIC_RESPONSE_294_update_completed_ 0)
      // Target expression
      // (as target) response
      // response
      // write to interface object
      // start: WAR dependencies for response
      // done: WAR dependencies for response
      // response
      // write to interface object
      RPIPE_MEMORY_TO_NIC_RESPONSE_294_update_start_ <-& (response_update_enable)
      // end:  	response := MEMORY_TO_NIC_RESPONSE $buffering 1 $delay (REQ 8 )  // bits of buffering = 65. 
      // start: WAR dependencies for debug_sig
      // done: WAR dependencies for debug_sig
      // start:  	$volatile debug_sig := ((($bitcast ($uint<73>) _b0  ) && tag) && (request && response)) $buffering 1
      //  file .Aa/nic.linked.opt.aa, line 136
      // volatile! 
      // Source expression
      // ((($bitcast ($uint<73>) _b0  ) && tag) && (request && response))
      // (($bitcast ($uint<73>) _b0  ) && tag)
      // tag
      // (request && response)
      // request
      // response
      // Target expression
      // (as target) debug_sig
      // start: WAR dependencies for debug_sig
      // done: WAR dependencies for debug_sig
      // end:  	$volatile debug_sig := ((($bitcast ($uint<73>) _b0  ) && tag) && (request && response)) $buffering 1
      // start:  	NIC_DEBUG_SIGNAL := debug_sig $buffering 1// bits of buffering = 256. 
      //  file .Aa/nic.linked.opt.aa, line 137
      // Source expression
      // debug_sig
      // Target expression
      // (as target) NIC_DEBUG_SIGNAL
      $T[WPIPE_NIC_DEBUG_SIGNAL_306_sample_start_] 
      $T[WPIPE_NIC_DEBUG_SIGNAL_306_sample_completed_] 
      $T[WPIPE_NIC_DEBUG_SIGNAL_306_update_start_] 
      $T[WPIPE_NIC_DEBUG_SIGNAL_306_update_completed_] 
      ;;[WPIPE_NIC_DEBUG_SIGNAL_306_Sample] 
      {
        // pipe write sample-start NIC_DEBUG_SIGNAL
        $T [req] $T [ack] 
      }
      ;;[WPIPE_NIC_DEBUG_SIGNAL_306_Update] 
      {
        // pipe write update (complete) NIC_DEBUG_SIGNAL
        $T [req] $T [ack] 
      }
      WPIPE_NIC_DEBUG_SIGNAL_306_sample_start_ &-> (WPIPE_NIC_DEBUG_SIGNAL_306_Sample)
      WPIPE_NIC_DEBUG_SIGNAL_306_sample_completed_ <-& (WPIPE_NIC_DEBUG_SIGNAL_306_Sample)
      WPIPE_NIC_DEBUG_SIGNAL_306_update_start_ <-& (WPIPE_NIC_DEBUG_SIGNAL_306_sample_completed_)
      WPIPE_NIC_DEBUG_SIGNAL_306_update_start_ &-> (WPIPE_NIC_DEBUG_SIGNAL_306_Update)
      WPIPE_NIC_DEBUG_SIGNAL_306_update_completed_ <-& (WPIPE_NIC_DEBUG_SIGNAL_306_Update)
      WPIPE_NIC_DEBUG_SIGNAL_306_sample_start_ o<-& (WPIPE_NIC_DEBUG_SIGNAL_306_update_completed_ 0)
      // start: Forward dependencies from debug_sig to transition WPIPE_NIC_DEBUG_SIGNAL_306_sample_start_
      WPIPE_NIC_DEBUG_SIGNAL_306_sample_start_ <-& ($entry)
      WPIPE_NIC_DEBUG_SIGNAL_306_sample_start_ <-& ($entry)
      WPIPE_NIC_DEBUG_SIGNAL_306_sample_start_ <-& (RPIPE_MEMORY_TO_NIC_RESPONSE_294_update_completed_)
      // done: Forward dependencies from debug_sig to transition WPIPE_NIC_DEBUG_SIGNAL_306_sample_start_
      // RAW reenables for debug_sig
      tag_update_enable o<-& (WPIPE_NIC_DEBUG_SIGNAL_306_sample_completed_ 0)
      request_update_enable o<-& (WPIPE_NIC_DEBUG_SIGNAL_306_sample_completed_ 0)
      RPIPE_MEMORY_TO_NIC_RESPONSE_294_update_start_ o<-& (WPIPE_NIC_DEBUG_SIGNAL_306_sample_completed_ 0)
      // end:  	NIC_DEBUG_SIGNAL := debug_sig $buffering 1// bits of buffering = 256. 
      // load-store dependencies..
      // pipe read/write dependencies for pipe MEMORY_TO_NIC_RESPONSE
      // read-dependencies for pipe MEMORY_TO_NIC_RESPONSE
      // write-dependencies for pipe MEMORY_TO_NIC_RESPONSE
      // signal write dependencies for MEMORY_TO_NIC_RESPONSE
      // pipe read/write dependencies for pipe NIC_DEBUG_SIGNAL
      // read-dependencies for pipe NIC_DEBUG_SIGNAL
      // write-dependencies for pipe NIC_DEBUG_SIGNAL
      // signal write dependencies for NIC_DEBUG_SIGNAL
      // pipe read/write dependencies for pipe NIC_TO_MEMORY_REQUEST
      // read-dependencies for pipe NIC_TO_MEMORY_REQUEST
      // write-dependencies for pipe NIC_TO_MEMORY_REQUEST
      // signal write dependencies for NIC_TO_MEMORY_REQUEST
    }
    ( response_update_enable_in)
    ( tag_update_enable_out request_update_enable_out)
    $P [tag_update_enable] 
    $P [request_update_enable] 
    $P [response_update_enable] 
    $bind tag_update_enable <= assign_stmt_292_to_assign_stmt_308 : tag_update_enable_out
    $bind request_update_enable <= assign_stmt_292_to_assign_stmt_308 : request_update_enable_out
    $bind response_update_enable => assign_stmt_292_to_assign_stmt_308 : response_update_enable_in
  }
  // end control-path
  $DP 
  {
    // begin data-path 
    // constant-object-declarations for block %accessMemoryBase
    //  file .Aa/nic.linked.opt.aa, line 129
    // ($bitcast ($uint<73>) _b0  )
    $constant $W[type_cast_298_wire_constant] : $int<73> := _b0000000000000000000000000000000000000000000000000000000000000000000000000// 0
    // 	NIC_TO_MEMORY_REQUEST := request $buffering 1 $mark REQ // bits of buffering = 110. 
    //  file .Aa/nic.linked.opt.aa, line 134
    // NIC_TO_MEMORY_REQUEST
    // 	response := MEMORY_TO_NIC_RESPONSE $buffering 1 $delay (REQ 8 )  // bits of buffering = 65. 
    //  file .Aa/nic.linked.opt.aa, line 135
    // response
    // 	$volatile debug_sig := ((($bitcast ($uint<73>) _b0  ) && tag) && (request && response)) $buffering 1
    //  file .Aa/nic.linked.opt.aa, line 136
    // (($bitcast ($uint<73>) _b0  ) && tag)
    $intermediate $W[CONCAT_u73_u81_300_wire] : $int<81>
    // (request && response)
    $intermediate $W[CONCAT_u110_u175_303_wire] : $int<175>
    // debug_sig
    $W[debug_sig_305] : $int<256>
    // 	NIC_DEBUG_SIGNAL := debug_sig $buffering 1// bits of buffering = 256. 
    //  file .Aa/nic.linked.opt.aa, line 137
    // NIC_DEBUG_SIGNAL
    // 	NIC_TO_MEMORY_REQUEST := request $buffering 1 $mark REQ // bits of buffering = 110. 
    //  file .Aa/nic.linked.opt.aa, line 134
    // NIC_TO_MEMORY_REQUEST
    $ioport $out [WPIPE_NIC_TO_MEMORY_REQUEST_290_inst]  (request) (NIC_TO_MEMORY_REQUEST)  $fullrate 
    // 	response := MEMORY_TO_NIC_RESPONSE $buffering 1 $delay (REQ 8 )  // bits of buffering = 65. 
    //  file .Aa/nic.linked.opt.aa, line 135
    // MEMORY_TO_NIC_RESPONSE
    $ioport $in [RPIPE_MEMORY_TO_NIC_RESPONSE_294_inst] (MEMORY_TO_NIC_RESPONSE) (response)  $fullrate 
    $buffering $out RPIPE_MEMORY_TO_NIC_RESPONSE_294_inst response 1
    // 	$volatile debug_sig := ((($bitcast ($uint<73>) _b0  ) && tag) && (request && response)) $buffering 1
    //  file .Aa/nic.linked.opt.aa, line 136
    // (($bitcast ($uint<73>) _b0  ) && tag)
    &&[CONCAT_u73_u81_300_inst] (type_cast_298_wire_constant tag) (CONCAT_u73_u81_300_wire)   $flowthrough 
    $delay CONCAT_u73_u81_300_inst 0
    // (request && response)
    &&[CONCAT_u110_u175_303_inst] (request response) (CONCAT_u110_u175_303_wire)   $flowthrough 
    $delay CONCAT_u110_u175_303_inst 0
    // ((($bitcast ($uint<73>) _b0  ) && tag) && (request && response))
    &&[CONCAT_u81_u256_304_inst] (CONCAT_u73_u81_300_wire CONCAT_u110_u175_303_wire) (debug_sig_305)   $flowthrough 
    $delay CONCAT_u81_u256_304_inst 0
    // 	NIC_DEBUG_SIGNAL := debug_sig $buffering 1// bits of buffering = 256. 
    //  file .Aa/nic.linked.opt.aa, line 137
    // NIC_DEBUG_SIGNAL
    $ioport $out [WPIPE_NIC_DEBUG_SIGNAL_306_inst]  (debug_sig_305) (NIC_DEBUG_SIGNAL)  $fullrate 
  }
  // end data-path
  // 	NIC_TO_MEMORY_REQUEST := request $buffering 1 $mark REQ // bits of buffering = 110. 
  //  file .Aa/nic.linked.opt.aa, line 134
  // request
  // NIC_TO_MEMORY_REQUEST
  WPIPE_NIC_TO_MEMORY_REQUEST_290_inst <=> (assign_stmt_292_to_assign_stmt_308/WPIPE_NIC_TO_MEMORY_REQUEST_290_Sample/req assign_stmt_292_to_assign_stmt_308/WPIPE_NIC_TO_MEMORY_REQUEST_290_Update/req) (assign_stmt_292_to_assign_stmt_308/WPIPE_NIC_TO_MEMORY_REQUEST_290_Sample/ack assign_stmt_292_to_assign_stmt_308/WPIPE_NIC_TO_MEMORY_REQUEST_290_Update/ack)
  // 	response := MEMORY_TO_NIC_RESPONSE $buffering 1 $delay (REQ 8 )  // bits of buffering = 65. 
  //  file .Aa/nic.linked.opt.aa, line 135
  // MEMORY_TO_NIC_RESPONSE
  RPIPE_MEMORY_TO_NIC_RESPONSE_294_inst <=> (assign_stmt_292_to_assign_stmt_308/RPIPE_MEMORY_TO_NIC_RESPONSE_294_Sample/rr assign_stmt_292_to_assign_stmt_308/RPIPE_MEMORY_TO_NIC_RESPONSE_294_Update/cr) (assign_stmt_292_to_assign_stmt_308/RPIPE_MEMORY_TO_NIC_RESPONSE_294_Sample/ra assign_stmt_292_to_assign_stmt_308/RPIPE_MEMORY_TO_NIC_RESPONSE_294_Update/ca)
  // 	$volatile debug_sig := ((($bitcast ($uint<73>) _b0  ) && tag) && (request && response)) $buffering 1
  //  file .Aa/nic.linked.opt.aa, line 136
  // ((($bitcast ($uint<73>) _b0  ) && tag) && (request && response))
  // (($bitcast ($uint<73>) _b0  ) && tag)
  // tag
  // (request && response)
  // request
  // response
  // 	NIC_DEBUG_SIGNAL := debug_sig $buffering 1// bits of buffering = 256. 
  //  file .Aa/nic.linked.opt.aa, line 137
  // debug_sig
  // NIC_DEBUG_SIGNAL
  WPIPE_NIC_DEBUG_SIGNAL_306_inst <=> (assign_stmt_292_to_assign_stmt_308/WPIPE_NIC_DEBUG_SIGNAL_306_Sample/req assign_stmt_292_to_assign_stmt_308/WPIPE_NIC_DEBUG_SIGNAL_306_Update/req) (assign_stmt_292_to_assign_stmt_308/WPIPE_NIC_DEBUG_SIGNAL_306_Sample/ack assign_stmt_292_to_assign_stmt_308/WPIPE_NIC_DEBUG_SIGNAL_306_Update/ack)
  $attribute delay => "11"
  $attribute input_buffering => "0"
  $attribute output_buffering => "0"
}
$pipeline $depth 7 $buffering 1 $module [accessMemoryByteBase] 
{
  $in tag:$int<8>
  // can point into  foreign( $void )
  lock:$int<1>
  // can point into  foreign( $void )
  rwbar:$int<1>
  // can point into  foreign( $void )
  byte_addr_base:$int<64>
  // can point into  foreign( $void )
  offset:$int<64>
  // can point into  foreign( $void )
  wbyte:$int<8>
  // can point into  foreign( $void )
  $out rbyte:$int<8>
  // can point into  foreign( $void )
  // pipe-declarations for block %accessMemoryByteBase
  //  file .Aa/nic.linked.opt.aa, line 142
  // there are no memory spaces local to this module.
  $CP 
  {
    // begin control-path 
    // pipelined module
    :|:[assign_stmt_322_to_assign_stmt_490] 
    {
      $T [tag_update_enable] 
      $scc_arc tag_update_enable => $entry
      $T [tag_update_enable_out] 
      tag_update_enable &-> (tag_update_enable_out)
      $null &-> (tag_update_enable)
      $T [lock_update_enable] 
      $scc_arc lock_update_enable => $entry
      $T [lock_update_enable_out] 
      lock_update_enable &-> (lock_update_enable_out)
      $null &-> (lock_update_enable)
      $T [rwbar_update_enable] 
      $scc_arc rwbar_update_enable => $entry
      $T [rwbar_update_enable_out] 
      rwbar_update_enable &-> (rwbar_update_enable_out)
      $null &-> (rwbar_update_enable)
      $T [byte_addr_base_update_enable] 
      $scc_arc byte_addr_base_update_enable => $entry
      $T [byte_addr_base_update_enable_out] 
      byte_addr_base_update_enable &-> (byte_addr_base_update_enable_out)
      $null &-> (byte_addr_base_update_enable)
      $T [offset_update_enable] 
      $scc_arc offset_update_enable => $entry
      $T [offset_update_enable_out] 
      offset_update_enable &-> (offset_update_enable_out)
      $null &-> (offset_update_enable)
      $T [wbyte_update_enable] 
      $scc_arc wbyte_update_enable => $entry
      $T [wbyte_update_enable_out] 
      wbyte_update_enable &-> (wbyte_update_enable_out)
      $null &-> (wbyte_update_enable)
      $T [rbyte_update_enable] 
      $T [rbyte_update_enable_in] 
      $null &-> (rbyte_update_enable)
      $null <-& (rbyte_update_enable_in) 
      $null &-> (rbyte_update_enable)
      $scc_arc $exit => rbyte_update_enable
      rbyte_update_enable <-& (rbyte_update_enable_in) 
      // start:  	byte_addr := ( $call calculateAddress36 (byte_addr_base offset ) ) $buffering 1// bits of buffering = 36. 
      //  file .Aa/nic.linked.opt.aa, line 147
      // Source expression
      // ( $call calculateAddress36 (byte_addr_base offset ) )
      $T[call_calculateAddress36_expr_321_sample_start_] 
      $T[call_calculateAddress36_expr_321_sample_completed_] 
      $T[call_calculateAddress36_expr_321_update_start_] 
      $T[call_calculateAddress36_expr_321_update_completed_] 
      // byte_addr_base
      // start: Forward dependencies from byte_addr_base to transition call_calculateAddress36_expr_321_sample_start_
      call_calculateAddress36_expr_321_sample_start_ <-& ($entry)
      // done: Forward dependencies from byte_addr_base to transition call_calculateAddress36_expr_321_sample_start_
      // RAW reenables for byte_addr_base
      byte_addr_base_update_enable o<-& (call_calculateAddress36_expr_321_sample_completed_ 0)
      // offset
      // start: Forward dependencies from offset to transition call_calculateAddress36_expr_321_sample_start_
      call_calculateAddress36_expr_321_sample_start_ <-& ($entry)
      // done: Forward dependencies from offset to transition call_calculateAddress36_expr_321_sample_start_
      // RAW reenables for offset
      offset_update_enable o<-& (call_calculateAddress36_expr_321_sample_completed_ 0)
      ;;[call_calculateAddress36_expr_321_Sample] 
      {
        // fn-call expression 
        $T [req] $T [ack]  // (split) fn-call binary operation 
      }
      ;;[call_calculateAddress36_expr_321_Update] 
      {
        // fn-call binary expression 
        $T [req] $T [ack] // (split) fn-call binary operation 
      }
      call_calculateAddress36_expr_321_sample_start_ &-> (call_calculateAddress36_expr_321_Sample)
      call_calculateAddress36_expr_321_sample_completed_ <-& (call_calculateAddress36_expr_321_Sample)
      call_calculateAddress36_expr_321_sample_completed_ &-> ($null)
      call_calculateAddress36_expr_321_update_start_ &-> (call_calculateAddress36_expr_321_Update)
      call_calculateAddress36_expr_321_update_completed_ <-& (call_calculateAddress36_expr_321_Update)
      // self-release: 
      call_calculateAddress36_expr_321_sample_start_ o<-& (call_calculateAddress36_expr_321_sample_completed_ 1)
      $null &-> (call_calculateAddress36_expr_321_update_start_)
      call_calculateAddress36_expr_321_update_start_ o<-& (call_calculateAddress36_expr_321_update_completed_ 0)
      // Target expression
      // (as target) byte_addr
      // start: WAR dependencies for byte_addr
      // done: WAR dependencies for byte_addr
      // end:  	byte_addr := ( $call calculateAddress36 (byte_addr_base offset ) ) $buffering 1// bits of buffering = 36. 
      // start: WAR dependencies for bb
      // done: WAR dependencies for bb
      // start:  	$volatile bb := ( $slice byte_addr 2 0 )  $buffering 1
      //  file .Aa/nic.linked.opt.aa, line 148
      // volatile! 
      // Source expression
      // ( $slice byte_addr 2 0 ) 
      // byte_addr
      // Target expression
      // (as target) bb
      // start: WAR dependencies for bb
      // done: WAR dependencies for bb
      // end:  	$volatile bb := ( $slice byte_addr 2 0 )  $buffering 1
      // start: WAR dependencies for addr_dw
      // done: WAR dependencies for addr_dw
      // start:  	$volatile addr_dw := (( $slice byte_addr 35 3 )  && ($bitcast ($uint<3>) _b0  )) $buffering 1
      //  file .Aa/nic.linked.opt.aa, line 149
      // volatile! 
      // Source expression
      // (( $slice byte_addr 35 3 )  && ($bitcast ($uint<3>) _b0  ))
      // ( $slice byte_addr 35 3 ) 
      // byte_addr
      // Target expression
      // (as target) addr_dw
      // start: WAR dependencies for addr_dw
      // done: WAR dependencies for addr_dw
      // end:  	$volatile addr_dw := (( $slice byte_addr 35 3 )  && ($bitcast ($uint<3>) _b0  )) $buffering 1
      // start: WAR dependencies for bmask
      // done: WAR dependencies for bmask
      // start:  	$volatile bmask := (_b10000000  >> ($bitcast ($uint<8>) ( $slice byte_addr 2 0 )  )) $buffering 1
      //  file .Aa/nic.linked.opt.aa, line 150
      // volatile! 
      // Source expression
      // (_b10000000  >> ($bitcast ($uint<8>) ( $slice byte_addr 2 0 )  ))
      // ($bitcast ($uint<8>) ( $slice byte_addr 2 0 )  )
      // ( $slice byte_addr 2 0 ) 
      // byte_addr
      // Target expression
      // (as target) bmask
      // start: WAR dependencies for bmask
      // done: WAR dependencies for bmask
      // end:  	$volatile bmask := (_b10000000  >> ($bitcast ($uint<8>) ( $slice byte_addr 2 0 )  )) $buffering 1
      // start:  	CONCAT_u8_u64_346_346_delayed_3_0 := (wbyte && ($bitcast ($uint<56>) _b0  )) $buffering 3 $cut_through // bits of buffering = 192. 
      //  file .Aa/nic.linked.opt.aa, line 151
      // Source expression
      // (wbyte && ($bitcast ($uint<56>) _b0  ))
      $T[CONCAT_u8_u64_346_sample_start_] 
      $T[CONCAT_u8_u64_346_sample_completed_] 
      $T[CONCAT_u8_u64_346_update_start_] 
      $T[CONCAT_u8_u64_346_update_completed_] 
      // wbyte
      // start: Forward dependencies from wbyte to transition CONCAT_u8_u64_346_sample_start_
      CONCAT_u8_u64_346_sample_start_ <-& ($entry)
      // done: Forward dependencies from wbyte to transition CONCAT_u8_u64_346_sample_start_
      ;;[CONCAT_u8_u64_346_Sample] 
      {
        // binary expression 
        $T [rr] $T [ra]  // (split) binary operation 
      }
      ;;[CONCAT_u8_u64_346_Update] 
      {
        // binary expression 
        $T [cr] $T [ca] // (split) binary operation 
      }
      CONCAT_u8_u64_346_sample_start_ &-> (CONCAT_u8_u64_346_Sample)
      CONCAT_u8_u64_346_sample_completed_ <-& (CONCAT_u8_u64_346_Sample)
      CONCAT_u8_u64_346_sample_completed_ &-> ($null)
      CONCAT_u8_u64_346_update_start_ &-> (CONCAT_u8_u64_346_Update)
      CONCAT_u8_u64_346_update_completed_ <-& (CONCAT_u8_u64_346_Update)
      // RAW reenables for wbyte
      wbyte_update_enable o<-& (CONCAT_u8_u64_346_sample_completed_ 0)
      // self-release: 
      CONCAT_u8_u64_346_sample_start_ o<-& (CONCAT_u8_u64_346_sample_completed_ 1)
      $null &-> (CONCAT_u8_u64_346_update_start_)
      CONCAT_u8_u64_346_update_start_ o<-& (CONCAT_u8_u64_346_update_completed_ 0)
      // Target expression
      // (as target) CONCAT_u8_u64_346_346_delayed_3_0
      // start: WAR dependencies for CONCAT_u8_u64_346_346_delayed_3_0
      // done: WAR dependencies for CONCAT_u8_u64_346_346_delayed_3_0
      // end:  	CONCAT_u8_u64_346_346_delayed_3_0 := (wbyte && ($bitcast ($uint<56>) _b0  )) $buffering 3 $cut_through // bits of buffering = 192. 
      // start: WAR dependencies for wdata
      // done: WAR dependencies for wdata
      // start:  	$volatile wdata := (CONCAT_u8_u64_346_346_delayed_3_0 >> ($bitcast ($uint<64>) (bb && ($bitcast ($uint<3>) _b0  )) )) $buffering 1
      //  file .Aa/nic.linked.opt.aa, line 152
      // volatile! 
      // Source expression
      // (CONCAT_u8_u64_346_346_delayed_3_0 >> ($bitcast ($uint<64>) (bb && ($bitcast ($uint<3>) _b0  )) ))
      // CONCAT_u8_u64_346_346_delayed_3_0
      // ($bitcast ($uint<64>) (bb && ($bitcast ($uint<3>) _b0  )) )
      // (bb && ($bitcast ($uint<3>) _b0  ))
      // bb
      // Target expression
      // (as target) wdata
      // start: WAR dependencies for wdata
      // done: WAR dependencies for wdata
      // end:  	$volatile wdata := (CONCAT_u8_u64_346_346_delayed_3_0 >> ($bitcast ($uint<64>) (bb && ($bitcast ($uint<3>) _b0  )) )) $buffering 1
      // start:  	CONCAT_u1_u2_357_357_delayed_3_0 := (lock && rwbar) $buffering 3 $cut_through // bits of buffering = 6. 
      //  file .Aa/nic.linked.opt.aa, line 153
      // Source expression
      // (lock && rwbar)
      $T[CONCAT_u1_u2_360_sample_start_] 
      $T[CONCAT_u1_u2_360_sample_completed_] 
      $T[CONCAT_u1_u2_360_update_start_] 
      $T[CONCAT_u1_u2_360_update_completed_] 
      // lock
      // rwbar
      // start: Forward dependencies from lock to transition CONCAT_u1_u2_360_sample_start_
      CONCAT_u1_u2_360_sample_start_ <-& ($entry)
      // done: Forward dependencies from lock to transition CONCAT_u1_u2_360_sample_start_
      // start: Forward dependencies from rwbar to transition CONCAT_u1_u2_360_sample_start_
      CONCAT_u1_u2_360_sample_start_ <-& ($entry)
      // done: Forward dependencies from rwbar to transition CONCAT_u1_u2_360_sample_start_
      ;;[CONCAT_u1_u2_360_Sample] 
      {
        // binary expression 
        $T [rr] $T [ra]  // (split) binary operation 
      }
      ;;[CONCAT_u1_u2_360_Update] 
      {
        // binary expression 
        $T [cr] $T [ca] // (split) binary operation 
      }
      CONCAT_u1_u2_360_sample_start_ &-> (CONCAT_u1_u2_360_Sample)
      CONCAT_u1_u2_360_sample_completed_ <-& (CONCAT_u1_u2_360_Sample)
      CONCAT_u1_u2_360_sample_completed_ &-> ($null)
      CONCAT_u1_u2_360_update_start_ &-> (CONCAT_u1_u2_360_Update)
      CONCAT_u1_u2_360_update_completed_ <-& (CONCAT_u1_u2_360_Update)
      // RAW reenables for lock
      lock_update_enable o<-& (CONCAT_u1_u2_360_sample_completed_ 0)
      // RAW reenables for rwbar
      rwbar_update_enable o<-& (CONCAT_u1_u2_360_sample_completed_ 0)
      // self-release: 
      CONCAT_u1_u2_360_sample_start_ o<-& (CONCAT_u1_u2_360_sample_completed_ 1)
      $null &-> (CONCAT_u1_u2_360_update_start_)
      CONCAT_u1_u2_360_update_start_ o<-& (CONCAT_u1_u2_360_update_completed_ 0)
      // Target expression
      // (as target) CONCAT_u1_u2_357_357_delayed_3_0
      // start: WAR dependencies for CONCAT_u1_u2_357_357_delayed_3_0
      // done: WAR dependencies for CONCAT_u1_u2_357_357_delayed_3_0
      // end:  	CONCAT_u1_u2_357_357_delayed_3_0 := (lock && rwbar) $buffering 3 $cut_through // bits of buffering = 6. 
      // start: WAR dependencies for request
      // done: WAR dependencies for request
      // start:  	$volatile request := ((CONCAT_u1_u2_357_357_delayed_3_0 && bmask) && (addr_dw && wdata)) $buffering 1
      //  file .Aa/nic.linked.opt.aa, line 154
      // volatile! 
      // Source expression
      // ((CONCAT_u1_u2_357_357_delayed_3_0 && bmask) && (addr_dw && wdata))
      // (CONCAT_u1_u2_357_357_delayed_3_0 && bmask)
      // CONCAT_u1_u2_357_357_delayed_3_0
      // bmask
      // (addr_dw && wdata)
      // addr_dw
      // wdata
      // Target expression
      // (as target) request
      // start: WAR dependencies for request
      // done: WAR dependencies for request
      // end:  	$volatile request := ((CONCAT_u1_u2_357_357_delayed_3_0 && bmask) && (addr_dw && wdata)) $buffering 1
      // start:  	tag_365_delayed_3_0 := tag $buffering 3 $cut_through // bits of buffering = 24. 
      //  file .Aa/nic.linked.opt.aa, line 155
      $T[assign_stmt_373_sample_start_] 
      $T[assign_stmt_373_sample_completed_] 
      $T[assign_stmt_373_update_start_] 
      $T[assign_stmt_373_update_completed_] 
      // Source expression
      // tag
      // Target expression
      // (as target) tag_365_delayed_3_0
      // both source and target are implicit: use interlock 
      // Interlock 
      ;;[assign_stmt_373_Sample] 
      {
        $T [req] $T [ack] // interlock-sample.
      }
      ;;[assign_stmt_373_Update] 
      {
        $T [req] $T [ack] // interlock-update.
      }
      assign_stmt_373_sample_start_ &-> (assign_stmt_373_Sample)
      assign_stmt_373_sample_completed_ <-& (assign_stmt_373_Sample)
      assign_stmt_373_sample_completed_ &-> ($null)
      assign_stmt_373_update_start_ &-> (assign_stmt_373_Update)
      assign_stmt_373_update_completed_ <-& (assign_stmt_373_Update)
      // start: Forward dependencies from tag to transition assign_stmt_373_sample_start_
      assign_stmt_373_sample_start_ <-& ($entry)
      // done: Forward dependencies from tag to transition assign_stmt_373_sample_start_
      // RAW reenables for tag
      tag_update_enable o<-& (assign_stmt_373_sample_completed_ 0)
      // self-release: 
      assign_stmt_373_sample_start_ o<-& (assign_stmt_373_sample_completed_ 1)
      $null &-> (assign_stmt_373_update_start_)
      assign_stmt_373_update_start_ o<-& (assign_stmt_373_update_completed_ 0)
      // start: WAR dependencies for tag_365_delayed_3_0
      // done: WAR dependencies for tag_365_delayed_3_0
      // end:  	tag_365_delayed_3_0 := tag $buffering 3 $cut_through // bits of buffering = 24. 
      // start: 	$call accessMemoryBase (tag_365_delayed_3_0 request ) (response ) 
      //  file .Aa/nic.linked.opt.aa, line 156
      $T[call_stmt_377_sample_start_] 
      $T[call_stmt_377_sample_completed_] 
      $T[call_stmt_377_update_start_] 
      $T[call_stmt_377_update_completed_] 
      // Call input argument 0
      // tag_365_delayed_3_0
      // Call input argument 1
      // request
      // start: Forward dependencies from tag_365_delayed_3_0 to transition call_stmt_377_sample_start_
      call_stmt_377_sample_start_ <-& (assign_stmt_373_update_completed_)
      // done: Forward dependencies from tag_365_delayed_3_0 to transition call_stmt_377_sample_start_
      // RAW reenables for tag_365_delayed_3_0
      assign_stmt_373_update_start_ o<-& (call_stmt_377_sample_completed_ 0)
      // start: Forward dependencies from request to transition call_stmt_377_sample_start_
      call_stmt_377_sample_start_ <-& (call_calculateAddress36_expr_321_update_completed_)
      call_stmt_377_sample_start_ <-& (CONCAT_u8_u64_346_update_completed_)
      call_stmt_377_sample_start_ <-& (CONCAT_u1_u2_360_update_completed_)
      // done: Forward dependencies from request to transition call_stmt_377_sample_start_
      // RAW reenables for request
      call_calculateAddress36_expr_321_update_start_ o<-& (call_stmt_377_sample_completed_ 0)
      CONCAT_u8_u64_346_update_start_ o<-& (call_stmt_377_sample_completed_ 0)
      CONCAT_u1_u2_360_update_start_ o<-& (call_stmt_377_sample_completed_ 0)
      ;;[call_stmt_377_Sample] 
      {
        $T [crr] $T [cra] 
      }
      ;;[call_stmt_377_Update] 
      {
        $T [ccr] $T [cca] 
      }
      call_stmt_377_sample_start_ &-> (call_stmt_377_Sample)
      call_stmt_377_sample_completed_ <-& (call_stmt_377_Sample)
      call_stmt_377_sample_completed_ &-> ($null)
      call_stmt_377_update_start_ &-> (call_stmt_377_Update)
      call_stmt_377_update_completed_ <-& (call_stmt_377_Update)
      // Call output argument 0
      // (as target) response
      // self-release: 
      call_stmt_377_sample_start_ o<-& (call_stmt_377_sample_completed_ 1)
      $null &-> (call_stmt_377_update_start_)
      call_stmt_377_update_start_ o<-& (call_stmt_377_update_completed_ 0)
      // start: WAR dependencies for response
      // done: WAR dependencies for response
      // end: 	$call accessMemoryBase (tag_365_delayed_3_0 request ) (response ) 
      // start: WAR dependencies for b0
      // done: WAR dependencies for b0
      // start:  	$volatile b0 := ( $slice response 63 56 )  $buffering 1
      //  file .Aa/nic.linked.opt.aa, line 157
      // volatile! 
      // Source expression
      // ( $slice response 63 56 ) 
      // response
      // Target expression
      // (as target) b0
      // start: WAR dependencies for b0
      // done: WAR dependencies for b0
      // end:  	$volatile b0 := ( $slice response 63 56 )  $buffering 1
      // start: WAR dependencies for b1
      // done: WAR dependencies for b1
      // start:  	$volatile b1 := ( $slice response 55 48 )  $buffering 1
      //  file .Aa/nic.linked.opt.aa, line 158
      // volatile! 
      // Source expression
      // ( $slice response 55 48 ) 
      // response
      // Target expression
      // (as target) b1
      // start: WAR dependencies for b1
      // done: WAR dependencies for b1
      // end:  	$volatile b1 := ( $slice response 55 48 )  $buffering 1
      // start: WAR dependencies for b2
      // done: WAR dependencies for b2
      // start:  	$volatile b2 := ( $slice response 47 40 )  $buffering 1
      //  file .Aa/nic.linked.opt.aa, line 159
      // volatile! 
      // Source expression
      // ( $slice response 47 40 ) 
      // response
      // Target expression
      // (as target) b2
      // start: WAR dependencies for b2
      // done: WAR dependencies for b2
      // end:  	$volatile b2 := ( $slice response 47 40 )  $buffering 1
      // start: WAR dependencies for b3
      // done: WAR dependencies for b3
      // start:  	$volatile b3 := ( $slice response 39 32 )  $buffering 1
      //  file .Aa/nic.linked.opt.aa, line 160
      // volatile! 
      // Source expression
      // ( $slice response 39 32 ) 
      // response
      // Target expression
      // (as target) b3
      // start: WAR dependencies for b3
      // done: WAR dependencies for b3
      // end:  	$volatile b3 := ( $slice response 39 32 )  $buffering 1
      // start: WAR dependencies for b4
      // done: WAR dependencies for b4
      // start:  	$volatile b4 := ( $slice response 31 24 )  $buffering 1
      //  file .Aa/nic.linked.opt.aa, line 161
      // volatile! 
      // Source expression
      // ( $slice response 31 24 ) 
      // response
      // Target expression
      // (as target) b4
      // start: WAR dependencies for b4
      // done: WAR dependencies for b4
      // end:  	$volatile b4 := ( $slice response 31 24 )  $buffering 1
      // start: WAR dependencies for b5
      // done: WAR dependencies for b5
      // start:  	$volatile b5 := ( $slice response 23 16 )  $buffering 1
      //  file .Aa/nic.linked.opt.aa, line 162
      // volatile! 
      // Source expression
      // ( $slice response 23 16 ) 
      // response
      // Target expression
      // (as target) b5
      // start: WAR dependencies for b5
      // done: WAR dependencies for b5
      // end:  	$volatile b5 := ( $slice response 23 16 )  $buffering 1
      // start: WAR dependencies for b6
      // done: WAR dependencies for b6
      // start:  	$volatile b6 := ( $slice response 15 8 )  $buffering 1
      //  file .Aa/nic.linked.opt.aa, line 163
      // volatile! 
      // Source expression
      // ( $slice response 15 8 ) 
      // response
      // Target expression
      // (as target) b6
      // start: WAR dependencies for b6
      // done: WAR dependencies for b6
      // end:  	$volatile b6 := ( $slice response 15 8 )  $buffering 1
      // start: WAR dependencies for b7
      // done: WAR dependencies for b7
      // start:  	$volatile b7 := ( $slice response 7 0 )  $buffering 1
      //  file .Aa/nic.linked.opt.aa, line 164
      // volatile! 
      // Source expression
      // ( $slice response 7 0 ) 
      // response
      // Target expression
      // (as target) b7
      // start: WAR dependencies for b7
      // done: WAR dependencies for b7
      // end:  	$volatile b7 := ( $slice response 7 0 )  $buffering 1
      // start:  	EQ_u3_u1_427_427_delayed_11_0 := (bb == 3 ) $buffering 11 $cut_through // bits of buffering = 11. 
      //  file .Aa/nic.linked.opt.aa, line 165
      // Source expression
      // (bb == 3 )
      $T[EQ_u3_u1_413_sample_start_] 
      $T[EQ_u3_u1_413_sample_completed_] 
      $T[EQ_u3_u1_413_update_start_] 
      $T[EQ_u3_u1_413_update_completed_] 
      // bb
      // start: Forward dependencies from bb to transition EQ_u3_u1_413_sample_start_
      EQ_u3_u1_413_sample_start_ <-& (call_calculateAddress36_expr_321_update_completed_)
      // done: Forward dependencies from bb to transition EQ_u3_u1_413_sample_start_
      ;;[EQ_u3_u1_413_Sample] 
      {
        // binary expression 
        $T [rr] $T [ra]  // (split) binary operation 
      }
      ;;[EQ_u3_u1_413_Update] 
      {
        // binary expression 
        $T [cr] $T [ca] // (split) binary operation 
      }
      EQ_u3_u1_413_sample_start_ &-> (EQ_u3_u1_413_Sample)
      EQ_u3_u1_413_sample_completed_ <-& (EQ_u3_u1_413_Sample)
      EQ_u3_u1_413_sample_completed_ &-> ($null)
      EQ_u3_u1_413_update_start_ &-> (EQ_u3_u1_413_Update)
      EQ_u3_u1_413_update_completed_ <-& (EQ_u3_u1_413_Update)
      // RAW reenables for bb
      call_calculateAddress36_expr_321_update_start_ o<-& (EQ_u3_u1_413_sample_completed_ 0)
      // self-release: 
      EQ_u3_u1_413_sample_start_ o<-& (EQ_u3_u1_413_sample_completed_ 1)
      $null &-> (EQ_u3_u1_413_update_start_)
      EQ_u3_u1_413_update_start_ o<-& (EQ_u3_u1_413_update_completed_ 0)
      // Target expression
      // (as target) EQ_u3_u1_427_427_delayed_11_0
      // start: WAR dependencies for EQ_u3_u1_427_427_delayed_11_0
      // done: WAR dependencies for EQ_u3_u1_427_427_delayed_11_0
      // end:  	EQ_u3_u1_427_427_delayed_11_0 := (bb == 3 ) $buffering 11 $cut_through // bits of buffering = 11. 
      // start:  	EQ_u3_u1_408_408_delayed_11_0 := (bb == 0 ) $buffering 11 $cut_through // bits of buffering = 11. 
      //  file .Aa/nic.linked.opt.aa, line 166
      // Source expression
      // (bb == 0 )
      $T[EQ_u3_u1_418_sample_start_] 
      $T[EQ_u3_u1_418_sample_completed_] 
      $T[EQ_u3_u1_418_update_start_] 
      $T[EQ_u3_u1_418_update_completed_] 
      // bb
      // start: Forward dependencies from bb to transition EQ_u3_u1_418_sample_start_
      EQ_u3_u1_418_sample_start_ <-& (call_calculateAddress36_expr_321_update_completed_)
      // done: Forward dependencies from bb to transition EQ_u3_u1_418_sample_start_
      ;;[EQ_u3_u1_418_Sample] 
      {
        // binary expression 
        $T [rr] $T [ra]  // (split) binary operation 
      }
      ;;[EQ_u3_u1_418_Update] 
      {
        // binary expression 
        $T [cr] $T [ca] // (split) binary operation 
      }
      EQ_u3_u1_418_sample_start_ &-> (EQ_u3_u1_418_Sample)
      EQ_u3_u1_418_sample_completed_ <-& (EQ_u3_u1_418_Sample)
      EQ_u3_u1_418_sample_completed_ &-> ($null)
      EQ_u3_u1_418_update_start_ &-> (EQ_u3_u1_418_Update)
      EQ_u3_u1_418_update_completed_ <-& (EQ_u3_u1_418_Update)
      // RAW reenables for bb
      call_calculateAddress36_expr_321_update_start_ o<-& (EQ_u3_u1_418_sample_completed_ 0)
      // self-release: 
      EQ_u3_u1_418_sample_start_ o<-& (EQ_u3_u1_418_sample_completed_ 1)
      $null &-> (EQ_u3_u1_418_update_start_)
      EQ_u3_u1_418_update_start_ o<-& (EQ_u3_u1_418_update_completed_ 0)
      // Target expression
      // (as target) EQ_u3_u1_408_408_delayed_11_0
      // start: WAR dependencies for EQ_u3_u1_408_408_delayed_11_0
      // done: WAR dependencies for EQ_u3_u1_408_408_delayed_11_0
      // end:  	EQ_u3_u1_408_408_delayed_11_0 := (bb == 0 ) $buffering 11 $cut_through // bits of buffering = 11. 
      // start:  	EQ_u3_u1_414_414_delayed_11_0 := (bb == 1 ) $buffering 11 $cut_through // bits of buffering = 11. 
      //  file .Aa/nic.linked.opt.aa, line 167
      // Source expression
      // (bb == 1 )
      $T[EQ_u3_u1_423_sample_start_] 
      $T[EQ_u3_u1_423_sample_completed_] 
      $T[EQ_u3_u1_423_update_start_] 
      $T[EQ_u3_u1_423_update_completed_] 
      // bb
      // start: Forward dependencies from bb to transition EQ_u3_u1_423_sample_start_
      EQ_u3_u1_423_sample_start_ <-& (call_calculateAddress36_expr_321_update_completed_)
      // done: Forward dependencies from bb to transition EQ_u3_u1_423_sample_start_
      ;;[EQ_u3_u1_423_Sample] 
      {
        // binary expression 
        $T [rr] $T [ra]  // (split) binary operation 
      }
      ;;[EQ_u3_u1_423_Update] 
      {
        // binary expression 
        $T [cr] $T [ca] // (split) binary operation 
      }
      EQ_u3_u1_423_sample_start_ &-> (EQ_u3_u1_423_Sample)
      EQ_u3_u1_423_sample_completed_ <-& (EQ_u3_u1_423_Sample)
      EQ_u3_u1_423_sample_completed_ &-> ($null)
      EQ_u3_u1_423_update_start_ &-> (EQ_u3_u1_423_Update)
      EQ_u3_u1_423_update_completed_ <-& (EQ_u3_u1_423_Update)
      // RAW reenables for bb
      call_calculateAddress36_expr_321_update_start_ o<-& (EQ_u3_u1_423_sample_completed_ 0)
      // self-release: 
      EQ_u3_u1_423_sample_start_ o<-& (EQ_u3_u1_423_sample_completed_ 1)
      $null &-> (EQ_u3_u1_423_update_start_)
      EQ_u3_u1_423_update_start_ o<-& (EQ_u3_u1_423_update_completed_ 0)
      // Target expression
      // (as target) EQ_u3_u1_414_414_delayed_11_0
      // start: WAR dependencies for EQ_u3_u1_414_414_delayed_11_0
      // done: WAR dependencies for EQ_u3_u1_414_414_delayed_11_0
      // end:  	EQ_u3_u1_414_414_delayed_11_0 := (bb == 1 ) $buffering 11 $cut_through // bits of buffering = 11. 
      // start:  	EQ_u3_u1_421_421_delayed_11_0 := (bb == 2 ) $buffering 11 $cut_through // bits of buffering = 11. 
      //  file .Aa/nic.linked.opt.aa, line 168
      // Source expression
      // (bb == 2 )
      $T[EQ_u3_u1_428_sample_start_] 
      $T[EQ_u3_u1_428_sample_completed_] 
      $T[EQ_u3_u1_428_update_start_] 
      $T[EQ_u3_u1_428_update_completed_] 
      // bb
      // start: Forward dependencies from bb to transition EQ_u3_u1_428_sample_start_
      EQ_u3_u1_428_sample_start_ <-& (call_calculateAddress36_expr_321_update_completed_)
      // done: Forward dependencies from bb to transition EQ_u3_u1_428_sample_start_
      ;;[EQ_u3_u1_428_Sample] 
      {
        // binary expression 
        $T [rr] $T [ra]  // (split) binary operation 
      }
      ;;[EQ_u3_u1_428_Update] 
      {
        // binary expression 
        $T [cr] $T [ca] // (split) binary operation 
      }
      EQ_u3_u1_428_sample_start_ &-> (EQ_u3_u1_428_Sample)
      EQ_u3_u1_428_sample_completed_ <-& (EQ_u3_u1_428_Sample)
      EQ_u3_u1_428_sample_completed_ &-> ($null)
      EQ_u3_u1_428_update_start_ &-> (EQ_u3_u1_428_Update)
      EQ_u3_u1_428_update_completed_ <-& (EQ_u3_u1_428_Update)
      // RAW reenables for bb
      call_calculateAddress36_expr_321_update_start_ o<-& (EQ_u3_u1_428_sample_completed_ 0)
      // self-release: 
      EQ_u3_u1_428_sample_start_ o<-& (EQ_u3_u1_428_sample_completed_ 1)
      $null &-> (EQ_u3_u1_428_update_start_)
      EQ_u3_u1_428_update_start_ o<-& (EQ_u3_u1_428_update_completed_ 0)
      // Target expression
      // (as target) EQ_u3_u1_421_421_delayed_11_0
      // start: WAR dependencies for EQ_u3_u1_421_421_delayed_11_0
      // done: WAR dependencies for EQ_u3_u1_421_421_delayed_11_0
      // end:  	EQ_u3_u1_421_421_delayed_11_0 := (bb == 2 ) $buffering 11 $cut_through // bits of buffering = 11. 
      // start:  	EQ_u3_u1_435_435_delayed_11_0 := (bb == 4 ) $buffering 11 $cut_through // bits of buffering = 11. 
      //  file .Aa/nic.linked.opt.aa, line 169
      // Source expression
      // (bb == 4 )
      $T[EQ_u3_u1_433_sample_start_] 
      $T[EQ_u3_u1_433_sample_completed_] 
      $T[EQ_u3_u1_433_update_start_] 
      $T[EQ_u3_u1_433_update_completed_] 
      // bb
      // start: Forward dependencies from bb to transition EQ_u3_u1_433_sample_start_
      EQ_u3_u1_433_sample_start_ <-& (call_calculateAddress36_expr_321_update_completed_)
      // done: Forward dependencies from bb to transition EQ_u3_u1_433_sample_start_
      ;;[EQ_u3_u1_433_Sample] 
      {
        // binary expression 
        $T [rr] $T [ra]  // (split) binary operation 
      }
      ;;[EQ_u3_u1_433_Update] 
      {
        // binary expression 
        $T [cr] $T [ca] // (split) binary operation 
      }
      EQ_u3_u1_433_sample_start_ &-> (EQ_u3_u1_433_Sample)
      EQ_u3_u1_433_sample_completed_ <-& (EQ_u3_u1_433_Sample)
      EQ_u3_u1_433_sample_completed_ &-> ($null)
      EQ_u3_u1_433_update_start_ &-> (EQ_u3_u1_433_Update)
      EQ_u3_u1_433_update_completed_ <-& (EQ_u3_u1_433_Update)
      // RAW reenables for bb
      call_calculateAddress36_expr_321_update_start_ o<-& (EQ_u3_u1_433_sample_completed_ 0)
      // self-release: 
      EQ_u3_u1_433_sample_start_ o<-& (EQ_u3_u1_433_sample_completed_ 1)
      $null &-> (EQ_u3_u1_433_update_start_)
      EQ_u3_u1_433_update_start_ o<-& (EQ_u3_u1_433_update_completed_ 0)
      // Target expression
      // (as target) EQ_u3_u1_435_435_delayed_11_0
      // start: WAR dependencies for EQ_u3_u1_435_435_delayed_11_0
      // done: WAR dependencies for EQ_u3_u1_435_435_delayed_11_0
      // end:  	EQ_u3_u1_435_435_delayed_11_0 := (bb == 4 ) $buffering 11 $cut_through // bits of buffering = 11. 
      // start:  	EQ_u3_u1_441_441_delayed_11_0 := (bb == 5 ) $buffering 11 $cut_through // bits of buffering = 11. 
      //  file .Aa/nic.linked.opt.aa, line 170
      // Source expression
      // (bb == 5 )
      $T[EQ_u3_u1_438_sample_start_] 
      $T[EQ_u3_u1_438_sample_completed_] 
      $T[EQ_u3_u1_438_update_start_] 
      $T[EQ_u3_u1_438_update_completed_] 
      // bb
      // start: Forward dependencies from bb to transition EQ_u3_u1_438_sample_start_
      EQ_u3_u1_438_sample_start_ <-& (call_calculateAddress36_expr_321_update_completed_)
      // done: Forward dependencies from bb to transition EQ_u3_u1_438_sample_start_
      ;;[EQ_u3_u1_438_Sample] 
      {
        // binary expression 
        $T [rr] $T [ra]  // (split) binary operation 
      }
      ;;[EQ_u3_u1_438_Update] 
      {
        // binary expression 
        $T [cr] $T [ca] // (split) binary operation 
      }
      EQ_u3_u1_438_sample_start_ &-> (EQ_u3_u1_438_Sample)
      EQ_u3_u1_438_sample_completed_ <-& (EQ_u3_u1_438_Sample)
      EQ_u3_u1_438_sample_completed_ &-> ($null)
      EQ_u3_u1_438_update_start_ &-> (EQ_u3_u1_438_Update)
      EQ_u3_u1_438_update_completed_ <-& (EQ_u3_u1_438_Update)
      // RAW reenables for bb
      call_calculateAddress36_expr_321_update_start_ o<-& (EQ_u3_u1_438_sample_completed_ 0)
      // self-release: 
      EQ_u3_u1_438_sample_start_ o<-& (EQ_u3_u1_438_sample_completed_ 1)
      $null &-> (EQ_u3_u1_438_update_start_)
      EQ_u3_u1_438_update_start_ o<-& (EQ_u3_u1_438_update_completed_ 0)
      // Target expression
      // (as target) EQ_u3_u1_441_441_delayed_11_0
      // start: WAR dependencies for EQ_u3_u1_441_441_delayed_11_0
      // done: WAR dependencies for EQ_u3_u1_441_441_delayed_11_0
      // end:  	EQ_u3_u1_441_441_delayed_11_0 := (bb == 5 ) $buffering 11 $cut_through // bits of buffering = 11. 
      // start:  	EQ_u3_u1_448_448_delayed_11_0 := (bb == 6 ) $buffering 11 $cut_through // bits of buffering = 11. 
      //  file .Aa/nic.linked.opt.aa, line 171
      // Source expression
      // (bb == 6 )
      $T[EQ_u3_u1_443_sample_start_] 
      $T[EQ_u3_u1_443_sample_completed_] 
      $T[EQ_u3_u1_443_update_start_] 
      $T[EQ_u3_u1_443_update_completed_] 
      // bb
      // start: Forward dependencies from bb to transition EQ_u3_u1_443_sample_start_
      EQ_u3_u1_443_sample_start_ <-& (call_calculateAddress36_expr_321_update_completed_)
      // done: Forward dependencies from bb to transition EQ_u3_u1_443_sample_start_
      ;;[EQ_u3_u1_443_Sample] 
      {
        // binary expression 
        $T [rr] $T [ra]  // (split) binary operation 
      }
      ;;[EQ_u3_u1_443_Update] 
      {
        // binary expression 
        $T [cr] $T [ca] // (split) binary operation 
      }
      EQ_u3_u1_443_sample_start_ &-> (EQ_u3_u1_443_Sample)
      EQ_u3_u1_443_sample_completed_ <-& (EQ_u3_u1_443_Sample)
      EQ_u3_u1_443_sample_completed_ &-> ($null)
      EQ_u3_u1_443_update_start_ &-> (EQ_u3_u1_443_Update)
      EQ_u3_u1_443_update_completed_ <-& (EQ_u3_u1_443_Update)
      // RAW reenables for bb
      call_calculateAddress36_expr_321_update_start_ o<-& (EQ_u3_u1_443_sample_completed_ 0)
      // self-release: 
      EQ_u3_u1_443_sample_start_ o<-& (EQ_u3_u1_443_sample_completed_ 1)
      $null &-> (EQ_u3_u1_443_update_start_)
      EQ_u3_u1_443_update_start_ o<-& (EQ_u3_u1_443_update_completed_ 0)
      // Target expression
      // (as target) EQ_u3_u1_448_448_delayed_11_0
      // start: WAR dependencies for EQ_u3_u1_448_448_delayed_11_0
      // done: WAR dependencies for EQ_u3_u1_448_448_delayed_11_0
      // end:  	EQ_u3_u1_448_448_delayed_11_0 := (bb == 6 ) $buffering 11 $cut_through // bits of buffering = 11. 
      // start:  	EQ_u3_u1_454_454_delayed_11_0 := (bb == 7 ) $buffering 11 $cut_through // bits of buffering = 11. 
      //  file .Aa/nic.linked.opt.aa, line 172
      // Source expression
      // (bb == 7 )
      $T[EQ_u3_u1_448_sample_start_] 
      $T[EQ_u3_u1_448_sample_completed_] 
      $T[EQ_u3_u1_448_update_start_] 
      $T[EQ_u3_u1_448_update_completed_] 
      // bb
      // start: Forward dependencies from bb to transition EQ_u3_u1_448_sample_start_
      EQ_u3_u1_448_sample_start_ <-& (call_calculateAddress36_expr_321_update_completed_)
      // done: Forward dependencies from bb to transition EQ_u3_u1_448_sample_start_
      ;;[EQ_u3_u1_448_Sample] 
      {
        // binary expression 
        $T [rr] $T [ra]  // (split) binary operation 
      }
      ;;[EQ_u3_u1_448_Update] 
      {
        // binary expression 
        $T [cr] $T [ca] // (split) binary operation 
      }
      EQ_u3_u1_448_sample_start_ &-> (EQ_u3_u1_448_Sample)
      EQ_u3_u1_448_sample_completed_ <-& (EQ_u3_u1_448_Sample)
      EQ_u3_u1_448_sample_completed_ &-> ($null)
      EQ_u3_u1_448_update_start_ &-> (EQ_u3_u1_448_Update)
      EQ_u3_u1_448_update_completed_ <-& (EQ_u3_u1_448_Update)
      // RAW reenables for bb
      call_calculateAddress36_expr_321_update_start_ o<-& (EQ_u3_u1_448_sample_completed_ 0)
      // self-release: 
      EQ_u3_u1_448_sample_start_ o<-& (EQ_u3_u1_448_sample_completed_ 1)
      $null &-> (EQ_u3_u1_448_update_start_)
      EQ_u3_u1_448_update_start_ o<-& (EQ_u3_u1_448_update_completed_ 0)
      // Target expression
      // (as target) EQ_u3_u1_454_454_delayed_11_0
      // start: WAR dependencies for EQ_u3_u1_454_454_delayed_11_0
      // done: WAR dependencies for EQ_u3_u1_454_454_delayed_11_0
      // end:  	EQ_u3_u1_454_454_delayed_11_0 := (bb == 7 ) $buffering 11 $cut_through // bits of buffering = 11. 
      // start:  	rbyte := (((( $mux EQ_u3_u1_408_408_delayed_11_0 b0  _b0  )  | ( $mux EQ_u3_u1_414_414_delayed_11_0 b1  _b0  ) ) | (( $mux EQ_u3_u1_421_421_delayed_11_0 b2  _b0  )  | ( $mux EQ_u3_u1_427_427_delayed_11_0 b3  _b0  ) )) | ((( $mux EQ_u3_u1_435_435_delayed_11_0 b4  _b0  )  | ( $mux EQ_u3_u1_441_441_delayed_11_0 b5  _b0  ) ) | (( $mux EQ_u3_u1_448_448_delayed_11_0 b6  _b0  )  | ( $mux EQ_u3_u1_454_454_delayed_11_0 b7  _b0  ) ))) $buffering 1// bits of buffering = 8. 
      //  file .Aa/nic.linked.opt.aa, line 173
      // Source expression
      // (((( $mux EQ_u3_u1_408_408_delayed_11_0 b0  _b0  )  | ( $mux EQ_u3_u1_414_414_delayed_11_0 b1  _b0  ) ) | (( $mux EQ_u3_u1_421_421_delayed_11_0 b2  _b0  )  | ( $mux EQ_u3_u1_427_427_delayed_11_0 b3  _b0  ) )) | ((( $mux EQ_u3_u1_435_435_delayed_11_0 b4  _b0  )  | ( $mux EQ_u3_u1_441_441_delayed_11_0 b5  _b0  ) ) | (( $mux EQ_u3_u1_448_448_delayed_11_0 b6  _b0  )  | ( $mux EQ_u3_u1_454_454_delayed_11_0 b7  _b0  ) )))
      $T[OR_u8_u8_489_sample_start_] 
      $T[OR_u8_u8_489_sample_completed_] 
      $T[OR_u8_u8_489_update_start_] 
      $T[OR_u8_u8_489_update_completed_] 
      // ((( $mux EQ_u3_u1_408_408_delayed_11_0 b0  _b0  )  | ( $mux EQ_u3_u1_414_414_delayed_11_0 b1  _b0  ) ) | (( $mux EQ_u3_u1_421_421_delayed_11_0 b2  _b0  )  | ( $mux EQ_u3_u1_427_427_delayed_11_0 b3  _b0  ) ))
      // (( $mux EQ_u3_u1_408_408_delayed_11_0 b0  _b0  )  | ( $mux EQ_u3_u1_414_414_delayed_11_0 b1  _b0  ) )
      // ( $mux EQ_u3_u1_408_408_delayed_11_0 b0  _b0  ) 
      // EQ_u3_u1_408_408_delayed_11_0
      // b0
      // ( $mux EQ_u3_u1_414_414_delayed_11_0 b1  _b0  ) 
      // EQ_u3_u1_414_414_delayed_11_0
      // b1
      // (( $mux EQ_u3_u1_421_421_delayed_11_0 b2  _b0  )  | ( $mux EQ_u3_u1_427_427_delayed_11_0 b3  _b0  ) )
      // ( $mux EQ_u3_u1_421_421_delayed_11_0 b2  _b0  ) 
      // EQ_u3_u1_421_421_delayed_11_0
      // b2
      // ( $mux EQ_u3_u1_427_427_delayed_11_0 b3  _b0  ) 
      // EQ_u3_u1_427_427_delayed_11_0
      // b3
      // ((( $mux EQ_u3_u1_435_435_delayed_11_0 b4  _b0  )  | ( $mux EQ_u3_u1_441_441_delayed_11_0 b5  _b0  ) ) | (( $mux EQ_u3_u1_448_448_delayed_11_0 b6  _b0  )  | ( $mux EQ_u3_u1_454_454_delayed_11_0 b7  _b0  ) ))
      // (( $mux EQ_u3_u1_435_435_delayed_11_0 b4  _b0  )  | ( $mux EQ_u3_u1_441_441_delayed_11_0 b5  _b0  ) )
      // ( $mux EQ_u3_u1_435_435_delayed_11_0 b4  _b0  ) 
      // EQ_u3_u1_435_435_delayed_11_0
      // b4
      // ( $mux EQ_u3_u1_441_441_delayed_11_0 b5  _b0  ) 
      // EQ_u3_u1_441_441_delayed_11_0
      // b5
      // (( $mux EQ_u3_u1_448_448_delayed_11_0 b6  _b0  )  | ( $mux EQ_u3_u1_454_454_delayed_11_0 b7  _b0  ) )
      // ( $mux EQ_u3_u1_448_448_delayed_11_0 b6  _b0  ) 
      // EQ_u3_u1_448_448_delayed_11_0
      // b6
      // ( $mux EQ_u3_u1_454_454_delayed_11_0 b7  _b0  ) 
      // EQ_u3_u1_454_454_delayed_11_0
      // b7
      // start: Forward dependencies from ((( $mux EQ_u3_u1_408_408_delayed_11_0 b0  _b0  )  | ( $mux EQ_u3_u1_414_414_delayed_11_0 b1  _b0  ) ) | (( $mux EQ_u3_u1_421_421_delayed_11_0 b2  _b0  )  | ( $mux EQ_u3_u1_427_427_delayed_11_0 b3  _b0  ) )) to transition OR_u8_u8_489_sample_start_
      OR_u8_u8_489_sample_start_ <-& (call_stmt_377_update_completed_)
      OR_u8_u8_489_sample_start_ <-& (EQ_u3_u1_413_update_completed_)
      OR_u8_u8_489_sample_start_ <-& (EQ_u3_u1_418_update_completed_)
      OR_u8_u8_489_sample_start_ <-& (EQ_u3_u1_423_update_completed_)
      OR_u8_u8_489_sample_start_ <-& (EQ_u3_u1_428_update_completed_)
      // done: Forward dependencies from ((( $mux EQ_u3_u1_408_408_delayed_11_0 b0  _b0  )  | ( $mux EQ_u3_u1_414_414_delayed_11_0 b1  _b0  ) ) | (( $mux EQ_u3_u1_421_421_delayed_11_0 b2  _b0  )  | ( $mux EQ_u3_u1_427_427_delayed_11_0 b3  _b0  ) )) to transition OR_u8_u8_489_sample_start_
      // start: Forward dependencies from ((( $mux EQ_u3_u1_435_435_delayed_11_0 b4  _b0  )  | ( $mux EQ_u3_u1_441_441_delayed_11_0 b5  _b0  ) ) | (( $mux EQ_u3_u1_448_448_delayed_11_0 b6  _b0  )  | ( $mux EQ_u3_u1_454_454_delayed_11_0 b7  _b0  ) )) to transition OR_u8_u8_489_sample_start_
      OR_u8_u8_489_sample_start_ <-& (EQ_u3_u1_448_update_completed_)
      OR_u8_u8_489_sample_start_ <-& (call_stmt_377_update_completed_)
      OR_u8_u8_489_sample_start_ <-& (EQ_u3_u1_433_update_completed_)
      OR_u8_u8_489_sample_start_ <-& (EQ_u3_u1_438_update_completed_)
      OR_u8_u8_489_sample_start_ <-& (EQ_u3_u1_443_update_completed_)
      // done: Forward dependencies from ((( $mux EQ_u3_u1_435_435_delayed_11_0 b4  _b0  )  | ( $mux EQ_u3_u1_441_441_delayed_11_0 b5  _b0  ) ) | (( $mux EQ_u3_u1_448_448_delayed_11_0 b6  _b0  )  | ( $mux EQ_u3_u1_454_454_delayed_11_0 b7  _b0  ) )) to transition OR_u8_u8_489_sample_start_
      ;;[OR_u8_u8_489_Sample] 
      {
        // binary expression 
        $T [rr] $T [ra]  // (split) binary operation 
      }
      ;;[OR_u8_u8_489_Update] 
      {
        // binary expression 
        $T [cr] $T [ca] // (split) binary operation 
      }
      OR_u8_u8_489_sample_start_ &-> (OR_u8_u8_489_Sample)
      OR_u8_u8_489_sample_completed_ <-& (OR_u8_u8_489_Sample)
      OR_u8_u8_489_sample_completed_ &-> ($null)
      OR_u8_u8_489_update_start_ &-> (OR_u8_u8_489_Update)
      OR_u8_u8_489_update_completed_ <-& (OR_u8_u8_489_Update)
      // RAW reenables for ((( $mux EQ_u3_u1_408_408_delayed_11_0 b0  _b0  )  | ( $mux EQ_u3_u1_414_414_delayed_11_0 b1  _b0  ) ) | (( $mux EQ_u3_u1_421_421_delayed_11_0 b2  _b0  )  | ( $mux EQ_u3_u1_427_427_delayed_11_0 b3  _b0  ) ))
      call_stmt_377_update_start_ o<-& (OR_u8_u8_489_sample_completed_ 0)
      EQ_u3_u1_413_update_start_ o<-& (OR_u8_u8_489_sample_completed_ 0)
      EQ_u3_u1_418_update_start_ o<-& (OR_u8_u8_489_sample_completed_ 0)
      EQ_u3_u1_423_update_start_ o<-& (OR_u8_u8_489_sample_completed_ 0)
      EQ_u3_u1_428_update_start_ o<-& (OR_u8_u8_489_sample_completed_ 0)
      // RAW reenables for ((( $mux EQ_u3_u1_435_435_delayed_11_0 b4  _b0  )  | ( $mux EQ_u3_u1_441_441_delayed_11_0 b5  _b0  ) ) | (( $mux EQ_u3_u1_448_448_delayed_11_0 b6  _b0  )  | ( $mux EQ_u3_u1_454_454_delayed_11_0 b7  _b0  ) ))
      EQ_u3_u1_448_update_start_ o<-& (OR_u8_u8_489_sample_completed_ 0)
      call_stmt_377_update_start_ o<-& (OR_u8_u8_489_sample_completed_ 0)
      EQ_u3_u1_433_update_start_ o<-& (OR_u8_u8_489_sample_completed_ 0)
      EQ_u3_u1_438_update_start_ o<-& (OR_u8_u8_489_sample_completed_ 0)
      EQ_u3_u1_443_update_start_ o<-& (OR_u8_u8_489_sample_completed_ 0)
      // self-release: 
      OR_u8_u8_489_sample_start_ o<-& (OR_u8_u8_489_sample_completed_ 1)
      $null &-> (OR_u8_u8_489_update_start_)
      OR_u8_u8_489_update_start_ o<-& (OR_u8_u8_489_update_completed_ 0)
      // Target expression
      // (as target) rbyte
      // rbyte
      // write to interface object
      // start: WAR dependencies for rbyte
      // done: WAR dependencies for rbyte
      // rbyte
      // write to interface object
      OR_u8_u8_489_update_start_ <-& (rbyte_update_enable)
      // end:  	rbyte := (((( $mux EQ_u3_u1_408_408_delayed_11_0 b0  _b0  )  | ( $mux EQ_u3_u1_414_414_delayed_11_0 b1  _b0  ) ) | (( $mux EQ_u3_u1_421_421_delayed_11_0 b2  _b0  )  | ( $mux EQ_u3_u1_427_427_delayed_11_0 b3  _b0  ) )) | ((( $mux EQ_u3_u1_435_435_delayed_11_0 b4  _b0  )  | ( $mux EQ_u3_u1_441_441_delayed_11_0 b5  _b0  ) ) | (( $mux EQ_u3_u1_448_448_delayed_11_0 b6  _b0  )  | ( $mux EQ_u3_u1_454_454_delayed_11_0 b7  _b0  ) ))) $buffering 1// bits of buffering = 8. 
      // load-store dependencies..
      // pipe read/write dependencies for pipe MEMORY_TO_NIC_RESPONSE
      // read-dependencies for pipe MEMORY_TO_NIC_RESPONSE
      // write-dependencies for pipe MEMORY_TO_NIC_RESPONSE
      // signal write dependencies for MEMORY_TO_NIC_RESPONSE
      // pipe read/write dependencies for pipe NIC_DEBUG_SIGNAL
      // read-dependencies for pipe NIC_DEBUG_SIGNAL
      // write-dependencies for pipe NIC_DEBUG_SIGNAL
      // signal write dependencies for NIC_DEBUG_SIGNAL
      // pipe read/write dependencies for pipe NIC_TO_MEMORY_REQUEST
      // read-dependencies for pipe NIC_TO_MEMORY_REQUEST
      // write-dependencies for pipe NIC_TO_MEMORY_REQUEST
      // signal write dependencies for NIC_TO_MEMORY_REQUEST
    }
    ( rbyte_update_enable_in)
    ( tag_update_enable_out lock_update_enable_out rwbar_update_enable_out byte_addr_base_update_enable_out offset_update_enable_out wbyte_update_enable_out)
    $P [tag_update_enable] 
    $P [lock_update_enable] 
    $P [rwbar_update_enable] 
    $P [byte_addr_base_update_enable] 
    $P [offset_update_enable] 
    $P [wbyte_update_enable] 
    $P [rbyte_update_enable] 
    $bind tag_update_enable <= assign_stmt_322_to_assign_stmt_490 : tag_update_enable_out
    $bind lock_update_enable <= assign_stmt_322_to_assign_stmt_490 : lock_update_enable_out
    $bind rwbar_update_enable <= assign_stmt_322_to_assign_stmt_490 : rwbar_update_enable_out
    $bind byte_addr_base_update_enable <= assign_stmt_322_to_assign_stmt_490 : byte_addr_base_update_enable_out
    $bind offset_update_enable <= assign_stmt_322_to_assign_stmt_490 : offset_update_enable_out
    $bind wbyte_update_enable <= assign_stmt_322_to_assign_stmt_490 : wbyte_update_enable_out
    $bind rbyte_update_enable => assign_stmt_322_to_assign_stmt_490 : rbyte_update_enable_in
  }
  // end control-path
  $DP 
  {
    // begin data-path 
    // constant-object-declarations for block %accessMemoryByteBase
    //  file .Aa/nic.linked.opt.aa, line 142
    // ( $call calculateAddress36 (byte_addr_base offset ) )
    // ($bitcast ($uint<3>) _b0  )
    $constant $W[type_cast_331_wire_constant] : $int<3> := _b000// 0
    // _b10000000 
    $constant $W[konst_335_wire_constant] : $int<8> := _b10000000// 128
    // ($bitcast ($uint<56>) _b0  )
    $constant $W[type_cast_345_wire_constant] : $int<56> := _b00000000000000000000000000000000000000000000000000000000// 0
    // ($bitcast ($uint<3>) _b0  )
    $constant $W[type_cast_352_wire_constant] : $int<3> := _b000// 0
    // 	$call accessMemoryBase (tag_365_delayed_3_0 request ) (response ) 
    //  file .Aa/nic.linked.opt.aa, line 156
    // 3 
    $constant $W[konst_412_wire_constant] : $int<3> := _b011// 3
    // 0 
    $constant $W[konst_417_wire_constant] : $int<3> := _b000// 0
    // 1 
    $constant $W[konst_422_wire_constant] : $int<3> := _b001// 1
    // 2 
    $constant $W[konst_427_wire_constant] : $int<3> := _b010// 2
    // 4 
    $constant $W[konst_432_wire_constant] : $int<3> := _b100// 4
    // 5 
    $constant $W[konst_437_wire_constant] : $int<3> := _b101// 5
    // 6 
    $constant $W[konst_442_wire_constant] : $int<3> := _b110// 6
    // 7 
    $constant $W[konst_447_wire_constant] : $int<3> := _b111// 7
    // ( $mux EQ_u3_u1_408_408_delayed_11_0 b0  _b0  ) 
    // _b0 
    $constant $W[konst_453_wire_constant] : $int<8> := _b00000000// 0
    // ( $mux EQ_u3_u1_414_414_delayed_11_0 b1  _b0  ) 
    // _b0 
    $constant $W[konst_457_wire_constant] : $int<8> := _b00000000// 0
    // ( $mux EQ_u3_u1_421_421_delayed_11_0 b2  _b0  ) 
    // _b0 
    $constant $W[konst_462_wire_constant] : $int<8> := _b00000000// 0
    // ( $mux EQ_u3_u1_427_427_delayed_11_0 b3  _b0  ) 
    // _b0 
    $constant $W[konst_466_wire_constant] : $int<8> := _b00000000// 0
    // ( $mux EQ_u3_u1_435_435_delayed_11_0 b4  _b0  ) 
    // _b0 
    $constant $W[konst_472_wire_constant] : $int<8> := _b00000000// 0
    // ( $mux EQ_u3_u1_441_441_delayed_11_0 b5  _b0  ) 
    // _b0 
    $constant $W[konst_476_wire_constant] : $int<8> := _b00000000// 0
    // ( $mux EQ_u3_u1_448_448_delayed_11_0 b6  _b0  ) 
    // _b0 
    $constant $W[konst_481_wire_constant] : $int<8> := _b00000000// 0
    // ( $mux EQ_u3_u1_454_454_delayed_11_0 b7  _b0  ) 
    // _b0 
    $constant $W[konst_485_wire_constant] : $int<8> := _b00000000// 0
    // 	byte_addr := ( $call calculateAddress36 (byte_addr_base offset ) ) $buffering 1// bits of buffering = 36. 
    //  file .Aa/nic.linked.opt.aa, line 147
    // byte_addr
    $W[byte_addr_322] : $int<36>
    // 	$volatile bb := ( $slice byte_addr 2 0 )  $buffering 1
    //  file .Aa/nic.linked.opt.aa, line 148
    // bb
    $W[bb_326] : $int<3>
    // 	$volatile addr_dw := (( $slice byte_addr 35 3 )  && ($bitcast ($uint<3>) _b0  )) $buffering 1
    //  file .Aa/nic.linked.opt.aa, line 149
    // ( $slice byte_addr 35 3 ) 
    $intermediate $W[slice_329_wire] : $int<33>
    // addr_dw
    $W[addr_dw_333] : $int<36>
    // 	$volatile bmask := (_b10000000  >> ($bitcast ($uint<8>) ( $slice byte_addr 2 0 )  )) $buffering 1
    //  file .Aa/nic.linked.opt.aa, line 150
    // ( $slice byte_addr 2 0 ) 
    $intermediate $W[slice_337_wire] : $int<3>
    // ($bitcast ($uint<8>) ( $slice byte_addr 2 0 )  )
    $intermediate $W[type_cast_338_wire] : $int<8>
    // bmask
    $W[bmask_340] : $int<8>
    // 	CONCAT_u8_u64_346_346_delayed_3_0 := (wbyte && ($bitcast ($uint<56>) _b0  )) $buffering 3 $cut_through // bits of buffering = 192. 
    //  file .Aa/nic.linked.opt.aa, line 151
    // CONCAT_u8_u64_346_346_delayed_3_0
    $W[CONCAT_u8_u64_346_346_delayed_3_0_347] : $int<64>
    // 	$volatile wdata := (CONCAT_u8_u64_346_346_delayed_3_0 >> ($bitcast ($uint<64>) (bb && ($bitcast ($uint<3>) _b0  )) )) $buffering 1
    //  file .Aa/nic.linked.opt.aa, line 152
    // (bb && ($bitcast ($uint<3>) _b0  ))
    $intermediate $W[CONCAT_u3_u6_353_wire] : $int<6>
    // ($bitcast ($uint<64>) (bb && ($bitcast ($uint<3>) _b0  )) )
    $intermediate $W[type_cast_354_wire] : $int<64>
    // wdata
    $W[wdata_356] : $int<64>
    // 	CONCAT_u1_u2_357_357_delayed_3_0 := (lock && rwbar) $buffering 3 $cut_through // bits of buffering = 6. 
    //  file .Aa/nic.linked.opt.aa, line 153
    // CONCAT_u1_u2_357_357_delayed_3_0
    $W[CONCAT_u1_u2_357_357_delayed_3_0_361] : $int<2>
    // 	$volatile request := ((CONCAT_u1_u2_357_357_delayed_3_0 && bmask) && (addr_dw && wdata)) $buffering 1
    //  file .Aa/nic.linked.opt.aa, line 154
    // (CONCAT_u1_u2_357_357_delayed_3_0 && bmask)
    $intermediate $W[CONCAT_u2_u10_365_wire] : $int<10>
    // (addr_dw && wdata)
    $intermediate $W[CONCAT_u36_u100_368_wire] : $int<100>
    // request
    $W[request_370] : $int<110>
    // 	tag_365_delayed_3_0 := tag $buffering 3 $cut_through // bits of buffering = 24. 
    //  file .Aa/nic.linked.opt.aa, line 155
    // tag_365_delayed_3_0
    $W[tag_365_delayed_3_0_373] : $int<8>
    // 	$call accessMemoryBase (tag_365_delayed_3_0 request ) (response ) 
    //  file .Aa/nic.linked.opt.aa, line 156
    // response
    $W[response_377] : $int<65>
    // 	$volatile b0 := ( $slice response 63 56 )  $buffering 1
    //  file .Aa/nic.linked.opt.aa, line 157
    // b0
    $W[b0_381] : $int<8>
    // 	$volatile b1 := ( $slice response 55 48 )  $buffering 1
    //  file .Aa/nic.linked.opt.aa, line 158
    // b1
    $W[b1_385] : $int<8>
    // 	$volatile b2 := ( $slice response 47 40 )  $buffering 1
    //  file .Aa/nic.linked.opt.aa, line 159
    // b2
    $W[b2_389] : $int<8>
    // 	$volatile b3 := ( $slice response 39 32 )  $buffering 1
    //  file .Aa/nic.linked.opt.aa, line 160
    // b3
    $W[b3_393] : $int<8>
    // 	$volatile b4 := ( $slice response 31 24 )  $buffering 1
    //  file .Aa/nic.linked.opt.aa, line 161
    // b4
    $W[b4_397] : $int<8>
    // 	$volatile b5 := ( $slice response 23 16 )  $buffering 1
    //  file .Aa/nic.linked.opt.aa, line 162
    // b5
    $W[b5_401] : $int<8>
    // 	$volatile b6 := ( $slice response 15 8 )  $buffering 1
    //  file .Aa/nic.linked.opt.aa, line 163
    // b6
    $W[b6_405] : $int<8>
    // 	$volatile b7 := ( $slice response 7 0 )  $buffering 1
    //  file .Aa/nic.linked.opt.aa, line 164
    // b7
    $W[b7_409] : $int<8>
    // 	EQ_u3_u1_427_427_delayed_11_0 := (bb == 3 ) $buffering 11 $cut_through // bits of buffering = 11. 
    //  file .Aa/nic.linked.opt.aa, line 165
    // EQ_u3_u1_427_427_delayed_11_0
    $W[EQ_u3_u1_427_427_delayed_11_0_414] : $int<1>
    // 	EQ_u3_u1_408_408_delayed_11_0 := (bb == 0 ) $buffering 11 $cut_through // bits of buffering = 11. 
    //  file .Aa/nic.linked.opt.aa, line 166
    // EQ_u3_u1_408_408_delayed_11_0
    $W[EQ_u3_u1_408_408_delayed_11_0_419] : $int<1>
    // 	EQ_u3_u1_414_414_delayed_11_0 := (bb == 1 ) $buffering 11 $cut_through // bits of buffering = 11. 
    //  file .Aa/nic.linked.opt.aa, line 167
    // EQ_u3_u1_414_414_delayed_11_0
    $W[EQ_u3_u1_414_414_delayed_11_0_424] : $int<1>
    // 	EQ_u3_u1_421_421_delayed_11_0 := (bb == 2 ) $buffering 11 $cut_through // bits of buffering = 11. 
    //  file .Aa/nic.linked.opt.aa, line 168
    // EQ_u3_u1_421_421_delayed_11_0
    $W[EQ_u3_u1_421_421_delayed_11_0_429] : $int<1>
    // 	EQ_u3_u1_435_435_delayed_11_0 := (bb == 4 ) $buffering 11 $cut_through // bits of buffering = 11. 
    //  file .Aa/nic.linked.opt.aa, line 169
    // EQ_u3_u1_435_435_delayed_11_0
    $W[EQ_u3_u1_435_435_delayed_11_0_434] : $int<1>
    // 	EQ_u3_u1_441_441_delayed_11_0 := (bb == 5 ) $buffering 11 $cut_through // bits of buffering = 11. 
    //  file .Aa/nic.linked.opt.aa, line 170
    // EQ_u3_u1_441_441_delayed_11_0
    $W[EQ_u3_u1_441_441_delayed_11_0_439] : $int<1>
    // 	EQ_u3_u1_448_448_delayed_11_0 := (bb == 6 ) $buffering 11 $cut_through // bits of buffering = 11. 
    //  file .Aa/nic.linked.opt.aa, line 171
    // EQ_u3_u1_448_448_delayed_11_0
    $W[EQ_u3_u1_448_448_delayed_11_0_444] : $int<1>
    // 	EQ_u3_u1_454_454_delayed_11_0 := (bb == 7 ) $buffering 11 $cut_through // bits of buffering = 11. 
    //  file .Aa/nic.linked.opt.aa, line 172
    // EQ_u3_u1_454_454_delayed_11_0
    $W[EQ_u3_u1_454_454_delayed_11_0_449] : $int<1>
    // 	rbyte := (((( $mux EQ_u3_u1_408_408_delayed_11_0 b0  _b0  )  | ( $mux EQ_u3_u1_414_414_delayed_11_0 b1  _b0  ) ) | (( $mux EQ_u3_u1_421_421_delayed_11_0 b2  _b0  )  | ( $mux EQ_u3_u1_427_427_delayed_11_0 b3  _b0  ) )) | ((( $mux EQ_u3_u1_435_435_delayed_11_0 b4  _b0  )  | ( $mux EQ_u3_u1_441_441_delayed_11_0 b5  _b0  ) ) | (( $mux EQ_u3_u1_448_448_delayed_11_0 b6  _b0  )  | ( $mux EQ_u3_u1_454_454_delayed_11_0 b7  _b0  ) ))) $buffering 1// bits of buffering = 8. 
    //  file .Aa/nic.linked.opt.aa, line 173
    // ( $mux EQ_u3_u1_408_408_delayed_11_0 b0  _b0  ) 
    $intermediate $W[MUX_454_wire] : $int<8>
    // ( $mux EQ_u3_u1_414_414_delayed_11_0 b1  _b0  ) 
    $intermediate $W[MUX_458_wire] : $int<8>
    // (( $mux EQ_u3_u1_408_408_delayed_11_0 b0  _b0  )  | ( $mux EQ_u3_u1_414_414_delayed_11_0 b1  _b0  ) )
    $intermediate $W[OR_u8_u8_459_wire] : $int<8>
    // ( $mux EQ_u3_u1_421_421_delayed_11_0 b2  _b0  ) 
    $intermediate $W[MUX_463_wire] : $int<8>
    // ( $mux EQ_u3_u1_427_427_delayed_11_0 b3  _b0  ) 
    $intermediate $W[MUX_467_wire] : $int<8>
    // (( $mux EQ_u3_u1_421_421_delayed_11_0 b2  _b0  )  | ( $mux EQ_u3_u1_427_427_delayed_11_0 b3  _b0  ) )
    $intermediate $W[OR_u8_u8_468_wire] : $int<8>
    // ((( $mux EQ_u3_u1_408_408_delayed_11_0 b0  _b0  )  | ( $mux EQ_u3_u1_414_414_delayed_11_0 b1  _b0  ) ) | (( $mux EQ_u3_u1_421_421_delayed_11_0 b2  _b0  )  | ( $mux EQ_u3_u1_427_427_delayed_11_0 b3  _b0  ) ))
    $intermediate $W[OR_u8_u8_469_wire] : $int<8>
    // ( $mux EQ_u3_u1_435_435_delayed_11_0 b4  _b0  ) 
    $intermediate $W[MUX_473_wire] : $int<8>
    // ( $mux EQ_u3_u1_441_441_delayed_11_0 b5  _b0  ) 
    $intermediate $W[MUX_477_wire] : $int<8>
    // (( $mux EQ_u3_u1_435_435_delayed_11_0 b4  _b0  )  | ( $mux EQ_u3_u1_441_441_delayed_11_0 b5  _b0  ) )
    $intermediate $W[OR_u8_u8_478_wire] : $int<8>
    // ( $mux EQ_u3_u1_448_448_delayed_11_0 b6  _b0  ) 
    $intermediate $W[MUX_482_wire] : $int<8>
    // ( $mux EQ_u3_u1_454_454_delayed_11_0 b7  _b0  ) 
    $intermediate $W[MUX_486_wire] : $int<8>
    // (( $mux EQ_u3_u1_448_448_delayed_11_0 b6  _b0  )  | ( $mux EQ_u3_u1_454_454_delayed_11_0 b7  _b0  ) )
    $intermediate $W[OR_u8_u8_487_wire] : $int<8>
    // ((( $mux EQ_u3_u1_435_435_delayed_11_0 b4  _b0  )  | ( $mux EQ_u3_u1_441_441_delayed_11_0 b5  _b0  ) ) | (( $mux EQ_u3_u1_448_448_delayed_11_0 b6  _b0  )  | ( $mux EQ_u3_u1_454_454_delayed_11_0 b7  _b0  ) ))
    $intermediate $W[OR_u8_u8_488_wire] : $int<8>
    // rbyte
    // 	byte_addr := ( $call calculateAddress36 (byte_addr_base offset ) ) $buffering 1// bits of buffering = 36. 
    //  file .Aa/nic.linked.opt.aa, line 147
    // ( $call calculateAddress36 (byte_addr_base offset ) )
    //  file .Aa/nic.linked.opt.aa, line 147
    $call [call_calculateAddress36_expr_321_inst] $module calculateAddress36(byte_addr_base offset) (byte_addr_322)  
    $delay call_calculateAddress36_expr_321_inst 3
    $buffering  $in call_calculateAddress36_expr_321_inst byte_addr_base 1
    $buffering  $in call_calculateAddress36_expr_321_inst offset 1
    $buffering  $out call_calculateAddress36_expr_321_inst byte_addr_322 1
    // 	$volatile bb := ( $slice byte_addr 2 0 )  $buffering 1
    //  file .Aa/nic.linked.opt.aa, line 148
    // ( $slice byte_addr 2 0 ) 
    [:] [slice_325_inst] (byte_addr_322 2 0) (bb_326)  $flowthrough
    $delay slice_325_inst 0
    // 	$volatile addr_dw := (( $slice byte_addr 35 3 )  && ($bitcast ($uint<3>) _b0  )) $buffering 1
    //  file .Aa/nic.linked.opt.aa, line 149
    // ( $slice byte_addr 35 3 ) 
    [:] [slice_329_inst] (byte_addr_322 35 3) (slice_329_wire)  $flowthrough
    $delay slice_329_inst 0
    // (( $slice byte_addr 35 3 )  && ($bitcast ($uint<3>) _b0  ))
    &&[CONCAT_u33_u36_332_inst] (slice_329_wire type_cast_331_wire_constant) (addr_dw_333)   $flowthrough 
    $delay CONCAT_u33_u36_332_inst 0
    // 	$volatile bmask := (_b10000000  >> ($bitcast ($uint<8>) ( $slice byte_addr 2 0 )  )) $buffering 1
    //  file .Aa/nic.linked.opt.aa, line 150
    // ( $slice byte_addr 2 0 ) 
    [:] [slice_337_inst] (byte_addr_322 2 0) (slice_337_wire)  $flowthrough
    $delay slice_337_inst 0
    // ($bitcast ($uint<8>) ( $slice byte_addr 2 0 )  )
    # := [type_cast_338_inst] (slice_337_wire) (type_cast_338_wire)   $flowthrough
    $delay type_cast_338_inst 0
    // (_b10000000  >> ($bitcast ($uint<8>) ( $slice byte_addr 2 0 )  ))
    >>[LSHR_u8_u8_339_inst] (konst_335_wire_constant type_cast_338_wire) (bmask_340)   $flowthrough 
    $delay LSHR_u8_u8_339_inst 0
    // 	CONCAT_u8_u64_346_346_delayed_3_0 := (wbyte && ($bitcast ($uint<56>) _b0  )) $buffering 3 $cut_through // bits of buffering = 192. 
    //  file .Aa/nic.linked.opt.aa, line 151
    // (wbyte && ($bitcast ($uint<56>) _b0  ))
    &&[CONCAT_u8_u64_346_inst] (wbyte type_cast_345_wire_constant) (CONCAT_u8_u64_346_346_delayed_3_0_347)   
    $buffering  $out CONCAT_u8_u64_346_inst CONCAT_u8_u64_346_346_delayed_3_0_347 3
    $delay CONCAT_u8_u64_346_inst 1
    // 	$volatile wdata := (CONCAT_u8_u64_346_346_delayed_3_0 >> ($bitcast ($uint<64>) (bb && ($bitcast ($uint<3>) _b0  )) )) $buffering 1
    //  file .Aa/nic.linked.opt.aa, line 152
    // (bb && ($bitcast ($uint<3>) _b0  ))
    &&[CONCAT_u3_u6_353_inst] (bb_326 type_cast_352_wire_constant) (CONCAT_u3_u6_353_wire)   $flowthrough 
    $delay CONCAT_u3_u6_353_inst 0
    // ($bitcast ($uint<64>) (bb && ($bitcast ($uint<3>) _b0  )) )
    # := [type_cast_354_inst] (CONCAT_u3_u6_353_wire) (type_cast_354_wire)   $flowthrough
    $delay type_cast_354_inst 0
    // (CONCAT_u8_u64_346_346_delayed_3_0 >> ($bitcast ($uint<64>) (bb && ($bitcast ($uint<3>) _b0  )) ))
    >>[LSHR_u64_u64_355_inst] (CONCAT_u8_u64_346_346_delayed_3_0_347 type_cast_354_wire) (wdata_356)   $flowthrough 
    $delay LSHR_u64_u64_355_inst 0
    // 	CONCAT_u1_u2_357_357_delayed_3_0 := (lock && rwbar) $buffering 3 $cut_through // bits of buffering = 6. 
    //  file .Aa/nic.linked.opt.aa, line 153
    // (lock && rwbar)
    &&[CONCAT_u1_u2_360_inst] (lock rwbar) (CONCAT_u1_u2_357_357_delayed_3_0_361)   
    $buffering  $out CONCAT_u1_u2_360_inst CONCAT_u1_u2_357_357_delayed_3_0_361 3
    $delay CONCAT_u1_u2_360_inst 1
    // 	$volatile request := ((CONCAT_u1_u2_357_357_delayed_3_0 && bmask) && (addr_dw && wdata)) $buffering 1
    //  file .Aa/nic.linked.opt.aa, line 154
    // (CONCAT_u1_u2_357_357_delayed_3_0 && bmask)
    &&[CONCAT_u2_u10_365_inst] (CONCAT_u1_u2_357_357_delayed_3_0_361 bmask_340) (CONCAT_u2_u10_365_wire)   $flowthrough 
    $delay CONCAT_u2_u10_365_inst 0
    // (addr_dw && wdata)
    &&[CONCAT_u36_u100_368_inst] (addr_dw_333 wdata_356) (CONCAT_u36_u100_368_wire)   $flowthrough 
    $delay CONCAT_u36_u100_368_inst 0
    // ((CONCAT_u1_u2_357_357_delayed_3_0 && bmask) && (addr_dw && wdata))
    &&[CONCAT_u10_u110_369_inst] (CONCAT_u2_u10_365_wire CONCAT_u36_u100_368_wire) (request_370)   $flowthrough 
    $delay CONCAT_u10_u110_369_inst 0
    // 	tag_365_delayed_3_0 := tag $buffering 3 $cut_through // bits of buffering = 24. 
    //  file .Aa/nic.linked.opt.aa, line 155
    # := [W_tag_365_delayed_3_0_371_inst] (tag) (tag_365_delayed_3_0_373)  $cut_through    
    $buffering  $out W_tag_365_delayed_3_0_371_inst tag_365_delayed_3_0_373 3
    // 	$call accessMemoryBase (tag_365_delayed_3_0 request ) (response ) 
    //  file .Aa/nic.linked.opt.aa, line 156
    $call [call_stmt_377_call] $module accessMemoryBase(tag_365_delayed_3_0_373 request_370) (response_377)  
    $delay call_stmt_377_call 11
    $buffering  $in call_stmt_377_call tag_365_delayed_3_0_373 1
    $buffering  $in call_stmt_377_call request_370 1
    $buffering  $out call_stmt_377_call response_377 1
    // 	$volatile b0 := ( $slice response 63 56 )  $buffering 1
    //  file .Aa/nic.linked.opt.aa, line 157
    // ( $slice response 63 56 ) 
    [:] [slice_380_inst] (response_377 63 56) (b0_381)  $flowthrough
    $delay slice_380_inst 0
    // 	$volatile b1 := ( $slice response 55 48 )  $buffering 1
    //  file .Aa/nic.linked.opt.aa, line 158
    // ( $slice response 55 48 ) 
    [:] [slice_384_inst] (response_377 55 48) (b1_385)  $flowthrough
    $delay slice_384_inst 0
    // 	$volatile b2 := ( $slice response 47 40 )  $buffering 1
    //  file .Aa/nic.linked.opt.aa, line 159
    // ( $slice response 47 40 ) 
    [:] [slice_388_inst] (response_377 47 40) (b2_389)  $flowthrough
    $delay slice_388_inst 0
    // 	$volatile b3 := ( $slice response 39 32 )  $buffering 1
    //  file .Aa/nic.linked.opt.aa, line 160
    // ( $slice response 39 32 ) 
    [:] [slice_392_inst] (response_377 39 32) (b3_393)  $flowthrough
    $delay slice_392_inst 0
    // 	$volatile b4 := ( $slice response 31 24 )  $buffering 1
    //  file .Aa/nic.linked.opt.aa, line 161
    // ( $slice response 31 24 ) 
    [:] [slice_396_inst] (response_377 31 24) (b4_397)  $flowthrough
    $delay slice_396_inst 0
    // 	$volatile b5 := ( $slice response 23 16 )  $buffering 1
    //  file .Aa/nic.linked.opt.aa, line 162
    // ( $slice response 23 16 ) 
    [:] [slice_400_inst] (response_377 23 16) (b5_401)  $flowthrough
    $delay slice_400_inst 0
    // 	$volatile b6 := ( $slice response 15 8 )  $buffering 1
    //  file .Aa/nic.linked.opt.aa, line 163
    // ( $slice response 15 8 ) 
    [:] [slice_404_inst] (response_377 15 8) (b6_405)  $flowthrough
    $delay slice_404_inst 0
    // 	$volatile b7 := ( $slice response 7 0 )  $buffering 1
    //  file .Aa/nic.linked.opt.aa, line 164
    // ( $slice response 7 0 ) 
    [:] [slice_408_inst] (response_377 7 0) (b7_409)  $flowthrough
    $delay slice_408_inst 0
    // 	EQ_u3_u1_427_427_delayed_11_0 := (bb == 3 ) $buffering 11 $cut_through // bits of buffering = 11. 
    //  file .Aa/nic.linked.opt.aa, line 165
    // (bb == 3 )
    ==[EQ_u3_u1_413_inst] (bb_326 konst_412_wire_constant) (EQ_u3_u1_427_427_delayed_11_0_414)   
    $buffering  $out EQ_u3_u1_413_inst EQ_u3_u1_427_427_delayed_11_0_414 11
    $delay EQ_u3_u1_413_inst 1
    // 	EQ_u3_u1_408_408_delayed_11_0 := (bb == 0 ) $buffering 11 $cut_through // bits of buffering = 11. 
    //  file .Aa/nic.linked.opt.aa, line 166
    // (bb == 0 )
    ==[EQ_u3_u1_418_inst] (bb_326 konst_417_wire_constant) (EQ_u3_u1_408_408_delayed_11_0_419)   
    $buffering  $out EQ_u3_u1_418_inst EQ_u3_u1_408_408_delayed_11_0_419 11
    $delay EQ_u3_u1_418_inst 1
    // 	EQ_u3_u1_414_414_delayed_11_0 := (bb == 1 ) $buffering 11 $cut_through // bits of buffering = 11. 
    //  file .Aa/nic.linked.opt.aa, line 167
    // (bb == 1 )
    ==[EQ_u3_u1_423_inst] (bb_326 konst_422_wire_constant) (EQ_u3_u1_414_414_delayed_11_0_424)   
    $buffering  $out EQ_u3_u1_423_inst EQ_u3_u1_414_414_delayed_11_0_424 11
    $delay EQ_u3_u1_423_inst 1
    // 	EQ_u3_u1_421_421_delayed_11_0 := (bb == 2 ) $buffering 11 $cut_through // bits of buffering = 11. 
    //  file .Aa/nic.linked.opt.aa, line 168
    // (bb == 2 )
    ==[EQ_u3_u1_428_inst] (bb_326 konst_427_wire_constant) (EQ_u3_u1_421_421_delayed_11_0_429)   
    $buffering  $out EQ_u3_u1_428_inst EQ_u3_u1_421_421_delayed_11_0_429 11
    $delay EQ_u3_u1_428_inst 1
    // 	EQ_u3_u1_435_435_delayed_11_0 := (bb == 4 ) $buffering 11 $cut_through // bits of buffering = 11. 
    //  file .Aa/nic.linked.opt.aa, line 169
    // (bb == 4 )
    ==[EQ_u3_u1_433_inst] (bb_326 konst_432_wire_constant) (EQ_u3_u1_435_435_delayed_11_0_434)   
    $buffering  $out EQ_u3_u1_433_inst EQ_u3_u1_435_435_delayed_11_0_434 11
    $delay EQ_u3_u1_433_inst 1
    // 	EQ_u3_u1_441_441_delayed_11_0 := (bb == 5 ) $buffering 11 $cut_through // bits of buffering = 11. 
    //  file .Aa/nic.linked.opt.aa, line 170
    // (bb == 5 )
    ==[EQ_u3_u1_438_inst] (bb_326 konst_437_wire_constant) (EQ_u3_u1_441_441_delayed_11_0_439)   
    $buffering  $out EQ_u3_u1_438_inst EQ_u3_u1_441_441_delayed_11_0_439 11
    $delay EQ_u3_u1_438_inst 1
    // 	EQ_u3_u1_448_448_delayed_11_0 := (bb == 6 ) $buffering 11 $cut_through // bits of buffering = 11. 
    //  file .Aa/nic.linked.opt.aa, line 171
    // (bb == 6 )
    ==[EQ_u3_u1_443_inst] (bb_326 konst_442_wire_constant) (EQ_u3_u1_448_448_delayed_11_0_444)   
    $buffering  $out EQ_u3_u1_443_inst EQ_u3_u1_448_448_delayed_11_0_444 11
    $delay EQ_u3_u1_443_inst 1
    // 	EQ_u3_u1_454_454_delayed_11_0 := (bb == 7 ) $buffering 11 $cut_through // bits of buffering = 11. 
    //  file .Aa/nic.linked.opt.aa, line 172
    // (bb == 7 )
    ==[EQ_u3_u1_448_inst] (bb_326 konst_447_wire_constant) (EQ_u3_u1_454_454_delayed_11_0_449)   
    $buffering  $out EQ_u3_u1_448_inst EQ_u3_u1_454_454_delayed_11_0_449 11
    $delay EQ_u3_u1_448_inst 1
    // 	rbyte := (((( $mux EQ_u3_u1_408_408_delayed_11_0 b0  _b0  )  | ( $mux EQ_u3_u1_414_414_delayed_11_0 b1  _b0  ) ) | (( $mux EQ_u3_u1_421_421_delayed_11_0 b2  _b0  )  | ( $mux EQ_u3_u1_427_427_delayed_11_0 b3  _b0  ) )) | ((( $mux EQ_u3_u1_435_435_delayed_11_0 b4  _b0  )  | ( $mux EQ_u3_u1_441_441_delayed_11_0 b5  _b0  ) ) | (( $mux EQ_u3_u1_448_448_delayed_11_0 b6  _b0  )  | ( $mux EQ_u3_u1_454_454_delayed_11_0 b7  _b0  ) ))) $buffering 1// bits of buffering = 8. 
    //  file .Aa/nic.linked.opt.aa, line 173
    // ( $mux EQ_u3_u1_408_408_delayed_11_0 b0  _b0  ) 
    ? [MUX_454_inst] (EQ_u3_u1_408_408_delayed_11_0_419 b0_381 konst_453_wire_constant) (MUX_454_wire)  $flowthrough
    // ( $mux EQ_u3_u1_414_414_delayed_11_0 b1  _b0  ) 
    ? [MUX_458_inst] (EQ_u3_u1_414_414_delayed_11_0_424 b1_385 konst_457_wire_constant) (MUX_458_wire)  $flowthrough
    // (( $mux EQ_u3_u1_408_408_delayed_11_0 b0  _b0  )  | ( $mux EQ_u3_u1_414_414_delayed_11_0 b1  _b0  ) )
    |[OR_u8_u8_459_inst] (MUX_454_wire MUX_458_wire) (OR_u8_u8_459_wire)   $flowthrough 
    $delay OR_u8_u8_459_inst 0
    // ( $mux EQ_u3_u1_421_421_delayed_11_0 b2  _b0  ) 
    ? [MUX_463_inst] (EQ_u3_u1_421_421_delayed_11_0_429 b2_389 konst_462_wire_constant) (MUX_463_wire)  $flowthrough
    // ( $mux EQ_u3_u1_427_427_delayed_11_0 b3  _b0  ) 
    ? [MUX_467_inst] (EQ_u3_u1_427_427_delayed_11_0_414 b3_393 konst_466_wire_constant) (MUX_467_wire)  $flowthrough
    // (( $mux EQ_u3_u1_421_421_delayed_11_0 b2  _b0  )  | ( $mux EQ_u3_u1_427_427_delayed_11_0 b3  _b0  ) )
    |[OR_u8_u8_468_inst] (MUX_463_wire MUX_467_wire) (OR_u8_u8_468_wire)   $flowthrough 
    $delay OR_u8_u8_468_inst 0
    // ((( $mux EQ_u3_u1_408_408_delayed_11_0 b0  _b0  )  | ( $mux EQ_u3_u1_414_414_delayed_11_0 b1  _b0  ) ) | (( $mux EQ_u3_u1_421_421_delayed_11_0 b2  _b0  )  | ( $mux EQ_u3_u1_427_427_delayed_11_0 b3  _b0  ) ))
    |[OR_u8_u8_469_inst] (OR_u8_u8_459_wire OR_u8_u8_468_wire) (OR_u8_u8_469_wire)   $flowthrough 
    $delay OR_u8_u8_469_inst 0
    // ( $mux EQ_u3_u1_435_435_delayed_11_0 b4  _b0  ) 
    ? [MUX_473_inst] (EQ_u3_u1_435_435_delayed_11_0_434 b4_397 konst_472_wire_constant) (MUX_473_wire)  $flowthrough
    // ( $mux EQ_u3_u1_441_441_delayed_11_0 b5  _b0  ) 
    ? [MUX_477_inst] (EQ_u3_u1_441_441_delayed_11_0_439 b5_401 konst_476_wire_constant) (MUX_477_wire)  $flowthrough
    // (( $mux EQ_u3_u1_435_435_delayed_11_0 b4  _b0  )  | ( $mux EQ_u3_u1_441_441_delayed_11_0 b5  _b0  ) )
    |[OR_u8_u8_478_inst] (MUX_473_wire MUX_477_wire) (OR_u8_u8_478_wire)   $flowthrough 
    $delay OR_u8_u8_478_inst 0
    // ( $mux EQ_u3_u1_448_448_delayed_11_0 b6  _b0  ) 
    ? [MUX_482_inst] (EQ_u3_u1_448_448_delayed_11_0_444 b6_405 konst_481_wire_constant) (MUX_482_wire)  $flowthrough
    // ( $mux EQ_u3_u1_454_454_delayed_11_0 b7  _b0  ) 
    ? [MUX_486_inst] (EQ_u3_u1_454_454_delayed_11_0_449 b7_409 konst_485_wire_constant) (MUX_486_wire)  $flowthrough
    // (( $mux EQ_u3_u1_448_448_delayed_11_0 b6  _b0  )  | ( $mux EQ_u3_u1_454_454_delayed_11_0 b7  _b0  ) )
    |[OR_u8_u8_487_inst] (MUX_482_wire MUX_486_wire) (OR_u8_u8_487_wire)   $flowthrough 
    $delay OR_u8_u8_487_inst 0
    // ((( $mux EQ_u3_u1_435_435_delayed_11_0 b4  _b0  )  | ( $mux EQ_u3_u1_441_441_delayed_11_0 b5  _b0  ) ) | (( $mux EQ_u3_u1_448_448_delayed_11_0 b6  _b0  )  | ( $mux EQ_u3_u1_454_454_delayed_11_0 b7  _b0  ) ))
    |[OR_u8_u8_488_inst] (OR_u8_u8_478_wire OR_u8_u8_487_wire) (OR_u8_u8_488_wire)   $flowthrough 
    $delay OR_u8_u8_488_inst 0
    // (((( $mux EQ_u3_u1_408_408_delayed_11_0 b0  _b0  )  | ( $mux EQ_u3_u1_414_414_delayed_11_0 b1  _b0  ) ) | (( $mux EQ_u3_u1_421_421_delayed_11_0 b2  _b0  )  | ( $mux EQ_u3_u1_427_427_delayed_11_0 b3  _b0  ) )) | ((( $mux EQ_u3_u1_435_435_delayed_11_0 b4  _b0  )  | ( $mux EQ_u3_u1_441_441_delayed_11_0 b5  _b0  ) ) | (( $mux EQ_u3_u1_448_448_delayed_11_0 b6  _b0  )  | ( $mux EQ_u3_u1_454_454_delayed_11_0 b7  _b0  ) )))
    |[OR_u8_u8_489_inst] (OR_u8_u8_469_wire OR_u8_u8_488_wire) (rbyte)   
    $buffering  $out OR_u8_u8_489_inst rbyte 1
    $delay OR_u8_u8_489_inst 1
  }
  // end data-path
  // 	byte_addr := ( $call calculateAddress36 (byte_addr_base offset ) ) $buffering 1// bits of buffering = 36. 
  //  file .Aa/nic.linked.opt.aa, line 147
  // byte_addr_base
  // offset
  // ( $call calculateAddress36 (byte_addr_base offset ) )
  call_calculateAddress36_expr_321_inst <=> (assign_stmt_322_to_assign_stmt_490/call_calculateAddress36_expr_321_Sample/req assign_stmt_322_to_assign_stmt_490/call_calculateAddress36_expr_321_Update/req) (assign_stmt_322_to_assign_stmt_490/call_calculateAddress36_expr_321_Sample/ack assign_stmt_322_to_assign_stmt_490/call_calculateAddress36_expr_321_Update/ack)
  // 	$volatile bb := ( $slice byte_addr 2 0 )  $buffering 1
  //  file .Aa/nic.linked.opt.aa, line 148
  // byte_addr
  // 	$volatile addr_dw := (( $slice byte_addr 35 3 )  && ($bitcast ($uint<3>) _b0  )) $buffering 1
  //  file .Aa/nic.linked.opt.aa, line 149
  // (( $slice byte_addr 35 3 )  && ($bitcast ($uint<3>) _b0  ))
  // byte_addr
  // 	$volatile bmask := (_b10000000  >> ($bitcast ($uint<8>) ( $slice byte_addr 2 0 )  )) $buffering 1
  //  file .Aa/nic.linked.opt.aa, line 150
  // (_b10000000  >> ($bitcast ($uint<8>) ( $slice byte_addr 2 0 )  ))
  // byte_addr
  // 	CONCAT_u8_u64_346_346_delayed_3_0 := (wbyte && ($bitcast ($uint<56>) _b0  )) $buffering 3 $cut_through // bits of buffering = 192. 
  //  file .Aa/nic.linked.opt.aa, line 151
  // (wbyte && ($bitcast ($uint<56>) _b0  ))
  // wbyte
  CONCAT_u8_u64_346_inst <=> (assign_stmt_322_to_assign_stmt_490/CONCAT_u8_u64_346_Sample/rr assign_stmt_322_to_assign_stmt_490/CONCAT_u8_u64_346_Update/cr) (assign_stmt_322_to_assign_stmt_490/CONCAT_u8_u64_346_Sample/ra assign_stmt_322_to_assign_stmt_490/CONCAT_u8_u64_346_Update/ca)
  // 	$volatile wdata := (CONCAT_u8_u64_346_346_delayed_3_0 >> ($bitcast ($uint<64>) (bb && ($bitcast ($uint<3>) _b0  )) )) $buffering 1
  //  file .Aa/nic.linked.opt.aa, line 152
  // (CONCAT_u8_u64_346_346_delayed_3_0 >> ($bitcast ($uint<64>) (bb && ($bitcast ($uint<3>) _b0  )) ))
  // CONCAT_u8_u64_346_346_delayed_3_0
  // (bb && ($bitcast ($uint<3>) _b0  ))
  // bb
  // 	CONCAT_u1_u2_357_357_delayed_3_0 := (lock && rwbar) $buffering 3 $cut_through // bits of buffering = 6. 
  //  file .Aa/nic.linked.opt.aa, line 153
  // (lock && rwbar)
  // lock
  // rwbar
  CONCAT_u1_u2_360_inst <=> (assign_stmt_322_to_assign_stmt_490/CONCAT_u1_u2_360_Sample/rr assign_stmt_322_to_assign_stmt_490/CONCAT_u1_u2_360_Update/cr) (assign_stmt_322_to_assign_stmt_490/CONCAT_u1_u2_360_Sample/ra assign_stmt_322_to_assign_stmt_490/CONCAT_u1_u2_360_Update/ca)
  // 	$volatile request := ((CONCAT_u1_u2_357_357_delayed_3_0 && bmask) && (addr_dw && wdata)) $buffering 1
  //  file .Aa/nic.linked.opt.aa, line 154
  // ((CONCAT_u1_u2_357_357_delayed_3_0 && bmask) && (addr_dw && wdata))
  // (CONCAT_u1_u2_357_357_delayed_3_0 && bmask)
  // CONCAT_u1_u2_357_357_delayed_3_0
  // bmask
  // (addr_dw && wdata)
  // addr_dw
  // wdata
  // 	tag_365_delayed_3_0 := tag $buffering 3 $cut_through // bits of buffering = 24. 
  //  file .Aa/nic.linked.opt.aa, line 155
  // tag
  W_tag_365_delayed_3_0_371_inst <=> (assign_stmt_322_to_assign_stmt_490/assign_stmt_373_Sample/req assign_stmt_322_to_assign_stmt_490/assign_stmt_373_Update/req) (assign_stmt_322_to_assign_stmt_490/assign_stmt_373_Sample/ack assign_stmt_322_to_assign_stmt_490/assign_stmt_373_Update/ack)
  // 	$call accessMemoryBase (tag_365_delayed_3_0 request ) (response ) 
  //  file .Aa/nic.linked.opt.aa, line 156
  // tag_365_delayed_3_0
  // request
  call_stmt_377_call <=> (assign_stmt_322_to_assign_stmt_490/call_stmt_377_Sample/crr assign_stmt_322_to_assign_stmt_490/call_stmt_377_Update/ccr) (assign_stmt_322_to_assign_stmt_490/call_stmt_377_Sample/cra assign_stmt_322_to_assign_stmt_490/call_stmt_377_Update/cca)
  // 	$volatile b0 := ( $slice response 63 56 )  $buffering 1
  //  file .Aa/nic.linked.opt.aa, line 157
  // response
  // 	$volatile b1 := ( $slice response 55 48 )  $buffering 1
  //  file .Aa/nic.linked.opt.aa, line 158
  // response
  // 	$volatile b2 := ( $slice response 47 40 )  $buffering 1
  //  file .Aa/nic.linked.opt.aa, line 159
  // response
  // 	$volatile b3 := ( $slice response 39 32 )  $buffering 1
  //  file .Aa/nic.linked.opt.aa, line 160
  // response
  // 	$volatile b4 := ( $slice response 31 24 )  $buffering 1
  //  file .Aa/nic.linked.opt.aa, line 161
  // response
  // 	$volatile b5 := ( $slice response 23 16 )  $buffering 1
  //  file .Aa/nic.linked.opt.aa, line 162
  // response
  // 	$volatile b6 := ( $slice response 15 8 )  $buffering 1
  //  file .Aa/nic.linked.opt.aa, line 163
  // response
  // 	$volatile b7 := ( $slice response 7 0 )  $buffering 1
  //  file .Aa/nic.linked.opt.aa, line 164
  // response
  // 	EQ_u3_u1_427_427_delayed_11_0 := (bb == 3 ) $buffering 11 $cut_through // bits of buffering = 11. 
  //  file .Aa/nic.linked.opt.aa, line 165
  // (bb == 3 )
  // bb
  EQ_u3_u1_413_inst <=> (assign_stmt_322_to_assign_stmt_490/EQ_u3_u1_413_Sample/rr assign_stmt_322_to_assign_stmt_490/EQ_u3_u1_413_Update/cr) (assign_stmt_322_to_assign_stmt_490/EQ_u3_u1_413_Sample/ra assign_stmt_322_to_assign_stmt_490/EQ_u3_u1_413_Update/ca)
  // 	EQ_u3_u1_408_408_delayed_11_0 := (bb == 0 ) $buffering 11 $cut_through // bits of buffering = 11. 
  //  file .Aa/nic.linked.opt.aa, line 166
  // (bb == 0 )
  // bb
  EQ_u3_u1_418_inst <=> (assign_stmt_322_to_assign_stmt_490/EQ_u3_u1_418_Sample/rr assign_stmt_322_to_assign_stmt_490/EQ_u3_u1_418_Update/cr) (assign_stmt_322_to_assign_stmt_490/EQ_u3_u1_418_Sample/ra assign_stmt_322_to_assign_stmt_490/EQ_u3_u1_418_Update/ca)
  // 	EQ_u3_u1_414_414_delayed_11_0 := (bb == 1 ) $buffering 11 $cut_through // bits of buffering = 11. 
  //  file .Aa/nic.linked.opt.aa, line 167
  // (bb == 1 )
  // bb
  EQ_u3_u1_423_inst <=> (assign_stmt_322_to_assign_stmt_490/EQ_u3_u1_423_Sample/rr assign_stmt_322_to_assign_stmt_490/EQ_u3_u1_423_Update/cr) (assign_stmt_322_to_assign_stmt_490/EQ_u3_u1_423_Sample/ra assign_stmt_322_to_assign_stmt_490/EQ_u3_u1_423_Update/ca)
  // 	EQ_u3_u1_421_421_delayed_11_0 := (bb == 2 ) $buffering 11 $cut_through // bits of buffering = 11. 
  //  file .Aa/nic.linked.opt.aa, line 168
  // (bb == 2 )
  // bb
  EQ_u3_u1_428_inst <=> (assign_stmt_322_to_assign_stmt_490/EQ_u3_u1_428_Sample/rr assign_stmt_322_to_assign_stmt_490/EQ_u3_u1_428_Update/cr) (assign_stmt_322_to_assign_stmt_490/EQ_u3_u1_428_Sample/ra assign_stmt_322_to_assign_stmt_490/EQ_u3_u1_428_Update/ca)
  // 	EQ_u3_u1_435_435_delayed_11_0 := (bb == 4 ) $buffering 11 $cut_through // bits of buffering = 11. 
  //  file .Aa/nic.linked.opt.aa, line 169
  // (bb == 4 )
  // bb
  EQ_u3_u1_433_inst <=> (assign_stmt_322_to_assign_stmt_490/EQ_u3_u1_433_Sample/rr assign_stmt_322_to_assign_stmt_490/EQ_u3_u1_433_Update/cr) (assign_stmt_322_to_assign_stmt_490/EQ_u3_u1_433_Sample/ra assign_stmt_322_to_assign_stmt_490/EQ_u3_u1_433_Update/ca)
  // 	EQ_u3_u1_441_441_delayed_11_0 := (bb == 5 ) $buffering 11 $cut_through // bits of buffering = 11. 
  //  file .Aa/nic.linked.opt.aa, line 170
  // (bb == 5 )
  // bb
  EQ_u3_u1_438_inst <=> (assign_stmt_322_to_assign_stmt_490/EQ_u3_u1_438_Sample/rr assign_stmt_322_to_assign_stmt_490/EQ_u3_u1_438_Update/cr) (assign_stmt_322_to_assign_stmt_490/EQ_u3_u1_438_Sample/ra assign_stmt_322_to_assign_stmt_490/EQ_u3_u1_438_Update/ca)
  // 	EQ_u3_u1_448_448_delayed_11_0 := (bb == 6 ) $buffering 11 $cut_through // bits of buffering = 11. 
  //  file .Aa/nic.linked.opt.aa, line 171
  // (bb == 6 )
  // bb
  EQ_u3_u1_443_inst <=> (assign_stmt_322_to_assign_stmt_490/EQ_u3_u1_443_Sample/rr assign_stmt_322_to_assign_stmt_490/EQ_u3_u1_443_Update/cr) (assign_stmt_322_to_assign_stmt_490/EQ_u3_u1_443_Sample/ra assign_stmt_322_to_assign_stmt_490/EQ_u3_u1_443_Update/ca)
  // 	EQ_u3_u1_454_454_delayed_11_0 := (bb == 7 ) $buffering 11 $cut_through // bits of buffering = 11. 
  //  file .Aa/nic.linked.opt.aa, line 172
  // (bb == 7 )
  // bb
  EQ_u3_u1_448_inst <=> (assign_stmt_322_to_assign_stmt_490/EQ_u3_u1_448_Sample/rr assign_stmt_322_to_assign_stmt_490/EQ_u3_u1_448_Update/cr) (assign_stmt_322_to_assign_stmt_490/EQ_u3_u1_448_Sample/ra assign_stmt_322_to_assign_stmt_490/EQ_u3_u1_448_Update/ca)
  // 	rbyte := (((( $mux EQ_u3_u1_408_408_delayed_11_0 b0  _b0  )  | ( $mux EQ_u3_u1_414_414_delayed_11_0 b1  _b0  ) ) | (( $mux EQ_u3_u1_421_421_delayed_11_0 b2  _b0  )  | ( $mux EQ_u3_u1_427_427_delayed_11_0 b3  _b0  ) )) | ((( $mux EQ_u3_u1_435_435_delayed_11_0 b4  _b0  )  | ( $mux EQ_u3_u1_441_441_delayed_11_0 b5  _b0  ) ) | (( $mux EQ_u3_u1_448_448_delayed_11_0 b6  _b0  )  | ( $mux EQ_u3_u1_454_454_delayed_11_0 b7  _b0  ) ))) $buffering 1// bits of buffering = 8. 
  //  file .Aa/nic.linked.opt.aa, line 173
  // (((( $mux EQ_u3_u1_408_408_delayed_11_0 b0  _b0  )  | ( $mux EQ_u3_u1_414_414_delayed_11_0 b1  _b0  ) ) | (( $mux EQ_u3_u1_421_421_delayed_11_0 b2  _b0  )  | ( $mux EQ_u3_u1_427_427_delayed_11_0 b3  _b0  ) )) | ((( $mux EQ_u3_u1_435_435_delayed_11_0 b4  _b0  )  | ( $mux EQ_u3_u1_441_441_delayed_11_0 b5  _b0  ) ) | (( $mux EQ_u3_u1_448_448_delayed_11_0 b6  _b0  )  | ( $mux EQ_u3_u1_454_454_delayed_11_0 b7  _b0  ) )))
  // ((( $mux EQ_u3_u1_408_408_delayed_11_0 b0  _b0  )  | ( $mux EQ_u3_u1_414_414_delayed_11_0 b1  _b0  ) ) | (( $mux EQ_u3_u1_421_421_delayed_11_0 b2  _b0  )  | ( $mux EQ_u3_u1_427_427_delayed_11_0 b3  _b0  ) ))
  // (( $mux EQ_u3_u1_408_408_delayed_11_0 b0  _b0  )  | ( $mux EQ_u3_u1_414_414_delayed_11_0 b1  _b0  ) )
  // EQ_u3_u1_408_408_delayed_11_0
  // b0
  // ( $mux EQ_u3_u1_408_408_delayed_11_0 b0  _b0  ) 
  // EQ_u3_u1_414_414_delayed_11_0
  // b1
  // ( $mux EQ_u3_u1_414_414_delayed_11_0 b1  _b0  ) 
  // (( $mux EQ_u3_u1_421_421_delayed_11_0 b2  _b0  )  | ( $mux EQ_u3_u1_427_427_delayed_11_0 b3  _b0  ) )
  // EQ_u3_u1_421_421_delayed_11_0
  // b2
  // ( $mux EQ_u3_u1_421_421_delayed_11_0 b2  _b0  ) 
  // EQ_u3_u1_427_427_delayed_11_0
  // b3
  // ( $mux EQ_u3_u1_427_427_delayed_11_0 b3  _b0  ) 
  // ((( $mux EQ_u3_u1_435_435_delayed_11_0 b4  _b0  )  | ( $mux EQ_u3_u1_441_441_delayed_11_0 b5  _b0  ) ) | (( $mux EQ_u3_u1_448_448_delayed_11_0 b6  _b0  )  | ( $mux EQ_u3_u1_454_454_delayed_11_0 b7  _b0  ) ))
  // (( $mux EQ_u3_u1_435_435_delayed_11_0 b4  _b0  )  | ( $mux EQ_u3_u1_441_441_delayed_11_0 b5  _b0  ) )
  // EQ_u3_u1_435_435_delayed_11_0
  // b4
  // ( $mux EQ_u3_u1_435_435_delayed_11_0 b4  _b0  ) 
  // EQ_u3_u1_441_441_delayed_11_0
  // b5
  // ( $mux EQ_u3_u1_441_441_delayed_11_0 b5  _b0  ) 
  // (( $mux EQ_u3_u1_448_448_delayed_11_0 b6  _b0  )  | ( $mux EQ_u3_u1_454_454_delayed_11_0 b7  _b0  ) )
  // EQ_u3_u1_448_448_delayed_11_0
  // b6
  // ( $mux EQ_u3_u1_448_448_delayed_11_0 b6  _b0  ) 
  // EQ_u3_u1_454_454_delayed_11_0
  // b7
  // ( $mux EQ_u3_u1_454_454_delayed_11_0 b7  _b0  ) 
  OR_u8_u8_489_inst <=> (assign_stmt_322_to_assign_stmt_490/OR_u8_u8_489_Sample/rr assign_stmt_322_to_assign_stmt_490/OR_u8_u8_489_Update/cr) (assign_stmt_322_to_assign_stmt_490/OR_u8_u8_489_Sample/ra assign_stmt_322_to_assign_stmt_490/OR_u8_u8_489_Update/ca)
  $attribute delay => "17"
  $attribute input_buffering => "0"
  $attribute output_buffering => "0"
}
$pipeline $depth 7 $buffering 1 $module [accessMemoryWordBase] 
{
  $in tag:$int<8>
  // can point into  foreign( $void )
  lock:$int<1>
  // can point into 
  rwbar:$int<1>
  // can point into  foreign( $void )
  word_addr_base:$int<64>
  // can point into  foreign( $void )
  offset:$int<64>
  // can point into  foreign( $void )
  wword:$int<32>
  // can point into  foreign( $void )
  $out rword:$int<32>
  // can point into  foreign( $void )
  // pipe-declarations for block %accessMemoryWordBase
  //  file .Aa/nic.linked.opt.aa, line 178
  // there are no memory spaces local to this module.
  $CP 
  {
    // begin control-path 
    // pipelined module
    :|:[assign_stmt_504_to_assign_stmt_579] 
    {
      $T [tag_update_enable] 
      $scc_arc tag_update_enable => $entry
      $T [tag_update_enable_out] 
      tag_update_enable &-> (tag_update_enable_out)
      $null &-> (tag_update_enable)
      $T [lock_update_enable] 
      $scc_arc lock_update_enable => $entry
      $T [lock_update_enable_out] 
      lock_update_enable &-> (lock_update_enable_out)
      $null &-> (lock_update_enable)
      $T [rwbar_update_enable] 
      $scc_arc rwbar_update_enable => $entry
      $T [rwbar_update_enable_out] 
      rwbar_update_enable &-> (rwbar_update_enable_out)
      $null &-> (rwbar_update_enable)
      $T [word_addr_base_update_enable] 
      $scc_arc word_addr_base_update_enable => $entry
      $T [word_addr_base_update_enable_out] 
      word_addr_base_update_enable &-> (word_addr_base_update_enable_out)
      $null &-> (word_addr_base_update_enable)
      $T [offset_update_enable] 
      $scc_arc offset_update_enable => $entry
      $T [offset_update_enable_out] 
      offset_update_enable &-> (offset_update_enable_out)
      $null &-> (offset_update_enable)
      $T [wword_update_enable] 
      $scc_arc wword_update_enable => $entry
      $T [wword_update_enable_out] 
      wword_update_enable &-> (wword_update_enable_out)
      $null &-> (wword_update_enable)
      $T [rword_update_enable] 
      $T [rword_update_enable_in] 
      $null &-> (rword_update_enable)
      $null <-& (rword_update_enable_in) 
      $null &-> (rword_update_enable)
      $scc_arc $exit => rword_update_enable
      rword_update_enable <-& (rword_update_enable_in) 
      // start:  	word_addr := ( $call calculateAddress36 (word_addr_base offset ) ) $buffering 1// bits of buffering = 36. 
      //  file .Aa/nic.linked.opt.aa, line 183
      // Source expression
      // ( $call calculateAddress36 (word_addr_base offset ) )
      $T[call_calculateAddress36_expr_503_sample_start_] 
      $T[call_calculateAddress36_expr_503_sample_completed_] 
      $T[call_calculateAddress36_expr_503_update_start_] 
      $T[call_calculateAddress36_expr_503_update_completed_] 
      // word_addr_base
      // start: Forward dependencies from word_addr_base to transition call_calculateAddress36_expr_503_sample_start_
      call_calculateAddress36_expr_503_sample_start_ <-& ($entry)
      // done: Forward dependencies from word_addr_base to transition call_calculateAddress36_expr_503_sample_start_
      // RAW reenables for word_addr_base
      word_addr_base_update_enable o<-& (call_calculateAddress36_expr_503_sample_completed_ 0)
      // offset
      // start: Forward dependencies from offset to transition call_calculateAddress36_expr_503_sample_start_
      call_calculateAddress36_expr_503_sample_start_ <-& ($entry)
      // done: Forward dependencies from offset to transition call_calculateAddress36_expr_503_sample_start_
      // RAW reenables for offset
      offset_update_enable o<-& (call_calculateAddress36_expr_503_sample_completed_ 0)
      ;;[call_calculateAddress36_expr_503_Sample] 
      {
        // fn-call expression 
        $T [req] $T [ack]  // (split) fn-call binary operation 
      }
      ;;[call_calculateAddress36_expr_503_Update] 
      {
        // fn-call binary expression 
        $T [req] $T [ack] // (split) fn-call binary operation 
      }
      call_calculateAddress36_expr_503_sample_start_ &-> (call_calculateAddress36_expr_503_Sample)
      call_calculateAddress36_expr_503_sample_completed_ <-& (call_calculateAddress36_expr_503_Sample)
      call_calculateAddress36_expr_503_sample_completed_ &-> ($null)
      call_calculateAddress36_expr_503_update_start_ &-> (call_calculateAddress36_expr_503_Update)
      call_calculateAddress36_expr_503_update_completed_ <-& (call_calculateAddress36_expr_503_Update)
      // self-release: 
      call_calculateAddress36_expr_503_sample_start_ o<-& (call_calculateAddress36_expr_503_sample_completed_ 1)
      $null &-> (call_calculateAddress36_expr_503_update_start_)
      call_calculateAddress36_expr_503_update_start_ o<-& (call_calculateAddress36_expr_503_update_completed_ 0)
      // Target expression
      // (as target) word_addr
      // start: WAR dependencies for word_addr
      // done: WAR dependencies for word_addr
      // end:  	word_addr := ( $call calculateAddress36 (word_addr_base offset ) ) $buffering 1// bits of buffering = 36. 
      // start: WAR dependencies for lw
      // done: WAR dependencies for lw
      // start:  	$volatile lw := (word_addr [] 2 ) $buffering 1
      //  file .Aa/nic.linked.opt.aa, line 184
      // volatile! 
      // Source expression
      // (word_addr [] 2 )
      // word_addr
      // Target expression
      // (as target) lw
      // start: WAR dependencies for lw
      // done: WAR dependencies for lw
      // end:  	$volatile lw := (word_addr [] 2 ) $buffering 1
      // start: WAR dependencies for bmask
      // done: WAR dependencies for bmask
      // start:  	$volatile bmask := ( $mux lw ($bitcast ($uint<8>) _h0F  )  _hF0  )  $buffering 1
      //  file .Aa/nic.linked.opt.aa, line 185
      // volatile! 
      // Source expression
      // ( $mux lw ($bitcast ($uint<8>) _h0F  )  _hF0  ) 
      // lw
      // Target expression
      // (as target) bmask
      // start: WAR dependencies for bmask
      // done: WAR dependencies for bmask
      // end:  	$volatile bmask := ( $mux lw ($bitcast ($uint<8>) _h0F  )  _hF0  )  $buffering 1
      // start:  	CONCAT_u32_u64_493_493_delayed_3_0 := (($bitcast ($uint<32>) _b0  ) && wword) $buffering 3 $cut_through // bits of buffering = 192. 
      //  file .Aa/nic.linked.opt.aa, line 186
      // Source expression
      // (($bitcast ($uint<32>) _b0  ) && wword)
      $T[CONCAT_u32_u64_521_sample_start_] 
      $T[CONCAT_u32_u64_521_sample_completed_] 
      $T[CONCAT_u32_u64_521_update_start_] 
      $T[CONCAT_u32_u64_521_update_completed_] 
      // wword
      // start: Forward dependencies from wword to transition CONCAT_u32_u64_521_sample_start_
      CONCAT_u32_u64_521_sample_start_ <-& ($entry)
      // done: Forward dependencies from wword to transition CONCAT_u32_u64_521_sample_start_
      ;;[CONCAT_u32_u64_521_Sample] 
      {
        // binary expression 
        $T [rr] $T [ra]  // (split) binary operation 
      }
      ;;[CONCAT_u32_u64_521_Update] 
      {
        // binary expression 
        $T [cr] $T [ca] // (split) binary operation 
      }
      CONCAT_u32_u64_521_sample_start_ &-> (CONCAT_u32_u64_521_Sample)
      CONCAT_u32_u64_521_sample_completed_ <-& (CONCAT_u32_u64_521_Sample)
      CONCAT_u32_u64_521_sample_completed_ &-> ($null)
      CONCAT_u32_u64_521_update_start_ &-> (CONCAT_u32_u64_521_Update)
      CONCAT_u32_u64_521_update_completed_ <-& (CONCAT_u32_u64_521_Update)
      // RAW reenables for wword
      wword_update_enable o<-& (CONCAT_u32_u64_521_sample_completed_ 0)
      // self-release: 
      CONCAT_u32_u64_521_sample_start_ o<-& (CONCAT_u32_u64_521_sample_completed_ 1)
      $null &-> (CONCAT_u32_u64_521_update_start_)
      CONCAT_u32_u64_521_update_start_ o<-& (CONCAT_u32_u64_521_update_completed_ 0)
      // Target expression
      // (as target) CONCAT_u32_u64_493_493_delayed_3_0
      // start: WAR dependencies for CONCAT_u32_u64_493_493_delayed_3_0
      // done: WAR dependencies for CONCAT_u32_u64_493_493_delayed_3_0
      // end:  	CONCAT_u32_u64_493_493_delayed_3_0 := (($bitcast ($uint<32>) _b0  ) && wword) $buffering 3 $cut_through // bits of buffering = 192. 
      // start:  	CONCAT_u32_u64_497_497_delayed_3_0 := (wword && ($bitcast ($uint<32>) _b0  )) $buffering 3 $cut_through // bits of buffering = 192. 
      //  file .Aa/nic.linked.opt.aa, line 187
      // Source expression
      // (wword && ($bitcast ($uint<32>) _b0  ))
      $T[CONCAT_u32_u64_527_sample_start_] 
      $T[CONCAT_u32_u64_527_sample_completed_] 
      $T[CONCAT_u32_u64_527_update_start_] 
      $T[CONCAT_u32_u64_527_update_completed_] 
      // wword
      // start: Forward dependencies from wword to transition CONCAT_u32_u64_527_sample_start_
      CONCAT_u32_u64_527_sample_start_ <-& ($entry)
      // done: Forward dependencies from wword to transition CONCAT_u32_u64_527_sample_start_
      ;;[CONCAT_u32_u64_527_Sample] 
      {
        // binary expression 
        $T [rr] $T [ra]  // (split) binary operation 
      }
      ;;[CONCAT_u32_u64_527_Update] 
      {
        // binary expression 
        $T [cr] $T [ca] // (split) binary operation 
      }
      CONCAT_u32_u64_527_sample_start_ &-> (CONCAT_u32_u64_527_Sample)
      CONCAT_u32_u64_527_sample_completed_ <-& (CONCAT_u32_u64_527_Sample)
      CONCAT_u32_u64_527_sample_completed_ &-> ($null)
      CONCAT_u32_u64_527_update_start_ &-> (CONCAT_u32_u64_527_Update)
      CONCAT_u32_u64_527_update_completed_ <-& (CONCAT_u32_u64_527_Update)
      // RAW reenables for wword
      wword_update_enable o<-& (CONCAT_u32_u64_527_sample_completed_ 0)
      // self-release: 
      CONCAT_u32_u64_527_sample_start_ o<-& (CONCAT_u32_u64_527_sample_completed_ 1)
      $null &-> (CONCAT_u32_u64_527_update_start_)
      CONCAT_u32_u64_527_update_start_ o<-& (CONCAT_u32_u64_527_update_completed_ 0)
      // Target expression
      // (as target) CONCAT_u32_u64_497_497_delayed_3_0
      // start: WAR dependencies for CONCAT_u32_u64_497_497_delayed_3_0
      // done: WAR dependencies for CONCAT_u32_u64_497_497_delayed_3_0
      // end:  	CONCAT_u32_u64_497_497_delayed_3_0 := (wword && ($bitcast ($uint<32>) _b0  )) $buffering 3 $cut_through // bits of buffering = 192. 
      // start: WAR dependencies for wdata
      // done: WAR dependencies for wdata
      // start:  	$volatile wdata := ( $mux lw CONCAT_u32_u64_493_493_delayed_3_0  CONCAT_u32_u64_497_497_delayed_3_0 )  $buffering 1
      //  file .Aa/nic.linked.opt.aa, line 188
      // volatile! 
      // Source expression
      // ( $mux lw CONCAT_u32_u64_493_493_delayed_3_0  CONCAT_u32_u64_497_497_delayed_3_0 ) 
      // lw
      // CONCAT_u32_u64_493_493_delayed_3_0
      // CONCAT_u32_u64_497_497_delayed_3_0
      // Target expression
      // (as target) wdata
      // start: WAR dependencies for wdata
      // done: WAR dependencies for wdata
      // end:  	$volatile wdata := ( $mux lw CONCAT_u32_u64_493_493_delayed_3_0  CONCAT_u32_u64_497_497_delayed_3_0 )  $buffering 1
      // start: WAR dependencies for addr_dw
      // done: WAR dependencies for addr_dw
      // start:  	$volatile addr_dw := (( $slice word_addr 35 3 )  && ($bitcast ($uint<3>) _b0  )) $buffering 1
      //  file .Aa/nic.linked.opt.aa, line 189
      // volatile! 
      // Source expression
      // (( $slice word_addr 35 3 )  && ($bitcast ($uint<3>) _b0  ))
      // ( $slice word_addr 35 3 ) 
      // word_addr
      // Target expression
      // (as target) addr_dw
      // start: WAR dependencies for addr_dw
      // done: WAR dependencies for addr_dw
      // end:  	$volatile addr_dw := (( $slice word_addr 35 3 )  && ($bitcast ($uint<3>) _b0  )) $buffering 1
      // start:  	CONCAT_u1_u2_510_510_delayed_3_0 := (lock && rwbar) $buffering 3 $cut_through // bits of buffering = 6. 
      //  file .Aa/nic.linked.opt.aa, line 190
      // Source expression
      // (lock && rwbar)
      $T[CONCAT_u1_u2_545_sample_start_] 
      $T[CONCAT_u1_u2_545_sample_completed_] 
      $T[CONCAT_u1_u2_545_update_start_] 
      $T[CONCAT_u1_u2_545_update_completed_] 
      // lock
      // rwbar
      // start: Forward dependencies from lock to transition CONCAT_u1_u2_545_sample_start_
      CONCAT_u1_u2_545_sample_start_ <-& ($entry)
      // done: Forward dependencies from lock to transition CONCAT_u1_u2_545_sample_start_
      // start: Forward dependencies from rwbar to transition CONCAT_u1_u2_545_sample_start_
      CONCAT_u1_u2_545_sample_start_ <-& ($entry)
      // done: Forward dependencies from rwbar to transition CONCAT_u1_u2_545_sample_start_
      ;;[CONCAT_u1_u2_545_Sample] 
      {
        // binary expression 
        $T [rr] $T [ra]  // (split) binary operation 
      }
      ;;[CONCAT_u1_u2_545_Update] 
      {
        // binary expression 
        $T [cr] $T [ca] // (split) binary operation 
      }
      CONCAT_u1_u2_545_sample_start_ &-> (CONCAT_u1_u2_545_Sample)
      CONCAT_u1_u2_545_sample_completed_ <-& (CONCAT_u1_u2_545_Sample)
      CONCAT_u1_u2_545_sample_completed_ &-> ($null)
      CONCAT_u1_u2_545_update_start_ &-> (CONCAT_u1_u2_545_Update)
      CONCAT_u1_u2_545_update_completed_ <-& (CONCAT_u1_u2_545_Update)
      // RAW reenables for lock
      lock_update_enable o<-& (CONCAT_u1_u2_545_sample_completed_ 0)
      // RAW reenables for rwbar
      rwbar_update_enable o<-& (CONCAT_u1_u2_545_sample_completed_ 0)
      // self-release: 
      CONCAT_u1_u2_545_sample_start_ o<-& (CONCAT_u1_u2_545_sample_completed_ 1)
      $null &-> (CONCAT_u1_u2_545_update_start_)
      CONCAT_u1_u2_545_update_start_ o<-& (CONCAT_u1_u2_545_update_completed_ 0)
      // Target expression
      // (as target) CONCAT_u1_u2_510_510_delayed_3_0
      // start: WAR dependencies for CONCAT_u1_u2_510_510_delayed_3_0
      // done: WAR dependencies for CONCAT_u1_u2_510_510_delayed_3_0
      // end:  	CONCAT_u1_u2_510_510_delayed_3_0 := (lock && rwbar) $buffering 3 $cut_through // bits of buffering = 6. 
      // start: WAR dependencies for request
      // done: WAR dependencies for request
      // start:  	$volatile request := ((CONCAT_u1_u2_510_510_delayed_3_0 && bmask) && (addr_dw && wdata)) $buffering 1
      //  file .Aa/nic.linked.opt.aa, line 191
      // volatile! 
      // Source expression
      // ((CONCAT_u1_u2_510_510_delayed_3_0 && bmask) && (addr_dw && wdata))
      // (CONCAT_u1_u2_510_510_delayed_3_0 && bmask)
      // CONCAT_u1_u2_510_510_delayed_3_0
      // bmask
      // (addr_dw && wdata)
      // addr_dw
      // wdata
      // Target expression
      // (as target) request
      // start: WAR dependencies for request
      // done: WAR dependencies for request
      // end:  	$volatile request := ((CONCAT_u1_u2_510_510_delayed_3_0 && bmask) && (addr_dw && wdata)) $buffering 1
      // start:  	tag_518_delayed_3_0 := tag $buffering 3 $cut_through // bits of buffering = 24. 
      //  file .Aa/nic.linked.opt.aa, line 192
      $T[assign_stmt_558_sample_start_] 
      $T[assign_stmt_558_sample_completed_] 
      $T[assign_stmt_558_update_start_] 
      $T[assign_stmt_558_update_completed_] 
      // Source expression
      // tag
      // Target expression
      // (as target) tag_518_delayed_3_0
      // both source and target are implicit: use interlock 
      // Interlock 
      ;;[assign_stmt_558_Sample] 
      {
        $T [req] $T [ack] // interlock-sample.
      }
      ;;[assign_stmt_558_Update] 
      {
        $T [req] $T [ack] // interlock-update.
      }
      assign_stmt_558_sample_start_ &-> (assign_stmt_558_Sample)
      assign_stmt_558_sample_completed_ <-& (assign_stmt_558_Sample)
      assign_stmt_558_sample_completed_ &-> ($null)
      assign_stmt_558_update_start_ &-> (assign_stmt_558_Update)
      assign_stmt_558_update_completed_ <-& (assign_stmt_558_Update)
      // start: Forward dependencies from tag to transition assign_stmt_558_sample_start_
      assign_stmt_558_sample_start_ <-& ($entry)
      // done: Forward dependencies from tag to transition assign_stmt_558_sample_start_
      // RAW reenables for tag
      tag_update_enable o<-& (assign_stmt_558_sample_completed_ 0)
      // self-release: 
      assign_stmt_558_sample_start_ o<-& (assign_stmt_558_sample_completed_ 1)
      $null &-> (assign_stmt_558_update_start_)
      assign_stmt_558_update_start_ o<-& (assign_stmt_558_update_completed_ 0)
      // start: WAR dependencies for tag_518_delayed_3_0
      // done: WAR dependencies for tag_518_delayed_3_0
      // end:  	tag_518_delayed_3_0 := tag $buffering 3 $cut_through // bits of buffering = 24. 
      // start: 	$call accessMemoryBase (tag_518_delayed_3_0 request ) (response ) 
      //  file .Aa/nic.linked.opt.aa, line 193
      $T[call_stmt_562_sample_start_] 
      $T[call_stmt_562_sample_completed_] 
      $T[call_stmt_562_update_start_] 
      $T[call_stmt_562_update_completed_] 
      // Call input argument 0
      // tag_518_delayed_3_0
      // Call input argument 1
      // request
      // start: Forward dependencies from tag_518_delayed_3_0 to transition call_stmt_562_sample_start_
      call_stmt_562_sample_start_ <-& (assign_stmt_558_update_completed_)
      // done: Forward dependencies from tag_518_delayed_3_0 to transition call_stmt_562_sample_start_
      // RAW reenables for tag_518_delayed_3_0
      assign_stmt_558_update_start_ o<-& (call_stmt_562_sample_completed_ 0)
      // start: Forward dependencies from request to transition call_stmt_562_sample_start_
      call_stmt_562_sample_start_ <-& (call_calculateAddress36_expr_503_update_completed_)
      call_stmt_562_sample_start_ <-& (CONCAT_u32_u64_521_update_completed_)
      call_stmt_562_sample_start_ <-& (CONCAT_u32_u64_527_update_completed_)
      call_stmt_562_sample_start_ <-& (CONCAT_u1_u2_545_update_completed_)
      // done: Forward dependencies from request to transition call_stmt_562_sample_start_
      // RAW reenables for request
      call_calculateAddress36_expr_503_update_start_ o<-& (call_stmt_562_sample_completed_ 0)
      CONCAT_u32_u64_521_update_start_ o<-& (call_stmt_562_sample_completed_ 0)
      CONCAT_u32_u64_527_update_start_ o<-& (call_stmt_562_sample_completed_ 0)
      CONCAT_u1_u2_545_update_start_ o<-& (call_stmt_562_sample_completed_ 0)
      ;;[call_stmt_562_Sample] 
      {
        $T [crr] $T [cra] 
      }
      ;;[call_stmt_562_Update] 
      {
        $T [ccr] $T [cca] 
      }
      call_stmt_562_sample_start_ &-> (call_stmt_562_Sample)
      call_stmt_562_sample_completed_ <-& (call_stmt_562_Sample)
      call_stmt_562_sample_completed_ &-> ($null)
      call_stmt_562_update_start_ &-> (call_stmt_562_Update)
      call_stmt_562_update_completed_ <-& (call_stmt_562_Update)
      // Call output argument 0
      // (as target) response
      // self-release: 
      call_stmt_562_sample_start_ o<-& (call_stmt_562_sample_completed_ 1)
      $null &-> (call_stmt_562_update_start_)
      call_stmt_562_update_start_ o<-& (call_stmt_562_update_completed_ 0)
      // start: WAR dependencies for response
      // done: WAR dependencies for response
      // end: 	$call accessMemoryBase (tag_518_delayed_3_0 request ) (response ) 
      // start: WAR dependencies for rhw
      // done: WAR dependencies for rhw
      // start:  	$volatile rhw := ( $slice response 63 32 )  $buffering 1
      //  file .Aa/nic.linked.opt.aa, line 194
      // volatile! 
      // Source expression
      // ( $slice response 63 32 ) 
      // response
      // Target expression
      // (as target) rhw
      // start: WAR dependencies for rhw
      // done: WAR dependencies for rhw
      // end:  	$volatile rhw := ( $slice response 63 32 )  $buffering 1
      // start: WAR dependencies for rlw
      // done: WAR dependencies for rlw
      // start:  	$volatile rlw := ( $slice response 31 0 )  $buffering 1
      //  file .Aa/nic.linked.opt.aa, line 195
      // volatile! 
      // Source expression
      // ( $slice response 31 0 ) 
      // response
      // Target expression
      // (as target) rlw
      // start: WAR dependencies for rlw
      // done: WAR dependencies for rlw
      // end:  	$volatile rlw := ( $slice response 31 0 )  $buffering 1
      // start:  	lw_535_delayed_11_0 := lw $buffering 11 $cut_through // bits of buffering = 11. 
      //  file .Aa/nic.linked.opt.aa, line 196
      $T[assign_stmt_573_sample_start_] 
      $T[assign_stmt_573_sample_completed_] 
      $T[assign_stmt_573_update_start_] 
      $T[assign_stmt_573_update_completed_] 
      // Source expression
      // lw
      // Target expression
      // (as target) lw_535_delayed_11_0
      // both source and target are implicit: use interlock 
      // Interlock 
      ;;[assign_stmt_573_Sample] 
      {
        $T [req] $T [ack] // interlock-sample.
      }
      ;;[assign_stmt_573_Update] 
      {
        $T [req] $T [ack] // interlock-update.
      }
      assign_stmt_573_sample_start_ &-> (assign_stmt_573_Sample)
      assign_stmt_573_sample_completed_ <-& (assign_stmt_573_Sample)
      assign_stmt_573_sample_completed_ &-> ($null)
      assign_stmt_573_update_start_ &-> (assign_stmt_573_Update)
      assign_stmt_573_update_completed_ <-& (assign_stmt_573_Update)
      // start: Forward dependencies from lw to transition assign_stmt_573_sample_start_
      assign_stmt_573_sample_start_ <-& (call_calculateAddress36_expr_503_update_completed_)
      // done: Forward dependencies from lw to transition assign_stmt_573_sample_start_
      // RAW reenables for lw
      call_calculateAddress36_expr_503_update_start_ o<-& (assign_stmt_573_sample_completed_ 0)
      // self-release: 
      assign_stmt_573_sample_start_ o<-& (assign_stmt_573_sample_completed_ 1)
      $null &-> (assign_stmt_573_update_start_)
      assign_stmt_573_update_start_ o<-& (assign_stmt_573_update_completed_ 0)
      // start: WAR dependencies for lw_535_delayed_11_0
      // done: WAR dependencies for lw_535_delayed_11_0
      // end:  	lw_535_delayed_11_0 := lw $buffering 11 $cut_through // bits of buffering = 11. 
      // start:  	rword := ( $mux lw_535_delayed_11_0 rlw  rhw )  $buffering 1// bits of buffering = 32. 
      //  file .Aa/nic.linked.opt.aa, line 197
      // Source expression
      // ( $mux lw_535_delayed_11_0 rlw  rhw ) 
      $T[MUX_578_sample_start_] 
      $T[MUX_578_sample_completed_] 
      $T[MUX_578_update_start_] 
      $T[MUX_578_update_completed_] 
      // lw_535_delayed_11_0
      // rlw
      // rhw
      // start: Forward dependencies from lw_535_delayed_11_0 to transition MUX_578_sample_start_
      MUX_578_sample_start_ <-& (assign_stmt_573_update_completed_)
      // done: Forward dependencies from lw_535_delayed_11_0 to transition MUX_578_sample_start_
      // start: Forward dependencies from rlw to transition MUX_578_sample_start_
      MUX_578_sample_start_ <-& (call_stmt_562_update_completed_)
      // done: Forward dependencies from rlw to transition MUX_578_sample_start_
      // start: Forward dependencies from rhw to transition MUX_578_sample_start_
      MUX_578_sample_start_ <-& (call_stmt_562_update_completed_)
      // done: Forward dependencies from rhw to transition MUX_578_sample_start_
      ;;[MUX_578_start] 
      {
        // ternary expression: 
        $T [req] $T [ack] // sample req/ack
      }
      ;;[MUX_578_complete] 
      {
        // ternary expression: 
        $T [req] $T [ack] // update req/ack
      }
      MUX_578_sample_start_ &-> (MUX_578_start)
      MUX_578_sample_completed_ <-& (MUX_578_start)
      MUX_578_sample_completed_ &-> ($null)
      MUX_578_update_start_ &-> (MUX_578_complete)
      MUX_578_update_completed_ <-& (MUX_578_complete)
      // RAW reenables for lw_535_delayed_11_0
      assign_stmt_573_update_start_ o<-& (MUX_578_sample_completed_ 0)
      // RAW reenables for rlw
      call_stmt_562_update_start_ o<-& (MUX_578_sample_completed_ 0)
      // RAW reenables for rhw
      call_stmt_562_update_start_ o<-& (MUX_578_sample_completed_ 0)
      // self-release: 
      MUX_578_sample_start_ o<-& (MUX_578_sample_completed_ 1)
      $null &-> (MUX_578_update_start_)
      MUX_578_update_start_ o<-& (MUX_578_update_completed_ 0)
      // Target expression
      // (as target) rword
      // rword
      // write to interface object
      // start: WAR dependencies for rword
      // done: WAR dependencies for rword
      // rword
      // write to interface object
      MUX_578_update_start_ <-& (rword_update_enable)
      // end:  	rword := ( $mux lw_535_delayed_11_0 rlw  rhw )  $buffering 1// bits of buffering = 32. 
      // load-store dependencies..
      // pipe read/write dependencies for pipe MEMORY_TO_NIC_RESPONSE
      // read-dependencies for pipe MEMORY_TO_NIC_RESPONSE
      // write-dependencies for pipe MEMORY_TO_NIC_RESPONSE
      // signal write dependencies for MEMORY_TO_NIC_RESPONSE
      // pipe read/write dependencies for pipe NIC_DEBUG_SIGNAL
      // read-dependencies for pipe NIC_DEBUG_SIGNAL
      // write-dependencies for pipe NIC_DEBUG_SIGNAL
      // signal write dependencies for NIC_DEBUG_SIGNAL
      // pipe read/write dependencies for pipe NIC_TO_MEMORY_REQUEST
      // read-dependencies for pipe NIC_TO_MEMORY_REQUEST
      // write-dependencies for pipe NIC_TO_MEMORY_REQUEST
      // signal write dependencies for NIC_TO_MEMORY_REQUEST
    }
    ( rword_update_enable_in)
    ( tag_update_enable_out lock_update_enable_out rwbar_update_enable_out word_addr_base_update_enable_out offset_update_enable_out wword_update_enable_out)
    $P [tag_update_enable] 
    $P [lock_update_enable] 
    $P [rwbar_update_enable] 
    $P [word_addr_base_update_enable] 
    $P [offset_update_enable] 
    $P [wword_update_enable] 
    $P [rword_update_enable] 
    $bind tag_update_enable <= assign_stmt_504_to_assign_stmt_579 : tag_update_enable_out
    $bind lock_update_enable <= assign_stmt_504_to_assign_stmt_579 : lock_update_enable_out
    $bind rwbar_update_enable <= assign_stmt_504_to_assign_stmt_579 : rwbar_update_enable_out
    $bind word_addr_base_update_enable <= assign_stmt_504_to_assign_stmt_579 : word_addr_base_update_enable_out
    $bind offset_update_enable <= assign_stmt_504_to_assign_stmt_579 : offset_update_enable_out
    $bind wword_update_enable <= assign_stmt_504_to_assign_stmt_579 : wword_update_enable_out
    $bind rword_update_enable => assign_stmt_504_to_assign_stmt_579 : rword_update_enable_in
  }
  // end control-path
  $DP 
  {
    // begin data-path 
    // constant-object-declarations for block %accessMemoryWordBase
    //  file .Aa/nic.linked.opt.aa, line 178
    // ( $call calculateAddress36 (word_addr_base offset ) )
    // 2 
    $constant $W[konst_507_wire_constant] : $int<36> := _b000000000000000000000000000000000010// 2
    // ( $mux lw ($bitcast ($uint<8>) _h0F  )  _hF0  ) 
    // ($bitcast ($uint<8>) _h0F  )
    $constant $W[type_cast_513_wire_constant] : $int<8> := _b00001111// 15
    // _hF0 
    $constant $W[konst_514_wire_constant] : $int<8> := _b11110000// 240
    // ($bitcast ($uint<32>) _b0  )
    $constant $W[type_cast_519_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // ($bitcast ($uint<32>) _b0  )
    $constant $W[type_cast_526_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // ( $mux lw CONCAT_u32_u64_493_493_delayed_3_0  CONCAT_u32_u64_497_497_delayed_3_0 ) 
    // ($bitcast ($uint<3>) _b0  )
    $constant $W[type_cast_539_wire_constant] : $int<3> := _b000// 0
    // 	$call accessMemoryBase (tag_518_delayed_3_0 request ) (response ) 
    //  file .Aa/nic.linked.opt.aa, line 193
    // ( $mux lw_535_delayed_11_0 rlw  rhw ) 
    // 	word_addr := ( $call calculateAddress36 (word_addr_base offset ) ) $buffering 1// bits of buffering = 36. 
    //  file .Aa/nic.linked.opt.aa, line 183
    // word_addr
    $W[word_addr_504] : $int<36>
    // 	$volatile lw := (word_addr [] 2 ) $buffering 1
    //  file .Aa/nic.linked.opt.aa, line 184
    // lw
    $W[lw_509] : $int<1>
    // 	$volatile bmask := ( $mux lw ($bitcast ($uint<8>) _h0F  )  _hF0  )  $buffering 1
    //  file .Aa/nic.linked.opt.aa, line 185
    // bmask
    $W[bmask_516] : $int<8>
    // 	CONCAT_u32_u64_493_493_delayed_3_0 := (($bitcast ($uint<32>) _b0  ) && wword) $buffering 3 $cut_through // bits of buffering = 192. 
    //  file .Aa/nic.linked.opt.aa, line 186
    // CONCAT_u32_u64_493_493_delayed_3_0
    $W[CONCAT_u32_u64_493_493_delayed_3_0_522] : $int<64>
    // 	CONCAT_u32_u64_497_497_delayed_3_0 := (wword && ($bitcast ($uint<32>) _b0  )) $buffering 3 $cut_through // bits of buffering = 192. 
    //  file .Aa/nic.linked.opt.aa, line 187
    // CONCAT_u32_u64_497_497_delayed_3_0
    $W[CONCAT_u32_u64_497_497_delayed_3_0_528] : $int<64>
    // 	$volatile wdata := ( $mux lw CONCAT_u32_u64_493_493_delayed_3_0  CONCAT_u32_u64_497_497_delayed_3_0 )  $buffering 1
    //  file .Aa/nic.linked.opt.aa, line 188
    // wdata
    $W[wdata_534] : $int<64>
    // 	$volatile addr_dw := (( $slice word_addr 35 3 )  && ($bitcast ($uint<3>) _b0  )) $buffering 1
    //  file .Aa/nic.linked.opt.aa, line 189
    // ( $slice word_addr 35 3 ) 
    $intermediate $W[slice_537_wire] : $int<33>
    // addr_dw
    $W[addr_dw_541] : $int<36>
    // 	CONCAT_u1_u2_510_510_delayed_3_0 := (lock && rwbar) $buffering 3 $cut_through // bits of buffering = 6. 
    //  file .Aa/nic.linked.opt.aa, line 190
    // CONCAT_u1_u2_510_510_delayed_3_0
    $W[CONCAT_u1_u2_510_510_delayed_3_0_546] : $int<2>
    // 	$volatile request := ((CONCAT_u1_u2_510_510_delayed_3_0 && bmask) && (addr_dw && wdata)) $buffering 1
    //  file .Aa/nic.linked.opt.aa, line 191
    // (CONCAT_u1_u2_510_510_delayed_3_0 && bmask)
    $intermediate $W[CONCAT_u2_u10_550_wire] : $int<10>
    // (addr_dw && wdata)
    $intermediate $W[CONCAT_u36_u100_553_wire] : $int<100>
    // request
    $W[request_555] : $int<110>
    // 	tag_518_delayed_3_0 := tag $buffering 3 $cut_through // bits of buffering = 24. 
    //  file .Aa/nic.linked.opt.aa, line 192
    // tag_518_delayed_3_0
    $W[tag_518_delayed_3_0_558] : $int<8>
    // 	$call accessMemoryBase (tag_518_delayed_3_0 request ) (response ) 
    //  file .Aa/nic.linked.opt.aa, line 193
    // response
    $W[response_562] : $int<65>
    // 	$volatile rhw := ( $slice response 63 32 )  $buffering 1
    //  file .Aa/nic.linked.opt.aa, line 194
    // rhw
    $W[rhw_566] : $int<32>
    // 	$volatile rlw := ( $slice response 31 0 )  $buffering 1
    //  file .Aa/nic.linked.opt.aa, line 195
    // rlw
    $W[rlw_570] : $int<32>
    // 	lw_535_delayed_11_0 := lw $buffering 11 $cut_through // bits of buffering = 11. 
    //  file .Aa/nic.linked.opt.aa, line 196
    // lw_535_delayed_11_0
    $W[lw_535_delayed_11_0_573] : $int<1>
    // 	rword := ( $mux lw_535_delayed_11_0 rlw  rhw )  $buffering 1// bits of buffering = 32. 
    //  file .Aa/nic.linked.opt.aa, line 197
    // rword
    // 	word_addr := ( $call calculateAddress36 (word_addr_base offset ) ) $buffering 1// bits of buffering = 36. 
    //  file .Aa/nic.linked.opt.aa, line 183
    // ( $call calculateAddress36 (word_addr_base offset ) )
    //  file .Aa/nic.linked.opt.aa, line 183
    $call [call_calculateAddress36_expr_503_inst] $module calculateAddress36(word_addr_base offset) (word_addr_504)  
    $delay call_calculateAddress36_expr_503_inst 3
    $buffering  $in call_calculateAddress36_expr_503_inst word_addr_base 1
    $buffering  $in call_calculateAddress36_expr_503_inst offset 1
    $buffering  $out call_calculateAddress36_expr_503_inst word_addr_504 1
    // 	$volatile lw := (word_addr [] 2 ) $buffering 1
    //  file .Aa/nic.linked.opt.aa, line 184
    // (word_addr [] 2 )
    [][BITSEL_u36_u1_508_inst] (word_addr_504 konst_507_wire_constant) (lw_509)   $flowthrough 
    $delay BITSEL_u36_u1_508_inst 0
    // 	$volatile bmask := ( $mux lw ($bitcast ($uint<8>) _h0F  )  _hF0  )  $buffering 1
    //  file .Aa/nic.linked.opt.aa, line 185
    // ( $mux lw ($bitcast ($uint<8>) _h0F  )  _hF0  ) 
    ? [MUX_515_inst] (lw_509 type_cast_513_wire_constant konst_514_wire_constant) (bmask_516)  $flowthrough
    // 	CONCAT_u32_u64_493_493_delayed_3_0 := (($bitcast ($uint<32>) _b0  ) && wword) $buffering 3 $cut_through // bits of buffering = 192. 
    //  file .Aa/nic.linked.opt.aa, line 186
    // (($bitcast ($uint<32>) _b0  ) && wword)
    &&[CONCAT_u32_u64_521_inst] (type_cast_519_wire_constant wword) (CONCAT_u32_u64_493_493_delayed_3_0_522)   
    $buffering  $out CONCAT_u32_u64_521_inst CONCAT_u32_u64_493_493_delayed_3_0_522 3
    $delay CONCAT_u32_u64_521_inst 1
    // 	CONCAT_u32_u64_497_497_delayed_3_0 := (wword && ($bitcast ($uint<32>) _b0  )) $buffering 3 $cut_through // bits of buffering = 192. 
    //  file .Aa/nic.linked.opt.aa, line 187
    // (wword && ($bitcast ($uint<32>) _b0  ))
    &&[CONCAT_u32_u64_527_inst] (wword type_cast_526_wire_constant) (CONCAT_u32_u64_497_497_delayed_3_0_528)   
    $buffering  $out CONCAT_u32_u64_527_inst CONCAT_u32_u64_497_497_delayed_3_0_528 3
    $delay CONCAT_u32_u64_527_inst 1
    // 	$volatile wdata := ( $mux lw CONCAT_u32_u64_493_493_delayed_3_0  CONCAT_u32_u64_497_497_delayed_3_0 )  $buffering 1
    //  file .Aa/nic.linked.opt.aa, line 188
    // ( $mux lw CONCAT_u32_u64_493_493_delayed_3_0  CONCAT_u32_u64_497_497_delayed_3_0 ) 
    ? [MUX_533_inst] (lw_509 CONCAT_u32_u64_493_493_delayed_3_0_522 CONCAT_u32_u64_497_497_delayed_3_0_528) (wdata_534)  $flowthrough
    // 	$volatile addr_dw := (( $slice word_addr 35 3 )  && ($bitcast ($uint<3>) _b0  )) $buffering 1
    //  file .Aa/nic.linked.opt.aa, line 189
    // ( $slice word_addr 35 3 ) 
    [:] [slice_537_inst] (word_addr_504 35 3) (slice_537_wire)  $flowthrough
    $delay slice_537_inst 0
    // (( $slice word_addr 35 3 )  && ($bitcast ($uint<3>) _b0  ))
    &&[CONCAT_u33_u36_540_inst] (slice_537_wire type_cast_539_wire_constant) (addr_dw_541)   $flowthrough 
    $delay CONCAT_u33_u36_540_inst 0
    // 	CONCAT_u1_u2_510_510_delayed_3_0 := (lock && rwbar) $buffering 3 $cut_through // bits of buffering = 6. 
    //  file .Aa/nic.linked.opt.aa, line 190
    // (lock && rwbar)
    &&[CONCAT_u1_u2_545_inst] (lock rwbar) (CONCAT_u1_u2_510_510_delayed_3_0_546)   
    $buffering  $out CONCAT_u1_u2_545_inst CONCAT_u1_u2_510_510_delayed_3_0_546 3
    $delay CONCAT_u1_u2_545_inst 1
    // 	$volatile request := ((CONCAT_u1_u2_510_510_delayed_3_0 && bmask) && (addr_dw && wdata)) $buffering 1
    //  file .Aa/nic.linked.opt.aa, line 191
    // (CONCAT_u1_u2_510_510_delayed_3_0 && bmask)
    &&[CONCAT_u2_u10_550_inst] (CONCAT_u1_u2_510_510_delayed_3_0_546 bmask_516) (CONCAT_u2_u10_550_wire)   $flowthrough 
    $delay CONCAT_u2_u10_550_inst 0
    // (addr_dw && wdata)
    &&[CONCAT_u36_u100_553_inst] (addr_dw_541 wdata_534) (CONCAT_u36_u100_553_wire)   $flowthrough 
    $delay CONCAT_u36_u100_553_inst 0
    // ((CONCAT_u1_u2_510_510_delayed_3_0 && bmask) && (addr_dw && wdata))
    &&[CONCAT_u10_u110_554_inst] (CONCAT_u2_u10_550_wire CONCAT_u36_u100_553_wire) (request_555)   $flowthrough 
    $delay CONCAT_u10_u110_554_inst 0
    // 	tag_518_delayed_3_0 := tag $buffering 3 $cut_through // bits of buffering = 24. 
    //  file .Aa/nic.linked.opt.aa, line 192
    # := [W_tag_518_delayed_3_0_556_inst] (tag) (tag_518_delayed_3_0_558)  $cut_through    
    $buffering  $out W_tag_518_delayed_3_0_556_inst tag_518_delayed_3_0_558 3
    // 	$call accessMemoryBase (tag_518_delayed_3_0 request ) (response ) 
    //  file .Aa/nic.linked.opt.aa, line 193
    $call [call_stmt_562_call] $module accessMemoryBase(tag_518_delayed_3_0_558 request_555) (response_562)  
    $delay call_stmt_562_call 11
    $buffering  $in call_stmt_562_call tag_518_delayed_3_0_558 1
    $buffering  $in call_stmt_562_call request_555 1
    $buffering  $out call_stmt_562_call response_562 1
    // 	$volatile rhw := ( $slice response 63 32 )  $buffering 1
    //  file .Aa/nic.linked.opt.aa, line 194
    // ( $slice response 63 32 ) 
    [:] [slice_565_inst] (response_562 63 32) (rhw_566)  $flowthrough
    $delay slice_565_inst 0
    // 	$volatile rlw := ( $slice response 31 0 )  $buffering 1
    //  file .Aa/nic.linked.opt.aa, line 195
    // ( $slice response 31 0 ) 
    [:] [slice_569_inst] (response_562 31 0) (rlw_570)  $flowthrough
    $delay slice_569_inst 0
    // 	lw_535_delayed_11_0 := lw $buffering 11 $cut_through // bits of buffering = 11. 
    //  file .Aa/nic.linked.opt.aa, line 196
    # := [W_lw_535_delayed_11_0_571_inst] (lw_509) (lw_535_delayed_11_0_573)  $cut_through    
    $buffering  $out W_lw_535_delayed_11_0_571_inst lw_535_delayed_11_0_573 11
    // 	rword := ( $mux lw_535_delayed_11_0 rlw  rhw )  $buffering 1// bits of buffering = 32. 
    //  file .Aa/nic.linked.opt.aa, line 197
    // ( $mux lw_535_delayed_11_0 rlw  rhw ) 
    ? [MUX_578_inst] (lw_535_delayed_11_0_573 rlw_570 rhw_566) (rword) 
    $buffering  $out MUX_578_inst rword 1
  }
  // end data-path
  // 	word_addr := ( $call calculateAddress36 (word_addr_base offset ) ) $buffering 1// bits of buffering = 36. 
  //  file .Aa/nic.linked.opt.aa, line 183
  // word_addr_base
  // offset
  // ( $call calculateAddress36 (word_addr_base offset ) )
  call_calculateAddress36_expr_503_inst <=> (assign_stmt_504_to_assign_stmt_579/call_calculateAddress36_expr_503_Sample/req assign_stmt_504_to_assign_stmt_579/call_calculateAddress36_expr_503_Update/req) (assign_stmt_504_to_assign_stmt_579/call_calculateAddress36_expr_503_Sample/ack assign_stmt_504_to_assign_stmt_579/call_calculateAddress36_expr_503_Update/ack)
  // 	$volatile lw := (word_addr [] 2 ) $buffering 1
  //  file .Aa/nic.linked.opt.aa, line 184
  // (word_addr [] 2 )
  // word_addr
  // 	$volatile bmask := ( $mux lw ($bitcast ($uint<8>) _h0F  )  _hF0  )  $buffering 1
  //  file .Aa/nic.linked.opt.aa, line 185
  // lw
  // ( $mux lw ($bitcast ($uint<8>) _h0F  )  _hF0  ) 
  // 	CONCAT_u32_u64_493_493_delayed_3_0 := (($bitcast ($uint<32>) _b0  ) && wword) $buffering 3 $cut_through // bits of buffering = 192. 
  //  file .Aa/nic.linked.opt.aa, line 186
  // (($bitcast ($uint<32>) _b0  ) && wword)
  // wword
  CONCAT_u32_u64_521_inst <=> (assign_stmt_504_to_assign_stmt_579/CONCAT_u32_u64_521_Sample/rr assign_stmt_504_to_assign_stmt_579/CONCAT_u32_u64_521_Update/cr) (assign_stmt_504_to_assign_stmt_579/CONCAT_u32_u64_521_Sample/ra assign_stmt_504_to_assign_stmt_579/CONCAT_u32_u64_521_Update/ca)
  // 	CONCAT_u32_u64_497_497_delayed_3_0 := (wword && ($bitcast ($uint<32>) _b0  )) $buffering 3 $cut_through // bits of buffering = 192. 
  //  file .Aa/nic.linked.opt.aa, line 187
  // (wword && ($bitcast ($uint<32>) _b0  ))
  // wword
  CONCAT_u32_u64_527_inst <=> (assign_stmt_504_to_assign_stmt_579/CONCAT_u32_u64_527_Sample/rr assign_stmt_504_to_assign_stmt_579/CONCAT_u32_u64_527_Update/cr) (assign_stmt_504_to_assign_stmt_579/CONCAT_u32_u64_527_Sample/ra assign_stmt_504_to_assign_stmt_579/CONCAT_u32_u64_527_Update/ca)
  // 	$volatile wdata := ( $mux lw CONCAT_u32_u64_493_493_delayed_3_0  CONCAT_u32_u64_497_497_delayed_3_0 )  $buffering 1
  //  file .Aa/nic.linked.opt.aa, line 188
  // lw
  // CONCAT_u32_u64_493_493_delayed_3_0
  // CONCAT_u32_u64_497_497_delayed_3_0
  // ( $mux lw CONCAT_u32_u64_493_493_delayed_3_0  CONCAT_u32_u64_497_497_delayed_3_0 ) 
  // 	$volatile addr_dw := (( $slice word_addr 35 3 )  && ($bitcast ($uint<3>) _b0  )) $buffering 1
  //  file .Aa/nic.linked.opt.aa, line 189
  // (( $slice word_addr 35 3 )  && ($bitcast ($uint<3>) _b0  ))
  // word_addr
  // 	CONCAT_u1_u2_510_510_delayed_3_0 := (lock && rwbar) $buffering 3 $cut_through // bits of buffering = 6. 
  //  file .Aa/nic.linked.opt.aa, line 190
  // (lock && rwbar)
  // lock
  // rwbar
  CONCAT_u1_u2_545_inst <=> (assign_stmt_504_to_assign_stmt_579/CONCAT_u1_u2_545_Sample/rr assign_stmt_504_to_assign_stmt_579/CONCAT_u1_u2_545_Update/cr) (assign_stmt_504_to_assign_stmt_579/CONCAT_u1_u2_545_Sample/ra assign_stmt_504_to_assign_stmt_579/CONCAT_u1_u2_545_Update/ca)
  // 	$volatile request := ((CONCAT_u1_u2_510_510_delayed_3_0 && bmask) && (addr_dw && wdata)) $buffering 1
  //  file .Aa/nic.linked.opt.aa, line 191
  // ((CONCAT_u1_u2_510_510_delayed_3_0 && bmask) && (addr_dw && wdata))
  // (CONCAT_u1_u2_510_510_delayed_3_0 && bmask)
  // CONCAT_u1_u2_510_510_delayed_3_0
  // bmask
  // (addr_dw && wdata)
  // addr_dw
  // wdata
  // 	tag_518_delayed_3_0 := tag $buffering 3 $cut_through // bits of buffering = 24. 
  //  file .Aa/nic.linked.opt.aa, line 192
  // tag
  W_tag_518_delayed_3_0_556_inst <=> (assign_stmt_504_to_assign_stmt_579/assign_stmt_558_Sample/req assign_stmt_504_to_assign_stmt_579/assign_stmt_558_Update/req) (assign_stmt_504_to_assign_stmt_579/assign_stmt_558_Sample/ack assign_stmt_504_to_assign_stmt_579/assign_stmt_558_Update/ack)
  // 	$call accessMemoryBase (tag_518_delayed_3_0 request ) (response ) 
  //  file .Aa/nic.linked.opt.aa, line 193
  // tag_518_delayed_3_0
  // request
  call_stmt_562_call <=> (assign_stmt_504_to_assign_stmt_579/call_stmt_562_Sample/crr assign_stmt_504_to_assign_stmt_579/call_stmt_562_Update/ccr) (assign_stmt_504_to_assign_stmt_579/call_stmt_562_Sample/cra assign_stmt_504_to_assign_stmt_579/call_stmt_562_Update/cca)
  // 	$volatile rhw := ( $slice response 63 32 )  $buffering 1
  //  file .Aa/nic.linked.opt.aa, line 194
  // response
  // 	$volatile rlw := ( $slice response 31 0 )  $buffering 1
  //  file .Aa/nic.linked.opt.aa, line 195
  // response
  // 	lw_535_delayed_11_0 := lw $buffering 11 $cut_through // bits of buffering = 11. 
  //  file .Aa/nic.linked.opt.aa, line 196
  // lw
  W_lw_535_delayed_11_0_571_inst <=> (assign_stmt_504_to_assign_stmt_579/assign_stmt_573_Sample/req assign_stmt_504_to_assign_stmt_579/assign_stmt_573_Update/req) (assign_stmt_504_to_assign_stmt_579/assign_stmt_573_Sample/ack assign_stmt_504_to_assign_stmt_579/assign_stmt_573_Update/ack)
  // 	rword := ( $mux lw_535_delayed_11_0 rlw  rhw )  $buffering 1// bits of buffering = 32. 
  //  file .Aa/nic.linked.opt.aa, line 197
  // lw_535_delayed_11_0
  // rlw
  // rhw
  // ( $mux lw_535_delayed_11_0 rlw  rhw ) 
  MUX_578_inst <=> (assign_stmt_504_to_assign_stmt_579/MUX_578_start/req assign_stmt_504_to_assign_stmt_579/MUX_578_complete/req) (assign_stmt_504_to_assign_stmt_579/MUX_578_start/ack assign_stmt_504_to_assign_stmt_579/MUX_578_complete/ack)
  $attribute delay => "17"
  $attribute input_buffering => "0"
  $attribute output_buffering => "0"
}
$pipeline $depth 7 $buffering 1 $module [accessMemoryDwordBase] 
{
  $in tag:$int<8>
  // can point into  foreign( $void )
  lock:$int<1>
  // can point into 
  rwbar:$int<1>
  // can point into  foreign( $void )
  base_addr:$int<64>
  // can point into  foreign( $void )
  offset:$int<64>
  // can point into  foreign( $void )
  wdata:$int<64>
  // can point into  foreign( $void )
  $out rdata:$int<64>
  // can point into 
  // pipe-declarations for block %accessMemoryDwordBase
  //  file .Aa/nic.linked.opt.aa, line 202
  // there are no memory spaces local to this module.
  $CP 
  {
    // begin control-path 
    // pipelined module
    :|:[assign_stmt_593_to_assign_stmt_623] 
    {
      $T [tag_update_enable] 
      $scc_arc tag_update_enable => $entry
      $T [tag_update_enable_out] 
      tag_update_enable &-> (tag_update_enable_out)
      $null &-> (tag_update_enable)
      $T [lock_update_enable] 
      $scc_arc lock_update_enable => $entry
      $T [lock_update_enable_out] 
      lock_update_enable &-> (lock_update_enable_out)
      $null &-> (lock_update_enable)
      $T [rwbar_update_enable] 
      $scc_arc rwbar_update_enable => $entry
      $T [rwbar_update_enable_out] 
      rwbar_update_enable &-> (rwbar_update_enable_out)
      $null &-> (rwbar_update_enable)
      $T [base_addr_update_enable] 
      $scc_arc base_addr_update_enable => $entry
      $T [base_addr_update_enable_out] 
      base_addr_update_enable &-> (base_addr_update_enable_out)
      $null &-> (base_addr_update_enable)
      $T [offset_update_enable] 
      $scc_arc offset_update_enable => $entry
      $T [offset_update_enable_out] 
      offset_update_enable &-> (offset_update_enable_out)
      $null &-> (offset_update_enable)
      $T [wdata_update_enable] 
      $scc_arc wdata_update_enable => $entry
      $T [wdata_update_enable_out] 
      wdata_update_enable &-> (wdata_update_enable_out)
      $null &-> (wdata_update_enable)
      $T [rdata_update_enable] 
      $T [rdata_update_enable_in] 
      $null &-> (rdata_update_enable)
      $null <-& (rdata_update_enable_in) 
      $null &-> (rdata_update_enable)
      $scc_arc $exit => rdata_update_enable
      rdata_update_enable <-& (rdata_update_enable_in) 
      // start:  	addr := ( $call calculateAddress36 (base_addr offset ) ) $buffering 1// bits of buffering = 36. 
      //  file .Aa/nic.linked.opt.aa, line 207
      // Source expression
      // ( $call calculateAddress36 (base_addr offset ) )
      $T[call_calculateAddress36_expr_592_sample_start_] 
      $T[call_calculateAddress36_expr_592_sample_completed_] 
      $T[call_calculateAddress36_expr_592_update_start_] 
      $T[call_calculateAddress36_expr_592_update_completed_] 
      // base_addr
      // start: Forward dependencies from base_addr to transition call_calculateAddress36_expr_592_sample_start_
      call_calculateAddress36_expr_592_sample_start_ <-& ($entry)
      // done: Forward dependencies from base_addr to transition call_calculateAddress36_expr_592_sample_start_
      // RAW reenables for base_addr
      base_addr_update_enable o<-& (call_calculateAddress36_expr_592_sample_completed_ 0)
      // offset
      // start: Forward dependencies from offset to transition call_calculateAddress36_expr_592_sample_start_
      call_calculateAddress36_expr_592_sample_start_ <-& ($entry)
      // done: Forward dependencies from offset to transition call_calculateAddress36_expr_592_sample_start_
      // RAW reenables for offset
      offset_update_enable o<-& (call_calculateAddress36_expr_592_sample_completed_ 0)
      ;;[call_calculateAddress36_expr_592_Sample] 
      {
        // fn-call expression 
        $T [req] $T [ack]  // (split) fn-call binary operation 
      }
      ;;[call_calculateAddress36_expr_592_Update] 
      {
        // fn-call binary expression 
        $T [req] $T [ack] // (split) fn-call binary operation 
      }
      call_calculateAddress36_expr_592_sample_start_ &-> (call_calculateAddress36_expr_592_Sample)
      call_calculateAddress36_expr_592_sample_completed_ <-& (call_calculateAddress36_expr_592_Sample)
      call_calculateAddress36_expr_592_sample_completed_ &-> ($null)
      call_calculateAddress36_expr_592_update_start_ &-> (call_calculateAddress36_expr_592_Update)
      call_calculateAddress36_expr_592_update_completed_ <-& (call_calculateAddress36_expr_592_Update)
      // self-release: 
      call_calculateAddress36_expr_592_sample_start_ o<-& (call_calculateAddress36_expr_592_sample_completed_ 1)
      $null &-> (call_calculateAddress36_expr_592_update_start_)
      call_calculateAddress36_expr_592_update_start_ o<-& (call_calculateAddress36_expr_592_update_completed_ 0)
      // Target expression
      // (as target) addr
      // start: WAR dependencies for addr
      // done: WAR dependencies for addr
      // end:  	addr := ( $call calculateAddress36 (base_addr offset ) ) $buffering 1// bits of buffering = 36. 
      // start:  	CONCAT_u2_u10_561_561_delayed_3_0 := ((lock && rwbar) && ( ~ ($bitcast ($uint<8>) _b0  ) )) $buffering 3 $cut_through // bits of buffering = 30. 
      //  file .Aa/nic.linked.opt.aa, line 208
      // Source expression
      // ((lock && rwbar) && ( ~ ($bitcast ($uint<8>) _b0  ) ))
      $T[CONCAT_u2_u10_601_sample_start_] 
      $T[CONCAT_u2_u10_601_sample_completed_] 
      $T[CONCAT_u2_u10_601_update_start_] 
      $T[CONCAT_u2_u10_601_update_completed_] 
      // (lock && rwbar)
      // lock
      // rwbar
      // start: Forward dependencies from (lock && rwbar) to transition CONCAT_u2_u10_601_sample_start_
      CONCAT_u2_u10_601_sample_start_ <-& ($entry)
      CONCAT_u2_u10_601_sample_start_ <-& ($entry)
      // done: Forward dependencies from (lock && rwbar) to transition CONCAT_u2_u10_601_sample_start_
      ;;[CONCAT_u2_u10_601_Sample] 
      {
        // binary expression 
        $T [rr] $T [ra]  // (split) binary operation 
      }
      ;;[CONCAT_u2_u10_601_Update] 
      {
        // binary expression 
        $T [cr] $T [ca] // (split) binary operation 
      }
      CONCAT_u2_u10_601_sample_start_ &-> (CONCAT_u2_u10_601_Sample)
      CONCAT_u2_u10_601_sample_completed_ <-& (CONCAT_u2_u10_601_Sample)
      CONCAT_u2_u10_601_sample_completed_ &-> ($null)
      CONCAT_u2_u10_601_update_start_ &-> (CONCAT_u2_u10_601_Update)
      CONCAT_u2_u10_601_update_completed_ <-& (CONCAT_u2_u10_601_Update)
      // RAW reenables for (lock && rwbar)
      lock_update_enable o<-& (CONCAT_u2_u10_601_sample_completed_ 0)
      rwbar_update_enable o<-& (CONCAT_u2_u10_601_sample_completed_ 0)
      // self-release: 
      CONCAT_u2_u10_601_sample_start_ o<-& (CONCAT_u2_u10_601_sample_completed_ 1)
      $null &-> (CONCAT_u2_u10_601_update_start_)
      CONCAT_u2_u10_601_update_start_ o<-& (CONCAT_u2_u10_601_update_completed_ 0)
      // Target expression
      // (as target) CONCAT_u2_u10_561_561_delayed_3_0
      // start: WAR dependencies for CONCAT_u2_u10_561_561_delayed_3_0
      // done: WAR dependencies for CONCAT_u2_u10_561_561_delayed_3_0
      // end:  	CONCAT_u2_u10_561_561_delayed_3_0 := ((lock && rwbar) && ( ~ ($bitcast ($uint<8>) _b0  ) )) $buffering 3 $cut_through // bits of buffering = 30. 
      // start:  	wdata_563_delayed_3_0 := wdata $buffering 3 $cut_through // bits of buffering = 192. 
      //  file .Aa/nic.linked.opt.aa, line 209
      $T[assign_stmt_605_sample_start_] 
      $T[assign_stmt_605_sample_completed_] 
      $T[assign_stmt_605_update_start_] 
      $T[assign_stmt_605_update_completed_] 
      // Source expression
      // wdata
      // Target expression
      // (as target) wdata_563_delayed_3_0
      // both source and target are implicit: use interlock 
      // Interlock 
      ;;[assign_stmt_605_Sample] 
      {
        $T [req] $T [ack] // interlock-sample.
      }
      ;;[assign_stmt_605_Update] 
      {
        $T [req] $T [ack] // interlock-update.
      }
      assign_stmt_605_sample_start_ &-> (assign_stmt_605_Sample)
      assign_stmt_605_sample_completed_ <-& (assign_stmt_605_Sample)
      assign_stmt_605_sample_completed_ &-> ($null)
      assign_stmt_605_update_start_ &-> (assign_stmt_605_Update)
      assign_stmt_605_update_completed_ <-& (assign_stmt_605_Update)
      // start: Forward dependencies from wdata to transition assign_stmt_605_sample_start_
      assign_stmt_605_sample_start_ <-& ($entry)
      // done: Forward dependencies from wdata to transition assign_stmt_605_sample_start_
      // RAW reenables for wdata
      wdata_update_enable o<-& (assign_stmt_605_sample_completed_ 0)
      // self-release: 
      assign_stmt_605_sample_start_ o<-& (assign_stmt_605_sample_completed_ 1)
      $null &-> (assign_stmt_605_update_start_)
      assign_stmt_605_update_start_ o<-& (assign_stmt_605_update_completed_ 0)
      // start: WAR dependencies for wdata_563_delayed_3_0
      // done: WAR dependencies for wdata_563_delayed_3_0
      // end:  	wdata_563_delayed_3_0 := wdata $buffering 3 $cut_through // bits of buffering = 192. 
      // start: WAR dependencies for request
      // done: WAR dependencies for request
      // start:  	$volatile request := (CONCAT_u2_u10_561_561_delayed_3_0 && (addr && wdata_563_delayed_3_0)) $buffering 1
      //  file .Aa/nic.linked.opt.aa, line 210
      // volatile! 
      // Source expression
      // (CONCAT_u2_u10_561_561_delayed_3_0 && (addr && wdata_563_delayed_3_0))
      // CONCAT_u2_u10_561_561_delayed_3_0
      // (addr && wdata_563_delayed_3_0)
      // addr
      // wdata_563_delayed_3_0
      // Target expression
      // (as target) request
      // start: WAR dependencies for request
      // done: WAR dependencies for request
      // end:  	$volatile request := (CONCAT_u2_u10_561_561_delayed_3_0 && (addr && wdata_563_delayed_3_0)) $buffering 1
      // start:  	tag_567_delayed_3_0 := tag $buffering 3 $cut_through // bits of buffering = 24. 
      //  file .Aa/nic.linked.opt.aa, line 211
      $T[assign_stmt_615_sample_start_] 
      $T[assign_stmt_615_sample_completed_] 
      $T[assign_stmt_615_update_start_] 
      $T[assign_stmt_615_update_completed_] 
      // Source expression
      // tag
      // Target expression
      // (as target) tag_567_delayed_3_0
      // both source and target are implicit: use interlock 
      // Interlock 
      ;;[assign_stmt_615_Sample] 
      {
        $T [req] $T [ack] // interlock-sample.
      }
      ;;[assign_stmt_615_Update] 
      {
        $T [req] $T [ack] // interlock-update.
      }
      assign_stmt_615_sample_start_ &-> (assign_stmt_615_Sample)
      assign_stmt_615_sample_completed_ <-& (assign_stmt_615_Sample)
      assign_stmt_615_sample_completed_ &-> ($null)
      assign_stmt_615_update_start_ &-> (assign_stmt_615_Update)
      assign_stmt_615_update_completed_ <-& (assign_stmt_615_Update)
      // start: Forward dependencies from tag to transition assign_stmt_615_sample_start_
      assign_stmt_615_sample_start_ <-& ($entry)
      // done: Forward dependencies from tag to transition assign_stmt_615_sample_start_
      // RAW reenables for tag
      tag_update_enable o<-& (assign_stmt_615_sample_completed_ 0)
      // self-release: 
      assign_stmt_615_sample_start_ o<-& (assign_stmt_615_sample_completed_ 1)
      $null &-> (assign_stmt_615_update_start_)
      assign_stmt_615_update_start_ o<-& (assign_stmt_615_update_completed_ 0)
      // start: WAR dependencies for tag_567_delayed_3_0
      // done: WAR dependencies for tag_567_delayed_3_0
      // end:  	tag_567_delayed_3_0 := tag $buffering 3 $cut_through // bits of buffering = 24. 
      // start: 	$call accessMemoryBase (tag_567_delayed_3_0 request ) (response ) 
      //  file .Aa/nic.linked.opt.aa, line 212
      $T[call_stmt_619_sample_start_] 
      $T[call_stmt_619_sample_completed_] 
      $T[call_stmt_619_update_start_] 
      $T[call_stmt_619_update_completed_] 
      // Call input argument 0
      // tag_567_delayed_3_0
      // Call input argument 1
      // request
      // start: Forward dependencies from tag_567_delayed_3_0 to transition call_stmt_619_sample_start_
      call_stmt_619_sample_start_ <-& (assign_stmt_615_update_completed_)
      // done: Forward dependencies from tag_567_delayed_3_0 to transition call_stmt_619_sample_start_
      // RAW reenables for tag_567_delayed_3_0
      assign_stmt_615_update_start_ o<-& (call_stmt_619_sample_completed_ 0)
      // start: Forward dependencies from request to transition call_stmt_619_sample_start_
      call_stmt_619_sample_start_ <-& (call_calculateAddress36_expr_592_update_completed_)
      call_stmt_619_sample_start_ <-& (CONCAT_u2_u10_601_update_completed_)
      call_stmt_619_sample_start_ <-& (assign_stmt_605_update_completed_)
      // done: Forward dependencies from request to transition call_stmt_619_sample_start_
      // RAW reenables for request
      call_calculateAddress36_expr_592_update_start_ o<-& (call_stmt_619_sample_completed_ 0)
      CONCAT_u2_u10_601_update_start_ o<-& (call_stmt_619_sample_completed_ 0)
      assign_stmt_605_update_start_ o<-& (call_stmt_619_sample_completed_ 0)
      ;;[call_stmt_619_Sample] 
      {
        $T [crr] $T [cra] 
      }
      ;;[call_stmt_619_Update] 
      {
        $T [ccr] $T [cca] 
      }
      call_stmt_619_sample_start_ &-> (call_stmt_619_Sample)
      call_stmt_619_sample_completed_ <-& (call_stmt_619_Sample)
      call_stmt_619_sample_completed_ &-> ($null)
      call_stmt_619_update_start_ &-> (call_stmt_619_Update)
      call_stmt_619_update_completed_ <-& (call_stmt_619_Update)
      // Call output argument 0
      // (as target) response
      // self-release: 
      call_stmt_619_sample_start_ o<-& (call_stmt_619_sample_completed_ 1)
      $null &-> (call_stmt_619_update_start_)
      call_stmt_619_update_start_ o<-& (call_stmt_619_update_completed_ 0)
      // start: WAR dependencies for response
      // done: WAR dependencies for response
      // end: 	$call accessMemoryBase (tag_567_delayed_3_0 request ) (response ) 
      // start: WAR dependencies for rdata
      // done: WAR dependencies for rdata
      // start:  	$volatile rdata := ( $slice response 63 0 )  $buffering 1
      //  file .Aa/nic.linked.opt.aa, line 213
      // volatile! 
      // Source expression
      // ( $slice response 63 0 ) 
      // response
      // Target expression
      // (as target) rdata
      // rdata
      // write to interface object
      // start: WAR dependencies for rdata
      // done: WAR dependencies for rdata
      // rdata
      // write to interface object
      call_stmt_619_update_start_ <-& (rdata_update_enable)
      // end:  	$volatile rdata := ( $slice response 63 0 )  $buffering 1
      // load-store dependencies..
      // pipe read/write dependencies for pipe MEMORY_TO_NIC_RESPONSE
      // read-dependencies for pipe MEMORY_TO_NIC_RESPONSE
      // write-dependencies for pipe MEMORY_TO_NIC_RESPONSE
      // signal write dependencies for MEMORY_TO_NIC_RESPONSE
      // pipe read/write dependencies for pipe NIC_DEBUG_SIGNAL
      // read-dependencies for pipe NIC_DEBUG_SIGNAL
      // write-dependencies for pipe NIC_DEBUG_SIGNAL
      // signal write dependencies for NIC_DEBUG_SIGNAL
      // pipe read/write dependencies for pipe NIC_TO_MEMORY_REQUEST
      // read-dependencies for pipe NIC_TO_MEMORY_REQUEST
      // write-dependencies for pipe NIC_TO_MEMORY_REQUEST
      // signal write dependencies for NIC_TO_MEMORY_REQUEST
    }
    ( rdata_update_enable_in)
    ( tag_update_enable_out lock_update_enable_out rwbar_update_enable_out base_addr_update_enable_out offset_update_enable_out wdata_update_enable_out)
    $P [tag_update_enable] 
    $P [lock_update_enable] 
    $P [rwbar_update_enable] 
    $P [base_addr_update_enable] 
    $P [offset_update_enable] 
    $P [wdata_update_enable] 
    $P [rdata_update_enable] 
    $bind tag_update_enable <= assign_stmt_593_to_assign_stmt_623 : tag_update_enable_out
    $bind lock_update_enable <= assign_stmt_593_to_assign_stmt_623 : lock_update_enable_out
    $bind rwbar_update_enable <= assign_stmt_593_to_assign_stmt_623 : rwbar_update_enable_out
    $bind base_addr_update_enable <= assign_stmt_593_to_assign_stmt_623 : base_addr_update_enable_out
    $bind offset_update_enable <= assign_stmt_593_to_assign_stmt_623 : offset_update_enable_out
    $bind wdata_update_enable <= assign_stmt_593_to_assign_stmt_623 : wdata_update_enable_out
    $bind rdata_update_enable => assign_stmt_593_to_assign_stmt_623 : rdata_update_enable_in
  }
  // end control-path
  $DP 
  {
    // begin data-path 
    // constant-object-declarations for block %accessMemoryDwordBase
    //  file .Aa/nic.linked.opt.aa, line 202
    // ( $call calculateAddress36 (base_addr offset ) )
    // ( ~ ($bitcast ($uint<8>) _b0  ) )
    $constant $W[NOT_u8_u8_600_wire_constant] : $int<8> := _b11111111// -1
    // 	$call accessMemoryBase (tag_567_delayed_3_0 request ) (response ) 
    //  file .Aa/nic.linked.opt.aa, line 212
    // 	addr := ( $call calculateAddress36 (base_addr offset ) ) $buffering 1// bits of buffering = 36. 
    //  file .Aa/nic.linked.opt.aa, line 207
    // addr
    $W[addr_593] : $int<36>
    // 	CONCAT_u2_u10_561_561_delayed_3_0 := ((lock && rwbar) && ( ~ ($bitcast ($uint<8>) _b0  ) )) $buffering 3 $cut_through // bits of buffering = 30. 
    //  file .Aa/nic.linked.opt.aa, line 208
    // (lock && rwbar)
    $intermediate $W[CONCAT_u1_u2_597_wire] : $int<2>
    // CONCAT_u2_u10_561_561_delayed_3_0
    $W[CONCAT_u2_u10_561_561_delayed_3_0_602] : $int<10>
    // 	wdata_563_delayed_3_0 := wdata $buffering 3 $cut_through // bits of buffering = 192. 
    //  file .Aa/nic.linked.opt.aa, line 209
    // wdata_563_delayed_3_0
    $W[wdata_563_delayed_3_0_605] : $int<64>
    // 	$volatile request := (CONCAT_u2_u10_561_561_delayed_3_0 && (addr && wdata_563_delayed_3_0)) $buffering 1
    //  file .Aa/nic.linked.opt.aa, line 210
    // (addr && wdata_563_delayed_3_0)
    $intermediate $W[CONCAT_u36_u100_610_wire] : $int<100>
    // request
    $W[request_612] : $int<110>
    // 	tag_567_delayed_3_0 := tag $buffering 3 $cut_through // bits of buffering = 24. 
    //  file .Aa/nic.linked.opt.aa, line 211
    // tag_567_delayed_3_0
    $W[tag_567_delayed_3_0_615] : $int<8>
    // 	$call accessMemoryBase (tag_567_delayed_3_0 request ) (response ) 
    //  file .Aa/nic.linked.opt.aa, line 212
    // response
    $W[response_619] : $int<65>
    // 	$volatile rdata := ( $slice response 63 0 )  $buffering 1
    //  file .Aa/nic.linked.opt.aa, line 213
    // rdata
    // 	addr := ( $call calculateAddress36 (base_addr offset ) ) $buffering 1// bits of buffering = 36. 
    //  file .Aa/nic.linked.opt.aa, line 207
    // ( $call calculateAddress36 (base_addr offset ) )
    //  file .Aa/nic.linked.opt.aa, line 207
    $call [call_calculateAddress36_expr_592_inst] $module calculateAddress36(base_addr offset) (addr_593)  
    $delay call_calculateAddress36_expr_592_inst 3
    $buffering  $in call_calculateAddress36_expr_592_inst base_addr 1
    $buffering  $in call_calculateAddress36_expr_592_inst offset 1
    $buffering  $out call_calculateAddress36_expr_592_inst addr_593 1
    // 	CONCAT_u2_u10_561_561_delayed_3_0 := ((lock && rwbar) && ( ~ ($bitcast ($uint<8>) _b0  ) )) $buffering 3 $cut_through // bits of buffering = 30. 
    //  file .Aa/nic.linked.opt.aa, line 208
    // (lock && rwbar)
    &&[CONCAT_u1_u2_597_inst] (lock rwbar) (CONCAT_u1_u2_597_wire)   $flowthrough 
    $delay CONCAT_u1_u2_597_inst 0
    // ((lock && rwbar) && ( ~ ($bitcast ($uint<8>) _b0  ) ))
    &&[CONCAT_u2_u10_601_inst] (CONCAT_u1_u2_597_wire NOT_u8_u8_600_wire_constant) (CONCAT_u2_u10_561_561_delayed_3_0_602)   
    $buffering  $out CONCAT_u2_u10_601_inst CONCAT_u2_u10_561_561_delayed_3_0_602 3
    $delay CONCAT_u2_u10_601_inst 1
    // 	wdata_563_delayed_3_0 := wdata $buffering 3 $cut_through // bits of buffering = 192. 
    //  file .Aa/nic.linked.opt.aa, line 209
    # := [W_wdata_563_delayed_3_0_603_inst] (wdata) (wdata_563_delayed_3_0_605)  $cut_through    
    $buffering  $out W_wdata_563_delayed_3_0_603_inst wdata_563_delayed_3_0_605 3
    // 	$volatile request := (CONCAT_u2_u10_561_561_delayed_3_0 && (addr && wdata_563_delayed_3_0)) $buffering 1
    //  file .Aa/nic.linked.opt.aa, line 210
    // (addr && wdata_563_delayed_3_0)
    &&[CONCAT_u36_u100_610_inst] (addr_593 wdata_563_delayed_3_0_605) (CONCAT_u36_u100_610_wire)   $flowthrough 
    $delay CONCAT_u36_u100_610_inst 0
    // (CONCAT_u2_u10_561_561_delayed_3_0 && (addr && wdata_563_delayed_3_0))
    &&[CONCAT_u10_u110_611_inst] (CONCAT_u2_u10_561_561_delayed_3_0_602 CONCAT_u36_u100_610_wire) (request_612)   $flowthrough 
    $delay CONCAT_u10_u110_611_inst 0
    // 	tag_567_delayed_3_0 := tag $buffering 3 $cut_through // bits of buffering = 24. 
    //  file .Aa/nic.linked.opt.aa, line 211
    # := [W_tag_567_delayed_3_0_613_inst] (tag) (tag_567_delayed_3_0_615)  $cut_through    
    $buffering  $out W_tag_567_delayed_3_0_613_inst tag_567_delayed_3_0_615 3
    // 	$call accessMemoryBase (tag_567_delayed_3_0 request ) (response ) 
    //  file .Aa/nic.linked.opt.aa, line 212
    $call [call_stmt_619_call] $module accessMemoryBase(tag_567_delayed_3_0_615 request_612) (response_619)  
    $delay call_stmt_619_call 11
    $buffering  $in call_stmt_619_call tag_567_delayed_3_0_615 1
    $buffering  $in call_stmt_619_call request_612 1
    $buffering  $out call_stmt_619_call response_619 1
    // 	$volatile rdata := ( $slice response 63 0 )  $buffering 1
    //  file .Aa/nic.linked.opt.aa, line 213
    // ( $slice response 63 0 ) 
    [:] [slice_622_inst] (response_619 63 0) (rdata)  $flowthrough
    $delay slice_622_inst 0
  }
  // end data-path
  // 	addr := ( $call calculateAddress36 (base_addr offset ) ) $buffering 1// bits of buffering = 36. 
  //  file .Aa/nic.linked.opt.aa, line 207
  // base_addr
  // offset
  // ( $call calculateAddress36 (base_addr offset ) )
  call_calculateAddress36_expr_592_inst <=> (assign_stmt_593_to_assign_stmt_623/call_calculateAddress36_expr_592_Sample/req assign_stmt_593_to_assign_stmt_623/call_calculateAddress36_expr_592_Update/req) (assign_stmt_593_to_assign_stmt_623/call_calculateAddress36_expr_592_Sample/ack assign_stmt_593_to_assign_stmt_623/call_calculateAddress36_expr_592_Update/ack)
  // 	CONCAT_u2_u10_561_561_delayed_3_0 := ((lock && rwbar) && ( ~ ($bitcast ($uint<8>) _b0  ) )) $buffering 3 $cut_through // bits of buffering = 30. 
  //  file .Aa/nic.linked.opt.aa, line 208
  // ((lock && rwbar) && ( ~ ($bitcast ($uint<8>) _b0  ) ))
  // (lock && rwbar)
  // lock
  // rwbar
  CONCAT_u2_u10_601_inst <=> (assign_stmt_593_to_assign_stmt_623/CONCAT_u2_u10_601_Sample/rr assign_stmt_593_to_assign_stmt_623/CONCAT_u2_u10_601_Update/cr) (assign_stmt_593_to_assign_stmt_623/CONCAT_u2_u10_601_Sample/ra assign_stmt_593_to_assign_stmt_623/CONCAT_u2_u10_601_Update/ca)
  // 	wdata_563_delayed_3_0 := wdata $buffering 3 $cut_through // bits of buffering = 192. 
  //  file .Aa/nic.linked.opt.aa, line 209
  // wdata
  W_wdata_563_delayed_3_0_603_inst <=> (assign_stmt_593_to_assign_stmt_623/assign_stmt_605_Sample/req assign_stmt_593_to_assign_stmt_623/assign_stmt_605_Update/req) (assign_stmt_593_to_assign_stmt_623/assign_stmt_605_Sample/ack assign_stmt_593_to_assign_stmt_623/assign_stmt_605_Update/ack)
  // 	$volatile request := (CONCAT_u2_u10_561_561_delayed_3_0 && (addr && wdata_563_delayed_3_0)) $buffering 1
  //  file .Aa/nic.linked.opt.aa, line 210
  // (CONCAT_u2_u10_561_561_delayed_3_0 && (addr && wdata_563_delayed_3_0))
  // CONCAT_u2_u10_561_561_delayed_3_0
  // (addr && wdata_563_delayed_3_0)
  // addr
  // wdata_563_delayed_3_0
  // 	tag_567_delayed_3_0 := tag $buffering 3 $cut_through // bits of buffering = 24. 
  //  file .Aa/nic.linked.opt.aa, line 211
  // tag
  W_tag_567_delayed_3_0_613_inst <=> (assign_stmt_593_to_assign_stmt_623/assign_stmt_615_Sample/req assign_stmt_593_to_assign_stmt_623/assign_stmt_615_Update/req) (assign_stmt_593_to_assign_stmt_623/assign_stmt_615_Sample/ack assign_stmt_593_to_assign_stmt_623/assign_stmt_615_Update/ack)
  // 	$call accessMemoryBase (tag_567_delayed_3_0 request ) (response ) 
  //  file .Aa/nic.linked.opt.aa, line 212
  // tag_567_delayed_3_0
  // request
  call_stmt_619_call <=> (assign_stmt_593_to_assign_stmt_623/call_stmt_619_Sample/crr assign_stmt_593_to_assign_stmt_623/call_stmt_619_Update/ccr) (assign_stmt_593_to_assign_stmt_623/call_stmt_619_Sample/cra assign_stmt_593_to_assign_stmt_623/call_stmt_619_Update/cca)
  // 	$volatile rdata := ( $slice response 63 0 )  $buffering 1
  //  file .Aa/nic.linked.opt.aa, line 213
  // response
  $attribute delay => "16"
  $attribute input_buffering => "0"
  $attribute output_buffering => "0"
}
$pipeline $depth 15 $buffering 1 $fullrate $module [doMemAccess] 
{
  $in tag:$int<8>
  // can point into  foreign( $void )
  opcode:$int<3>
  // can point into  foreign( $void )
  base_addr:$int<64>
  // can point into  foreign( $void )
  offset:$int<64>
  // can point into  foreign( $void )
  wdata:$int<64>
  // can point into  foreign( $void )
  $out rdata:$int<64>
  // can point into  foreign( $void )
  // pipe-declarations for block %doMemAccess
  //  file .Aa/nic.linked.opt.aa, line 218
  // there are no memory spaces local to this module.
  $CP 
  {
    // begin control-path 
    // pipelined module
    :|:[assign_stmt_640_to_assign_stmt_825] 
    {
      $T [tag_update_enable] 
      $scc_arc tag_update_enable => $entry
      $T [tag_update_enable_out] 
      tag_update_enable &-> (tag_update_enable_out)
      $null &-> (tag_update_enable)
      $T [opcode_update_enable] 
      $scc_arc opcode_update_enable => $entry
      $T [opcode_update_enable_out] 
      opcode_update_enable &-> (opcode_update_enable_out)
      $null &-> (opcode_update_enable)
      $T [base_addr_update_enable] 
      $scc_arc base_addr_update_enable => $entry
      $T [base_addr_update_enable_out] 
      base_addr_update_enable &-> (base_addr_update_enable_out)
      $null &-> (base_addr_update_enable)
      $T [offset_update_enable] 
      $scc_arc offset_update_enable => $entry
      $T [offset_update_enable_out] 
      offset_update_enable &-> (offset_update_enable_out)
      $null &-> (offset_update_enable)
      $T [wdata_update_enable] 
      $scc_arc wdata_update_enable => $entry
      $T [wdata_update_enable_out] 
      wdata_update_enable &-> (wdata_update_enable_out)
      $null &-> (wdata_update_enable)
      $T [rdata_update_enable] 
      $T [rdata_update_enable_in] 
      $null &-> (rdata_update_enable)
      $null <-& (rdata_update_enable_in) 
      $null &-> (rdata_update_enable)
      $scc_arc $exit => rdata_update_enable
      rdata_update_enable <-& (rdata_update_enable_in) 
      // start: WAR dependencies for is_byte_access
      // done: WAR dependencies for is_byte_access
      // start:  	$volatile is_byte_access := ((opcode == STB) | (opcode == LDB)) $buffering 1
      //  file .Aa/nic.linked.opt.aa, line 223
      // volatile! 
      // Source expression
      // ((opcode == STB) | (opcode == LDB))
      // (opcode == STB)
      // opcode
      // (opcode == LDB)
      // opcode
      // Target expression
      // (as target) is_byte_access
      // start: WAR dependencies for is_byte_access
      // done: WAR dependencies for is_byte_access
      // end:  	$volatile is_byte_access := ((opcode == STB) | (opcode == LDB)) $buffering 1
      // start: WAR dependencies for is_word_access
      // done: WAR dependencies for is_word_access
      // start:  	$volatile is_word_access := ((opcode == ST) | (opcode == LD)) $buffering 1
      //  file .Aa/nic.linked.opt.aa, line 224
      // volatile! 
      // Source expression
      // ((opcode == ST) | (opcode == LD))
      // (opcode == ST)
      // opcode
      // (opcode == LD)
      // opcode
      // Target expression
      // (as target) is_word_access
      // start: WAR dependencies for is_word_access
      // done: WAR dependencies for is_word_access
      // end:  	$volatile is_word_access := ((opcode == ST) | (opcode == LD)) $buffering 1
      // start: WAR dependencies for is_dword_access
      // done: WAR dependencies for is_dword_access
      // start:  	$volatile is_dword_access := ((opcode == STD) | (opcode == LDD)) $buffering 1
      //  file .Aa/nic.linked.opt.aa, line 225
      // volatile! 
      // Source expression
      // ((opcode == STD) | (opcode == LDD))
      // (opcode == STD)
      // opcode
      // (opcode == LDD)
      // opcode
      // Target expression
      // (as target) is_dword_access
      // start: WAR dependencies for is_dword_access
      // done: WAR dependencies for is_dword_access
      // end:  	$volatile is_dword_access := ((opcode == STD) | (opcode == LDD)) $buffering 1
      // start: WAR dependencies for is_write
      // done: WAR dependencies for is_write
      // start:  	$volatile is_write := (((opcode == STB) | (opcode == ST)) | (opcode == STD)) $buffering 1
      //  file .Aa/nic.linked.opt.aa, line 226
      // volatile! 
      // Source expression
      // (((opcode == STB) | (opcode == ST)) | (opcode == STD))
      // ((opcode == STB) | (opcode == ST))
      // (opcode == STB)
      // opcode
      // (opcode == ST)
      // opcode
      // (opcode == STD)
      // opcode
      // Target expression
      // (as target) is_write
      // start: WAR dependencies for is_write
      // done: WAR dependencies for is_write
      // end:  	$volatile is_write := (((opcode == STB) | (opcode == ST)) | (opcode == STD)) $buffering 1
      // start: WAR dependencies for is_ldstub
      // done: WAR dependencies for is_ldstub
      // start:  	$volatile is_ldstub := (opcode == LDSTUB) $buffering 1
      //  file .Aa/nic.linked.opt.aa, line 227
      // volatile! 
      // Source expression
      // (opcode == LDSTUB)
      // opcode
      // Target expression
      // (as target) is_ldstub
      // start: WAR dependencies for is_ldstub
      // done: WAR dependencies for is_ldstub
      // end:  	$volatile is_ldstub := (opcode == LDSTUB) $buffering 1
      // start: WAR dependencies for w_byte
      // done: WAR dependencies for w_byte
      // start:  	$volatile w_byte := ( $slice wdata 7 0 )  $buffering 1
      //  file .Aa/nic.linked.opt.aa, line 228
      // volatile! 
      // Source expression
      // ( $slice wdata 7 0 ) 
      // wdata
      // Target expression
      // (as target) w_byte
      // start: WAR dependencies for w_byte
      // done: WAR dependencies for w_byte
      // end:  	$volatile w_byte := ( $slice wdata 7 0 )  $buffering 1
      // start: WAR dependencies for w_word
      // done: WAR dependencies for w_word
      // start:  	$volatile w_word := ( $slice wdata 31 0 )  $buffering 1
      //  file .Aa/nic.linked.opt.aa, line 229
      // volatile! 
      // Source expression
      // ( $slice wdata 31 0 ) 
      // wdata
      // Target expression
      // (as target) w_word
      // start: WAR dependencies for w_word
      // done: WAR dependencies for w_word
      // end:  	$volatile w_word := ( $slice wdata 31 0 )  $buffering 1
      // start: WAR dependencies for w_dword
      // done: WAR dependencies for w_dword
      // start:  	$volatile w_dword := wdata $buffering 1
      //  file .Aa/nic.linked.opt.aa, line 230
      // volatile! 
      // Source expression
      // wdata
      // Target expression
      // (as target) w_dword
      // start: WAR dependencies for w_dword
      // done: WAR dependencies for w_dword
      // end:  	$volatile w_dword := wdata $buffering 1
      // start: WAR dependencies for do_first_byte
      // done: WAR dependencies for do_first_byte
      // start:  	$volatile do_first_byte := (is_ldstub | is_byte_access) $buffering 1
      //  file .Aa/nic.linked.opt.aa, line 231
      // volatile! 
      // Source expression
      // (is_ldstub | is_byte_access)
      // is_ldstub
      // is_byte_access
      // Target expression
      // (as target) do_first_byte
      // start: WAR dependencies for do_first_byte
      // done: WAR dependencies for do_first_byte
      // end:  	$volatile do_first_byte := (is_ldstub | is_byte_access) $buffering 1
      // start: WAR dependencies for first_byte_rwbar
      // done: WAR dependencies for first_byte_rwbar
      // start:  	$volatile first_byte_rwbar := ( $mux is_write WRITEMEM  READMEM )  $buffering 1
      //  file .Aa/nic.linked.opt.aa, line 232
      // volatile! 
      // Source expression
      // ( $mux is_write WRITEMEM  READMEM ) 
      // is_write
      // Target expression
      // (as target) first_byte_rwbar
      // start: WAR dependencies for first_byte_rwbar
      // done: WAR dependencies for first_byte_rwbar
      // end:  	$volatile first_byte_rwbar := ( $mux is_write WRITEMEM  READMEM )  $buffering 1
      // start: WAR dependencies for first_byte_lock
      // done: WAR dependencies for first_byte_lock
      // start:  	$volatile first_byte_lock := ( $mux is_ldstub LOCKMEM  UNLOCKMEM )  $buffering 1
      //  file .Aa/nic.linked.opt.aa, line 233
      // volatile! 
      // Source expression
      // ( $mux is_ldstub LOCKMEM  UNLOCKMEM ) 
      // is_ldstub
      // Target expression
      // (as target) first_byte_lock
      // start: WAR dependencies for first_byte_lock
      // done: WAR dependencies for first_byte_lock
      // end:  	$volatile first_byte_lock := ( $mux is_ldstub LOCKMEM  UNLOCKMEM )  $buffering 1
      // start:  	mem_lock := memory_access_lock $buffering 1// bits of buffering = 1. 
      //  file .Aa/nic.linked.opt.aa, line 234
      // Source expression
      // memory_access_lock
      $T[RPIPE_memory_access_lock_706_sample_start_] 
      $T[RPIPE_memory_access_lock_706_sample_completed_] 
      $T[RPIPE_memory_access_lock_706_update_start_] 
      $T[RPIPE_memory_access_lock_706_update_completed_] 
      ;;[RPIPE_memory_access_lock_706_Sample] 
      {
        // pipe read sample
        $T [rr] $T [ra] 
      }
      ;;[RPIPE_memory_access_lock_706_Update] 
      {
        // pipe read update
        $T [cr] $T [ca] 
      }
      RPIPE_memory_access_lock_706_sample_start_ &-> (RPIPE_memory_access_lock_706_Sample)
      RPIPE_memory_access_lock_706_sample_completed_ <-& (RPIPE_memory_access_lock_706_Sample)
      RPIPE_memory_access_lock_706_update_start_ <-& (RPIPE_memory_access_lock_706_sample_completed_)
      RPIPE_memory_access_lock_706_update_start_ &-> (RPIPE_memory_access_lock_706_Update)
      RPIPE_memory_access_lock_706_update_completed_ <-& (RPIPE_memory_access_lock_706_Update)
      RPIPE_memory_access_lock_706_sample_start_ o<-& (RPIPE_memory_access_lock_706_update_completed_ 0)
      // Target expression
      // (as target) mem_lock
      // start: WAR dependencies for mem_lock
      // done: WAR dependencies for mem_lock
      // end:  	mem_lock := memory_access_lock $buffering 1// bits of buffering = 1. 
      // Barrier in pipelined body 
      $T[barrier_stmt_708_update_completed_] 
      barrier_stmt_708_update_completed_ <-& (RPIPE_memory_access_lock_706_update_completed_)
      // start:  	is_ldstub_664_delayed_1_0 := is_ldstub $buffering 1 $cut_through // bits of buffering = 1. 
      //  file .Aa/nic.linked.opt.aa, line 236
      $T[assign_stmt_711_sample_start_] 
      $T[assign_stmt_711_sample_completed_] 
      $T[assign_stmt_711_update_start_] 
      $T[assign_stmt_711_update_completed_] 
      // Source expression
      // is_ldstub
      // Target expression
      // (as target) is_ldstub_664_delayed_1_0
      // both source and target are implicit: use interlock 
      // Interlock 
      ;;[assign_stmt_711_Sample] 
      {
        $T [req] $T [ack] // interlock-sample.
      }
      ;;[assign_stmt_711_Update] 
      {
        $T [req] $T [ack] // interlock-update.
      }
      assign_stmt_711_sample_start_ &-> (assign_stmt_711_Sample)
      assign_stmt_711_sample_completed_ <-& (assign_stmt_711_Sample)
      assign_stmt_711_sample_completed_ &-> ($null)
      assign_stmt_711_update_start_ &-> (assign_stmt_711_Update)
      assign_stmt_711_update_completed_ <-& (assign_stmt_711_Update)
      // barrier dependency for statement 
      assign_stmt_711_sample_start_ <-& (barrier_stmt_708_update_completed_)
      // start: Forward dependencies from is_ldstub to transition assign_stmt_711_sample_start_
      assign_stmt_711_sample_start_ <-& ($entry)
      // done: Forward dependencies from is_ldstub to transition assign_stmt_711_sample_start_
      // RAW reenables for is_ldstub
      opcode_update_enable o<-& (assign_stmt_711_sample_completed_ 0)
      // self-release: 
      assign_stmt_711_sample_start_ o<-& (assign_stmt_711_sample_completed_ 1)
      $null &-> (assign_stmt_711_update_start_)
      assign_stmt_711_update_start_ o<-& (assign_stmt_711_update_completed_ 0)
      // start: WAR dependencies for is_ldstub_664_delayed_1_0
      // done: WAR dependencies for is_ldstub_664_delayed_1_0
      // end:  	is_ldstub_664_delayed_1_0 := is_ldstub $buffering 1 $cut_through // bits of buffering = 1. 
      // start:  	$guard (~is_ldstub_664_delayed_1_0) memory_access_lock := mem_lock $buffering 1// bits of buffering = 1. 
      //  file .Aa/nic.linked.opt.aa, line 237
      // Guard expression 
      // is_ldstub_664_delayed_1_0
      // Source expression
      // mem_lock
      // Target expression
      // (as target) memory_access_lock
      $T[WPIPE_memory_access_lock_713_sample_start_] 
      $T[WPIPE_memory_access_lock_713_sample_completed_] 
      $T[WPIPE_memory_access_lock_713_update_start_] 
      $T[WPIPE_memory_access_lock_713_update_completed_] 
      // barrier 
      WPIPE_memory_access_lock_713_sample_start_ <-& (barrier_stmt_708_update_completed_)
      // Guard dependency for expression WPIPE_memory_access_lock_713 with guard R_is_ldstub_664_delayed_1_0_712
      // Guard forward dependency 
      WPIPE_memory_access_lock_713_sample_start_ <-& (assign_stmt_711_update_completed_)
      // RAW reenables for is_ldstub_664_delayed_1_0
      assign_stmt_711_update_start_ o<-& (WPIPE_memory_access_lock_713_sample_completed_ 0)
      ;;[WPIPE_memory_access_lock_713_Sample] 
      {
        // pipe write sample-start memory_access_lock
        $T [req] $T [ack] 
      }
      ;;[WPIPE_memory_access_lock_713_Update] 
      {
        // pipe write update (complete) memory_access_lock
        $T [req] $T [ack] 
      }
      WPIPE_memory_access_lock_713_sample_start_ &-> (WPIPE_memory_access_lock_713_Sample)
      WPIPE_memory_access_lock_713_sample_completed_ <-& (WPIPE_memory_access_lock_713_Sample)
      WPIPE_memory_access_lock_713_update_start_ <-& (WPIPE_memory_access_lock_713_sample_completed_)
      WPIPE_memory_access_lock_713_update_start_ &-> (WPIPE_memory_access_lock_713_Update)
      WPIPE_memory_access_lock_713_update_completed_ <-& (WPIPE_memory_access_lock_713_Update)
      WPIPE_memory_access_lock_713_sample_start_ o<-& (WPIPE_memory_access_lock_713_update_completed_ 0)
      // start: Forward dependencies from mem_lock to transition WPIPE_memory_access_lock_713_sample_start_
      WPIPE_memory_access_lock_713_sample_start_ <-& (RPIPE_memory_access_lock_706_update_completed_)
      // done: Forward dependencies from mem_lock to transition WPIPE_memory_access_lock_713_sample_start_
      // RAW reenables for mem_lock
      RPIPE_memory_access_lock_706_update_start_ o<-& (WPIPE_memory_access_lock_713_sample_completed_ 0)
      // end:  	$guard (~is_ldstub_664_delayed_1_0) memory_access_lock := mem_lock $buffering 1// bits of buffering = 1. 
      // Barrier in pipelined body 
      $T[barrier_stmt_716_update_completed_] 
      barrier_stmt_716_update_completed_ <-& (WPIPE_memory_access_lock_713_update_completed_)
      barrier_stmt_716_update_completed_ <-& (assign_stmt_711_update_completed_)
      // start: 	$guard (do_first_byte) $call accessMemoryByteBase (tag first_byte_lock first_byte_rwbar base_addr offset w_byte ) (r_byte ) 
      //  file .Aa/nic.linked.opt.aa, line 239
      $T[call_stmt_725_sample_start_] 
      $T[call_stmt_725_sample_completed_] 
      $T[call_stmt_725_update_start_] 
      $T[call_stmt_725_update_completed_] 
      // Guard expression
      // do_first_byte
      // start: Forward dependencies from do_first_byte to transition call_stmt_725_sample_start_
      call_stmt_725_sample_start_ <-& ($entry)
      // done: Forward dependencies from do_first_byte to transition call_stmt_725_sample_start_
      // RAW reenables for do_first_byte
      opcode_update_enable o<-& (call_stmt_725_sample_completed_ 0)
      // Call input argument 0
      // tag
      // Call input argument 1
      // first_byte_lock
      // Call input argument 2
      // first_byte_rwbar
      // Call input argument 3
      // base_addr
      // Call input argument 4
      // offset
      // Call input argument 5
      // w_byte
      // start: Forward dependencies from tag to transition call_stmt_725_sample_start_
      call_stmt_725_sample_start_ <-& ($entry)
      // done: Forward dependencies from tag to transition call_stmt_725_sample_start_
      // RAW reenables for tag
      tag_update_enable o<-& (call_stmt_725_sample_completed_ 0)
      // start: Forward dependencies from first_byte_lock to transition call_stmt_725_sample_start_
      call_stmt_725_sample_start_ <-& ($entry)
      // done: Forward dependencies from first_byte_lock to transition call_stmt_725_sample_start_
      // RAW reenables for first_byte_lock
      opcode_update_enable o<-& (call_stmt_725_sample_completed_ 0)
      // start: Forward dependencies from first_byte_rwbar to transition call_stmt_725_sample_start_
      call_stmt_725_sample_start_ <-& ($entry)
      // done: Forward dependencies from first_byte_rwbar to transition call_stmt_725_sample_start_
      // RAW reenables for first_byte_rwbar
      opcode_update_enable o<-& (call_stmt_725_sample_completed_ 0)
      // start: Forward dependencies from base_addr to transition call_stmt_725_sample_start_
      call_stmt_725_sample_start_ <-& ($entry)
      // done: Forward dependencies from base_addr to transition call_stmt_725_sample_start_
      // RAW reenables for base_addr
      base_addr_update_enable o<-& (call_stmt_725_sample_completed_ 0)
      // start: Forward dependencies from offset to transition call_stmt_725_sample_start_
      call_stmt_725_sample_start_ <-& ($entry)
      // done: Forward dependencies from offset to transition call_stmt_725_sample_start_
      // RAW reenables for offset
      offset_update_enable o<-& (call_stmt_725_sample_completed_ 0)
      // start: Forward dependencies from w_byte to transition call_stmt_725_sample_start_
      call_stmt_725_sample_start_ <-& ($entry)
      // done: Forward dependencies from w_byte to transition call_stmt_725_sample_start_
      // RAW reenables for w_byte
      wdata_update_enable o<-& (call_stmt_725_sample_completed_ 0)
      ;;[call_stmt_725_Sample] 
      {
        $T [crr] $T [cra] 
      }
      ;;[call_stmt_725_Update] 
      {
        $T [ccr] $T [cca] 
      }
      call_stmt_725_sample_start_ &-> (call_stmt_725_Sample)
      call_stmt_725_sample_completed_ <-& (call_stmt_725_Sample)
      call_stmt_725_sample_completed_ &-> ($null)
      call_stmt_725_update_start_ &-> (call_stmt_725_Update)
      call_stmt_725_update_completed_ <-& (call_stmt_725_Update)
      // Call output argument 0
      // (as target) r_byte
      // self-release: 
      call_stmt_725_sample_start_ o<-& (call_stmt_725_sample_completed_ 1)
      $null &-> (call_stmt_725_update_start_)
      call_stmt_725_update_start_ o<-& (call_stmt_725_update_completed_ 0)
      // start: WAR dependencies for r_byte
      // done: WAR dependencies for r_byte
      // end: 	$guard (do_first_byte) $call accessMemoryByteBase (tag first_byte_lock first_byte_rwbar base_addr offset w_byte ) (r_byte ) 
      // start: 	$guard (is_word_access) $call accessMemoryWordBase (tag UNLOCKMEM ( $mux is_write WRITEMEM  READMEM )  base_addr offset w_word ) (r_word ) 
      //  file .Aa/nic.linked.opt.aa, line 240
      $T[call_stmt_737_sample_start_] 
      $T[call_stmt_737_sample_completed_] 
      $T[call_stmt_737_update_start_] 
      $T[call_stmt_737_update_completed_] 
      // Guard expression
      // is_word_access
      // start: Forward dependencies from is_word_access to transition call_stmt_737_sample_start_
      call_stmt_737_sample_start_ <-& ($entry)
      // done: Forward dependencies from is_word_access to transition call_stmt_737_sample_start_
      // RAW reenables for is_word_access
      opcode_update_enable o<-& (call_stmt_737_sample_completed_ 0)
      // Call input argument 0
      // tag
      // Call input argument 1
      // Call input argument 2
      // ( $mux is_write WRITEMEM  READMEM ) 
      // is_write
      // Call input argument 3
      // base_addr
      // Call input argument 4
      // offset
      // Call input argument 5
      // w_word
      // start: Forward dependencies from tag to transition call_stmt_737_sample_start_
      call_stmt_737_sample_start_ <-& ($entry)
      // done: Forward dependencies from tag to transition call_stmt_737_sample_start_
      // RAW reenables for tag
      tag_update_enable o<-& (call_stmt_737_sample_completed_ 0)
      // start: Forward dependencies from ( $mux is_write WRITEMEM  READMEM )  to transition call_stmt_737_sample_start_
      call_stmt_737_sample_start_ <-& ($entry)
      // done: Forward dependencies from ( $mux is_write WRITEMEM  READMEM )  to transition call_stmt_737_sample_start_
      // RAW reenables for ( $mux is_write WRITEMEM  READMEM ) 
      opcode_update_enable o<-& (call_stmt_737_sample_completed_ 0)
      // start: Forward dependencies from base_addr to transition call_stmt_737_sample_start_
      call_stmt_737_sample_start_ <-& ($entry)
      // done: Forward dependencies from base_addr to transition call_stmt_737_sample_start_
      // RAW reenables for base_addr
      base_addr_update_enable o<-& (call_stmt_737_sample_completed_ 0)
      // start: Forward dependencies from offset to transition call_stmt_737_sample_start_
      call_stmt_737_sample_start_ <-& ($entry)
      // done: Forward dependencies from offset to transition call_stmt_737_sample_start_
      // RAW reenables for offset
      offset_update_enable o<-& (call_stmt_737_sample_completed_ 0)
      // start: Forward dependencies from w_word to transition call_stmt_737_sample_start_
      call_stmt_737_sample_start_ <-& ($entry)
      // done: Forward dependencies from w_word to transition call_stmt_737_sample_start_
      // RAW reenables for w_word
      wdata_update_enable o<-& (call_stmt_737_sample_completed_ 0)
      ;;[call_stmt_737_Sample] 
      {
        $T [crr] $T [cra] 
      }
      ;;[call_stmt_737_Update] 
      {
        $T [ccr] $T [cca] 
      }
      call_stmt_737_sample_start_ &-> (call_stmt_737_Sample)
      call_stmt_737_sample_completed_ <-& (call_stmt_737_Sample)
      call_stmt_737_sample_completed_ &-> ($null)
      call_stmt_737_update_start_ &-> (call_stmt_737_Update)
      call_stmt_737_update_completed_ <-& (call_stmt_737_Update)
      // Call output argument 0
      // (as target) r_word
      // self-release: 
      call_stmt_737_sample_start_ o<-& (call_stmt_737_sample_completed_ 1)
      $null &-> (call_stmt_737_update_start_)
      call_stmt_737_update_start_ o<-& (call_stmt_737_update_completed_ 0)
      // start: WAR dependencies for r_word
      // done: WAR dependencies for r_word
      // end: 	$guard (is_word_access) $call accessMemoryWordBase (tag UNLOCKMEM ( $mux is_write WRITEMEM  READMEM )  base_addr offset w_word ) (r_word ) 
      // start: 	$guard (is_dword_access) $call accessMemoryDwordBase (tag UNLOCKMEM ( $mux is_write WRITEMEM  READMEM )  base_addr offset w_dword ) (r_dword ) 
      //  file .Aa/nic.linked.opt.aa, line 241
      $T[call_stmt_749_sample_start_] 
      $T[call_stmt_749_sample_completed_] 
      $T[call_stmt_749_update_start_] 
      $T[call_stmt_749_update_completed_] 
      // Guard expression
      // is_dword_access
      // start: Forward dependencies from is_dword_access to transition call_stmt_749_sample_start_
      call_stmt_749_sample_start_ <-& ($entry)
      // done: Forward dependencies from is_dword_access to transition call_stmt_749_sample_start_
      // RAW reenables for is_dword_access
      opcode_update_enable o<-& (call_stmt_749_sample_completed_ 0)
      // Call input argument 0
      // tag
      // Call input argument 1
      // Call input argument 2
      // ( $mux is_write WRITEMEM  READMEM ) 
      // is_write
      // Call input argument 3
      // base_addr
      // Call input argument 4
      // offset
      // Call input argument 5
      // w_dword
      // start: Forward dependencies from tag to transition call_stmt_749_sample_start_
      call_stmt_749_sample_start_ <-& ($entry)
      // done: Forward dependencies from tag to transition call_stmt_749_sample_start_
      // RAW reenables for tag
      tag_update_enable o<-& (call_stmt_749_sample_completed_ 0)
      // start: Forward dependencies from ( $mux is_write WRITEMEM  READMEM )  to transition call_stmt_749_sample_start_
      call_stmt_749_sample_start_ <-& ($entry)
      // done: Forward dependencies from ( $mux is_write WRITEMEM  READMEM )  to transition call_stmt_749_sample_start_
      // RAW reenables for ( $mux is_write WRITEMEM  READMEM ) 
      opcode_update_enable o<-& (call_stmt_749_sample_completed_ 0)
      // start: Forward dependencies from base_addr to transition call_stmt_749_sample_start_
      call_stmt_749_sample_start_ <-& ($entry)
      // done: Forward dependencies from base_addr to transition call_stmt_749_sample_start_
      // RAW reenables for base_addr
      base_addr_update_enable o<-& (call_stmt_749_sample_completed_ 0)
      // start: Forward dependencies from offset to transition call_stmt_749_sample_start_
      call_stmt_749_sample_start_ <-& ($entry)
      // done: Forward dependencies from offset to transition call_stmt_749_sample_start_
      // RAW reenables for offset
      offset_update_enable o<-& (call_stmt_749_sample_completed_ 0)
      // start: Forward dependencies from w_dword to transition call_stmt_749_sample_start_
      call_stmt_749_sample_start_ <-& ($entry)
      // done: Forward dependencies from w_dword to transition call_stmt_749_sample_start_
      // RAW reenables for w_dword
      wdata_update_enable o<-& (call_stmt_749_sample_completed_ 0)
      ;;[call_stmt_749_Sample] 
      {
        $T [crr] $T [cra] 
      }
      ;;[call_stmt_749_Update] 
      {
        $T [ccr] $T [cca] 
      }
      call_stmt_749_sample_start_ &-> (call_stmt_749_Sample)
      call_stmt_749_sample_completed_ <-& (call_stmt_749_Sample)
      call_stmt_749_sample_completed_ &-> ($null)
      call_stmt_749_update_start_ &-> (call_stmt_749_Update)
      call_stmt_749_update_completed_ <-& (call_stmt_749_Update)
      // Call output argument 0
      // (as target) r_dword
      // self-release: 
      call_stmt_749_sample_start_ o<-& (call_stmt_749_sample_completed_ 1)
      $null &-> (call_stmt_749_update_start_)
      call_stmt_749_update_start_ o<-& (call_stmt_749_update_completed_ 0)
      // start: WAR dependencies for r_dword
      // done: WAR dependencies for r_dword
      // end: 	$guard (is_dword_access) $call accessMemoryDwordBase (tag UNLOCKMEM ( $mux is_write WRITEMEM  READMEM )  base_addr offset w_dword ) (r_dword ) 
      // start:  	is_ldstub_703_delayed_17_0 := is_ldstub $buffering 17 $cut_through // bits of buffering = 17. 
      //  file .Aa/nic.linked.opt.aa, line 242
      $T[assign_stmt_752_sample_start_] 
      $T[assign_stmt_752_sample_completed_] 
      $T[assign_stmt_752_update_start_] 
      $T[assign_stmt_752_update_completed_] 
      // Source expression
      // is_ldstub
      // Target expression
      // (as target) is_ldstub_703_delayed_17_0
      // both source and target are implicit: use interlock 
      // Interlock 
      ;;[assign_stmt_752_Sample] 
      {
        $T [req] $T [ack] // interlock-sample.
      }
      ;;[assign_stmt_752_Update] 
      {
        $T [req] $T [ack] // interlock-update.
      }
      assign_stmt_752_sample_start_ &-> (assign_stmt_752_Sample)
      assign_stmt_752_sample_completed_ <-& (assign_stmt_752_Sample)
      assign_stmt_752_sample_completed_ &-> ($null)
      assign_stmt_752_update_start_ &-> (assign_stmt_752_Update)
      assign_stmt_752_update_completed_ <-& (assign_stmt_752_Update)
      // barrier dependency for statement 
      assign_stmt_752_sample_start_ <-& (barrier_stmt_716_update_completed_)
      // start: Forward dependencies from is_ldstub to transition assign_stmt_752_sample_start_
      assign_stmt_752_sample_start_ <-& ($entry)
      // done: Forward dependencies from is_ldstub to transition assign_stmt_752_sample_start_
      // RAW reenables for is_ldstub
      opcode_update_enable o<-& (assign_stmt_752_sample_completed_ 0)
      // self-release: 
      assign_stmt_752_sample_start_ o<-& (assign_stmt_752_sample_completed_ 1)
      $null &-> (assign_stmt_752_update_start_)
      assign_stmt_752_update_start_ o<-& (assign_stmt_752_update_completed_ 0)
      // start: WAR dependencies for is_ldstub_703_delayed_17_0
      // done: WAR dependencies for is_ldstub_703_delayed_17_0
      // end:  	is_ldstub_703_delayed_17_0 := is_ldstub $buffering 17 $cut_through // bits of buffering = 17. 
      // start: WAR dependencies for do_ldstub_write
      // done: WAR dependencies for do_ldstub_write
      // start:  	$volatile do_ldstub_write := (is_ldstub_703_delayed_17_0 & (r_byte == 0 )) $buffering 1
      //  file .Aa/nic.linked.opt.aa, line 243
      // volatile! 
      // Source expression
      // (is_ldstub_703_delayed_17_0 & (r_byte == 0 ))
      // is_ldstub_703_delayed_17_0
      // (r_byte == 0 )
      // r_byte
      // Target expression
      // (as target) do_ldstub_write
      // start: WAR dependencies for do_ldstub_write
      // done: WAR dependencies for do_ldstub_write
      // end:  	$volatile do_ldstub_write := (is_ldstub_703_delayed_17_0 & (r_byte == 0 )) $buffering 1
      // start:  	is_ldstub_709_delayed_17_0 := is_ldstub $buffering 17 $cut_through // bits of buffering = 17. 
      //  file .Aa/nic.linked.opt.aa, line 244
      $T[assign_stmt_762_sample_start_] 
      $T[assign_stmt_762_sample_completed_] 
      $T[assign_stmt_762_update_start_] 
      $T[assign_stmt_762_update_completed_] 
      // Source expression
      // is_ldstub
      // Target expression
      // (as target) is_ldstub_709_delayed_17_0
      // both source and target are implicit: use interlock 
      // Interlock 
      ;;[assign_stmt_762_Sample] 
      {
        $T [req] $T [ack] // interlock-sample.
      }
      ;;[assign_stmt_762_Update] 
      {
        $T [req] $T [ack] // interlock-update.
      }
      assign_stmt_762_sample_start_ &-> (assign_stmt_762_Sample)
      assign_stmt_762_sample_completed_ <-& (assign_stmt_762_Sample)
      assign_stmt_762_sample_completed_ &-> ($null)
      assign_stmt_762_update_start_ &-> (assign_stmt_762_Update)
      assign_stmt_762_update_completed_ <-& (assign_stmt_762_Update)
      // barrier dependency for statement 
      assign_stmt_762_sample_start_ <-& (barrier_stmt_716_update_completed_)
      // start: Forward dependencies from is_ldstub to transition assign_stmt_762_sample_start_
      assign_stmt_762_sample_start_ <-& ($entry)
      // done: Forward dependencies from is_ldstub to transition assign_stmt_762_sample_start_
      // RAW reenables for is_ldstub
      opcode_update_enable o<-& (assign_stmt_762_sample_completed_ 0)
      // self-release: 
      assign_stmt_762_sample_start_ o<-& (assign_stmt_762_sample_completed_ 1)
      $null &-> (assign_stmt_762_update_start_)
      assign_stmt_762_update_start_ o<-& (assign_stmt_762_update_completed_ 0)
      // start: WAR dependencies for is_ldstub_709_delayed_17_0
      // done: WAR dependencies for is_ldstub_709_delayed_17_0
      // end:  	is_ldstub_709_delayed_17_0 := is_ldstub $buffering 17 $cut_through // bits of buffering = 17. 
      // start:  	tag_710_delayed_17_0 := tag $buffering 17 $cut_through // bits of buffering = 136. 
      //  file .Aa/nic.linked.opt.aa, line 245
      $T[assign_stmt_765_sample_start_] 
      $T[assign_stmt_765_sample_completed_] 
      $T[assign_stmt_765_update_start_] 
      $T[assign_stmt_765_update_completed_] 
      // Source expression
      // tag
      // Target expression
      // (as target) tag_710_delayed_17_0
      // both source and target are implicit: use interlock 
      // Interlock 
      ;;[assign_stmt_765_Sample] 
      {
        $T [req] $T [ack] // interlock-sample.
      }
      ;;[assign_stmt_765_Update] 
      {
        $T [req] $T [ack] // interlock-update.
      }
      assign_stmt_765_sample_start_ &-> (assign_stmt_765_Sample)
      assign_stmt_765_sample_completed_ <-& (assign_stmt_765_Sample)
      assign_stmt_765_sample_completed_ &-> ($null)
      assign_stmt_765_update_start_ &-> (assign_stmt_765_Update)
      assign_stmt_765_update_completed_ <-& (assign_stmt_765_Update)
      // barrier dependency for statement 
      assign_stmt_765_sample_start_ <-& (barrier_stmt_716_update_completed_)
      // start: Forward dependencies from tag to transition assign_stmt_765_sample_start_
      assign_stmt_765_sample_start_ <-& ($entry)
      // done: Forward dependencies from tag to transition assign_stmt_765_sample_start_
      // RAW reenables for tag
      tag_update_enable o<-& (assign_stmt_765_sample_completed_ 0)
      // self-release: 
      assign_stmt_765_sample_start_ o<-& (assign_stmt_765_sample_completed_ 1)
      $null &-> (assign_stmt_765_update_start_)
      assign_stmt_765_update_start_ o<-& (assign_stmt_765_update_completed_ 0)
      // start: WAR dependencies for tag_710_delayed_17_0
      // done: WAR dependencies for tag_710_delayed_17_0
      // end:  	tag_710_delayed_17_0 := tag $buffering 17 $cut_through // bits of buffering = 136. 
      // start:  	base_addr_716_delayed_17_0 := base_addr $buffering 17 $cut_through // bits of buffering = 1088. 
      //  file .Aa/nic.linked.opt.aa, line 246
      $T[assign_stmt_768_sample_start_] 
      $T[assign_stmt_768_sample_completed_] 
      $T[assign_stmt_768_update_start_] 
      $T[assign_stmt_768_update_completed_] 
      // Source expression
      // base_addr
      // Target expression
      // (as target) base_addr_716_delayed_17_0
      // both source and target are implicit: use interlock 
      // Interlock 
      ;;[assign_stmt_768_Sample] 
      {
        $T [req] $T [ack] // interlock-sample.
      }
      ;;[assign_stmt_768_Update] 
      {
        $T [req] $T [ack] // interlock-update.
      }
      assign_stmt_768_sample_start_ &-> (assign_stmt_768_Sample)
      assign_stmt_768_sample_completed_ <-& (assign_stmt_768_Sample)
      assign_stmt_768_sample_completed_ &-> ($null)
      assign_stmt_768_update_start_ &-> (assign_stmt_768_Update)
      assign_stmt_768_update_completed_ <-& (assign_stmt_768_Update)
      // barrier dependency for statement 
      assign_stmt_768_sample_start_ <-& (barrier_stmt_716_update_completed_)
      // start: Forward dependencies from base_addr to transition assign_stmt_768_sample_start_
      assign_stmt_768_sample_start_ <-& ($entry)
      // done: Forward dependencies from base_addr to transition assign_stmt_768_sample_start_
      // RAW reenables for base_addr
      base_addr_update_enable o<-& (assign_stmt_768_sample_completed_ 0)
      // self-release: 
      assign_stmt_768_sample_start_ o<-& (assign_stmt_768_sample_completed_ 1)
      $null &-> (assign_stmt_768_update_start_)
      assign_stmt_768_update_start_ o<-& (assign_stmt_768_update_completed_ 0)
      // start: WAR dependencies for base_addr_716_delayed_17_0
      // done: WAR dependencies for base_addr_716_delayed_17_0
      // end:  	base_addr_716_delayed_17_0 := base_addr $buffering 17 $cut_through // bits of buffering = 1088. 
      // start:  	offset_717_delayed_17_0 := offset $buffering 17 $cut_through // bits of buffering = 1088. 
      //  file .Aa/nic.linked.opt.aa, line 247
      $T[assign_stmt_771_sample_start_] 
      $T[assign_stmt_771_sample_completed_] 
      $T[assign_stmt_771_update_start_] 
      $T[assign_stmt_771_update_completed_] 
      // Source expression
      // offset
      // Target expression
      // (as target) offset_717_delayed_17_0
      // both source and target are implicit: use interlock 
      // Interlock 
      ;;[assign_stmt_771_Sample] 
      {
        $T [req] $T [ack] // interlock-sample.
      }
      ;;[assign_stmt_771_Update] 
      {
        $T [req] $T [ack] // interlock-update.
      }
      assign_stmt_771_sample_start_ &-> (assign_stmt_771_Sample)
      assign_stmt_771_sample_completed_ <-& (assign_stmt_771_Sample)
      assign_stmt_771_sample_completed_ &-> ($null)
      assign_stmt_771_update_start_ &-> (assign_stmt_771_Update)
      assign_stmt_771_update_completed_ <-& (assign_stmt_771_Update)
      // barrier dependency for statement 
      assign_stmt_771_sample_start_ <-& (barrier_stmt_716_update_completed_)
      // start: Forward dependencies from offset to transition assign_stmt_771_sample_start_
      assign_stmt_771_sample_start_ <-& ($entry)
      // done: Forward dependencies from offset to transition assign_stmt_771_sample_start_
      // RAW reenables for offset
      offset_update_enable o<-& (assign_stmt_771_sample_completed_ 0)
      // self-release: 
      assign_stmt_771_sample_start_ o<-& (assign_stmt_771_sample_completed_ 1)
      $null &-> (assign_stmt_771_update_start_)
      assign_stmt_771_update_start_ o<-& (assign_stmt_771_update_completed_ 0)
      // start: WAR dependencies for offset_717_delayed_17_0
      // done: WAR dependencies for offset_717_delayed_17_0
      // end:  	offset_717_delayed_17_0 := offset $buffering 17 $cut_through // bits of buffering = 1088. 
      // start: 	$guard (is_ldstub_709_delayed_17_0) $call accessMemoryByteBase (tag_710_delayed_17_0 UNLOCKMEM ( $mux do_ldstub_write WRITEMEM  READMEM )  base_addr_716_delayed_17_0 offset_717_delayed_17_0 _hFF  ) (r_byte_second_ldstub ) 
      //  file .Aa/nic.linked.opt.aa, line 248
      $T[call_stmt_783_sample_start_] 
      $T[call_stmt_783_sample_completed_] 
      $T[call_stmt_783_update_start_] 
      $T[call_stmt_783_update_completed_] 
      // Guard expression
      // is_ldstub_709_delayed_17_0
      // start: Forward dependencies from is_ldstub_709_delayed_17_0 to transition call_stmt_783_sample_start_
      call_stmt_783_sample_start_ <-& (assign_stmt_762_update_completed_)
      // done: Forward dependencies from is_ldstub_709_delayed_17_0 to transition call_stmt_783_sample_start_
      // RAW reenables for is_ldstub_709_delayed_17_0
      assign_stmt_762_update_start_ o<-& (call_stmt_783_sample_completed_ 0)
      // Call input argument 0
      // tag_710_delayed_17_0
      // Call input argument 1
      // Call input argument 2
      // ( $mux do_ldstub_write WRITEMEM  READMEM ) 
      // do_ldstub_write
      // Call input argument 3
      // base_addr_716_delayed_17_0
      // Call input argument 4
      // offset_717_delayed_17_0
      // Call input argument 5
      // start: Forward dependencies from tag_710_delayed_17_0 to transition call_stmt_783_sample_start_
      call_stmt_783_sample_start_ <-& (assign_stmt_765_update_completed_)
      // done: Forward dependencies from tag_710_delayed_17_0 to transition call_stmt_783_sample_start_
      // RAW reenables for tag_710_delayed_17_0
      assign_stmt_765_update_start_ o<-& (call_stmt_783_sample_completed_ 0)
      // start: Forward dependencies from ( $mux do_ldstub_write WRITEMEM  READMEM )  to transition call_stmt_783_sample_start_
      call_stmt_783_sample_start_ <-& (call_stmt_725_update_completed_)
      call_stmt_783_sample_start_ <-& (assign_stmt_752_update_completed_)
      // done: Forward dependencies from ( $mux do_ldstub_write WRITEMEM  READMEM )  to transition call_stmt_783_sample_start_
      // RAW reenables for ( $mux do_ldstub_write WRITEMEM  READMEM ) 
      call_stmt_725_update_start_ o<-& (call_stmt_783_sample_completed_ 0)
      assign_stmt_752_update_start_ o<-& (call_stmt_783_sample_completed_ 0)
      // start: Forward dependencies from base_addr_716_delayed_17_0 to transition call_stmt_783_sample_start_
      call_stmt_783_sample_start_ <-& (assign_stmt_768_update_completed_)
      // done: Forward dependencies from base_addr_716_delayed_17_0 to transition call_stmt_783_sample_start_
      // RAW reenables for base_addr_716_delayed_17_0
      assign_stmt_768_update_start_ o<-& (call_stmt_783_sample_completed_ 0)
      // start: Forward dependencies from offset_717_delayed_17_0 to transition call_stmt_783_sample_start_
      call_stmt_783_sample_start_ <-& (assign_stmt_771_update_completed_)
      // done: Forward dependencies from offset_717_delayed_17_0 to transition call_stmt_783_sample_start_
      // RAW reenables for offset_717_delayed_17_0
      assign_stmt_771_update_start_ o<-& (call_stmt_783_sample_completed_ 0)
      ;;[call_stmt_783_Sample] 
      {
        $T [crr] $T [cra] 
      }
      ;;[call_stmt_783_Update] 
      {
        $T [ccr] $T [cca] 
      }
      call_stmt_783_sample_start_ &-> (call_stmt_783_Sample)
      call_stmt_783_sample_completed_ <-& (call_stmt_783_Sample)
      call_stmt_783_sample_completed_ &-> ($null)
      call_stmt_783_update_start_ &-> (call_stmt_783_Update)
      call_stmt_783_update_completed_ <-& (call_stmt_783_Update)
      // Call output argument 0
      // (as target) r_byte_second_ldstub
      // self-release: 
      call_stmt_783_sample_start_ o<-& (call_stmt_783_sample_completed_ 1)
      $null &-> (call_stmt_783_update_start_)
      call_stmt_783_update_start_ o<-& (call_stmt_783_update_completed_ 0)
      // start: WAR dependencies for r_byte_second_ldstub
      // done: WAR dependencies for r_byte_second_ldstub
      // end: 	$guard (is_ldstub_709_delayed_17_0) $call accessMemoryByteBase (tag_710_delayed_17_0 UNLOCKMEM ( $mux do_ldstub_write WRITEMEM  READMEM )  base_addr_716_delayed_17_0 offset_717_delayed_17_0 _hFF  ) (r_byte_second_ldstub ) 
      // start:  	OR_u1_u1_724_724_delayed_17_0 := (is_ldstub | is_byte_access) $buffering 17 $cut_through // bits of buffering = 17. 
      //  file .Aa/nic.linked.opt.aa, line 249
      // Source expression
      // (is_ldstub | is_byte_access)
      $T[OR_u1_u1_787_sample_start_] 
      $T[OR_u1_u1_787_sample_completed_] 
      $T[OR_u1_u1_787_update_start_] 
      $T[OR_u1_u1_787_update_completed_] 
      // barrier 
      OR_u1_u1_787_sample_start_ <-& (barrier_stmt_716_update_completed_)
      // is_ldstub
      // is_byte_access
      // start: Forward dependencies from is_ldstub to transition OR_u1_u1_787_sample_start_
      OR_u1_u1_787_sample_start_ <-& ($entry)
      // done: Forward dependencies from is_ldstub to transition OR_u1_u1_787_sample_start_
      // start: Forward dependencies from is_byte_access to transition OR_u1_u1_787_sample_start_
      OR_u1_u1_787_sample_start_ <-& ($entry)
      // done: Forward dependencies from is_byte_access to transition OR_u1_u1_787_sample_start_
      ;;[OR_u1_u1_787_Sample] 
      {
        // binary expression 
        $T [rr] $T [ra]  // (split) binary operation 
      }
      ;;[OR_u1_u1_787_Update] 
      {
        // binary expression 
        $T [cr] $T [ca] // (split) binary operation 
      }
      OR_u1_u1_787_sample_start_ &-> (OR_u1_u1_787_Sample)
      OR_u1_u1_787_sample_completed_ <-& (OR_u1_u1_787_Sample)
      OR_u1_u1_787_sample_completed_ &-> ($null)
      OR_u1_u1_787_update_start_ &-> (OR_u1_u1_787_Update)
      OR_u1_u1_787_update_completed_ <-& (OR_u1_u1_787_Update)
      // RAW reenables for is_ldstub
      opcode_update_enable o<-& (OR_u1_u1_787_sample_completed_ 0)
      // RAW reenables for is_byte_access
      opcode_update_enable o<-& (OR_u1_u1_787_sample_completed_ 0)
      // self-release: 
      OR_u1_u1_787_sample_start_ o<-& (OR_u1_u1_787_sample_completed_ 1)
      $null &-> (OR_u1_u1_787_update_start_)
      OR_u1_u1_787_update_start_ o<-& (OR_u1_u1_787_update_completed_ 0)
      // Target expression
      // (as target) OR_u1_u1_724_724_delayed_17_0
      // start: WAR dependencies for OR_u1_u1_724_724_delayed_17_0
      // done: WAR dependencies for OR_u1_u1_724_724_delayed_17_0
      // end:  	OR_u1_u1_724_724_delayed_17_0 := (is_ldstub | is_byte_access) $buffering 17 $cut_through // bits of buffering = 17. 
      // start:  	is_word_access_731_delayed_17_0 := is_word_access $buffering 17 $cut_through // bits of buffering = 17. 
      //  file .Aa/nic.linked.opt.aa, line 250
      $T[assign_stmt_791_sample_start_] 
      $T[assign_stmt_791_sample_completed_] 
      $T[assign_stmt_791_update_start_] 
      $T[assign_stmt_791_update_completed_] 
      // Source expression
      // is_word_access
      // Target expression
      // (as target) is_word_access_731_delayed_17_0
      // both source and target are implicit: use interlock 
      // Interlock 
      ;;[assign_stmt_791_Sample] 
      {
        $T [req] $T [ack] // interlock-sample.
      }
      ;;[assign_stmt_791_Update] 
      {
        $T [req] $T [ack] // interlock-update.
      }
      assign_stmt_791_sample_start_ &-> (assign_stmt_791_Sample)
      assign_stmt_791_sample_completed_ <-& (assign_stmt_791_Sample)
      assign_stmt_791_sample_completed_ &-> ($null)
      assign_stmt_791_update_start_ &-> (assign_stmt_791_Update)
      assign_stmt_791_update_completed_ <-& (assign_stmt_791_Update)
      // barrier dependency for statement 
      assign_stmt_791_sample_start_ <-& (barrier_stmt_716_update_completed_)
      // start: Forward dependencies from is_word_access to transition assign_stmt_791_sample_start_
      assign_stmt_791_sample_start_ <-& ($entry)
      // done: Forward dependencies from is_word_access to transition assign_stmt_791_sample_start_
      // RAW reenables for is_word_access
      opcode_update_enable o<-& (assign_stmt_791_sample_completed_ 0)
      // self-release: 
      assign_stmt_791_sample_start_ o<-& (assign_stmt_791_sample_completed_ 1)
      $null &-> (assign_stmt_791_update_start_)
      assign_stmt_791_update_start_ o<-& (assign_stmt_791_update_completed_ 0)
      // start: WAR dependencies for is_word_access_731_delayed_17_0
      // done: WAR dependencies for is_word_access_731_delayed_17_0
      // end:  	is_word_access_731_delayed_17_0 := is_word_access $buffering 17 $cut_through // bits of buffering = 17. 
      // start:  	is_dword_access_739_delayed_16_0 := is_dword_access $buffering 16 $cut_through // bits of buffering = 16. 
      //  file .Aa/nic.linked.opt.aa, line 251
      $T[assign_stmt_794_sample_start_] 
      $T[assign_stmt_794_sample_completed_] 
      $T[assign_stmt_794_update_start_] 
      $T[assign_stmt_794_update_completed_] 
      // Source expression
      // is_dword_access
      // Target expression
      // (as target) is_dword_access_739_delayed_16_0
      // both source and target are implicit: use interlock 
      // Interlock 
      ;;[assign_stmt_794_Sample] 
      {
        $T [req] $T [ack] // interlock-sample.
      }
      ;;[assign_stmt_794_Update] 
      {
        $T [req] $T [ack] // interlock-update.
      }
      assign_stmt_794_sample_start_ &-> (assign_stmt_794_Sample)
      assign_stmt_794_sample_completed_ <-& (assign_stmt_794_Sample)
      assign_stmt_794_sample_completed_ &-> ($null)
      assign_stmt_794_update_start_ &-> (assign_stmt_794_Update)
      assign_stmt_794_update_completed_ <-& (assign_stmt_794_Update)
      // barrier dependency for statement 
      assign_stmt_794_sample_start_ <-& (barrier_stmt_716_update_completed_)
      // start: Forward dependencies from is_dword_access to transition assign_stmt_794_sample_start_
      assign_stmt_794_sample_start_ <-& ($entry)
      // done: Forward dependencies from is_dword_access to transition assign_stmt_794_sample_start_
      // RAW reenables for is_dword_access
      opcode_update_enable o<-& (assign_stmt_794_sample_completed_ 0)
      // self-release: 
      assign_stmt_794_sample_start_ o<-& (assign_stmt_794_sample_completed_ 1)
      $null &-> (assign_stmt_794_update_start_)
      assign_stmt_794_update_start_ o<-& (assign_stmt_794_update_completed_ 0)
      // start: WAR dependencies for is_dword_access_739_delayed_16_0
      // done: WAR dependencies for is_dword_access_739_delayed_16_0
      // end:  	is_dword_access_739_delayed_16_0 := is_dword_access $buffering 16 $cut_through // bits of buffering = 16. 
      // start:  	MUX_742_742_delayed_1_0 := ( $mux is_dword_access_739_delayed_16_0 r_dword  _b0  )  $buffering 1 $cut_through // bits of buffering = 64. 
      //  file .Aa/nic.linked.opt.aa, line 252
      // Source expression
      // ( $mux is_dword_access_739_delayed_16_0 r_dword  _b0  ) 
      $T[MUX_799_sample_start_] 
      $T[MUX_799_sample_completed_] 
      $T[MUX_799_update_start_] 
      $T[MUX_799_update_completed_] 
      // barrier 
      MUX_799_sample_start_ <-& (barrier_stmt_716_update_completed_)
      // is_dword_access_739_delayed_16_0
      // r_dword
      // start: Forward dependencies from is_dword_access_739_delayed_16_0 to transition MUX_799_sample_start_
      MUX_799_sample_start_ <-& (assign_stmt_794_update_completed_)
      // done: Forward dependencies from is_dword_access_739_delayed_16_0 to transition MUX_799_sample_start_
      // start: Forward dependencies from r_dword to transition MUX_799_sample_start_
      MUX_799_sample_start_ <-& (call_stmt_749_update_completed_)
      // done: Forward dependencies from r_dword to transition MUX_799_sample_start_
      ;;[MUX_799_start] 
      {
        // ternary expression: 
        $T [req] $T [ack] // sample req/ack
      }
      ;;[MUX_799_complete] 
      {
        // ternary expression: 
        $T [req] $T [ack] // update req/ack
      }
      MUX_799_sample_start_ &-> (MUX_799_start)
      MUX_799_sample_completed_ <-& (MUX_799_start)
      MUX_799_sample_completed_ &-> ($null)
      MUX_799_update_start_ &-> (MUX_799_complete)
      MUX_799_update_completed_ <-& (MUX_799_complete)
      // RAW reenables for is_dword_access_739_delayed_16_0
      assign_stmt_794_update_start_ o<-& (MUX_799_sample_completed_ 0)
      // RAW reenables for r_dword
      call_stmt_749_update_start_ o<-& (MUX_799_sample_completed_ 0)
      // self-release: 
      MUX_799_sample_start_ o<-& (MUX_799_sample_completed_ 1)
      $null &-> (MUX_799_update_start_)
      MUX_799_update_start_ o<-& (MUX_799_update_completed_ 0)
      // Target expression
      // (as target) MUX_742_742_delayed_1_0
      // start: WAR dependencies for MUX_742_742_delayed_1_0
      // done: WAR dependencies for MUX_742_742_delayed_1_0
      // end:  	MUX_742_742_delayed_1_0 := ( $mux is_dword_access_739_delayed_16_0 r_dword  _b0  )  $buffering 1 $cut_through // bits of buffering = 64. 
      // start: WAR dependencies for rdata
      // done: WAR dependencies for rdata
      // start:  	$volatile rdata := ((( $mux OR_u1_u1_724_724_delayed_17_0 (($bitcast ($uint<56>) _b0  ) && r_byte)  _b0  )  | ( $mux is_word_access_731_delayed_17_0 (($bitcast ($uint<32>) _b0  ) && r_word)  _b0  ) ) | MUX_742_742_delayed_1_0) $buffering 1
      //  file .Aa/nic.linked.opt.aa, line 253
      // volatile! 
      // Source expression
      // ((( $mux OR_u1_u1_724_724_delayed_17_0 (($bitcast ($uint<56>) _b0  ) && r_byte)  _b0  )  | ( $mux is_word_access_731_delayed_17_0 (($bitcast ($uint<32>) _b0  ) && r_word)  _b0  ) ) | MUX_742_742_delayed_1_0)
      // (( $mux OR_u1_u1_724_724_delayed_17_0 (($bitcast ($uint<56>) _b0  ) && r_byte)  _b0  )  | ( $mux is_word_access_731_delayed_17_0 (($bitcast ($uint<32>) _b0  ) && r_word)  _b0  ) )
      // ( $mux OR_u1_u1_724_724_delayed_17_0 (($bitcast ($uint<56>) _b0  ) && r_byte)  _b0  ) 
      // OR_u1_u1_724_724_delayed_17_0
      // (($bitcast ($uint<56>) _b0  ) && r_byte)
      // r_byte
      // ( $mux is_word_access_731_delayed_17_0 (($bitcast ($uint<32>) _b0  ) && r_word)  _b0  ) 
      // is_word_access_731_delayed_17_0
      // (($bitcast ($uint<32>) _b0  ) && r_word)
      // r_word
      // MUX_742_742_delayed_1_0
      // Target expression
      // (as target) rdata
      // rdata
      // write to interface object
      // start: WAR dependencies for rdata
      // done: WAR dependencies for rdata
      // rdata
      // write to interface object
      call_stmt_725_update_start_ <-& (rdata_update_enable)
      call_stmt_737_update_start_ <-& (rdata_update_enable)
      OR_u1_u1_787_update_start_ <-& (rdata_update_enable)
      assign_stmt_791_update_start_ <-& (rdata_update_enable)
      MUX_799_update_start_ <-& (rdata_update_enable)
      // end:  	$volatile rdata := ((( $mux OR_u1_u1_724_724_delayed_17_0 (($bitcast ($uint<56>) _b0  ) && r_byte)  _b0  )  | ( $mux is_word_access_731_delayed_17_0 (($bitcast ($uint<32>) _b0  ) && r_word)  _b0  ) ) | MUX_742_742_delayed_1_0) $buffering 1
      // Barrier in pipelined body 
      $T[barrier_stmt_820_update_completed_] 
      barrier_stmt_820_update_completed_ <-& (MUX_799_update_completed_)
      barrier_stmt_820_update_completed_ <-& (assign_stmt_794_update_completed_)
      barrier_stmt_820_update_completed_ <-& (assign_stmt_791_update_completed_)
      barrier_stmt_820_update_completed_ <-& (OR_u1_u1_787_update_completed_)
      barrier_stmt_820_update_completed_ <-& (call_stmt_783_update_completed_)
      barrier_stmt_820_update_completed_ <-& (assign_stmt_771_update_completed_)
      barrier_stmt_820_update_completed_ <-& (assign_stmt_768_update_completed_)
      barrier_stmt_820_update_completed_ <-& (assign_stmt_765_update_completed_)
      barrier_stmt_820_update_completed_ <-& (assign_stmt_762_update_completed_)
      barrier_stmt_820_update_completed_ <-& (assign_stmt_752_update_completed_)
      barrier_stmt_820_update_completed_ <-& (call_stmt_749_update_completed_)
      barrier_stmt_820_update_completed_ <-& (call_stmt_737_update_completed_)
      barrier_stmt_820_update_completed_ <-& (call_stmt_725_update_completed_)
      // start:  	$guard (is_ldstub) memory_access_lock := ($bitcast ($uint<1>) _b1  ) $buffering 1// bits of buffering = 1. 
      //  file .Aa/nic.linked.opt.aa, line 255
      // Guard expression 
      // is_ldstub
      // Target expression
      // (as target) memory_access_lock
      $T[WPIPE_memory_access_lock_822_sample_start_] 
      $T[WPIPE_memory_access_lock_822_sample_completed_] 
      $T[WPIPE_memory_access_lock_822_update_start_] 
      $T[WPIPE_memory_access_lock_822_update_completed_] 
      // barrier 
      WPIPE_memory_access_lock_822_sample_start_ <-& (barrier_stmt_820_update_completed_)
      // Guard dependency for expression WPIPE_memory_access_lock_822 with guard R_is_ldstub_821
      // Guard forward dependency 
      WPIPE_memory_access_lock_822_sample_start_ <-& ($entry)
      // RAW reenables for is_ldstub
      opcode_update_enable o<-& (WPIPE_memory_access_lock_822_sample_completed_ 0)
      ;;[WPIPE_memory_access_lock_822_Sample] 
      {
        // pipe write sample-start memory_access_lock
        $T [req] $T [ack] 
      }
      ;;[WPIPE_memory_access_lock_822_Update] 
      {
        // pipe write update (complete) memory_access_lock
        $T [req] $T [ack] 
      }
      WPIPE_memory_access_lock_822_sample_start_ &-> (WPIPE_memory_access_lock_822_Sample)
      WPIPE_memory_access_lock_822_sample_completed_ <-& (WPIPE_memory_access_lock_822_Sample)
      WPIPE_memory_access_lock_822_update_start_ <-& (WPIPE_memory_access_lock_822_sample_completed_)
      WPIPE_memory_access_lock_822_update_start_ &-> (WPIPE_memory_access_lock_822_Update)
      WPIPE_memory_access_lock_822_update_completed_ <-& (WPIPE_memory_access_lock_822_Update)
      WPIPE_memory_access_lock_822_sample_start_ o<-& (WPIPE_memory_access_lock_822_update_completed_ 0)
      // end:  	$guard (is_ldstub) memory_access_lock := ($bitcast ($uint<1>) _b1  ) $buffering 1// bits of buffering = 1. 
      // load-store dependencies..
      // pipe read/write dependencies for pipe MEMORY_TO_NIC_RESPONSE
      // read-dependencies for pipe MEMORY_TO_NIC_RESPONSE
      call_stmt_737_sample_start_ <-& (call_stmt_725_update_completed_)
      call_stmt_749_sample_start_ <-& (call_stmt_737_update_completed_)
      call_stmt_783_sample_start_ <-& (call_stmt_749_update_completed_)
      // ring dependency in pipeline.
      // function call expression/statement ...
      call_stmt_725_sample_start_ o<-& (call_stmt_783_update_completed_ 0)
      // write-dependencies for pipe MEMORY_TO_NIC_RESPONSE
      // signal write dependencies for MEMORY_TO_NIC_RESPONSE
      // pipe read/write dependencies for pipe NIC_DEBUG_SIGNAL
      // read-dependencies for pipe NIC_DEBUG_SIGNAL
      // write-dependencies for pipe NIC_DEBUG_SIGNAL
      // signal write dependencies for NIC_DEBUG_SIGNAL
      call_stmt_737_sample_start_ <-& (call_stmt_725_update_completed_)
      call_stmt_749_sample_start_ <-& (call_stmt_737_update_completed_)
      call_stmt_783_sample_start_ <-& (call_stmt_749_update_completed_)
      // ring dependency in pipeline.
      call_stmt_725_sample_start_ o<-& (call_stmt_783_update_completed_ 0)
      // pipe read/write dependencies for pipe NIC_TO_MEMORY_REQUEST
      // read-dependencies for pipe NIC_TO_MEMORY_REQUEST
      // write-dependencies for pipe NIC_TO_MEMORY_REQUEST
      call_stmt_737_sample_start_ <-& (call_stmt_725_update_completed_)
      call_stmt_749_sample_start_ <-& (call_stmt_737_update_completed_)
      call_stmt_783_sample_start_ <-& (call_stmt_749_update_completed_)
      // ring dependency in pipeline.
      call_stmt_725_sample_start_ o<-& (call_stmt_783_update_completed_ 0)
      // signal write dependencies for NIC_TO_MEMORY_REQUEST
      // pipe read/write dependencies for pipe memory_access_lock
      // read-dependencies for pipe memory_access_lock
      // write-dependencies for pipe memory_access_lock
      WPIPE_memory_access_lock_822_sample_start_ <-& (WPIPE_memory_access_lock_713_update_completed_)
      // ring dependency in pipeline.
      WPIPE_memory_access_lock_713_sample_start_ o<-& (WPIPE_memory_access_lock_822_update_completed_ 0)
      // signal write dependencies for memory_access_lock
    }
    ( rdata_update_enable_in)
    ( tag_update_enable_out opcode_update_enable_out base_addr_update_enable_out offset_update_enable_out wdata_update_enable_out)
    $P [tag_update_enable] 
    $P [opcode_update_enable] 
    $P [base_addr_update_enable] 
    $P [offset_update_enable] 
    $P [wdata_update_enable] 
    $P [rdata_update_enable] 
    $bind tag_update_enable <= assign_stmt_640_to_assign_stmt_825 : tag_update_enable_out
    $bind opcode_update_enable <= assign_stmt_640_to_assign_stmt_825 : opcode_update_enable_out
    $bind base_addr_update_enable <= assign_stmt_640_to_assign_stmt_825 : base_addr_update_enable_out
    $bind offset_update_enable <= assign_stmt_640_to_assign_stmt_825 : offset_update_enable_out
    $bind wdata_update_enable <= assign_stmt_640_to_assign_stmt_825 : wdata_update_enable_out
    $bind rdata_update_enable => assign_stmt_640_to_assign_stmt_825 : rdata_update_enable_in
  }
  // end control-path
  $DP 
  {
    // begin data-path 
    // constant-object-declarations for block %doMemAccess
    //  file .Aa/nic.linked.opt.aa, line 218
    // STB
    $constant $W[R_STB_634_wire_constant] : $int<3> := _b011// 3
    // LDB
    $constant $W[R_LDB_637_wire_constant] : $int<3> := _b110// 6
    // ST
    $constant $W[R_ST_643_wire_constant] : $int<3> := _b001// 1
    // LD
    $constant $W[R_LD_646_wire_constant] : $int<3> := _b100// 4
    // STD
    $constant $W[R_STD_652_wire_constant] : $int<3> := _b010// 2
    // LDD
    $constant $W[R_LDD_655_wire_constant] : $int<3> := _b101// 5
    // STB
    $constant $W[R_STB_661_wire_constant] : $int<3> := _b011// 3
    // ST
    $constant $W[R_ST_664_wire_constant] : $int<3> := _b001// 1
    // STD
    $constant $W[R_STD_668_wire_constant] : $int<3> := _b010// 2
    // LDSTUB
    $constant $W[R_LDSTUB_674_wire_constant] : $int<3> := _b111// 7
    // ( $mux is_write WRITEMEM  READMEM ) 
    // WRITEMEM
    $constant $W[R_WRITEMEM_695_wire_constant] : $int<1> := _b0// 0
    // READMEM
    $constant $W[R_READMEM_696_wire_constant] : $int<1> := _b1// 1
    // ( $mux is_ldstub LOCKMEM  UNLOCKMEM ) 
    // LOCKMEM
    $constant $W[R_LOCKMEM_701_wire_constant] : $int<1> := _b1// 1
    // UNLOCKMEM
    $constant $W[R_UNLOCKMEM_702_wire_constant] : $int<1> := _b0// 0
    // 	$guard (do_first_byte) $call accessMemoryByteBase (tag first_byte_lock first_byte_rwbar base_addr offset w_byte ) (r_byte ) 
    //  file .Aa/nic.linked.opt.aa, line 239
    // 	$guard (is_word_access) $call accessMemoryWordBase (tag UNLOCKMEM ( $mux is_write WRITEMEM  READMEM )  base_addr offset w_word ) (r_word ) 
    //  file .Aa/nic.linked.opt.aa, line 240
    // UNLOCKMEM
    $constant $W[R_UNLOCKMEM_728_wire_constant] : $int<1> := _b0// 0
    // ( $mux is_write WRITEMEM  READMEM ) 
    // WRITEMEM
    $constant $W[R_WRITEMEM_730_wire_constant] : $int<1> := _b0// 0
    // READMEM
    $constant $W[R_READMEM_731_wire_constant] : $int<1> := _b1// 1
    // 	$guard (is_dword_access) $call accessMemoryDwordBase (tag UNLOCKMEM ( $mux is_write WRITEMEM  READMEM )  base_addr offset w_dword ) (r_dword ) 
    //  file .Aa/nic.linked.opt.aa, line 241
    // UNLOCKMEM
    $constant $W[R_UNLOCKMEM_740_wire_constant] : $int<1> := _b0// 0
    // ( $mux is_write WRITEMEM  READMEM ) 
    // WRITEMEM
    $constant $W[R_WRITEMEM_742_wire_constant] : $int<1> := _b0// 0
    // READMEM
    $constant $W[R_READMEM_743_wire_constant] : $int<1> := _b1// 1
    // 0 
    $constant $W[konst_756_wire_constant] : $int<8> := _b00000000// 0
    // 	$guard (is_ldstub_709_delayed_17_0) $call accessMemoryByteBase (tag_710_delayed_17_0 UNLOCKMEM ( $mux do_ldstub_write WRITEMEM  READMEM )  base_addr_716_delayed_17_0 offset_717_delayed_17_0 _hFF  ) (r_byte_second_ldstub ) 
    //  file .Aa/nic.linked.opt.aa, line 248
    // UNLOCKMEM
    $constant $W[R_UNLOCKMEM_774_wire_constant] : $int<1> := _b0// 0
    // ( $mux do_ldstub_write WRITEMEM  READMEM ) 
    // WRITEMEM
    $constant $W[R_WRITEMEM_776_wire_constant] : $int<1> := _b0// 0
    // READMEM
    $constant $W[R_READMEM_777_wire_constant] : $int<1> := _b1// 1
    // _hFF 
    $constant $W[konst_781_wire_constant] : $int<8> := _b11111111// 255
    // ( $mux is_dword_access_739_delayed_16_0 r_dword  _b0  ) 
    // _b0 
    $constant $W[konst_798_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000000000// 0
    // ( $mux OR_u1_u1_724_724_delayed_17_0 (($bitcast ($uint<56>) _b0  ) && r_byte)  _b0  ) 
    // ($bitcast ($uint<56>) _b0  )
    $constant $W[type_cast_804_wire_constant] : $int<56> := _b00000000000000000000000000000000000000000000000000000000// 0
    // _b0 
    $constant $W[konst_807_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000000000// 0
    // ( $mux is_word_access_731_delayed_17_0 (($bitcast ($uint<32>) _b0  ) && r_word)  _b0  ) 
    // ($bitcast ($uint<32>) _b0  )
    $constant $W[type_cast_811_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // _b0 
    $constant $W[konst_814_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000000000// 0
    // ($bitcast ($uint<1>) _b1  )
    $constant $W[type_cast_824_wire_constant] : $int<1> := _b1// 1
    // 	$volatile is_byte_access := ((opcode == STB) | (opcode == LDB)) $buffering 1
    //  file .Aa/nic.linked.opt.aa, line 223
    // (opcode == STB)
    $intermediate $W[EQ_u3_u1_635_wire] : $int<1>
    // (opcode == LDB)
    $intermediate $W[EQ_u3_u1_638_wire] : $int<1>
    // is_byte_access
    $W[is_byte_access_640] : $int<1>
    // 	$volatile is_word_access := ((opcode == ST) | (opcode == LD)) $buffering 1
    //  file .Aa/nic.linked.opt.aa, line 224
    // (opcode == ST)
    $intermediate $W[EQ_u3_u1_644_wire] : $int<1>
    // (opcode == LD)
    $intermediate $W[EQ_u3_u1_647_wire] : $int<1>
    // is_word_access
    $W[is_word_access_649] : $int<1>
    // 	$volatile is_dword_access := ((opcode == STD) | (opcode == LDD)) $buffering 1
    //  file .Aa/nic.linked.opt.aa, line 225
    // (opcode == STD)
    $intermediate $W[EQ_u3_u1_653_wire] : $int<1>
    // (opcode == LDD)
    $intermediate $W[EQ_u3_u1_656_wire] : $int<1>
    // is_dword_access
    $W[is_dword_access_658] : $int<1>
    // 	$volatile is_write := (((opcode == STB) | (opcode == ST)) | (opcode == STD)) $buffering 1
    //  file .Aa/nic.linked.opt.aa, line 226
    // (opcode == STB)
    $intermediate $W[EQ_u3_u1_662_wire] : $int<1>
    // (opcode == ST)
    $intermediate $W[EQ_u3_u1_665_wire] : $int<1>
    // ((opcode == STB) | (opcode == ST))
    $intermediate $W[OR_u1_u1_666_wire] : $int<1>
    // (opcode == STD)
    $intermediate $W[EQ_u3_u1_669_wire] : $int<1>
    // is_write
    $W[is_write_671] : $int<1>
    // 	$volatile is_ldstub := (opcode == LDSTUB) $buffering 1
    //  file .Aa/nic.linked.opt.aa, line 227
    // is_ldstub
    $W[is_ldstub_676] : $int<1>
    // 	$volatile w_byte := ( $slice wdata 7 0 )  $buffering 1
    //  file .Aa/nic.linked.opt.aa, line 228
    // w_byte
    $W[w_byte_680] : $int<8>
    // 	$volatile w_word := ( $slice wdata 31 0 )  $buffering 1
    //  file .Aa/nic.linked.opt.aa, line 229
    // w_word
    $W[w_word_684] : $int<32>
    // 	$volatile w_dword := wdata $buffering 1
    //  file .Aa/nic.linked.opt.aa, line 230
    // w_dword
    $W[w_dword_687] : $int<64>
    // 	$volatile do_first_byte := (is_ldstub | is_byte_access) $buffering 1
    //  file .Aa/nic.linked.opt.aa, line 231
    // do_first_byte
    $W[do_first_byte_692] : $int<1>
    // 	$volatile first_byte_rwbar := ( $mux is_write WRITEMEM  READMEM )  $buffering 1
    //  file .Aa/nic.linked.opt.aa, line 232
    // first_byte_rwbar
    $W[first_byte_rwbar_698] : $int<1>
    // 	$volatile first_byte_lock := ( $mux is_ldstub LOCKMEM  UNLOCKMEM )  $buffering 1
    //  file .Aa/nic.linked.opt.aa, line 233
    // first_byte_lock
    $W[first_byte_lock_704] : $int<1>
    // 	mem_lock := memory_access_lock $buffering 1// bits of buffering = 1. 
    //  file .Aa/nic.linked.opt.aa, line 234
    // mem_lock
    $W[mem_lock_707] : $int<1>
    // 	is_ldstub_664_delayed_1_0 := is_ldstub $buffering 1 $cut_through // bits of buffering = 1. 
    //  file .Aa/nic.linked.opt.aa, line 236
    // is_ldstub_664_delayed_1_0
    $W[is_ldstub_664_delayed_1_0_711] : $int<1>
    // 	$guard (~is_ldstub_664_delayed_1_0) memory_access_lock := mem_lock $buffering 1// bits of buffering = 1. 
    //  file .Aa/nic.linked.opt.aa, line 237
    // memory_access_lock
    // 	$guard (do_first_byte) $call accessMemoryByteBase (tag first_byte_lock first_byte_rwbar base_addr offset w_byte ) (r_byte ) 
    //  file .Aa/nic.linked.opt.aa, line 239
    // r_byte
    $W[r_byte_725] : $int<8>
    // 	$guard (is_word_access) $call accessMemoryWordBase (tag UNLOCKMEM ( $mux is_write WRITEMEM  READMEM )  base_addr offset w_word ) (r_word ) 
    //  file .Aa/nic.linked.opt.aa, line 240
    // ( $mux is_write WRITEMEM  READMEM ) 
    $intermediate $W[MUX_732_wire] : $int<1>
    // r_word
    $W[r_word_737] : $int<32>
    // 	$guard (is_dword_access) $call accessMemoryDwordBase (tag UNLOCKMEM ( $mux is_write WRITEMEM  READMEM )  base_addr offset w_dword ) (r_dword ) 
    //  file .Aa/nic.linked.opt.aa, line 241
    // ( $mux is_write WRITEMEM  READMEM ) 
    $intermediate $W[MUX_744_wire] : $int<1>
    // r_dword
    $W[r_dword_749] : $int<64>
    // 	is_ldstub_703_delayed_17_0 := is_ldstub $buffering 17 $cut_through // bits of buffering = 17. 
    //  file .Aa/nic.linked.opt.aa, line 242
    // is_ldstub_703_delayed_17_0
    $W[is_ldstub_703_delayed_17_0_752] : $int<1>
    // 	$volatile do_ldstub_write := (is_ldstub_703_delayed_17_0 & (r_byte == 0 )) $buffering 1
    //  file .Aa/nic.linked.opt.aa, line 243
    // (r_byte == 0 )
    $intermediate $W[EQ_u8_u1_757_wire] : $int<1>
    // do_ldstub_write
    $W[do_ldstub_write_759] : $int<1>
    // 	is_ldstub_709_delayed_17_0 := is_ldstub $buffering 17 $cut_through // bits of buffering = 17. 
    //  file .Aa/nic.linked.opt.aa, line 244
    // is_ldstub_709_delayed_17_0
    $W[is_ldstub_709_delayed_17_0_762] : $int<1>
    // 	tag_710_delayed_17_0 := tag $buffering 17 $cut_through // bits of buffering = 136. 
    //  file .Aa/nic.linked.opt.aa, line 245
    // tag_710_delayed_17_0
    $W[tag_710_delayed_17_0_765] : $int<8>
    // 	base_addr_716_delayed_17_0 := base_addr $buffering 17 $cut_through // bits of buffering = 1088. 
    //  file .Aa/nic.linked.opt.aa, line 246
    // base_addr_716_delayed_17_0
    $W[base_addr_716_delayed_17_0_768] : $int<64>
    // 	offset_717_delayed_17_0 := offset $buffering 17 $cut_through // bits of buffering = 1088. 
    //  file .Aa/nic.linked.opt.aa, line 247
    // offset_717_delayed_17_0
    $W[offset_717_delayed_17_0_771] : $int<64>
    // 	$guard (is_ldstub_709_delayed_17_0) $call accessMemoryByteBase (tag_710_delayed_17_0 UNLOCKMEM ( $mux do_ldstub_write WRITEMEM  READMEM )  base_addr_716_delayed_17_0 offset_717_delayed_17_0 _hFF  ) (r_byte_second_ldstub ) 
    //  file .Aa/nic.linked.opt.aa, line 248
    // ( $mux do_ldstub_write WRITEMEM  READMEM ) 
    $intermediate $W[MUX_778_wire] : $int<1>
    // r_byte_second_ldstub
    $W[r_byte_second_ldstub_783] : $int<8>
    // 	OR_u1_u1_724_724_delayed_17_0 := (is_ldstub | is_byte_access) $buffering 17 $cut_through // bits of buffering = 17. 
    //  file .Aa/nic.linked.opt.aa, line 249
    // OR_u1_u1_724_724_delayed_17_0
    $W[OR_u1_u1_724_724_delayed_17_0_788] : $int<1>
    // 	is_word_access_731_delayed_17_0 := is_word_access $buffering 17 $cut_through // bits of buffering = 17. 
    //  file .Aa/nic.linked.opt.aa, line 250
    // is_word_access_731_delayed_17_0
    $W[is_word_access_731_delayed_17_0_791] : $int<1>
    // 	is_dword_access_739_delayed_16_0 := is_dword_access $buffering 16 $cut_through // bits of buffering = 16. 
    //  file .Aa/nic.linked.opt.aa, line 251
    // is_dword_access_739_delayed_16_0
    $W[is_dword_access_739_delayed_16_0_794] : $int<1>
    // 	MUX_742_742_delayed_1_0 := ( $mux is_dword_access_739_delayed_16_0 r_dword  _b0  )  $buffering 1 $cut_through // bits of buffering = 64. 
    //  file .Aa/nic.linked.opt.aa, line 252
    // MUX_742_742_delayed_1_0
    $W[MUX_742_742_delayed_1_0_800] : $int<64>
    // 	$volatile rdata := ((( $mux OR_u1_u1_724_724_delayed_17_0 (($bitcast ($uint<56>) _b0  ) && r_byte)  _b0  )  | ( $mux is_word_access_731_delayed_17_0 (($bitcast ($uint<32>) _b0  ) && r_word)  _b0  ) ) | MUX_742_742_delayed_1_0) $buffering 1
    //  file .Aa/nic.linked.opt.aa, line 253
    // (($bitcast ($uint<56>) _b0  ) && r_byte)
    $intermediate $W[CONCAT_u56_u64_806_wire] : $int<64>
    // ( $mux OR_u1_u1_724_724_delayed_17_0 (($bitcast ($uint<56>) _b0  ) && r_byte)  _b0  ) 
    $intermediate $W[MUX_808_wire] : $int<64>
    // (($bitcast ($uint<32>) _b0  ) && r_word)
    $intermediate $W[CONCAT_u32_u64_813_wire] : $int<64>
    // ( $mux is_word_access_731_delayed_17_0 (($bitcast ($uint<32>) _b0  ) && r_word)  _b0  ) 
    $intermediate $W[MUX_815_wire] : $int<64>
    // (( $mux OR_u1_u1_724_724_delayed_17_0 (($bitcast ($uint<56>) _b0  ) && r_byte)  _b0  )  | ( $mux is_word_access_731_delayed_17_0 (($bitcast ($uint<32>) _b0  ) && r_word)  _b0  ) )
    $intermediate $W[OR_u64_u64_816_wire] : $int<64>
    // rdata
    // 	$guard (is_ldstub) memory_access_lock := ($bitcast ($uint<1>) _b1  ) $buffering 1// bits of buffering = 1. 
    //  file .Aa/nic.linked.opt.aa, line 255
    // memory_access_lock
    // 	$volatile is_byte_access := ((opcode == STB) | (opcode == LDB)) $buffering 1
    //  file .Aa/nic.linked.opt.aa, line 223
    // (opcode == STB)
    ==[EQ_u3_u1_635_inst] (opcode R_STB_634_wire_constant) (EQ_u3_u1_635_wire)   $flowthrough 
    $delay EQ_u3_u1_635_inst 0
    // (opcode == LDB)
    ==[EQ_u3_u1_638_inst] (opcode R_LDB_637_wire_constant) (EQ_u3_u1_638_wire)   $flowthrough 
    $delay EQ_u3_u1_638_inst 0
    // ((opcode == STB) | (opcode == LDB))
    |[OR_u1_u1_639_inst] (EQ_u3_u1_635_wire EQ_u3_u1_638_wire) (is_byte_access_640)   $flowthrough 
    $delay OR_u1_u1_639_inst 0
    // 	$volatile is_word_access := ((opcode == ST) | (opcode == LD)) $buffering 1
    //  file .Aa/nic.linked.opt.aa, line 224
    // (opcode == ST)
    ==[EQ_u3_u1_644_inst] (opcode R_ST_643_wire_constant) (EQ_u3_u1_644_wire)   $flowthrough 
    $delay EQ_u3_u1_644_inst 0
    // (opcode == LD)
    ==[EQ_u3_u1_647_inst] (opcode R_LD_646_wire_constant) (EQ_u3_u1_647_wire)   $flowthrough 
    $delay EQ_u3_u1_647_inst 0
    // ((opcode == ST) | (opcode == LD))
    |[OR_u1_u1_648_inst] (EQ_u3_u1_644_wire EQ_u3_u1_647_wire) (is_word_access_649)   $flowthrough 
    $delay OR_u1_u1_648_inst 0
    // 	$volatile is_dword_access := ((opcode == STD) | (opcode == LDD)) $buffering 1
    //  file .Aa/nic.linked.opt.aa, line 225
    // (opcode == STD)
    ==[EQ_u3_u1_653_inst] (opcode R_STD_652_wire_constant) (EQ_u3_u1_653_wire)   $flowthrough 
    $delay EQ_u3_u1_653_inst 0
    // (opcode == LDD)
    ==[EQ_u3_u1_656_inst] (opcode R_LDD_655_wire_constant) (EQ_u3_u1_656_wire)   $flowthrough 
    $delay EQ_u3_u1_656_inst 0
    // ((opcode == STD) | (opcode == LDD))
    |[OR_u1_u1_657_inst] (EQ_u3_u1_653_wire EQ_u3_u1_656_wire) (is_dword_access_658)   $flowthrough 
    $delay OR_u1_u1_657_inst 0
    // 	$volatile is_write := (((opcode == STB) | (opcode == ST)) | (opcode == STD)) $buffering 1
    //  file .Aa/nic.linked.opt.aa, line 226
    // (opcode == STB)
    ==[EQ_u3_u1_662_inst] (opcode R_STB_661_wire_constant) (EQ_u3_u1_662_wire)   $flowthrough 
    $delay EQ_u3_u1_662_inst 0
    // (opcode == ST)
    ==[EQ_u3_u1_665_inst] (opcode R_ST_664_wire_constant) (EQ_u3_u1_665_wire)   $flowthrough 
    $delay EQ_u3_u1_665_inst 0
    // ((opcode == STB) | (opcode == ST))
    |[OR_u1_u1_666_inst] (EQ_u3_u1_662_wire EQ_u3_u1_665_wire) (OR_u1_u1_666_wire)   $flowthrough 
    $delay OR_u1_u1_666_inst 0
    // (opcode == STD)
    ==[EQ_u3_u1_669_inst] (opcode R_STD_668_wire_constant) (EQ_u3_u1_669_wire)   $flowthrough 
    $delay EQ_u3_u1_669_inst 0
    // (((opcode == STB) | (opcode == ST)) | (opcode == STD))
    |[OR_u1_u1_670_inst] (OR_u1_u1_666_wire EQ_u3_u1_669_wire) (is_write_671)   $flowthrough 
    $delay OR_u1_u1_670_inst 0
    // 	$volatile is_ldstub := (opcode == LDSTUB) $buffering 1
    //  file .Aa/nic.linked.opt.aa, line 227
    // (opcode == LDSTUB)
    ==[EQ_u3_u1_675_inst] (opcode R_LDSTUB_674_wire_constant) (is_ldstub_676)   $flowthrough 
    $delay EQ_u3_u1_675_inst 0
    // 	$volatile w_byte := ( $slice wdata 7 0 )  $buffering 1
    //  file .Aa/nic.linked.opt.aa, line 228
    // ( $slice wdata 7 0 ) 
    [:] [slice_679_inst] (wdata 7 0) (w_byte_680)  $flowthrough
    $delay slice_679_inst 0
    // 	$volatile w_word := ( $slice wdata 31 0 )  $buffering 1
    //  file .Aa/nic.linked.opt.aa, line 229
    // ( $slice wdata 31 0 ) 
    [:] [slice_683_inst] (wdata 31 0) (w_word_684)  $flowthrough
    $delay slice_683_inst 0
    // 	$volatile w_dword := wdata $buffering 1
    //  file .Aa/nic.linked.opt.aa, line 230
    # := [W_w_dword_685_inst] (wdata) (w_dword_687)     $flowthrough 
    // 	$volatile do_first_byte := (is_ldstub | is_byte_access) $buffering 1
    //  file .Aa/nic.linked.opt.aa, line 231
    // (is_ldstub | is_byte_access)
    |[OR_u1_u1_691_inst] (is_ldstub_676 is_byte_access_640) (do_first_byte_692)   $flowthrough 
    $delay OR_u1_u1_691_inst 0
    // 	$volatile first_byte_rwbar := ( $mux is_write WRITEMEM  READMEM )  $buffering 1
    //  file .Aa/nic.linked.opt.aa, line 232
    // ( $mux is_write WRITEMEM  READMEM ) 
    ? [MUX_697_inst] (is_write_671 R_WRITEMEM_695_wire_constant R_READMEM_696_wire_constant) (first_byte_rwbar_698)  $flowthrough
    // 	$volatile first_byte_lock := ( $mux is_ldstub LOCKMEM  UNLOCKMEM )  $buffering 1
    //  file .Aa/nic.linked.opt.aa, line 233
    // ( $mux is_ldstub LOCKMEM  UNLOCKMEM ) 
    ? [MUX_703_inst] (is_ldstub_676 R_LOCKMEM_701_wire_constant R_UNLOCKMEM_702_wire_constant) (first_byte_lock_704)  $flowthrough
    // 	mem_lock := memory_access_lock $buffering 1// bits of buffering = 1. 
    //  file .Aa/nic.linked.opt.aa, line 234
    // memory_access_lock
    $ioport $in [RPIPE_memory_access_lock_706_inst] (memory_access_lock) (mem_lock_707)  $fullrate 
    $buffering $out RPIPE_memory_access_lock_706_inst mem_lock_707 1
    // 	is_ldstub_664_delayed_1_0 := is_ldstub $buffering 1 $cut_through // bits of buffering = 1. 
    //  file .Aa/nic.linked.opt.aa, line 236
    # := [W_is_ldstub_664_delayed_1_0_709_inst] (is_ldstub_676) (is_ldstub_664_delayed_1_0_711)  $cut_through     $fullrate
    // 	$guard (~is_ldstub_664_delayed_1_0) memory_access_lock := mem_lock $buffering 1// bits of buffering = 1. 
    //  file .Aa/nic.linked.opt.aa, line 237
    // memory_access_lock
    $ioport $out [WPIPE_memory_access_lock_713_inst]  (mem_lock_707) (memory_access_lock) $guard ( ~ is_ldstub_664_delayed_1_0_711 )  $fullrate 
    // 	$guard (do_first_byte) $call accessMemoryByteBase (tag first_byte_lock first_byte_rwbar base_addr offset w_byte ) (r_byte ) 
    //  file .Aa/nic.linked.opt.aa, line 239
    $call [call_stmt_725_call] $module accessMemoryByteBase(tag first_byte_lock_704 first_byte_rwbar_698 base_addr offset w_byte_680) (r_byte_725) $guard ( do_first_byte_692 )   $fullrate
    $delay call_stmt_725_call 17
    $buffering  $in call_stmt_725_call tag 1
    $buffering  $in call_stmt_725_call first_byte_lock_704 1
    $buffering  $in call_stmt_725_call first_byte_rwbar_698 1
    $buffering  $in call_stmt_725_call base_addr 1
    $buffering  $in call_stmt_725_call offset 1
    $buffering  $in call_stmt_725_call w_byte_680 1
    $buffering  $out call_stmt_725_call r_byte_725 1
    // 	$guard (is_word_access) $call accessMemoryWordBase (tag UNLOCKMEM ( $mux is_write WRITEMEM  READMEM )  base_addr offset w_word ) (r_word ) 
    //  file .Aa/nic.linked.opt.aa, line 240
    // ( $mux is_write WRITEMEM  READMEM ) 
    ? [MUX_732_inst] (is_write_671 R_WRITEMEM_730_wire_constant R_READMEM_731_wire_constant) (MUX_732_wire) $guard ( is_word_access_649 )  $flowthrough
    $call [call_stmt_737_call] $module accessMemoryWordBase(tag R_UNLOCKMEM_728_wire_constant MUX_732_wire base_addr offset w_word_684) (r_word_737) $guard ( is_word_access_649 )   $fullrate
    $delay call_stmt_737_call 17
    $buffering  $in call_stmt_737_call tag 1
    $buffering  $in call_stmt_737_call R_UNLOCKMEM_728_wire_constant 1
    $buffering  $in call_stmt_737_call MUX_732_wire 1
    $buffering  $in call_stmt_737_call base_addr 1
    $buffering  $in call_stmt_737_call offset 1
    $buffering  $in call_stmt_737_call w_word_684 1
    $buffering  $out call_stmt_737_call r_word_737 1
    // 	$guard (is_dword_access) $call accessMemoryDwordBase (tag UNLOCKMEM ( $mux is_write WRITEMEM  READMEM )  base_addr offset w_dword ) (r_dword ) 
    //  file .Aa/nic.linked.opt.aa, line 241
    // ( $mux is_write WRITEMEM  READMEM ) 
    ? [MUX_744_inst] (is_write_671 R_WRITEMEM_742_wire_constant R_READMEM_743_wire_constant) (MUX_744_wire) $guard ( is_dword_access_658 )  $flowthrough
    $call [call_stmt_749_call] $module accessMemoryDwordBase(tag R_UNLOCKMEM_740_wire_constant MUX_744_wire base_addr offset w_dword_687) (r_dword_749) $guard ( is_dword_access_658 )   $fullrate
    $delay call_stmt_749_call 16
    $buffering  $in call_stmt_749_call tag 1
    $buffering  $in call_stmt_749_call R_UNLOCKMEM_740_wire_constant 1
    $buffering  $in call_stmt_749_call MUX_744_wire 1
    $buffering  $in call_stmt_749_call base_addr 1
    $buffering  $in call_stmt_749_call offset 1
    $buffering  $in call_stmt_749_call w_dword_687 1
    $buffering  $out call_stmt_749_call r_dword_749 1
    // 	is_ldstub_703_delayed_17_0 := is_ldstub $buffering 17 $cut_through // bits of buffering = 17. 
    //  file .Aa/nic.linked.opt.aa, line 242
    # := [W_is_ldstub_703_delayed_17_0_750_inst] (is_ldstub_676) (is_ldstub_703_delayed_17_0_752)  $cut_through     $fullrate
    $buffering  $out W_is_ldstub_703_delayed_17_0_750_inst is_ldstub_703_delayed_17_0_752 17
    // 	$volatile do_ldstub_write := (is_ldstub_703_delayed_17_0 & (r_byte == 0 )) $buffering 1
    //  file .Aa/nic.linked.opt.aa, line 243
    // (r_byte == 0 )
    ==[EQ_u8_u1_757_inst] (r_byte_725 konst_756_wire_constant) (EQ_u8_u1_757_wire)   $flowthrough 
    $delay EQ_u8_u1_757_inst 0
    // (is_ldstub_703_delayed_17_0 & (r_byte == 0 ))
    &[AND_u1_u1_758_inst] (is_ldstub_703_delayed_17_0_752 EQ_u8_u1_757_wire) (do_ldstub_write_759)   $flowthrough 
    $delay AND_u1_u1_758_inst 0
    // 	is_ldstub_709_delayed_17_0 := is_ldstub $buffering 17 $cut_through // bits of buffering = 17. 
    //  file .Aa/nic.linked.opt.aa, line 244
    # := [W_is_ldstub_709_delayed_17_0_760_inst] (is_ldstub_676) (is_ldstub_709_delayed_17_0_762)  $cut_through     $fullrate
    $buffering  $out W_is_ldstub_709_delayed_17_0_760_inst is_ldstub_709_delayed_17_0_762 17
    // 	tag_710_delayed_17_0 := tag $buffering 17 $cut_through // bits of buffering = 136. 
    //  file .Aa/nic.linked.opt.aa, line 245
    # := [W_tag_710_delayed_17_0_763_inst] (tag) (tag_710_delayed_17_0_765)  $cut_through     $fullrate
    $buffering  $out W_tag_710_delayed_17_0_763_inst tag_710_delayed_17_0_765 17
    // 	base_addr_716_delayed_17_0 := base_addr $buffering 17 $cut_through // bits of buffering = 1088. 
    //  file .Aa/nic.linked.opt.aa, line 246
    # := [W_base_addr_716_delayed_17_0_766_inst] (base_addr) (base_addr_716_delayed_17_0_768)  $cut_through     $fullrate
    $buffering  $out W_base_addr_716_delayed_17_0_766_inst base_addr_716_delayed_17_0_768 17
    // 	offset_717_delayed_17_0 := offset $buffering 17 $cut_through // bits of buffering = 1088. 
    //  file .Aa/nic.linked.opt.aa, line 247
    # := [W_offset_717_delayed_17_0_769_inst] (offset) (offset_717_delayed_17_0_771)  $cut_through     $fullrate
    $buffering  $out W_offset_717_delayed_17_0_769_inst offset_717_delayed_17_0_771 17
    // 	$guard (is_ldstub_709_delayed_17_0) $call accessMemoryByteBase (tag_710_delayed_17_0 UNLOCKMEM ( $mux do_ldstub_write WRITEMEM  READMEM )  base_addr_716_delayed_17_0 offset_717_delayed_17_0 _hFF  ) (r_byte_second_ldstub ) 
    //  file .Aa/nic.linked.opt.aa, line 248
    // ( $mux do_ldstub_write WRITEMEM  READMEM ) 
    ? [MUX_778_inst] (do_ldstub_write_759 R_WRITEMEM_776_wire_constant R_READMEM_777_wire_constant) (MUX_778_wire) $guard ( is_ldstub_709_delayed_17_0_762 )  $flowthrough
    $call [call_stmt_783_call] $module accessMemoryByteBase(tag_710_delayed_17_0_765 R_UNLOCKMEM_774_wire_constant MUX_778_wire base_addr_716_delayed_17_0_768 offset_717_delayed_17_0_771 konst_781_wire_constant) (r_byte_second_ldstub_783) $guard ( is_ldstub_709_delayed_17_0_762 )   $fullrate
    $delay call_stmt_783_call 17
    $buffering  $in call_stmt_783_call tag_710_delayed_17_0_765 1
    $buffering  $in call_stmt_783_call R_UNLOCKMEM_774_wire_constant 1
    $buffering  $in call_stmt_783_call MUX_778_wire 1
    $buffering  $in call_stmt_783_call base_addr_716_delayed_17_0_768 1
    $buffering  $in call_stmt_783_call offset_717_delayed_17_0_771 1
    $buffering  $in call_stmt_783_call konst_781_wire_constant 1
    $buffering  $out call_stmt_783_call r_byte_second_ldstub_783 1
    // 	OR_u1_u1_724_724_delayed_17_0 := (is_ldstub | is_byte_access) $buffering 17 $cut_through // bits of buffering = 17. 
    //  file .Aa/nic.linked.opt.aa, line 249
    // (is_ldstub | is_byte_access)
    |[OR_u1_u1_787_inst] (is_ldstub_676 is_byte_access_640) (OR_u1_u1_724_724_delayed_17_0_788)    $fullrate
    $buffering  $out OR_u1_u1_787_inst OR_u1_u1_724_724_delayed_17_0_788 17
    $delay OR_u1_u1_787_inst 1
    // 	is_word_access_731_delayed_17_0 := is_word_access $buffering 17 $cut_through // bits of buffering = 17. 
    //  file .Aa/nic.linked.opt.aa, line 250
    # := [W_is_word_access_731_delayed_17_0_789_inst] (is_word_access_649) (is_word_access_731_delayed_17_0_791)  $cut_through     $fullrate
    $buffering  $out W_is_word_access_731_delayed_17_0_789_inst is_word_access_731_delayed_17_0_791 17
    // 	is_dword_access_739_delayed_16_0 := is_dword_access $buffering 16 $cut_through // bits of buffering = 16. 
    //  file .Aa/nic.linked.opt.aa, line 251
    # := [W_is_dword_access_739_delayed_16_0_792_inst] (is_dword_access_658) (is_dword_access_739_delayed_16_0_794)  $cut_through     $fullrate
    $buffering  $out W_is_dword_access_739_delayed_16_0_792_inst is_dword_access_739_delayed_16_0_794 16
    // 	MUX_742_742_delayed_1_0 := ( $mux is_dword_access_739_delayed_16_0 r_dword  _b0  )  $buffering 1 $cut_through // bits of buffering = 64. 
    //  file .Aa/nic.linked.opt.aa, line 252
    // ( $mux is_dword_access_739_delayed_16_0 r_dword  _b0  ) 
    ? [MUX_799_inst] (is_dword_access_739_delayed_16_0_794 r_dword_749 konst_798_wire_constant) (MUX_742_742_delayed_1_0_800)  $fullrate
    $buffering  $out MUX_799_inst MUX_742_742_delayed_1_0_800 1
    // 	$volatile rdata := ((( $mux OR_u1_u1_724_724_delayed_17_0 (($bitcast ($uint<56>) _b0  ) && r_byte)  _b0  )  | ( $mux is_word_access_731_delayed_17_0 (($bitcast ($uint<32>) _b0  ) && r_word)  _b0  ) ) | MUX_742_742_delayed_1_0) $buffering 1
    //  file .Aa/nic.linked.opt.aa, line 253
    // (($bitcast ($uint<56>) _b0  ) && r_byte)
    &&[CONCAT_u56_u64_806_inst] (type_cast_804_wire_constant r_byte_725) (CONCAT_u56_u64_806_wire)   $flowthrough 
    $delay CONCAT_u56_u64_806_inst 0
    // ( $mux OR_u1_u1_724_724_delayed_17_0 (($bitcast ($uint<56>) _b0  ) && r_byte)  _b0  ) 
    ? [MUX_808_inst] (OR_u1_u1_724_724_delayed_17_0_788 CONCAT_u56_u64_806_wire konst_807_wire_constant) (MUX_808_wire)  $flowthrough
    // (($bitcast ($uint<32>) _b0  ) && r_word)
    &&[CONCAT_u32_u64_813_inst] (type_cast_811_wire_constant r_word_737) (CONCAT_u32_u64_813_wire)   $flowthrough 
    $delay CONCAT_u32_u64_813_inst 0
    // ( $mux is_word_access_731_delayed_17_0 (($bitcast ($uint<32>) _b0  ) && r_word)  _b0  ) 
    ? [MUX_815_inst] (is_word_access_731_delayed_17_0_791 CONCAT_u32_u64_813_wire konst_814_wire_constant) (MUX_815_wire)  $flowthrough
    // (( $mux OR_u1_u1_724_724_delayed_17_0 (($bitcast ($uint<56>) _b0  ) && r_byte)  _b0  )  | ( $mux is_word_access_731_delayed_17_0 (($bitcast ($uint<32>) _b0  ) && r_word)  _b0  ) )
    |[OR_u64_u64_816_inst] (MUX_808_wire MUX_815_wire) (OR_u64_u64_816_wire)   $flowthrough 
    $delay OR_u64_u64_816_inst 0
    // ((( $mux OR_u1_u1_724_724_delayed_17_0 (($bitcast ($uint<56>) _b0  ) && r_byte)  _b0  )  | ( $mux is_word_access_731_delayed_17_0 (($bitcast ($uint<32>) _b0  ) && r_word)  _b0  ) ) | MUX_742_742_delayed_1_0)
    |[OR_u64_u64_818_inst] (OR_u64_u64_816_wire MUX_742_742_delayed_1_0_800) (rdata)   $flowthrough 
    $delay OR_u64_u64_818_inst 0
    // 	$guard (is_ldstub) memory_access_lock := ($bitcast ($uint<1>) _b1  ) $buffering 1// bits of buffering = 1. 
    //  file .Aa/nic.linked.opt.aa, line 255
    // memory_access_lock
    $ioport $out [WPIPE_memory_access_lock_822_inst]  (type_cast_824_wire_constant) (memory_access_lock) $guard ( is_ldstub_676 )  $fullrate 
  }
  // end data-path
  // 	$volatile is_byte_access := ((opcode == STB) | (opcode == LDB)) $buffering 1
  //  file .Aa/nic.linked.opt.aa, line 223
  // ((opcode == STB) | (opcode == LDB))
  // (opcode == STB)
  // opcode
  // (opcode == LDB)
  // opcode
  // 	$volatile is_word_access := ((opcode == ST) | (opcode == LD)) $buffering 1
  //  file .Aa/nic.linked.opt.aa, line 224
  // ((opcode == ST) | (opcode == LD))
  // (opcode == ST)
  // opcode
  // (opcode == LD)
  // opcode
  // 	$volatile is_dword_access := ((opcode == STD) | (opcode == LDD)) $buffering 1
  //  file .Aa/nic.linked.opt.aa, line 225
  // ((opcode == STD) | (opcode == LDD))
  // (opcode == STD)
  // opcode
  // (opcode == LDD)
  // opcode
  // 	$volatile is_write := (((opcode == STB) | (opcode == ST)) | (opcode == STD)) $buffering 1
  //  file .Aa/nic.linked.opt.aa, line 226
  // (((opcode == STB) | (opcode == ST)) | (opcode == STD))
  // ((opcode == STB) | (opcode == ST))
  // (opcode == STB)
  // opcode
  // (opcode == ST)
  // opcode
  // (opcode == STD)
  // opcode
  // 	$volatile is_ldstub := (opcode == LDSTUB) $buffering 1
  //  file .Aa/nic.linked.opt.aa, line 227
  // (opcode == LDSTUB)
  // opcode
  // 	$volatile w_byte := ( $slice wdata 7 0 )  $buffering 1
  //  file .Aa/nic.linked.opt.aa, line 228
  // wdata
  // 	$volatile w_word := ( $slice wdata 31 0 )  $buffering 1
  //  file .Aa/nic.linked.opt.aa, line 229
  // wdata
  // 	$volatile w_dword := wdata $buffering 1
  //  file .Aa/nic.linked.opt.aa, line 230
  // wdata
  // 	$volatile do_first_byte := (is_ldstub | is_byte_access) $buffering 1
  //  file .Aa/nic.linked.opt.aa, line 231
  // (is_ldstub | is_byte_access)
  // is_ldstub
  // is_byte_access
  // 	$volatile first_byte_rwbar := ( $mux is_write WRITEMEM  READMEM )  $buffering 1
  //  file .Aa/nic.linked.opt.aa, line 232
  // is_write
  // ( $mux is_write WRITEMEM  READMEM ) 
  // 	$volatile first_byte_lock := ( $mux is_ldstub LOCKMEM  UNLOCKMEM )  $buffering 1
  //  file .Aa/nic.linked.opt.aa, line 233
  // is_ldstub
  // ( $mux is_ldstub LOCKMEM  UNLOCKMEM ) 
  // 	mem_lock := memory_access_lock $buffering 1// bits of buffering = 1. 
  //  file .Aa/nic.linked.opt.aa, line 234
  // memory_access_lock
  RPIPE_memory_access_lock_706_inst <=> (assign_stmt_640_to_assign_stmt_825/RPIPE_memory_access_lock_706_Sample/rr assign_stmt_640_to_assign_stmt_825/RPIPE_memory_access_lock_706_Update/cr) (assign_stmt_640_to_assign_stmt_825/RPIPE_memory_access_lock_706_Sample/ra assign_stmt_640_to_assign_stmt_825/RPIPE_memory_access_lock_706_Update/ca)
  // 	is_ldstub_664_delayed_1_0 := is_ldstub $buffering 1 $cut_through // bits of buffering = 1. 
  //  file .Aa/nic.linked.opt.aa, line 236
  // is_ldstub
  W_is_ldstub_664_delayed_1_0_709_inst <=> (assign_stmt_640_to_assign_stmt_825/assign_stmt_711_Sample/req assign_stmt_640_to_assign_stmt_825/assign_stmt_711_Update/req) (assign_stmt_640_to_assign_stmt_825/assign_stmt_711_Sample/ack assign_stmt_640_to_assign_stmt_825/assign_stmt_711_Update/ack)
  // 	$guard (~is_ldstub_664_delayed_1_0) memory_access_lock := mem_lock $buffering 1// bits of buffering = 1. 
  //  file .Aa/nic.linked.opt.aa, line 237
  // mem_lock
  // memory_access_lock
  WPIPE_memory_access_lock_713_inst <=> (assign_stmt_640_to_assign_stmt_825/WPIPE_memory_access_lock_713_Sample/req assign_stmt_640_to_assign_stmt_825/WPIPE_memory_access_lock_713_Update/req) (assign_stmt_640_to_assign_stmt_825/WPIPE_memory_access_lock_713_Sample/ack assign_stmt_640_to_assign_stmt_825/WPIPE_memory_access_lock_713_Update/ack)
  // 	$guard (do_first_byte) $call accessMemoryByteBase (tag first_byte_lock first_byte_rwbar base_addr offset w_byte ) (r_byte ) 
  //  file .Aa/nic.linked.opt.aa, line 239
  // tag
  // first_byte_lock
  // first_byte_rwbar
  // base_addr
  // offset
  // w_byte
  call_stmt_725_call <=> (assign_stmt_640_to_assign_stmt_825/call_stmt_725_Sample/crr assign_stmt_640_to_assign_stmt_825/call_stmt_725_Update/ccr) (assign_stmt_640_to_assign_stmt_825/call_stmt_725_Sample/cra assign_stmt_640_to_assign_stmt_825/call_stmt_725_Update/cca)
  // 	$guard (is_word_access) $call accessMemoryWordBase (tag UNLOCKMEM ( $mux is_write WRITEMEM  READMEM )  base_addr offset w_word ) (r_word ) 
  //  file .Aa/nic.linked.opt.aa, line 240
  // tag
  // is_write
  // ( $mux is_write WRITEMEM  READMEM ) 
  // base_addr
  // offset
  // w_word
  call_stmt_737_call <=> (assign_stmt_640_to_assign_stmt_825/call_stmt_737_Sample/crr assign_stmt_640_to_assign_stmt_825/call_stmt_737_Update/ccr) (assign_stmt_640_to_assign_stmt_825/call_stmt_737_Sample/cra assign_stmt_640_to_assign_stmt_825/call_stmt_737_Update/cca)
  // 	$guard (is_dword_access) $call accessMemoryDwordBase (tag UNLOCKMEM ( $mux is_write WRITEMEM  READMEM )  base_addr offset w_dword ) (r_dword ) 
  //  file .Aa/nic.linked.opt.aa, line 241
  // tag
  // is_write
  // ( $mux is_write WRITEMEM  READMEM ) 
  // base_addr
  // offset
  // w_dword
  call_stmt_749_call <=> (assign_stmt_640_to_assign_stmt_825/call_stmt_749_Sample/crr assign_stmt_640_to_assign_stmt_825/call_stmt_749_Update/ccr) (assign_stmt_640_to_assign_stmt_825/call_stmt_749_Sample/cra assign_stmt_640_to_assign_stmt_825/call_stmt_749_Update/cca)
  // 	is_ldstub_703_delayed_17_0 := is_ldstub $buffering 17 $cut_through // bits of buffering = 17. 
  //  file .Aa/nic.linked.opt.aa, line 242
  // is_ldstub
  W_is_ldstub_703_delayed_17_0_750_inst <=> (assign_stmt_640_to_assign_stmt_825/assign_stmt_752_Sample/req assign_stmt_640_to_assign_stmt_825/assign_stmt_752_Update/req) (assign_stmt_640_to_assign_stmt_825/assign_stmt_752_Sample/ack assign_stmt_640_to_assign_stmt_825/assign_stmt_752_Update/ack)
  // 	$volatile do_ldstub_write := (is_ldstub_703_delayed_17_0 & (r_byte == 0 )) $buffering 1
  //  file .Aa/nic.linked.opt.aa, line 243
  // (is_ldstub_703_delayed_17_0 & (r_byte == 0 ))
  // is_ldstub_703_delayed_17_0
  // (r_byte == 0 )
  // r_byte
  // 	is_ldstub_709_delayed_17_0 := is_ldstub $buffering 17 $cut_through // bits of buffering = 17. 
  //  file .Aa/nic.linked.opt.aa, line 244
  // is_ldstub
  W_is_ldstub_709_delayed_17_0_760_inst <=> (assign_stmt_640_to_assign_stmt_825/assign_stmt_762_Sample/req assign_stmt_640_to_assign_stmt_825/assign_stmt_762_Update/req) (assign_stmt_640_to_assign_stmt_825/assign_stmt_762_Sample/ack assign_stmt_640_to_assign_stmt_825/assign_stmt_762_Update/ack)
  // 	tag_710_delayed_17_0 := tag $buffering 17 $cut_through // bits of buffering = 136. 
  //  file .Aa/nic.linked.opt.aa, line 245
  // tag
  W_tag_710_delayed_17_0_763_inst <=> (assign_stmt_640_to_assign_stmt_825/assign_stmt_765_Sample/req assign_stmt_640_to_assign_stmt_825/assign_stmt_765_Update/req) (assign_stmt_640_to_assign_stmt_825/assign_stmt_765_Sample/ack assign_stmt_640_to_assign_stmt_825/assign_stmt_765_Update/ack)
  // 	base_addr_716_delayed_17_0 := base_addr $buffering 17 $cut_through // bits of buffering = 1088. 
  //  file .Aa/nic.linked.opt.aa, line 246
  // base_addr
  W_base_addr_716_delayed_17_0_766_inst <=> (assign_stmt_640_to_assign_stmt_825/assign_stmt_768_Sample/req assign_stmt_640_to_assign_stmt_825/assign_stmt_768_Update/req) (assign_stmt_640_to_assign_stmt_825/assign_stmt_768_Sample/ack assign_stmt_640_to_assign_stmt_825/assign_stmt_768_Update/ack)
  // 	offset_717_delayed_17_0 := offset $buffering 17 $cut_through // bits of buffering = 1088. 
  //  file .Aa/nic.linked.opt.aa, line 247
  // offset
  W_offset_717_delayed_17_0_769_inst <=> (assign_stmt_640_to_assign_stmt_825/assign_stmt_771_Sample/req assign_stmt_640_to_assign_stmt_825/assign_stmt_771_Update/req) (assign_stmt_640_to_assign_stmt_825/assign_stmt_771_Sample/ack assign_stmt_640_to_assign_stmt_825/assign_stmt_771_Update/ack)
  // 	$guard (is_ldstub_709_delayed_17_0) $call accessMemoryByteBase (tag_710_delayed_17_0 UNLOCKMEM ( $mux do_ldstub_write WRITEMEM  READMEM )  base_addr_716_delayed_17_0 offset_717_delayed_17_0 _hFF  ) (r_byte_second_ldstub ) 
  //  file .Aa/nic.linked.opt.aa, line 248
  // tag_710_delayed_17_0
  // do_ldstub_write
  // ( $mux do_ldstub_write WRITEMEM  READMEM ) 
  // base_addr_716_delayed_17_0
  // offset_717_delayed_17_0
  call_stmt_783_call <=> (assign_stmt_640_to_assign_stmt_825/call_stmt_783_Sample/crr assign_stmt_640_to_assign_stmt_825/call_stmt_783_Update/ccr) (assign_stmt_640_to_assign_stmt_825/call_stmt_783_Sample/cra assign_stmt_640_to_assign_stmt_825/call_stmt_783_Update/cca)
  // 	OR_u1_u1_724_724_delayed_17_0 := (is_ldstub | is_byte_access) $buffering 17 $cut_through // bits of buffering = 17. 
  //  file .Aa/nic.linked.opt.aa, line 249
  // (is_ldstub | is_byte_access)
  // is_ldstub
  // is_byte_access
  OR_u1_u1_787_inst <=> (assign_stmt_640_to_assign_stmt_825/OR_u1_u1_787_Sample/rr assign_stmt_640_to_assign_stmt_825/OR_u1_u1_787_Update/cr) (assign_stmt_640_to_assign_stmt_825/OR_u1_u1_787_Sample/ra assign_stmt_640_to_assign_stmt_825/OR_u1_u1_787_Update/ca)
  // 	is_word_access_731_delayed_17_0 := is_word_access $buffering 17 $cut_through // bits of buffering = 17. 
  //  file .Aa/nic.linked.opt.aa, line 250
  // is_word_access
  W_is_word_access_731_delayed_17_0_789_inst <=> (assign_stmt_640_to_assign_stmt_825/assign_stmt_791_Sample/req assign_stmt_640_to_assign_stmt_825/assign_stmt_791_Update/req) (assign_stmt_640_to_assign_stmt_825/assign_stmt_791_Sample/ack assign_stmt_640_to_assign_stmt_825/assign_stmt_791_Update/ack)
  // 	is_dword_access_739_delayed_16_0 := is_dword_access $buffering 16 $cut_through // bits of buffering = 16. 
  //  file .Aa/nic.linked.opt.aa, line 251
  // is_dword_access
  W_is_dword_access_739_delayed_16_0_792_inst <=> (assign_stmt_640_to_assign_stmt_825/assign_stmt_794_Sample/req assign_stmt_640_to_assign_stmt_825/assign_stmt_794_Update/req) (assign_stmt_640_to_assign_stmt_825/assign_stmt_794_Sample/ack assign_stmt_640_to_assign_stmt_825/assign_stmt_794_Update/ack)
  // 	MUX_742_742_delayed_1_0 := ( $mux is_dword_access_739_delayed_16_0 r_dword  _b0  )  $buffering 1 $cut_through // bits of buffering = 64. 
  //  file .Aa/nic.linked.opt.aa, line 252
  // is_dword_access_739_delayed_16_0
  // r_dword
  // ( $mux is_dword_access_739_delayed_16_0 r_dword  _b0  ) 
  MUX_799_inst <=> (assign_stmt_640_to_assign_stmt_825/MUX_799_start/req assign_stmt_640_to_assign_stmt_825/MUX_799_complete/req) (assign_stmt_640_to_assign_stmt_825/MUX_799_start/ack assign_stmt_640_to_assign_stmt_825/MUX_799_complete/ack)
  // 	$volatile rdata := ((( $mux OR_u1_u1_724_724_delayed_17_0 (($bitcast ($uint<56>) _b0  ) && r_byte)  _b0  )  | ( $mux is_word_access_731_delayed_17_0 (($bitcast ($uint<32>) _b0  ) && r_word)  _b0  ) ) | MUX_742_742_delayed_1_0) $buffering 1
  //  file .Aa/nic.linked.opt.aa, line 253
  // ((( $mux OR_u1_u1_724_724_delayed_17_0 (($bitcast ($uint<56>) _b0  ) && r_byte)  _b0  )  | ( $mux is_word_access_731_delayed_17_0 (($bitcast ($uint<32>) _b0  ) && r_word)  _b0  ) ) | MUX_742_742_delayed_1_0)
  // (( $mux OR_u1_u1_724_724_delayed_17_0 (($bitcast ($uint<56>) _b0  ) && r_byte)  _b0  )  | ( $mux is_word_access_731_delayed_17_0 (($bitcast ($uint<32>) _b0  ) && r_word)  _b0  ) )
  // OR_u1_u1_724_724_delayed_17_0
  // (($bitcast ($uint<56>) _b0  ) && r_byte)
  // r_byte
  // ( $mux OR_u1_u1_724_724_delayed_17_0 (($bitcast ($uint<56>) _b0  ) && r_byte)  _b0  ) 
  // is_word_access_731_delayed_17_0
  // (($bitcast ($uint<32>) _b0  ) && r_word)
  // r_word
  // ( $mux is_word_access_731_delayed_17_0 (($bitcast ($uint<32>) _b0  ) && r_word)  _b0  ) 
  // MUX_742_742_delayed_1_0
  // 	$guard (is_ldstub) memory_access_lock := ($bitcast ($uint<1>) _b1  ) $buffering 1// bits of buffering = 1. 
  //  file .Aa/nic.linked.opt.aa, line 255
  // memory_access_lock
  WPIPE_memory_access_lock_822_inst <=> (assign_stmt_640_to_assign_stmt_825/WPIPE_memory_access_lock_822_Sample/req assign_stmt_640_to_assign_stmt_825/WPIPE_memory_access_lock_822_Update/req) (assign_stmt_640_to_assign_stmt_825/WPIPE_memory_access_lock_822_Sample/ack assign_stmt_640_to_assign_stmt_825/WPIPE_memory_access_lock_822_Update/ack)
  $attribute delay => "36"
}
$pipeline $depth 7 $buffering 1 $module [accessMemoryWord] 
{
  $in tag:$int<8>
  // can point into  foreign( $void )
  rwbar:$int<1>
  // can point into  foreign( $void )
  word_addr_base:$int<64>
  // can point into  foreign( $void )
  offset:$int<64>
  // can point into 
  wword:$int<32>
  // can point into  foreign( $void )
  $out rword:$int<32>
  // can point into  foreign( $void )
  // pipe-declarations for block %accessMemoryWord
  //  file .Aa/nic.linked.opt.aa, line 258
  // there are no memory spaces local to this module.
  $CP 
  {
    // begin control-path 
    // pipelined module
    :|:[call_stmt_846_to_assign_stmt_850] 
    {
      $T [tag_update_enable] 
      $scc_arc tag_update_enable => $entry
      $T [tag_update_enable_out] 
      tag_update_enable &-> (tag_update_enable_out)
      $null &-> (tag_update_enable)
      $T [rwbar_update_enable] 
      $scc_arc rwbar_update_enable => $entry
      $T [rwbar_update_enable_out] 
      rwbar_update_enable &-> (rwbar_update_enable_out)
      $null &-> (rwbar_update_enable)
      $T [word_addr_base_update_enable] 
      $scc_arc word_addr_base_update_enable => $entry
      $T [word_addr_base_update_enable_out] 
      word_addr_base_update_enable &-> (word_addr_base_update_enable_out)
      $null &-> (word_addr_base_update_enable)
      $T [offset_update_enable] 
      $scc_arc offset_update_enable => $entry
      $T [offset_update_enable_out] 
      offset_update_enable &-> (offset_update_enable_out)
      $null &-> (offset_update_enable)
      $T [wword_update_enable] 
      $scc_arc wword_update_enable => $entry
      $T [wword_update_enable_out] 
      wword_update_enable &-> (wword_update_enable_out)
      $null &-> (wword_update_enable)
      $T [rword_update_enable] 
      $T [rword_update_enable_in] 
      $null &-> (rword_update_enable)
      $null <-& (rword_update_enable_in) 
      $null &-> (rword_update_enable)
      $scc_arc $exit => rword_update_enable
      rword_update_enable <-& (rword_update_enable_in) 
      // start: 	$call doMemAccess (tag ( $mux rwbar LD  ST )  word_addr_base offset (($bitcast ($uint<32>) _b0  ) && wword) ) (rdword ) 
      //  file .Aa/nic.linked.opt.aa, line 263
      $T[call_stmt_846_sample_start_] 
      $T[call_stmt_846_sample_completed_] 
      $T[call_stmt_846_update_start_] 
      $T[call_stmt_846_update_completed_] 
      // Call input argument 0
      // tag
      // Call input argument 1
      // ( $mux rwbar LD  ST ) 
      // rwbar
      // Call input argument 2
      // word_addr_base
      // Call input argument 3
      // offset
      // Call input argument 4
      // (($bitcast ($uint<32>) _b0  ) && wword)
      // wword
      // start: Forward dependencies from tag to transition call_stmt_846_sample_start_
      call_stmt_846_sample_start_ <-& ($entry)
      // done: Forward dependencies from tag to transition call_stmt_846_sample_start_
      // RAW reenables for tag
      tag_update_enable o<-& (call_stmt_846_sample_completed_ 0)
      // start: Forward dependencies from ( $mux rwbar LD  ST )  to transition call_stmt_846_sample_start_
      call_stmt_846_sample_start_ <-& ($entry)
      // done: Forward dependencies from ( $mux rwbar LD  ST )  to transition call_stmt_846_sample_start_
      // RAW reenables for ( $mux rwbar LD  ST ) 
      rwbar_update_enable o<-& (call_stmt_846_sample_completed_ 0)
      // start: Forward dependencies from word_addr_base to transition call_stmt_846_sample_start_
      call_stmt_846_sample_start_ <-& ($entry)
      // done: Forward dependencies from word_addr_base to transition call_stmt_846_sample_start_
      // RAW reenables for word_addr_base
      word_addr_base_update_enable o<-& (call_stmt_846_sample_completed_ 0)
      // start: Forward dependencies from offset to transition call_stmt_846_sample_start_
      call_stmt_846_sample_start_ <-& ($entry)
      // done: Forward dependencies from offset to transition call_stmt_846_sample_start_
      // RAW reenables for offset
      offset_update_enable o<-& (call_stmt_846_sample_completed_ 0)
      // start: Forward dependencies from (($bitcast ($uint<32>) _b0  ) && wword) to transition call_stmt_846_sample_start_
      call_stmt_846_sample_start_ <-& ($entry)
      // done: Forward dependencies from (($bitcast ($uint<32>) _b0  ) && wword) to transition call_stmt_846_sample_start_
      // RAW reenables for (($bitcast ($uint<32>) _b0  ) && wword)
      wword_update_enable o<-& (call_stmt_846_sample_completed_ 0)
      ;;[call_stmt_846_Sample] 
      {
        $T [crr] $T [cra] 
      }
      ;;[call_stmt_846_Update] 
      {
        $T [ccr] $T [cca] 
      }
      call_stmt_846_sample_start_ &-> (call_stmt_846_Sample)
      call_stmt_846_sample_completed_ <-& (call_stmt_846_Sample)
      call_stmt_846_sample_completed_ &-> ($null)
      call_stmt_846_update_start_ &-> (call_stmt_846_Update)
      call_stmt_846_update_completed_ <-& (call_stmt_846_Update)
      // Call output argument 0
      // (as target) rdword
      // self-release: 
      call_stmt_846_sample_start_ o<-& (call_stmt_846_sample_completed_ 1)
      $null &-> (call_stmt_846_update_start_)
      call_stmt_846_update_start_ o<-& (call_stmt_846_update_completed_ 0)
      // start: WAR dependencies for rdword
      // done: WAR dependencies for rdword
      // end: 	$call doMemAccess (tag ( $mux rwbar LD  ST )  word_addr_base offset (($bitcast ($uint<32>) _b0  ) && wword) ) (rdword ) 
      // start:  	rword := ( $slice rdword 31 0 )  $buffering 1// bits of buffering = 32. 
      //  file .Aa/nic.linked.opt.aa, line 264
      // Source expression
      // ( $slice rdword 31 0 ) 
      $T[slice_849_sample_start_] 
      $T[slice_849_sample_completed_] 
      $T[slice_849_update_start_] 
      $T[slice_849_update_completed_] 
      // rdword
      // start: Forward dependencies from rdword to transition slice_849_sample_start_
      slice_849_sample_start_ <-& (call_stmt_846_update_completed_)
      // done: Forward dependencies from rdword to transition slice_849_sample_start_
      ;;[slice_849_Sample] 
      {
        // unary expression 
        $T [rr] $T [ra] // (split) unary operation
      }
      ;;[slice_849_Update] 
      {
        // unary expression 
        $T [cr] $T [ca] //(split) unary operation
      }
      slice_849_sample_start_ &-> (slice_849_Sample)
      slice_849_sample_completed_ <-& (slice_849_Sample)
      slice_849_sample_completed_ &-> ($null)
      slice_849_update_start_ &-> (slice_849_Update)
      slice_849_update_completed_ <-& (slice_849_Update)
      // RAW reenables for rdword
      call_stmt_846_update_start_ o<-& (slice_849_sample_completed_ 0)
      // self-release: 
      slice_849_sample_start_ o<-& (slice_849_sample_completed_ 1)
      $null &-> (slice_849_update_start_)
      slice_849_update_start_ o<-& (slice_849_update_completed_ 0)
      // Target expression
      // (as target) rword
      // rword
      // write to interface object
      // start: WAR dependencies for rword
      // done: WAR dependencies for rword
      // rword
      // write to interface object
      slice_849_update_start_ <-& (rword_update_enable)
      // end:  	rword := ( $slice rdword 31 0 )  $buffering 1// bits of buffering = 32. 
      // load-store dependencies..
      // pipe read/write dependencies for pipe MEMORY_TO_NIC_RESPONSE
      // read-dependencies for pipe MEMORY_TO_NIC_RESPONSE
      // write-dependencies for pipe MEMORY_TO_NIC_RESPONSE
      // signal write dependencies for MEMORY_TO_NIC_RESPONSE
      // pipe read/write dependencies for pipe NIC_DEBUG_SIGNAL
      // read-dependencies for pipe NIC_DEBUG_SIGNAL
      // write-dependencies for pipe NIC_DEBUG_SIGNAL
      // signal write dependencies for NIC_DEBUG_SIGNAL
      // pipe read/write dependencies for pipe NIC_TO_MEMORY_REQUEST
      // read-dependencies for pipe NIC_TO_MEMORY_REQUEST
      // write-dependencies for pipe NIC_TO_MEMORY_REQUEST
      // signal write dependencies for NIC_TO_MEMORY_REQUEST
      // pipe read/write dependencies for pipe memory_access_lock
      // read-dependencies for pipe memory_access_lock
      // write-dependencies for pipe memory_access_lock
      // signal write dependencies for memory_access_lock
    }
    ( rword_update_enable_in)
    ( tag_update_enable_out rwbar_update_enable_out word_addr_base_update_enable_out offset_update_enable_out wword_update_enable_out)
    $P [tag_update_enable] 
    $P [rwbar_update_enable] 
    $P [word_addr_base_update_enable] 
    $P [offset_update_enable] 
    $P [wword_update_enable] 
    $P [rword_update_enable] 
    $bind tag_update_enable <= call_stmt_846_to_assign_stmt_850 : tag_update_enable_out
    $bind rwbar_update_enable <= call_stmt_846_to_assign_stmt_850 : rwbar_update_enable_out
    $bind word_addr_base_update_enable <= call_stmt_846_to_assign_stmt_850 : word_addr_base_update_enable_out
    $bind offset_update_enable <= call_stmt_846_to_assign_stmt_850 : offset_update_enable_out
    $bind wword_update_enable <= call_stmt_846_to_assign_stmt_850 : wword_update_enable_out
    $bind rword_update_enable => call_stmt_846_to_assign_stmt_850 : rword_update_enable_in
  }
  // end control-path
  $DP 
  {
    // begin data-path 
    // constant-object-declarations for block %accessMemoryWord
    //  file .Aa/nic.linked.opt.aa, line 258
    // 	$call doMemAccess (tag ( $mux rwbar LD  ST )  word_addr_base offset (($bitcast ($uint<32>) _b0  ) && wword) ) (rdword ) 
    //  file .Aa/nic.linked.opt.aa, line 263
    // ( $mux rwbar LD  ST ) 
    // LD
    $constant $W[R_LD_836_wire_constant] : $int<3> := _b100// 4
    // ST
    $constant $W[R_ST_837_wire_constant] : $int<3> := _b001// 1
    // ($bitcast ($uint<32>) _b0  )
    $constant $W[type_cast_842_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // 	$call doMemAccess (tag ( $mux rwbar LD  ST )  word_addr_base offset (($bitcast ($uint<32>) _b0  ) && wword) ) (rdword ) 
    //  file .Aa/nic.linked.opt.aa, line 263
    // ( $mux rwbar LD  ST ) 
    $intermediate $W[MUX_838_wire] : $int<3>
    // (($bitcast ($uint<32>) _b0  ) && wword)
    $intermediate $W[CONCAT_u32_u64_844_wire] : $int<64>
    // rdword
    $W[rdword_846] : $int<64>
    // 	rword := ( $slice rdword 31 0 )  $buffering 1// bits of buffering = 32. 
    //  file .Aa/nic.linked.opt.aa, line 264
    // rword
    // 	$call doMemAccess (tag ( $mux rwbar LD  ST )  word_addr_base offset (($bitcast ($uint<32>) _b0  ) && wword) ) (rdword ) 
    //  file .Aa/nic.linked.opt.aa, line 263
    // ( $mux rwbar LD  ST ) 
    ? [MUX_838_inst] (rwbar R_LD_836_wire_constant R_ST_837_wire_constant) (MUX_838_wire)  $flowthrough
    // (($bitcast ($uint<32>) _b0  ) && wword)
    &&[CONCAT_u32_u64_844_inst] (type_cast_842_wire_constant wword) (CONCAT_u32_u64_844_wire)   $flowthrough 
    $delay CONCAT_u32_u64_844_inst 0
    $call [call_stmt_846_call] $module doMemAccess(tag MUX_838_wire word_addr_base offset CONCAT_u32_u64_844_wire) (rdword_846)  
    $delay call_stmt_846_call 36
    $buffering  $in call_stmt_846_call tag 1
    $buffering  $in call_stmt_846_call MUX_838_wire 1
    $buffering  $in call_stmt_846_call word_addr_base 1
    $buffering  $in call_stmt_846_call offset 1
    $buffering  $in call_stmt_846_call CONCAT_u32_u64_844_wire 1
    $buffering  $out call_stmt_846_call rdword_846 1
    // 	rword := ( $slice rdword 31 0 )  $buffering 1// bits of buffering = 32. 
    //  file .Aa/nic.linked.opt.aa, line 264
    // ( $slice rdword 31 0 ) 
    [:] [slice_849_inst] (rdword_846 31 0) (rword) 
    $buffering  $out slice_849_inst rword 1
    $delay slice_849_inst 1
  }
  // end data-path
  // 	$call doMemAccess (tag ( $mux rwbar LD  ST )  word_addr_base offset (($bitcast ($uint<32>) _b0  ) && wword) ) (rdword ) 
  //  file .Aa/nic.linked.opt.aa, line 263
  // tag
  // rwbar
  // ( $mux rwbar LD  ST ) 
  // word_addr_base
  // offset
  // (($bitcast ($uint<32>) _b0  ) && wword)
  // wword
  call_stmt_846_call <=> (call_stmt_846_to_assign_stmt_850/call_stmt_846_Sample/crr call_stmt_846_to_assign_stmt_850/call_stmt_846_Update/ccr) (call_stmt_846_to_assign_stmt_850/call_stmt_846_Sample/cra call_stmt_846_to_assign_stmt_850/call_stmt_846_Update/cca)
  // 	rword := ( $slice rdword 31 0 )  $buffering 1// bits of buffering = 32. 
  //  file .Aa/nic.linked.opt.aa, line 264
  // rdword
  // ( $slice rdword 31 0 ) 
  slice_849_inst <=> (call_stmt_846_to_assign_stmt_850/slice_849_Sample/rr call_stmt_846_to_assign_stmt_850/slice_849_Update/cr) (call_stmt_846_to_assign_stmt_850/slice_849_Sample/ra call_stmt_846_to_assign_stmt_850/slice_849_Update/ca)
  $attribute delay => "39"
}
$module [accessQueueMisc] 
{
  $in tag:$int<8>
  // can point into 
  rwbar:$int<1>
  // can point into 
  qptr:$int<64>
  // can point into  foreign( $void )
  wdata:$int<32>
  // can point into 
  $out rdata:$int<32>
  // can point into  foreign( $void )
  // pipe-declarations for block %accessQueueMisc
  //  file .Aa/nic.linked.opt.aa, line 267
  // there are no memory spaces local to this module.
  $CP 
  {
    // begin control-path 
    ::[call_stmt_864] 
    {
      // start: 	$call accessMemoryWord (tag rwbar qptr 28  wdata ) (rdata ) 
      //  file .Aa/nic.linked.opt.aa, line 272
      $T[call_stmt_864_sample_start_] 
      $T[call_stmt_864_sample_completed_] 
      $T[call_stmt_864_update_start_] 
      $T[call_stmt_864_update_completed_] 
      // Call input argument 0
      // tag
      // Call input argument 1
      // rwbar
      // Call input argument 2
      // qptr
      // Call input argument 3
      // Call input argument 4
      // wdata
      // start: Forward dependencies from tag to transition call_stmt_864_sample_start_
      // done: Forward dependencies from tag to transition call_stmt_864_sample_start_
      // start: Forward dependencies from rwbar to transition call_stmt_864_sample_start_
      // done: Forward dependencies from rwbar to transition call_stmt_864_sample_start_
      // start: Forward dependencies from qptr to transition call_stmt_864_sample_start_
      // done: Forward dependencies from qptr to transition call_stmt_864_sample_start_
      // start: Forward dependencies from wdata to transition call_stmt_864_sample_start_
      // done: Forward dependencies from wdata to transition call_stmt_864_sample_start_
      ;;[call_stmt_864_Sample] 
      {
        $T [crr] $T [cra] 
      }
      ;;[call_stmt_864_Update] 
      {
        $T [ccr] $T [cca] 
      }
      call_stmt_864_sample_start_ &-> (call_stmt_864_Sample)
      call_stmt_864_sample_completed_ <-& (call_stmt_864_Sample)
      call_stmt_864_sample_completed_ &-> ($null)
      call_stmt_864_update_start_ &-> (call_stmt_864_Update)
      call_stmt_864_update_completed_ <-& (call_stmt_864_Update)
      // Call output argument 0
      // (as target) rdata
      // rdata
      // write to interface object
      // rdata
      // write to interface object
      // start: WAR dependencies for rdata
      // done: WAR dependencies for rdata
      // end: 	$call accessMemoryWord (tag rwbar qptr 28  wdata ) (rdata ) 
      // load-store dependencies..
      // pipe read/write dependencies for pipe MEMORY_TO_NIC_RESPONSE
      // read-dependencies for pipe MEMORY_TO_NIC_RESPONSE
      // write-dependencies for pipe MEMORY_TO_NIC_RESPONSE
      // signal write dependencies for MEMORY_TO_NIC_RESPONSE
      // pipe read/write dependencies for pipe NIC_DEBUG_SIGNAL
      // read-dependencies for pipe NIC_DEBUG_SIGNAL
      // write-dependencies for pipe NIC_DEBUG_SIGNAL
      // signal write dependencies for NIC_DEBUG_SIGNAL
      // pipe read/write dependencies for pipe NIC_TO_MEMORY_REQUEST
      // read-dependencies for pipe NIC_TO_MEMORY_REQUEST
      // write-dependencies for pipe NIC_TO_MEMORY_REQUEST
      // signal write dependencies for NIC_TO_MEMORY_REQUEST
      // pipe read/write dependencies for pipe memory_access_lock
      // read-dependencies for pipe memory_access_lock
      // write-dependencies for pipe memory_access_lock
      // signal write dependencies for memory_access_lock
    }
  }
  // end control-path
  $DP 
  {
    // begin data-path 
    // constant-object-declarations for block %accessQueueMisc
    //  file .Aa/nic.linked.opt.aa, line 267
    // 	$call accessMemoryWord (tag rwbar qptr 28  wdata ) (rdata ) 
    //  file .Aa/nic.linked.opt.aa, line 272
    // 28 
    $constant $W[konst_861_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000011100// 28
    // 	$call accessMemoryWord (tag rwbar qptr 28  wdata ) (rdata ) 
    //  file .Aa/nic.linked.opt.aa, line 272
    // rdata
    // 	$call accessMemoryWord (tag rwbar qptr 28  wdata ) (rdata ) 
    //  file .Aa/nic.linked.opt.aa, line 272
    $call [call_stmt_864_call] $module accessMemoryWord(tag rwbar qptr konst_861_wire_constant wdata) (rdata)  
    $delay call_stmt_864_call 39
    $buffering  $in call_stmt_864_call tag 1
    $buffering  $in call_stmt_864_call rwbar 1
    $buffering  $in call_stmt_864_call qptr 1
    $buffering  $in call_stmt_864_call konst_861_wire_constant 1
    $buffering  $in call_stmt_864_call wdata 1
    $buffering  $out call_stmt_864_call rdata 1
  }
  // end data-path
  // 	$call accessMemoryWord (tag rwbar qptr 28  wdata ) (rdata ) 
  //  file .Aa/nic.linked.opt.aa, line 272
  // tag
  // rwbar
  // qptr
  // wdata
  call_stmt_864_call <=> (call_stmt_864/call_stmt_864_Sample/crr call_stmt_864/call_stmt_864_Update/ccr) (call_stmt_864/call_stmt_864_Sample/cra call_stmt_864/call_stmt_864_Update/cca)
  $attribute input_buffering => "0"
  $attribute output_buffering => "0"
}
$module [getQueueLockPointer] 
{
  $in queue_type:$int<2>
  // can point into 
  server_id:$int<8>
  // can point into  foreign( $void )
  $out qptr:$int<64>
  // can point into  foreign( $void )
  // pipe-declarations for block %getQueueLockPointer
  //  file .Aa/nic.linked.opt.aa, line 276
  // there are no memory spaces local to this module.
  $CP 
  {
    // begin control-path 
    ::[assign_stmt_874_to_assign_stmt_897] 
    {
      // start:  	base_idx := ( $call getBaseIndex (queue_type server_id ) ) $buffering 1// bits of buffering = 8. 
      //  file .Aa/nic.linked.opt.aa, line 281
      $T[assign_stmt_874_sample_start_] 
      $T[assign_stmt_874_sample_completed_] 
      $T[assign_stmt_874_update_start_] 
      $T[assign_stmt_874_update_completed_] 
      // Source expression
      // ( $call getBaseIndex (queue_type server_id ) )
      // queue_type
      // server_id
      // Target expression
      // (as target) base_idx
      // both source and target are implicit: use interlock 
      // Interlock 
      ;;[assign_stmt_874_Sample] 
      {
        $T [req] $T [ack] // interlock-sample.
      }
      ;;[assign_stmt_874_Update] 
      {
        $T [req] $T [ack] // interlock-update.
      }
      assign_stmt_874_sample_start_ &-> (assign_stmt_874_Sample)
      assign_stmt_874_sample_completed_ <-& (assign_stmt_874_Sample)
      assign_stmt_874_sample_completed_ &-> ($null)
      assign_stmt_874_update_start_ &-> (assign_stmt_874_Update)
      assign_stmt_874_update_completed_ <-& (assign_stmt_874_Update)
      // start: Forward dependencies from ( $call getBaseIndex (queue_type server_id ) ) to transition assign_stmt_874_sample_start_
      // done: Forward dependencies from ( $call getBaseIndex (queue_type server_id ) ) to transition assign_stmt_874_sample_start_
      // start: WAR dependencies for base_idx
      // done: WAR dependencies for base_idx
      // end:  	base_idx := ( $call getBaseIndex (queue_type server_id ) ) $buffering 1// bits of buffering = 8. 
      // start: 	$call accessRegister (READMEM _hF  (base_idx + 2 ) ($bitcast ($uint<32>) _b0  ) ) (qptr_h ) 
      //  file .Aa/nic.linked.opt.aa, line 282
      $T[call_stmt_883_sample_start_] 
      $T[call_stmt_883_sample_completed_] 
      $T[call_stmt_883_update_start_] 
      $T[call_stmt_883_update_completed_] 
      // Call input argument 0
      // Call input argument 1
      // Call input argument 2
      // (base_idx + 2 )
      // base_idx
      // Call input argument 3
      // start: Forward dependencies from (base_idx + 2 ) to transition call_stmt_883_sample_start_
      call_stmt_883_sample_start_ <-& (assign_stmt_874_update_completed_)
      // done: Forward dependencies from (base_idx + 2 ) to transition call_stmt_883_sample_start_
      ;;[call_stmt_883_Sample] 
      {
        $T [crr] $T [cra] 
      }
      ;;[call_stmt_883_Update] 
      {
        $T [ccr] $T [cca] 
      }
      call_stmt_883_sample_start_ &-> (call_stmt_883_Sample)
      call_stmt_883_sample_completed_ <-& (call_stmt_883_Sample)
      call_stmt_883_sample_completed_ &-> ($null)
      call_stmt_883_update_start_ &-> (call_stmt_883_Update)
      call_stmt_883_update_completed_ <-& (call_stmt_883_Update)
      // Call output argument 0
      // (as target) qptr_h
      // start: WAR dependencies for qptr_h
      // done: WAR dependencies for qptr_h
      // end: 	$call accessRegister (READMEM _hF  (base_idx + 2 ) ($bitcast ($uint<32>) _b0  ) ) (qptr_h ) 
      // start: 	$call accessRegister (READMEM _hF  (base_idx + 3 ) ($bitcast ($uint<32>) _b0  ) ) (qptr_l ) 
      //  file .Aa/nic.linked.opt.aa, line 283
      $T[call_stmt_892_sample_start_] 
      $T[call_stmt_892_sample_completed_] 
      $T[call_stmt_892_update_start_] 
      $T[call_stmt_892_update_completed_] 
      // Call input argument 0
      // Call input argument 1
      // Call input argument 2
      // (base_idx + 3 )
      // base_idx
      // Call input argument 3
      // start: Forward dependencies from (base_idx + 3 ) to transition call_stmt_892_sample_start_
      call_stmt_892_sample_start_ <-& (assign_stmt_874_update_completed_)
      // done: Forward dependencies from (base_idx + 3 ) to transition call_stmt_892_sample_start_
      ;;[call_stmt_892_Sample] 
      {
        $T [crr] $T [cra] 
      }
      ;;[call_stmt_892_Update] 
      {
        $T [ccr] $T [cca] 
      }
      call_stmt_892_sample_start_ &-> (call_stmt_892_Sample)
      call_stmt_892_sample_completed_ <-& (call_stmt_892_Sample)
      call_stmt_892_sample_completed_ &-> ($null)
      call_stmt_892_update_start_ &-> (call_stmt_892_Update)
      call_stmt_892_update_completed_ <-& (call_stmt_892_Update)
      // Call output argument 0
      // (as target) qptr_l
      // start: WAR dependencies for qptr_l
      // done: WAR dependencies for qptr_l
      // end: 	$call accessRegister (READMEM _hF  (base_idx + 3 ) ($bitcast ($uint<32>) _b0  ) ) (qptr_l ) 
      // start:  	qptr := (qptr_h && qptr_l) $buffering 1// bits of buffering = 64. 
      //  file .Aa/nic.linked.opt.aa, line 284
      // Source expression
      // (qptr_h && qptr_l)
      $T[CONCAT_u32_u64_896_sample_start_] 
      $T[CONCAT_u32_u64_896_sample_completed_] 
      $T[CONCAT_u32_u64_896_update_start_] 
      $T[CONCAT_u32_u64_896_update_completed_] 
      // qptr_h
      // qptr_l
      // start: Forward dependencies from qptr_h to transition CONCAT_u32_u64_896_sample_start_
      CONCAT_u32_u64_896_sample_start_ <-& (call_stmt_883_update_completed_)
      // done: Forward dependencies from qptr_h to transition CONCAT_u32_u64_896_sample_start_
      // start: Forward dependencies from qptr_l to transition CONCAT_u32_u64_896_sample_start_
      CONCAT_u32_u64_896_sample_start_ <-& (call_stmt_892_update_completed_)
      // done: Forward dependencies from qptr_l to transition CONCAT_u32_u64_896_sample_start_
      ;;[CONCAT_u32_u64_896_Sample] 
      {
        // binary expression 
        $T [rr] $T [ra]  // (split) binary operation 
      }
      ;;[CONCAT_u32_u64_896_Update] 
      {
        // binary expression 
        $T [cr] $T [ca] // (split) binary operation 
      }
      CONCAT_u32_u64_896_sample_start_ &-> (CONCAT_u32_u64_896_Sample)
      CONCAT_u32_u64_896_sample_completed_ <-& (CONCAT_u32_u64_896_Sample)
      CONCAT_u32_u64_896_sample_completed_ &-> ($null)
      CONCAT_u32_u64_896_update_start_ &-> (CONCAT_u32_u64_896_Update)
      CONCAT_u32_u64_896_update_completed_ <-& (CONCAT_u32_u64_896_Update)
      // Target expression
      // (as target) qptr
      // qptr
      // write to interface object
      // start: WAR dependencies for qptr
      // done: WAR dependencies for qptr
      // qptr
      // write to interface object
      // end:  	qptr := (qptr_h && qptr_l) $buffering 1// bits of buffering = 64. 
      // load-store dependencies..
      // memory-space  memory_space_0
      //  call_stmt_883 store
      //  call_stmt_892 store
      $T [call_stmt_883_call_stmt_892_delay] $delay
      // call_stmt_883(store) -> call_stmt_892(store)
      call_stmt_892_sample_start_ <-& (call_stmt_883_call_stmt_892_delay)
      call_stmt_883_call_stmt_892_delay <-& (call_stmt_883_update_completed_)
    }
  }
  // end control-path
  $DP 
  {
    // begin data-path 
    // constant-object-declarations for block %getQueueLockPointer
    //  file .Aa/nic.linked.opt.aa, line 276
    // ( $call getBaseIndex (queue_type server_id ) )
    // 	$call accessRegister (READMEM _hF  (base_idx + 2 ) ($bitcast ($uint<32>) _b0  ) ) (qptr_h ) 
    //  file .Aa/nic.linked.opt.aa, line 282
    // READMEM
    $constant $W[R_READMEM_875_wire_constant] : $int<1> := _b1// 1
    // _hF 
    $constant $W[konst_876_wire_constant] : $int<4> := _b1111// 15
    // 2 
    $constant $W[konst_878_wire_constant] : $int<8> := _b00000010// 2
    // ($bitcast ($uint<32>) _b0  )
    $constant $W[type_cast_881_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // 	$call accessRegister (READMEM _hF  (base_idx + 3 ) ($bitcast ($uint<32>) _b0  ) ) (qptr_l ) 
    //  file .Aa/nic.linked.opt.aa, line 283
    // READMEM
    $constant $W[R_READMEM_884_wire_constant] : $int<1> := _b1// 1
    // _hF 
    $constant $W[konst_885_wire_constant] : $int<4> := _b1111// 15
    // 3 
    $constant $W[konst_887_wire_constant] : $int<8> := _b00000011// 3
    // ($bitcast ($uint<32>) _b0  )
    $constant $W[type_cast_890_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // 	base_idx := ( $call getBaseIndex (queue_type server_id ) ) $buffering 1// bits of buffering = 8. 
    //  file .Aa/nic.linked.opt.aa, line 281
    // ( $call getBaseIndex (queue_type server_id ) )
    $intermediate $W[call_getBaseIndex_expr_873_wire] : $int<8>
    // base_idx
    $W[base_idx_874] : $int<8>
    // 	$call accessRegister (READMEM _hF  (base_idx + 2 ) ($bitcast ($uint<32>) _b0  ) ) (qptr_h ) 
    //  file .Aa/nic.linked.opt.aa, line 282
    // (base_idx + 2 )
    $intermediate $W[ADD_u8_u8_879_wire] : $int<8>
    // qptr_h
    $W[qptr_h_883] : $int<32>
    // 	$call accessRegister (READMEM _hF  (base_idx + 3 ) ($bitcast ($uint<32>) _b0  ) ) (qptr_l ) 
    //  file .Aa/nic.linked.opt.aa, line 283
    // (base_idx + 3 )
    $intermediate $W[ADD_u8_u8_888_wire] : $int<8>
    // qptr_l
    $W[qptr_l_892] : $int<32>
    // 	qptr := (qptr_h && qptr_l) $buffering 1// bits of buffering = 64. 
    //  file .Aa/nic.linked.opt.aa, line 284
    // qptr
    // 	base_idx := ( $call getBaseIndex (queue_type server_id ) ) $buffering 1// bits of buffering = 8. 
    //  file .Aa/nic.linked.opt.aa, line 281
    # := [W_base_idx_870_inst] (call_getBaseIndex_expr_873_wire) (base_idx_874)     
    // ( $call getBaseIndex (queue_type server_id ) )
    //  file .Aa/nic.linked.opt.aa, line 281
    $call [call_getBaseIndex_expr_873_inst] $module getBaseIndex(queue_type server_id) (call_getBaseIndex_expr_873_wire)   $flowthrough
    // 	$call accessRegister (READMEM _hF  (base_idx + 2 ) ($bitcast ($uint<32>) _b0  ) ) (qptr_h ) 
    //  file .Aa/nic.linked.opt.aa, line 282
    // (base_idx + 2 )
    +[ADD_u8_u8_879_inst] (base_idx_874 konst_878_wire_constant) (ADD_u8_u8_879_wire)   $flowthrough 
    $delay ADD_u8_u8_879_inst 0
    $call [call_stmt_883_call] $module accessRegister(R_READMEM_875_wire_constant konst_876_wire_constant ADD_u8_u8_879_wire type_cast_881_wire_constant) (qptr_h_883)  
    $delay call_stmt_883_call 4
    $buffering  $in call_stmt_883_call R_READMEM_875_wire_constant 1
    $buffering  $in call_stmt_883_call konst_876_wire_constant 1
    $buffering  $in call_stmt_883_call ADD_u8_u8_879_wire 1
    $buffering  $in call_stmt_883_call type_cast_881_wire_constant 1
    $buffering  $out call_stmt_883_call qptr_h_883 1
    // 	$call accessRegister (READMEM _hF  (base_idx + 3 ) ($bitcast ($uint<32>) _b0  ) ) (qptr_l ) 
    //  file .Aa/nic.linked.opt.aa, line 283
    // (base_idx + 3 )
    +[ADD_u8_u8_888_inst] (base_idx_874 konst_887_wire_constant) (ADD_u8_u8_888_wire)   $flowthrough 
    $delay ADD_u8_u8_888_inst 0
    $call [call_stmt_892_call] $module accessRegister(R_READMEM_884_wire_constant konst_885_wire_constant ADD_u8_u8_888_wire type_cast_890_wire_constant) (qptr_l_892)  
    $delay call_stmt_892_call 4
    $buffering  $in call_stmt_892_call R_READMEM_884_wire_constant 1
    $buffering  $in call_stmt_892_call konst_885_wire_constant 1
    $buffering  $in call_stmt_892_call ADD_u8_u8_888_wire 1
    $buffering  $in call_stmt_892_call type_cast_890_wire_constant 1
    $buffering  $out call_stmt_892_call qptr_l_892 1
    // 	qptr := (qptr_h && qptr_l) $buffering 1// bits of buffering = 64. 
    //  file .Aa/nic.linked.opt.aa, line 284
    // (qptr_h && qptr_l)
    &&[CONCAT_u32_u64_896_inst] (qptr_h_883 qptr_l_892) (qptr)   
    $buffering  $out CONCAT_u32_u64_896_inst qptr 1
    $delay CONCAT_u32_u64_896_inst 1
  }
  // end data-path
  // 	base_idx := ( $call getBaseIndex (queue_type server_id ) ) $buffering 1// bits of buffering = 8. 
  //  file .Aa/nic.linked.opt.aa, line 281
  // queue_type
  // server_id
  // ( $call getBaseIndex (queue_type server_id ) )
  W_base_idx_870_inst <=> (assign_stmt_874_to_assign_stmt_897/assign_stmt_874_Sample/req assign_stmt_874_to_assign_stmt_897/assign_stmt_874_Update/req) (assign_stmt_874_to_assign_stmt_897/assign_stmt_874_Sample/ack assign_stmt_874_to_assign_stmt_897/assign_stmt_874_Update/ack)
  // 	$call accessRegister (READMEM _hF  (base_idx + 2 ) ($bitcast ($uint<32>) _b0  ) ) (qptr_h ) 
  //  file .Aa/nic.linked.opt.aa, line 282
  // (base_idx + 2 )
  // base_idx
  call_stmt_883_call <=> (assign_stmt_874_to_assign_stmt_897/call_stmt_883_Sample/crr assign_stmt_874_to_assign_stmt_897/call_stmt_883_Update/ccr) (assign_stmt_874_to_assign_stmt_897/call_stmt_883_Sample/cra assign_stmt_874_to_assign_stmt_897/call_stmt_883_Update/cca)
  // 	$call accessRegister (READMEM _hF  (base_idx + 3 ) ($bitcast ($uint<32>) _b0  ) ) (qptr_l ) 
  //  file .Aa/nic.linked.opt.aa, line 283
  // (base_idx + 3 )
  // base_idx
  call_stmt_892_call <=> (assign_stmt_874_to_assign_stmt_897/call_stmt_892_Sample/crr assign_stmt_874_to_assign_stmt_897/call_stmt_892_Update/ccr) (assign_stmt_874_to_assign_stmt_897/call_stmt_892_Sample/cra assign_stmt_874_to_assign_stmt_897/call_stmt_892_Update/cca)
  // 	qptr := (qptr_h && qptr_l) $buffering 1// bits of buffering = 64. 
  //  file .Aa/nic.linked.opt.aa, line 284
  // (qptr_h && qptr_l)
  // qptr_h
  // qptr_l
  CONCAT_u32_u64_896_inst <=> (assign_stmt_874_to_assign_stmt_897/CONCAT_u32_u64_896_Sample/rr assign_stmt_874_to_assign_stmt_897/CONCAT_u32_u64_896_Update/cr) (assign_stmt_874_to_assign_stmt_897/CONCAT_u32_u64_896_Sample/ra assign_stmt_874_to_assign_stmt_897/CONCAT_u32_u64_896_Update/ca)
  $attribute input_buffering => "0"
  $attribute output_buffering => "0"
}
$module [accessMemoryLdStub] 
{
  $in tag:$int<8>
  // can point into 
  byte_addr_base:$int<64>
  // can point into  foreign( $void )
  offset:$int<64>
  // can point into 
  $out rbyte:$int<8>
  // can point into  foreign( $void )
  // pipe-declarations for block %accessMemoryLdStub
  //  file .Aa/nic.linked.opt.aa, line 288
  // there are no memory spaces local to this module.
  $CP 
  {
    // begin control-path 
    ::[call_stmt_911_to_assign_stmt_915] 
    {
      // start: 	$call doMemAccess (tag LDSTUB byte_addr_base offset ($bitcast ($uint<64>) _b0  ) ) (rdword ) 
      //  file .Aa/nic.linked.opt.aa, line 293
      $T[call_stmt_911_sample_start_] 
      $T[call_stmt_911_sample_completed_] 
      $T[call_stmt_911_update_start_] 
      $T[call_stmt_911_update_completed_] 
      // Call input argument 0
      // tag
      // Call input argument 1
      // Call input argument 2
      // byte_addr_base
      // Call input argument 3
      // offset
      // Call input argument 4
      // start: Forward dependencies from tag to transition call_stmt_911_sample_start_
      // done: Forward dependencies from tag to transition call_stmt_911_sample_start_
      // start: Forward dependencies from byte_addr_base to transition call_stmt_911_sample_start_
      // done: Forward dependencies from byte_addr_base to transition call_stmt_911_sample_start_
      // start: Forward dependencies from offset to transition call_stmt_911_sample_start_
      // done: Forward dependencies from offset to transition call_stmt_911_sample_start_
      ;;[call_stmt_911_Sample] 
      {
        $T [crr] $T [cra] 
      }
      ;;[call_stmt_911_Update] 
      {
        $T [ccr] $T [cca] 
      }
      call_stmt_911_sample_start_ &-> (call_stmt_911_Sample)
      call_stmt_911_sample_completed_ <-& (call_stmt_911_Sample)
      call_stmt_911_sample_completed_ &-> ($null)
      call_stmt_911_update_start_ &-> (call_stmt_911_Update)
      call_stmt_911_update_completed_ <-& (call_stmt_911_Update)
      // Call output argument 0
      // (as target) rdword
      // start: WAR dependencies for rdword
      // done: WAR dependencies for rdword
      // end: 	$call doMemAccess (tag LDSTUB byte_addr_base offset ($bitcast ($uint<64>) _b0  ) ) (rdword ) 
      // start:  	rbyte := ( $slice rdword 7 0 )  $buffering 1// bits of buffering = 8. 
      //  file .Aa/nic.linked.opt.aa, line 294
      // Source expression
      // ( $slice rdword 7 0 ) 
      $T[slice_914_sample_start_] 
      $T[slice_914_sample_completed_] 
      $T[slice_914_update_start_] 
      $T[slice_914_update_completed_] 
      // rdword
      // start: Forward dependencies from rdword to transition slice_914_sample_start_
      slice_914_sample_start_ <-& (call_stmt_911_update_completed_)
      // done: Forward dependencies from rdword to transition slice_914_sample_start_
      ;;[slice_914_Sample] 
      {
        // unary expression 
        $T [rr] $T [ra] // (split) unary operation
      }
      ;;[slice_914_Update] 
      {
        // unary expression 
        $T [cr] $T [ca] //(split) unary operation
      }
      slice_914_sample_start_ &-> (slice_914_Sample)
      slice_914_sample_completed_ <-& (slice_914_Sample)
      slice_914_sample_completed_ &-> ($null)
      slice_914_update_start_ &-> (slice_914_Update)
      slice_914_update_completed_ <-& (slice_914_Update)
      // Target expression
      // (as target) rbyte
      // rbyte
      // write to interface object
      // start: WAR dependencies for rbyte
      // done: WAR dependencies for rbyte
      // rbyte
      // write to interface object
      // end:  	rbyte := ( $slice rdword 7 0 )  $buffering 1// bits of buffering = 8. 
      // load-store dependencies..
      // pipe read/write dependencies for pipe MEMORY_TO_NIC_RESPONSE
      // read-dependencies for pipe MEMORY_TO_NIC_RESPONSE
      // write-dependencies for pipe MEMORY_TO_NIC_RESPONSE
      // signal write dependencies for MEMORY_TO_NIC_RESPONSE
      // pipe read/write dependencies for pipe NIC_DEBUG_SIGNAL
      // read-dependencies for pipe NIC_DEBUG_SIGNAL
      // write-dependencies for pipe NIC_DEBUG_SIGNAL
      // signal write dependencies for NIC_DEBUG_SIGNAL
      // pipe read/write dependencies for pipe NIC_TO_MEMORY_REQUEST
      // read-dependencies for pipe NIC_TO_MEMORY_REQUEST
      // write-dependencies for pipe NIC_TO_MEMORY_REQUEST
      // signal write dependencies for NIC_TO_MEMORY_REQUEST
      // pipe read/write dependencies for pipe memory_access_lock
      // read-dependencies for pipe memory_access_lock
      // write-dependencies for pipe memory_access_lock
      // signal write dependencies for memory_access_lock
    }
  }
  // end control-path
  $DP 
  {
    // begin data-path 
    // constant-object-declarations for block %accessMemoryLdStub
    //  file .Aa/nic.linked.opt.aa, line 288
    // 	$call doMemAccess (tag LDSTUB byte_addr_base offset ($bitcast ($uint<64>) _b0  ) ) (rdword ) 
    //  file .Aa/nic.linked.opt.aa, line 293
    // LDSTUB
    $constant $W[R_LDSTUB_905_wire_constant] : $int<3> := _b111// 7
    // ($bitcast ($uint<64>) _b0  )
    $constant $W[type_cast_909_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000000000// 0
    // 	$call doMemAccess (tag LDSTUB byte_addr_base offset ($bitcast ($uint<64>) _b0  ) ) (rdword ) 
    //  file .Aa/nic.linked.opt.aa, line 293
    // rdword
    $W[rdword_911] : $int<64>
    // 	rbyte := ( $slice rdword 7 0 )  $buffering 1// bits of buffering = 8. 
    //  file .Aa/nic.linked.opt.aa, line 294
    // rbyte
    // 	$call doMemAccess (tag LDSTUB byte_addr_base offset ($bitcast ($uint<64>) _b0  ) ) (rdword ) 
    //  file .Aa/nic.linked.opt.aa, line 293
    $call [call_stmt_911_call] $module doMemAccess(tag R_LDSTUB_905_wire_constant byte_addr_base offset type_cast_909_wire_constant) (rdword_911)  
    $delay call_stmt_911_call 36
    $buffering  $in call_stmt_911_call tag 1
    $buffering  $in call_stmt_911_call R_LDSTUB_905_wire_constant 1
    $buffering  $in call_stmt_911_call byte_addr_base 1
    $buffering  $in call_stmt_911_call offset 1
    $buffering  $in call_stmt_911_call type_cast_909_wire_constant 1
    $buffering  $out call_stmt_911_call rdword_911 1
    // 	rbyte := ( $slice rdword 7 0 )  $buffering 1// bits of buffering = 8. 
    //  file .Aa/nic.linked.opt.aa, line 294
    // ( $slice rdword 7 0 ) 
    [:] [slice_914_inst] (rdword_911 7 0) (rbyte) 
    $buffering  $out slice_914_inst rbyte 1
    $delay slice_914_inst 1
  }
  // end data-path
  // 	$call doMemAccess (tag LDSTUB byte_addr_base offset ($bitcast ($uint<64>) _b0  ) ) (rdword ) 
  //  file .Aa/nic.linked.opt.aa, line 293
  // tag
  // byte_addr_base
  // offset
  call_stmt_911_call <=> (call_stmt_911_to_assign_stmt_915/call_stmt_911_Sample/crr call_stmt_911_to_assign_stmt_915/call_stmt_911_Update/ccr) (call_stmt_911_to_assign_stmt_915/call_stmt_911_Sample/cra call_stmt_911_to_assign_stmt_915/call_stmt_911_Update/cca)
  // 	rbyte := ( $slice rdword 7 0 )  $buffering 1// bits of buffering = 8. 
  //  file .Aa/nic.linked.opt.aa, line 294
  // rdword
  // ( $slice rdword 7 0 ) 
  slice_914_inst <=> (call_stmt_911_to_assign_stmt_915/slice_914_Sample/rr call_stmt_911_to_assign_stmt_915/slice_914_Update/cr) (call_stmt_911_to_assign_stmt_915/slice_914_Sample/ra call_stmt_911_to_assign_stmt_915/slice_914_Update/ca)
}
$module [acquireLock] 
{
  $in tag:$int<8>
  // can point into 
  lock_address_pointer:$int<64>
  // can point into  foreign( $void )
  $out m_ok:$int<1> := _b1
  // can point into 
  // pipe-declarations for block %acquireLock
  //  file .Aa/nic.linked.opt.aa, line 296
  // pipe-declarations for block %acquireLock%loop
  //  file .Aa/nic.linked.opt.aa, line 301
  // pipe-declarations for block %acquireLock%loop%
  //  file .Aa/nic.linked.opt.aa, line 303
  // there are no memory spaces local to this module.
  $CP 
  {
    // begin control-path 
    <>[branch_block_stmt_921] // Branch Block  file .Aa/nic.linked.opt.aa, line 301
    {
      $P [branch_block_stmt_921__entry__]
      branch_block_stmt_921__entry__ <-| ($entry)
      $P [branch_block_stmt_921__exit__]
      branch_block_stmt_921__exit__ |-> ($exit)
      $P [merge_stmt_922__entry__] 
      $P [merge_stmt_922__exit__] 
      $P [call_stmt_927__entry__] 
      $P [call_stmt_927__exit__] 
      $P [if_stmt_928__entry__] 
      $P [if_stmt_928__exit__] 
      ::[call_stmt_927] 
      {
        // start: 		$call accessMemoryLdStub (tag lock_address_pointer 0  ) (lock_val ) 
        //  file .Aa/nic.linked.opt.aa, line 305
        $T[call_stmt_927_sample_start_] 
        $T[call_stmt_927_sample_completed_] 
        $T[call_stmt_927_update_start_] 
        $T[call_stmt_927_update_completed_] 
        // Call input argument 0
        // tag
        // Call input argument 1
        // lock_address_pointer
        // Call input argument 2
        // start: Forward dependencies from tag to transition call_stmt_927_sample_start_
        // done: Forward dependencies from tag to transition call_stmt_927_sample_start_
        // start: Forward dependencies from lock_address_pointer to transition call_stmt_927_sample_start_
        // done: Forward dependencies from lock_address_pointer to transition call_stmt_927_sample_start_
        ;;[call_stmt_927_Sample] 
        {
          $T [crr] $T [cra] 
        }
        ;;[call_stmt_927_Update] 
        {
          $T [ccr] $T [cca] 
        }
        call_stmt_927_sample_start_ &-> (call_stmt_927_Sample)
        call_stmt_927_sample_completed_ <-& (call_stmt_927_Sample)
        call_stmt_927_sample_completed_ &-> ($null)
        call_stmt_927_update_start_ &-> (call_stmt_927_Update)
        call_stmt_927_update_completed_ <-& (call_stmt_927_Update)
        // Call output argument 0
        // (as target) lock_val
        // start: WAR dependencies for lock_val
        // done: WAR dependencies for lock_val
        // end: 		$call accessMemoryLdStub (tag lock_address_pointer 0  ) (lock_val ) 
        // load-store dependencies..
        // pipe read/write dependencies for pipe MEMORY_TO_NIC_RESPONSE
        // read-dependencies for pipe MEMORY_TO_NIC_RESPONSE
        // write-dependencies for pipe MEMORY_TO_NIC_RESPONSE
        // signal write dependencies for MEMORY_TO_NIC_RESPONSE
        // pipe read/write dependencies for pipe NIC_DEBUG_SIGNAL
        // read-dependencies for pipe NIC_DEBUG_SIGNAL
        // write-dependencies for pipe NIC_DEBUG_SIGNAL
        // signal write dependencies for NIC_DEBUG_SIGNAL
        // pipe read/write dependencies for pipe NIC_TO_MEMORY_REQUEST
        // read-dependencies for pipe NIC_TO_MEMORY_REQUEST
        // write-dependencies for pipe NIC_TO_MEMORY_REQUEST
        // signal write dependencies for NIC_TO_MEMORY_REQUEST
        // pipe read/write dependencies for pipe memory_access_lock
        // read-dependencies for pipe memory_access_lock
        // write-dependencies for pipe memory_access_lock
        // signal write dependencies for memory_access_lock
      }
      call_stmt_927__entry__ |-> (call_stmt_927)
      call_stmt_927__exit__ <-| (call_stmt_927)
      // if-statement  
      //  file .Aa/nic.linked.opt.aa, line 0
      ;;[if_stmt_928_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_928__entry__ |-> (if_stmt_928_dead_link)
      if_stmt_928__exit__ <-| (if_stmt_928_dead_link)
      ;;[if_stmt_928_eval_test] 
      {
        // test expression evaluate and trigger branch 
        // (lock_val == _hFF )
        ;;[EQ_u8_u1_931] 
        {
          // binary expression 
          ||[EQ_u8_u1_931_inputs] 
          {
          }
          // flow-through
          ;;[SplitProtocol] 
          {
            ;;[Sample] 
            {
              $T [rr] $T [ra]
            }
            ;;[Update] 
            {
              $T [cr] $T [ca]
            }
          }
        }
        $T [branch_req] 
      }
      if_stmt_928__entry__ |-> (if_stmt_928_eval_test)
      $P [EQ_u8_u1_931_place]
      EQ_u8_u1_931_place <-| (if_stmt_928_eval_test)
      ;;[if_stmt_928_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_928_else_link] 
      {
        $T [else_choice_transition] 
      }
      EQ_u8_u1_931_place |-> (if_stmt_928_if_link if_stmt_928_else_link)
      $P [loopback]
      loopback <-| (if_stmt_928_if_link)
      if_stmt_928__exit__ <-| (if_stmt_928_else_link)
      // control-path for merge  
      //  file .Aa/nic.linked.opt.aa, line 303
      ;;[merge_stmt_922_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_922__entry__ |-> (merge_stmt_922_dead_link)
      merge_stmt_922__exit__ <-| (merge_stmt_922_dead_link)
      //---------------------   merge statement  file .Aa/nic.linked.opt.aa, line 303  --------------------------
      ||[merge_stmt_922__entry___PhiReq] 
      {
        // no phi statements in merge..
      }
      merge_stmt_922__entry__ |-> (merge_stmt_922__entry___PhiReq)
      ||[loopback_PhiReq] 
      {
        // no phi statements in merge..
      }
      loopback |-> (loopback_PhiReq)
      $P [merge_stmt_922_PhiReqMerge] 
      merge_stmt_922_PhiReqMerge <-| ( merge_stmt_922__entry___PhiReq  loopback_PhiReq )
      ||[merge_stmt_922_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_922_PhiReqMerge |-> (merge_stmt_922_PhiAck)
      merge_stmt_922__exit__  <-| (merge_stmt_922_PhiAck)
      //---------------------  end of merge statement  file .Aa/nic.linked.opt.aa, line 303  --------------------------
      merge_stmt_922__entry__ <-| (branch_block_stmt_921__entry__)
      call_stmt_927__entry__ <-| (merge_stmt_922__exit__)
      if_stmt_928__entry__ <-| (call_stmt_927__exit__)
      if_stmt_928__exit__ |-> (branch_block_stmt_921__exit__)
    }
    ::[assign_stmt_938] 
    {
      // start:  	m_ok := ($bitcast ($uint<1>) _b1  ) $buffering 1// bits of buffering = 1. 
      //  file .Aa/nic.linked.opt.aa, line 310
      // constant! 
      // m_ok
      // write to interface object
      // end:  	m_ok := ($bitcast ($uint<1>) _b1  ) $buffering 1// bits of buffering = 1. 
      // load-store dependencies..
    }
  }
  // end control-path
  $DP 
  {
    // begin data-path 
    // constant-object-declarations for block %acquireLock%loop%
    //  file .Aa/nic.linked.opt.aa, line 303
    // constant-object-declarations for block %acquireLock%loop
    //  file .Aa/nic.linked.opt.aa, line 301
    // constant-object-declarations for block %acquireLock
    //  file .Aa/nic.linked.opt.aa, line 296
    // constant-declarations for block %acquireLock%loop
    //  file .Aa/nic.linked.opt.aa, line 301
    // constant-declarations for block %acquireLock%loop%
    //  file .Aa/nic.linked.opt.aa, line 303
    // 		$call accessMemoryLdStub (tag lock_address_pointer 0  ) (lock_val ) 
    //  file .Aa/nic.linked.opt.aa, line 305
    // 0 
    $constant $W[konst_925_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000000000// 0
    // if-statement  
    //  file .Aa/nic.linked.opt.aa, line 0
    // _hFF 
    $constant $W[konst_930_wire_constant] : $int<8> := _b11111111// 255
    // 	m_ok := ($bitcast ($uint<1>) _b1  ) $buffering 1// bits of buffering = 1. 
    //  file .Aa/nic.linked.opt.aa, line 310
    // block %acquireLock%loop
    //  file .Aa/nic.linked.opt.aa, line 301
    // 		$call accessMemoryLdStub (tag lock_address_pointer 0  ) (lock_val ) 
    //  file .Aa/nic.linked.opt.aa, line 305
    // lock_val
    $W[lock_val_927] : $int<8>
    // if statement  
    //  file .Aa/nic.linked.opt.aa, line 0
    // (lock_val == _hFF )
    $intermediate $W[EQ_u8_u1_931_wire] : $int<1>
    // datapath-instances for block %acquireLock%loop
    //  file .Aa/nic.linked.opt.aa, line 301
    // 		$call accessMemoryLdStub (tag lock_address_pointer 0  ) (lock_val ) 
    //  file .Aa/nic.linked.opt.aa, line 305
    $call [call_stmt_927_call] $module accessMemoryLdStub(tag lock_address_pointer konst_925_wire_constant) (lock_val_927)  
    $delay call_stmt_927_call 4
    $buffering  $in call_stmt_927_call tag 1
    $buffering  $in call_stmt_927_call lock_address_pointer 1
    $buffering  $in call_stmt_927_call konst_925_wire_constant 1
    $buffering  $out call_stmt_927_call lock_val_927 1
    // datapath-instances for if  
    //  file .Aa/nic.linked.opt.aa, line 0
    // (lock_val == _hFF )
    ==[EQ_u8_u1_931_inst] (lock_val_927 konst_930_wire_constant) (EQ_u8_u1_931_wire)   $flowthrough 
    $delay EQ_u8_u1_931_inst 0
    ==0? [if_stmt_928_branch] (EQ_u8_u1_931_wire)
  }
  // end data-path
  // CP-DP links for merge  
  //  file .Aa/nic.linked.opt.aa, line 303
  // 		$call accessMemoryLdStub (tag lock_address_pointer 0  ) (lock_val ) 
  //  file .Aa/nic.linked.opt.aa, line 305
  // tag
  // lock_address_pointer
  call_stmt_927_call <=> (branch_block_stmt_921/call_stmt_927/call_stmt_927_Sample/crr branch_block_stmt_921/call_stmt_927/call_stmt_927_Update/ccr) (branch_block_stmt_921/call_stmt_927/call_stmt_927_Sample/cra branch_block_stmt_921/call_stmt_927/call_stmt_927_Update/cca)
  // CP-DP links for if  
  //  file .Aa/nic.linked.opt.aa, line 0
  // (lock_val == _hFF )
  if_stmt_928_branch <=> (branch_block_stmt_921/if_stmt_928_eval_test/branch_req) (branch_block_stmt_921/if_stmt_928_else_link/else_choice_transition branch_block_stmt_921/if_stmt_928_if_link/if_choice_transition)
}
$module [accessQueueReadIndex] 
{
  $in tag:$int<8>
  // can point into 
  rwbar:$int<1>
  // can point into 
  qptr:$int<64>
  // can point into  foreign( $void )
  wdata:$int<32>
  // can point into  foreign( $void )
  $out rdata:$int<32>
  // can point into  foreign( $void )
  // pipe-declarations for block %accessQueueReadIndex
  //  file .Aa/nic.linked.opt.aa, line 312
  // there are no memory spaces local to this module.
  $CP 
  {
    // begin control-path 
    ::[call_stmt_952] 
    {
      // start: 	$call accessMemoryWord (tag rwbar qptr 4  wdata ) (rdata ) 
      //  file .Aa/nic.linked.opt.aa, line 317
      $T[call_stmt_952_sample_start_] 
      $T[call_stmt_952_sample_completed_] 
      $T[call_stmt_952_update_start_] 
      $T[call_stmt_952_update_completed_] 
      // Call input argument 0
      // tag
      // Call input argument 1
      // rwbar
      // Call input argument 2
      // qptr
      // Call input argument 3
      // Call input argument 4
      // wdata
      // start: Forward dependencies from tag to transition call_stmt_952_sample_start_
      // done: Forward dependencies from tag to transition call_stmt_952_sample_start_
      // start: Forward dependencies from rwbar to transition call_stmt_952_sample_start_
      // done: Forward dependencies from rwbar to transition call_stmt_952_sample_start_
      // start: Forward dependencies from qptr to transition call_stmt_952_sample_start_
      // done: Forward dependencies from qptr to transition call_stmt_952_sample_start_
      // start: Forward dependencies from wdata to transition call_stmt_952_sample_start_
      // done: Forward dependencies from wdata to transition call_stmt_952_sample_start_
      ;;[call_stmt_952_Sample] 
      {
        $T [crr] $T [cra] 
      }
      ;;[call_stmt_952_Update] 
      {
        $T [ccr] $T [cca] 
      }
      call_stmt_952_sample_start_ &-> (call_stmt_952_Sample)
      call_stmt_952_sample_completed_ <-& (call_stmt_952_Sample)
      call_stmt_952_sample_completed_ &-> ($null)
      call_stmt_952_update_start_ &-> (call_stmt_952_Update)
      call_stmt_952_update_completed_ <-& (call_stmt_952_Update)
      // Call output argument 0
      // (as target) rdata
      // rdata
      // write to interface object
      // rdata
      // write to interface object
      // start: WAR dependencies for rdata
      // done: WAR dependencies for rdata
      // end: 	$call accessMemoryWord (tag rwbar qptr 4  wdata ) (rdata ) 
      // load-store dependencies..
      // pipe read/write dependencies for pipe MEMORY_TO_NIC_RESPONSE
      // read-dependencies for pipe MEMORY_TO_NIC_RESPONSE
      // write-dependencies for pipe MEMORY_TO_NIC_RESPONSE
      // signal write dependencies for MEMORY_TO_NIC_RESPONSE
      // pipe read/write dependencies for pipe NIC_DEBUG_SIGNAL
      // read-dependencies for pipe NIC_DEBUG_SIGNAL
      // write-dependencies for pipe NIC_DEBUG_SIGNAL
      // signal write dependencies for NIC_DEBUG_SIGNAL
      // pipe read/write dependencies for pipe NIC_TO_MEMORY_REQUEST
      // read-dependencies for pipe NIC_TO_MEMORY_REQUEST
      // write-dependencies for pipe NIC_TO_MEMORY_REQUEST
      // signal write dependencies for NIC_TO_MEMORY_REQUEST
      // pipe read/write dependencies for pipe memory_access_lock
      // read-dependencies for pipe memory_access_lock
      // write-dependencies for pipe memory_access_lock
      // signal write dependencies for memory_access_lock
    }
  }
  // end control-path
  $DP 
  {
    // begin data-path 
    // constant-object-declarations for block %accessQueueReadIndex
    //  file .Aa/nic.linked.opt.aa, line 312
    // 	$call accessMemoryWord (tag rwbar qptr 4  wdata ) (rdata ) 
    //  file .Aa/nic.linked.opt.aa, line 317
    // 4 
    $constant $W[konst_949_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000000100// 4
    // 	$call accessMemoryWord (tag rwbar qptr 4  wdata ) (rdata ) 
    //  file .Aa/nic.linked.opt.aa, line 317
    // rdata
    // 	$call accessMemoryWord (tag rwbar qptr 4  wdata ) (rdata ) 
    //  file .Aa/nic.linked.opt.aa, line 317
    $call [call_stmt_952_call] $module accessMemoryWord(tag rwbar qptr konst_949_wire_constant wdata) (rdata)  
    $delay call_stmt_952_call 39
    $buffering  $in call_stmt_952_call tag 1
    $buffering  $in call_stmt_952_call rwbar 1
    $buffering  $in call_stmt_952_call qptr 1
    $buffering  $in call_stmt_952_call konst_949_wire_constant 1
    $buffering  $in call_stmt_952_call wdata 1
    $buffering  $out call_stmt_952_call rdata 1
  }
  // end data-path
  // 	$call accessMemoryWord (tag rwbar qptr 4  wdata ) (rdata ) 
  //  file .Aa/nic.linked.opt.aa, line 317
  // tag
  // rwbar
  // qptr
  // wdata
  call_stmt_952_call <=> (call_stmt_952/call_stmt_952_Sample/crr call_stmt_952/call_stmt_952_Update/ccr) (call_stmt_952/call_stmt_952_Sample/cra call_stmt_952/call_stmt_952_Update/cca)
  $attribute input_buffering => "0"
  $attribute output_buffering => "0"
}
$module [accessQueueWriteIndex] 
{
  $in tag:$int<8>
  // can point into 
  rwbar:$int<1>
  // can point into 
  qptr:$int<64>
  // can point into  foreign( $void )
  wdata:$int<32>
  // can point into  foreign( $void )
  $out rdata:$int<32>
  // can point into  foreign( $void )
  // pipe-declarations for block %accessQueueWriteIndex
  //  file .Aa/nic.linked.opt.aa, line 321
  // there are no memory spaces local to this module.
  $CP 
  {
    // begin control-path 
    ::[call_stmt_966] 
    {
      // start: 	$call accessMemoryWord (tag rwbar qptr 8  wdata ) (rdata ) 
      //  file .Aa/nic.linked.opt.aa, line 326
      $T[call_stmt_966_sample_start_] 
      $T[call_stmt_966_sample_completed_] 
      $T[call_stmt_966_update_start_] 
      $T[call_stmt_966_update_completed_] 
      // Call input argument 0
      // tag
      // Call input argument 1
      // rwbar
      // Call input argument 2
      // qptr
      // Call input argument 3
      // Call input argument 4
      // wdata
      // start: Forward dependencies from tag to transition call_stmt_966_sample_start_
      // done: Forward dependencies from tag to transition call_stmt_966_sample_start_
      // start: Forward dependencies from rwbar to transition call_stmt_966_sample_start_
      // done: Forward dependencies from rwbar to transition call_stmt_966_sample_start_
      // start: Forward dependencies from qptr to transition call_stmt_966_sample_start_
      // done: Forward dependencies from qptr to transition call_stmt_966_sample_start_
      // start: Forward dependencies from wdata to transition call_stmt_966_sample_start_
      // done: Forward dependencies from wdata to transition call_stmt_966_sample_start_
      ;;[call_stmt_966_Sample] 
      {
        $T [crr] $T [cra] 
      }
      ;;[call_stmt_966_Update] 
      {
        $T [ccr] $T [cca] 
      }
      call_stmt_966_sample_start_ &-> (call_stmt_966_Sample)
      call_stmt_966_sample_completed_ <-& (call_stmt_966_Sample)
      call_stmt_966_sample_completed_ &-> ($null)
      call_stmt_966_update_start_ &-> (call_stmt_966_Update)
      call_stmt_966_update_completed_ <-& (call_stmt_966_Update)
      // Call output argument 0
      // (as target) rdata
      // rdata
      // write to interface object
      // rdata
      // write to interface object
      // start: WAR dependencies for rdata
      // done: WAR dependencies for rdata
      // end: 	$call accessMemoryWord (tag rwbar qptr 8  wdata ) (rdata ) 
      // load-store dependencies..
      // pipe read/write dependencies for pipe MEMORY_TO_NIC_RESPONSE
      // read-dependencies for pipe MEMORY_TO_NIC_RESPONSE
      // write-dependencies for pipe MEMORY_TO_NIC_RESPONSE
      // signal write dependencies for MEMORY_TO_NIC_RESPONSE
      // pipe read/write dependencies for pipe NIC_DEBUG_SIGNAL
      // read-dependencies for pipe NIC_DEBUG_SIGNAL
      // write-dependencies for pipe NIC_DEBUG_SIGNAL
      // signal write dependencies for NIC_DEBUG_SIGNAL
      // pipe read/write dependencies for pipe NIC_TO_MEMORY_REQUEST
      // read-dependencies for pipe NIC_TO_MEMORY_REQUEST
      // write-dependencies for pipe NIC_TO_MEMORY_REQUEST
      // signal write dependencies for NIC_TO_MEMORY_REQUEST
      // pipe read/write dependencies for pipe memory_access_lock
      // read-dependencies for pipe memory_access_lock
      // write-dependencies for pipe memory_access_lock
      // signal write dependencies for memory_access_lock
    }
  }
  // end control-path
  $DP 
  {
    // begin data-path 
    // constant-object-declarations for block %accessQueueWriteIndex
    //  file .Aa/nic.linked.opt.aa, line 321
    // 	$call accessMemoryWord (tag rwbar qptr 8  wdata ) (rdata ) 
    //  file .Aa/nic.linked.opt.aa, line 326
    // 8 
    $constant $W[konst_963_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000001000// 8
    // 	$call accessMemoryWord (tag rwbar qptr 8  wdata ) (rdata ) 
    //  file .Aa/nic.linked.opt.aa, line 326
    // rdata
    // 	$call accessMemoryWord (tag rwbar qptr 8  wdata ) (rdata ) 
    //  file .Aa/nic.linked.opt.aa, line 326
    $call [call_stmt_966_call] $module accessMemoryWord(tag rwbar qptr konst_963_wire_constant wdata) (rdata)  
    $delay call_stmt_966_call 39
    $buffering  $in call_stmt_966_call tag 1
    $buffering  $in call_stmt_966_call rwbar 1
    $buffering  $in call_stmt_966_call qptr 1
    $buffering  $in call_stmt_966_call konst_963_wire_constant 1
    $buffering  $in call_stmt_966_call wdata 1
    $buffering  $out call_stmt_966_call rdata 1
  }
  // end data-path
  // 	$call accessMemoryWord (tag rwbar qptr 8  wdata ) (rdata ) 
  //  file .Aa/nic.linked.opt.aa, line 326
  // tag
  // rwbar
  // qptr
  // wdata
  call_stmt_966_call <=> (call_stmt_966/call_stmt_966_Sample/crr call_stmt_966/call_stmt_966_Update/ccr) (call_stmt_966/call_stmt_966_Sample/cra call_stmt_966/call_stmt_966_Update/cca)
  $attribute input_buffering => "0"
  $attribute output_buffering => "0"
}
$module [getQueuePointers] 
{
  $in tag:$int<8>
  // can point into 
  q_base_address:$int<64>
  // can point into  foreign( $void )
  $out wp:$int<32>
  // can point into  foreign( $void )
  rp:$int<32>
  // can point into  foreign( $void )
  // pipe-declarations for block %getQueuePointers
  //  file .Aa/nic.linked.opt.aa, line 330
  // there are no memory spaces local to this module.
  $CP 
  {
    // begin control-path 
    ::[call_stmt_979_to_call_stmt_986] 
    {
      // start: 	$call accessQueueReadIndex (tag READMEM q_base_address ($bitcast ($uint<32>) _b0  ) ) (rp ) 
      //  file .Aa/nic.linked.opt.aa, line 335
      $T[call_stmt_979_sample_start_] 
      $T[call_stmt_979_sample_completed_] 
      $T[call_stmt_979_update_start_] 
      $T[call_stmt_979_update_completed_] 
      // Call input argument 0
      // tag
      // Call input argument 1
      // Call input argument 2
      // q_base_address
      // Call input argument 3
      // start: Forward dependencies from tag to transition call_stmt_979_sample_start_
      // done: Forward dependencies from tag to transition call_stmt_979_sample_start_
      // start: Forward dependencies from q_base_address to transition call_stmt_979_sample_start_
      // done: Forward dependencies from q_base_address to transition call_stmt_979_sample_start_
      ;;[call_stmt_979_Sample] 
      {
        $T [crr] $T [cra] 
      }
      ;;[call_stmt_979_Update] 
      {
        $T [ccr] $T [cca] 
      }
      call_stmt_979_sample_start_ &-> (call_stmt_979_Sample)
      call_stmt_979_sample_completed_ <-& (call_stmt_979_Sample)
      call_stmt_979_sample_completed_ &-> ($null)
      call_stmt_979_update_start_ &-> (call_stmt_979_Update)
      call_stmt_979_update_completed_ <-& (call_stmt_979_Update)
      // Call output argument 0
      // (as target) rp
      // rp
      // write to interface object
      // rp
      // write to interface object
      // start: WAR dependencies for rp
      // done: WAR dependencies for rp
      // end: 	$call accessQueueReadIndex (tag READMEM q_base_address ($bitcast ($uint<32>) _b0  ) ) (rp ) 
      // start: 	$call accessQueueWriteIndex (tag READMEM q_base_address ($bitcast ($uint<32>) _b0  ) ) (wp ) 
      //  file .Aa/nic.linked.opt.aa, line 336
      $T[call_stmt_986_sample_start_] 
      $T[call_stmt_986_sample_completed_] 
      $T[call_stmt_986_update_start_] 
      $T[call_stmt_986_update_completed_] 
      // Call input argument 0
      // tag
      // Call input argument 1
      // Call input argument 2
      // q_base_address
      // Call input argument 3
      // start: Forward dependencies from tag to transition call_stmt_986_sample_start_
      // done: Forward dependencies from tag to transition call_stmt_986_sample_start_
      // start: Forward dependencies from q_base_address to transition call_stmt_986_sample_start_
      // done: Forward dependencies from q_base_address to transition call_stmt_986_sample_start_
      ;;[call_stmt_986_Sample] 
      {
        $T [crr] $T [cra] 
      }
      ;;[call_stmt_986_Update] 
      {
        $T [ccr] $T [cca] 
      }
      call_stmt_986_sample_start_ &-> (call_stmt_986_Sample)
      call_stmt_986_sample_completed_ <-& (call_stmt_986_Sample)
      call_stmt_986_sample_completed_ &-> ($null)
      call_stmt_986_update_start_ &-> (call_stmt_986_Update)
      call_stmt_986_update_completed_ <-& (call_stmt_986_Update)
      // Call output argument 0
      // (as target) wp
      // wp
      // write to interface object
      // wp
      // write to interface object
      // start: WAR dependencies for wp
      // done: WAR dependencies for wp
      // end: 	$call accessQueueWriteIndex (tag READMEM q_base_address ($bitcast ($uint<32>) _b0  ) ) (wp ) 
      // load-store dependencies..
      // pipe read/write dependencies for pipe MEMORY_TO_NIC_RESPONSE
      // read-dependencies for pipe MEMORY_TO_NIC_RESPONSE
      call_stmt_986_sample_start_ <-& (call_stmt_979_update_completed_)
      // write-dependencies for pipe MEMORY_TO_NIC_RESPONSE
      // signal write dependencies for MEMORY_TO_NIC_RESPONSE
      // pipe read/write dependencies for pipe NIC_DEBUG_SIGNAL
      // read-dependencies for pipe NIC_DEBUG_SIGNAL
      // write-dependencies for pipe NIC_DEBUG_SIGNAL
      // signal write dependencies for NIC_DEBUG_SIGNAL
      call_stmt_986_sample_start_ <-& (call_stmt_979_update_completed_)
      // pipe read/write dependencies for pipe NIC_TO_MEMORY_REQUEST
      // read-dependencies for pipe NIC_TO_MEMORY_REQUEST
      // write-dependencies for pipe NIC_TO_MEMORY_REQUEST
      call_stmt_986_sample_start_ <-& (call_stmt_979_update_completed_)
      // signal write dependencies for NIC_TO_MEMORY_REQUEST
      // pipe read/write dependencies for pipe memory_access_lock
      // read-dependencies for pipe memory_access_lock
      // write-dependencies for pipe memory_access_lock
      call_stmt_986_sample_start_ <-& (call_stmt_979_update_completed_)
      // signal write dependencies for memory_access_lock
    }
  }
  // end control-path
  $DP 
  {
    // begin data-path 
    // constant-object-declarations for block %getQueuePointers
    //  file .Aa/nic.linked.opt.aa, line 330
    // 	$call accessQueueReadIndex (tag READMEM q_base_address ($bitcast ($uint<32>) _b0  ) ) (rp ) 
    //  file .Aa/nic.linked.opt.aa, line 335
    // READMEM
    $constant $W[R_READMEM_974_wire_constant] : $int<1> := _b1// 1
    // ($bitcast ($uint<32>) _b0  )
    $constant $W[type_cast_977_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // 	$call accessQueueWriteIndex (tag READMEM q_base_address ($bitcast ($uint<32>) _b0  ) ) (wp ) 
    //  file .Aa/nic.linked.opt.aa, line 336
    // READMEM
    $constant $W[R_READMEM_981_wire_constant] : $int<1> := _b1// 1
    // ($bitcast ($uint<32>) _b0  )
    $constant $W[type_cast_984_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // 	$call accessQueueReadIndex (tag READMEM q_base_address ($bitcast ($uint<32>) _b0  ) ) (rp ) 
    //  file .Aa/nic.linked.opt.aa, line 335
    // rp
    // 	$call accessQueueWriteIndex (tag READMEM q_base_address ($bitcast ($uint<32>) _b0  ) ) (wp ) 
    //  file .Aa/nic.linked.opt.aa, line 336
    // wp
    // 	$call accessQueueReadIndex (tag READMEM q_base_address ($bitcast ($uint<32>) _b0  ) ) (rp ) 
    //  file .Aa/nic.linked.opt.aa, line 335
    $call [call_stmt_979_call] $module accessQueueReadIndex(tag R_READMEM_974_wire_constant q_base_address type_cast_977_wire_constant) (rp)  
    $delay call_stmt_979_call 4
    $buffering  $in call_stmt_979_call tag 1
    $buffering  $in call_stmt_979_call R_READMEM_974_wire_constant 1
    $buffering  $in call_stmt_979_call q_base_address 1
    $buffering  $in call_stmt_979_call type_cast_977_wire_constant 1
    $buffering  $out call_stmt_979_call rp 1
    // 	$call accessQueueWriteIndex (tag READMEM q_base_address ($bitcast ($uint<32>) _b0  ) ) (wp ) 
    //  file .Aa/nic.linked.opt.aa, line 336
    $call [call_stmt_986_call] $module accessQueueWriteIndex(tag R_READMEM_981_wire_constant q_base_address type_cast_984_wire_constant) (wp)  
    $delay call_stmt_986_call 4
    $buffering  $in call_stmt_986_call tag 1
    $buffering  $in call_stmt_986_call R_READMEM_981_wire_constant 1
    $buffering  $in call_stmt_986_call q_base_address 1
    $buffering  $in call_stmt_986_call type_cast_984_wire_constant 1
    $buffering  $out call_stmt_986_call wp 1
  }
  // end data-path
  // 	$call accessQueueReadIndex (tag READMEM q_base_address ($bitcast ($uint<32>) _b0  ) ) (rp ) 
  //  file .Aa/nic.linked.opt.aa, line 335
  // tag
  // q_base_address
  call_stmt_979_call <=> (call_stmt_979_to_call_stmt_986/call_stmt_979_Sample/crr call_stmt_979_to_call_stmt_986/call_stmt_979_Update/ccr) (call_stmt_979_to_call_stmt_986/call_stmt_979_Sample/cra call_stmt_979_to_call_stmt_986/call_stmt_979_Update/cca)
  // 	$call accessQueueWriteIndex (tag READMEM q_base_address ($bitcast ($uint<32>) _b0  ) ) (wp ) 
  //  file .Aa/nic.linked.opt.aa, line 336
  // tag
  // q_base_address
  call_stmt_986_call <=> (call_stmt_979_to_call_stmt_986/call_stmt_986_Sample/crr call_stmt_979_to_call_stmt_986/call_stmt_986_Update/ccr) (call_stmt_979_to_call_stmt_986/call_stmt_986_Sample/cra call_stmt_979_to_call_stmt_986/call_stmt_986_Update/cca)
}
$module [accessQueueLength] 
{
  $in tag:$int<8>
  // can point into 
  rwbar:$int<1>
  // can point into 
  qptr:$int<64>
  // can point into  foreign( $void )
  wdata:$int<32>
  // can point into 
  $out rdata:$int<32>
  // can point into  foreign( $void )
  // pipe-declarations for block %accessQueueLength
  //  file .Aa/nic.linked.opt.aa, line 338
  // there are no memory spaces local to this module.
  $CP 
  {
    // begin control-path 
    ::[call_stmt_1000] 
    {
      // start: 	$call accessMemoryWord (tag rwbar qptr 12  wdata ) (rdata ) 
      //  file .Aa/nic.linked.opt.aa, line 343
      $T[call_stmt_1000_sample_start_] 
      $T[call_stmt_1000_sample_completed_] 
      $T[call_stmt_1000_update_start_] 
      $T[call_stmt_1000_update_completed_] 
      // Call input argument 0
      // tag
      // Call input argument 1
      // rwbar
      // Call input argument 2
      // qptr
      // Call input argument 3
      // Call input argument 4
      // wdata
      // start: Forward dependencies from tag to transition call_stmt_1000_sample_start_
      // done: Forward dependencies from tag to transition call_stmt_1000_sample_start_
      // start: Forward dependencies from rwbar to transition call_stmt_1000_sample_start_
      // done: Forward dependencies from rwbar to transition call_stmt_1000_sample_start_
      // start: Forward dependencies from qptr to transition call_stmt_1000_sample_start_
      // done: Forward dependencies from qptr to transition call_stmt_1000_sample_start_
      // start: Forward dependencies from wdata to transition call_stmt_1000_sample_start_
      // done: Forward dependencies from wdata to transition call_stmt_1000_sample_start_
      ;;[call_stmt_1000_Sample] 
      {
        $T [crr] $T [cra] 
      }
      ;;[call_stmt_1000_Update] 
      {
        $T [ccr] $T [cca] 
      }
      call_stmt_1000_sample_start_ &-> (call_stmt_1000_Sample)
      call_stmt_1000_sample_completed_ <-& (call_stmt_1000_Sample)
      call_stmt_1000_sample_completed_ &-> ($null)
      call_stmt_1000_update_start_ &-> (call_stmt_1000_Update)
      call_stmt_1000_update_completed_ <-& (call_stmt_1000_Update)
      // Call output argument 0
      // (as target) rdata
      // rdata
      // write to interface object
      // rdata
      // write to interface object
      // start: WAR dependencies for rdata
      // done: WAR dependencies for rdata
      // end: 	$call accessMemoryWord (tag rwbar qptr 12  wdata ) (rdata ) 
      // load-store dependencies..
      // pipe read/write dependencies for pipe MEMORY_TO_NIC_RESPONSE
      // read-dependencies for pipe MEMORY_TO_NIC_RESPONSE
      // write-dependencies for pipe MEMORY_TO_NIC_RESPONSE
      // signal write dependencies for MEMORY_TO_NIC_RESPONSE
      // pipe read/write dependencies for pipe NIC_DEBUG_SIGNAL
      // read-dependencies for pipe NIC_DEBUG_SIGNAL
      // write-dependencies for pipe NIC_DEBUG_SIGNAL
      // signal write dependencies for NIC_DEBUG_SIGNAL
      // pipe read/write dependencies for pipe NIC_TO_MEMORY_REQUEST
      // read-dependencies for pipe NIC_TO_MEMORY_REQUEST
      // write-dependencies for pipe NIC_TO_MEMORY_REQUEST
      // signal write dependencies for NIC_TO_MEMORY_REQUEST
      // pipe read/write dependencies for pipe memory_access_lock
      // read-dependencies for pipe memory_access_lock
      // write-dependencies for pipe memory_access_lock
      // signal write dependencies for memory_access_lock
    }
  }
  // end control-path
  $DP 
  {
    // begin data-path 
    // constant-object-declarations for block %accessQueueLength
    //  file .Aa/nic.linked.opt.aa, line 338
    // 	$call accessMemoryWord (tag rwbar qptr 12  wdata ) (rdata ) 
    //  file .Aa/nic.linked.opt.aa, line 343
    // 12 
    $constant $W[konst_997_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000001100// 12
    // 	$call accessMemoryWord (tag rwbar qptr 12  wdata ) (rdata ) 
    //  file .Aa/nic.linked.opt.aa, line 343
    // rdata
    // 	$call accessMemoryWord (tag rwbar qptr 12  wdata ) (rdata ) 
    //  file .Aa/nic.linked.opt.aa, line 343
    $call [call_stmt_1000_call] $module accessMemoryWord(tag rwbar qptr konst_997_wire_constant wdata) (rdata)  
    $delay call_stmt_1000_call 39
    $buffering  $in call_stmt_1000_call tag 1
    $buffering  $in call_stmt_1000_call rwbar 1
    $buffering  $in call_stmt_1000_call qptr 1
    $buffering  $in call_stmt_1000_call konst_997_wire_constant 1
    $buffering  $in call_stmt_1000_call wdata 1
    $buffering  $out call_stmt_1000_call rdata 1
  }
  // end data-path
  // 	$call accessMemoryWord (tag rwbar qptr 12  wdata ) (rdata ) 
  //  file .Aa/nic.linked.opt.aa, line 343
  // tag
  // rwbar
  // qptr
  // wdata
  call_stmt_1000_call <=> (call_stmt_1000/call_stmt_1000_Sample/crr call_stmt_1000/call_stmt_1000_Update/ccr) (call_stmt_1000/call_stmt_1000_Sample/cra call_stmt_1000/call_stmt_1000_Update/cca)
  $attribute input_buffering => "0"
  $attribute output_buffering => "0"
}
$module [getQueueLength] 
{
  $in tag:$int<8>
  // can point into 
  q_base_address:$int<64>
  // can point into  foreign( $void )
  $out queue_length:$int<32>
  // can point into  foreign( $void )
  // pipe-declarations for block %getQueueLength
  //  file .Aa/nic.linked.opt.aa, line 347
  // there are no memory spaces local to this module.
  $CP 
  {
    // begin control-path 
    ::[call_stmt_1012] 
    {
      // start: 	$call accessQueueLength (tag READMEM q_base_address ($bitcast ($uint<32>) _b0  ) ) (queue_length ) 
      //  file .Aa/nic.linked.opt.aa, line 352
      $T[call_stmt_1012_sample_start_] 
      $T[call_stmt_1012_sample_completed_] 
      $T[call_stmt_1012_update_start_] 
      $T[call_stmt_1012_update_completed_] 
      // Call input argument 0
      // tag
      // Call input argument 1
      // Call input argument 2
      // q_base_address
      // Call input argument 3
      // start: Forward dependencies from tag to transition call_stmt_1012_sample_start_
      // done: Forward dependencies from tag to transition call_stmt_1012_sample_start_
      // start: Forward dependencies from q_base_address to transition call_stmt_1012_sample_start_
      // done: Forward dependencies from q_base_address to transition call_stmt_1012_sample_start_
      ;;[call_stmt_1012_Sample] 
      {
        $T [crr] $T [cra] 
      }
      ;;[call_stmt_1012_Update] 
      {
        $T [ccr] $T [cca] 
      }
      call_stmt_1012_sample_start_ &-> (call_stmt_1012_Sample)
      call_stmt_1012_sample_completed_ <-& (call_stmt_1012_Sample)
      call_stmt_1012_sample_completed_ &-> ($null)
      call_stmt_1012_update_start_ &-> (call_stmt_1012_Update)
      call_stmt_1012_update_completed_ <-& (call_stmt_1012_Update)
      // Call output argument 0
      // (as target) queue_length
      // queue_length
      // write to interface object
      // queue_length
      // write to interface object
      // start: WAR dependencies for queue_length
      // done: WAR dependencies for queue_length
      // end: 	$call accessQueueLength (tag READMEM q_base_address ($bitcast ($uint<32>) _b0  ) ) (queue_length ) 
      // load-store dependencies..
      // pipe read/write dependencies for pipe MEMORY_TO_NIC_RESPONSE
      // read-dependencies for pipe MEMORY_TO_NIC_RESPONSE
      // write-dependencies for pipe MEMORY_TO_NIC_RESPONSE
      // signal write dependencies for MEMORY_TO_NIC_RESPONSE
      // pipe read/write dependencies for pipe NIC_DEBUG_SIGNAL
      // read-dependencies for pipe NIC_DEBUG_SIGNAL
      // write-dependencies for pipe NIC_DEBUG_SIGNAL
      // signal write dependencies for NIC_DEBUG_SIGNAL
      // pipe read/write dependencies for pipe NIC_TO_MEMORY_REQUEST
      // read-dependencies for pipe NIC_TO_MEMORY_REQUEST
      // write-dependencies for pipe NIC_TO_MEMORY_REQUEST
      // signal write dependencies for NIC_TO_MEMORY_REQUEST
      // pipe read/write dependencies for pipe memory_access_lock
      // read-dependencies for pipe memory_access_lock
      // write-dependencies for pipe memory_access_lock
      // signal write dependencies for memory_access_lock
    }
  }
  // end control-path
  $DP 
  {
    // begin data-path 
    // constant-object-declarations for block %getQueueLength
    //  file .Aa/nic.linked.opt.aa, line 347
    // 	$call accessQueueLength (tag READMEM q_base_address ($bitcast ($uint<32>) _b0  ) ) (queue_length ) 
    //  file .Aa/nic.linked.opt.aa, line 352
    // READMEM
    $constant $W[R_READMEM_1007_wire_constant] : $int<1> := _b1// 1
    // ($bitcast ($uint<32>) _b0  )
    $constant $W[type_cast_1010_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // 	$call accessQueueLength (tag READMEM q_base_address ($bitcast ($uint<32>) _b0  ) ) (queue_length ) 
    //  file .Aa/nic.linked.opt.aa, line 352
    // queue_length
    // 	$call accessQueueLength (tag READMEM q_base_address ($bitcast ($uint<32>) _b0  ) ) (queue_length ) 
    //  file .Aa/nic.linked.opt.aa, line 352
    $call [call_stmt_1012_call] $module accessQueueLength(tag R_READMEM_1007_wire_constant q_base_address type_cast_1010_wire_constant) (queue_length)  
    $delay call_stmt_1012_call 4
    $buffering  $in call_stmt_1012_call tag 1
    $buffering  $in call_stmt_1012_call R_READMEM_1007_wire_constant 1
    $buffering  $in call_stmt_1012_call q_base_address 1
    $buffering  $in call_stmt_1012_call type_cast_1010_wire_constant 1
    $buffering  $out call_stmt_1012_call queue_length 1
  }
  // end data-path
  // 	$call accessQueueLength (tag READMEM q_base_address ($bitcast ($uint<32>) _b0  ) ) (queue_length ) 
  //  file .Aa/nic.linked.opt.aa, line 352
  // tag
  // q_base_address
  call_stmt_1012_call <=> (call_stmt_1012/call_stmt_1012_Sample/crr call_stmt_1012/call_stmt_1012_Update/ccr) (call_stmt_1012/call_stmt_1012_Sample/cra call_stmt_1012/call_stmt_1012_Update/cca)
}
$module [accessQueueTotalMsgs] 
{
  $in tag:$int<8>
  // can point into 
  rwbar:$int<1>
  // can point into 
  qptr:$int<64>
  // can point into  foreign( $void )
  wdata:$int<32>
  // can point into  foreign( $void )
  $out rdata:$int<32>
  // can point into  foreign( $void )
  // pipe-declarations for block %accessQueueTotalMsgs
  //  file .Aa/nic.linked.opt.aa, line 354
  // there are no memory spaces local to this module.
  $CP 
  {
    // begin control-path 
    ::[call_stmt_1026] 
    {
      // start: 	$call accessMemoryWord (tag rwbar qptr 0  wdata ) (rdata ) 
      //  file .Aa/nic.linked.opt.aa, line 359
      $T[call_stmt_1026_sample_start_] 
      $T[call_stmt_1026_sample_completed_] 
      $T[call_stmt_1026_update_start_] 
      $T[call_stmt_1026_update_completed_] 
      // Call input argument 0
      // tag
      // Call input argument 1
      // rwbar
      // Call input argument 2
      // qptr
      // Call input argument 3
      // Call input argument 4
      // wdata
      // start: Forward dependencies from tag to transition call_stmt_1026_sample_start_
      // done: Forward dependencies from tag to transition call_stmt_1026_sample_start_
      // start: Forward dependencies from rwbar to transition call_stmt_1026_sample_start_
      // done: Forward dependencies from rwbar to transition call_stmt_1026_sample_start_
      // start: Forward dependencies from qptr to transition call_stmt_1026_sample_start_
      // done: Forward dependencies from qptr to transition call_stmt_1026_sample_start_
      // start: Forward dependencies from wdata to transition call_stmt_1026_sample_start_
      // done: Forward dependencies from wdata to transition call_stmt_1026_sample_start_
      ;;[call_stmt_1026_Sample] 
      {
        $T [crr] $T [cra] 
      }
      ;;[call_stmt_1026_Update] 
      {
        $T [ccr] $T [cca] 
      }
      call_stmt_1026_sample_start_ &-> (call_stmt_1026_Sample)
      call_stmt_1026_sample_completed_ <-& (call_stmt_1026_Sample)
      call_stmt_1026_sample_completed_ &-> ($null)
      call_stmt_1026_update_start_ &-> (call_stmt_1026_Update)
      call_stmt_1026_update_completed_ <-& (call_stmt_1026_Update)
      // Call output argument 0
      // (as target) rdata
      // rdata
      // write to interface object
      // rdata
      // write to interface object
      // start: WAR dependencies for rdata
      // done: WAR dependencies for rdata
      // end: 	$call accessMemoryWord (tag rwbar qptr 0  wdata ) (rdata ) 
      // load-store dependencies..
      // pipe read/write dependencies for pipe MEMORY_TO_NIC_RESPONSE
      // read-dependencies for pipe MEMORY_TO_NIC_RESPONSE
      // write-dependencies for pipe MEMORY_TO_NIC_RESPONSE
      // signal write dependencies for MEMORY_TO_NIC_RESPONSE
      // pipe read/write dependencies for pipe NIC_DEBUG_SIGNAL
      // read-dependencies for pipe NIC_DEBUG_SIGNAL
      // write-dependencies for pipe NIC_DEBUG_SIGNAL
      // signal write dependencies for NIC_DEBUG_SIGNAL
      // pipe read/write dependencies for pipe NIC_TO_MEMORY_REQUEST
      // read-dependencies for pipe NIC_TO_MEMORY_REQUEST
      // write-dependencies for pipe NIC_TO_MEMORY_REQUEST
      // signal write dependencies for NIC_TO_MEMORY_REQUEST
      // pipe read/write dependencies for pipe memory_access_lock
      // read-dependencies for pipe memory_access_lock
      // write-dependencies for pipe memory_access_lock
      // signal write dependencies for memory_access_lock
    }
  }
  // end control-path
  $DP 
  {
    // begin data-path 
    // constant-object-declarations for block %accessQueueTotalMsgs
    //  file .Aa/nic.linked.opt.aa, line 354
    // 	$call accessMemoryWord (tag rwbar qptr 0  wdata ) (rdata ) 
    //  file .Aa/nic.linked.opt.aa, line 359
    // 0 
    $constant $W[konst_1023_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000000000// 0
    // 	$call accessMemoryWord (tag rwbar qptr 0  wdata ) (rdata ) 
    //  file .Aa/nic.linked.opt.aa, line 359
    // rdata
    // 	$call accessMemoryWord (tag rwbar qptr 0  wdata ) (rdata ) 
    //  file .Aa/nic.linked.opt.aa, line 359
    $call [call_stmt_1026_call] $module accessMemoryWord(tag rwbar qptr konst_1023_wire_constant wdata) (rdata)  
    $delay call_stmt_1026_call 39
    $buffering  $in call_stmt_1026_call tag 1
    $buffering  $in call_stmt_1026_call rwbar 1
    $buffering  $in call_stmt_1026_call qptr 1
    $buffering  $in call_stmt_1026_call konst_1023_wire_constant 1
    $buffering  $in call_stmt_1026_call wdata 1
    $buffering  $out call_stmt_1026_call rdata 1
  }
  // end data-path
  // 	$call accessMemoryWord (tag rwbar qptr 0  wdata ) (rdata ) 
  //  file .Aa/nic.linked.opt.aa, line 359
  // tag
  // rwbar
  // qptr
  // wdata
  call_stmt_1026_call <=> (call_stmt_1026/call_stmt_1026_Sample/crr call_stmt_1026/call_stmt_1026_Update/ccr) (call_stmt_1026/call_stmt_1026_Sample/cra call_stmt_1026/call_stmt_1026_Update/cca)
  $attribute input_buffering => "0"
  $attribute output_buffering => "0"
}
$module [getTotalMessages] 
{
  $in tag:$int<8>
  // can point into 
  q_base_address:$int<64>
  // can point into  foreign( $void )
  $out total_msgs:$int<32>
  // can point into  foreign( $void )
  // pipe-declarations for block %getTotalMessages
  //  file .Aa/nic.linked.opt.aa, line 363
  // there are no memory spaces local to this module.
  $CP 
  {
    // begin control-path 
    ::[call_stmt_1038] 
    {
      // start: 	$call accessQueueTotalMsgs (tag READMEM q_base_address ($bitcast ($uint<32>) _b0  ) ) (total_msgs ) 
      //  file .Aa/nic.linked.opt.aa, line 368
      $T[call_stmt_1038_sample_start_] 
      $T[call_stmt_1038_sample_completed_] 
      $T[call_stmt_1038_update_start_] 
      $T[call_stmt_1038_update_completed_] 
      // Call input argument 0
      // tag
      // Call input argument 1
      // Call input argument 2
      // q_base_address
      // Call input argument 3
      // start: Forward dependencies from tag to transition call_stmt_1038_sample_start_
      // done: Forward dependencies from tag to transition call_stmt_1038_sample_start_
      // start: Forward dependencies from q_base_address to transition call_stmt_1038_sample_start_
      // done: Forward dependencies from q_base_address to transition call_stmt_1038_sample_start_
      ;;[call_stmt_1038_Sample] 
      {
        $T [crr] $T [cra] 
      }
      ;;[call_stmt_1038_Update] 
      {
        $T [ccr] $T [cca] 
      }
      call_stmt_1038_sample_start_ &-> (call_stmt_1038_Sample)
      call_stmt_1038_sample_completed_ <-& (call_stmt_1038_Sample)
      call_stmt_1038_sample_completed_ &-> ($null)
      call_stmt_1038_update_start_ &-> (call_stmt_1038_Update)
      call_stmt_1038_update_completed_ <-& (call_stmt_1038_Update)
      // Call output argument 0
      // (as target) total_msgs
      // total_msgs
      // write to interface object
      // total_msgs
      // write to interface object
      // start: WAR dependencies for total_msgs
      // done: WAR dependencies for total_msgs
      // end: 	$call accessQueueTotalMsgs (tag READMEM q_base_address ($bitcast ($uint<32>) _b0  ) ) (total_msgs ) 
      // load-store dependencies..
      // pipe read/write dependencies for pipe MEMORY_TO_NIC_RESPONSE
      // read-dependencies for pipe MEMORY_TO_NIC_RESPONSE
      // write-dependencies for pipe MEMORY_TO_NIC_RESPONSE
      // signal write dependencies for MEMORY_TO_NIC_RESPONSE
      // pipe read/write dependencies for pipe NIC_DEBUG_SIGNAL
      // read-dependencies for pipe NIC_DEBUG_SIGNAL
      // write-dependencies for pipe NIC_DEBUG_SIGNAL
      // signal write dependencies for NIC_DEBUG_SIGNAL
      // pipe read/write dependencies for pipe NIC_TO_MEMORY_REQUEST
      // read-dependencies for pipe NIC_TO_MEMORY_REQUEST
      // write-dependencies for pipe NIC_TO_MEMORY_REQUEST
      // signal write dependencies for NIC_TO_MEMORY_REQUEST
      // pipe read/write dependencies for pipe memory_access_lock
      // read-dependencies for pipe memory_access_lock
      // write-dependencies for pipe memory_access_lock
      // signal write dependencies for memory_access_lock
    }
  }
  // end control-path
  $DP 
  {
    // begin data-path 
    // constant-object-declarations for block %getTotalMessages
    //  file .Aa/nic.linked.opt.aa, line 363
    // 	$call accessQueueTotalMsgs (tag READMEM q_base_address ($bitcast ($uint<32>) _b0  ) ) (total_msgs ) 
    //  file .Aa/nic.linked.opt.aa, line 368
    // READMEM
    $constant $W[R_READMEM_1033_wire_constant] : $int<1> := _b1// 1
    // ($bitcast ($uint<32>) _b0  )
    $constant $W[type_cast_1036_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // 	$call accessQueueTotalMsgs (tag READMEM q_base_address ($bitcast ($uint<32>) _b0  ) ) (total_msgs ) 
    //  file .Aa/nic.linked.opt.aa, line 368
    // total_msgs
    // 	$call accessQueueTotalMsgs (tag READMEM q_base_address ($bitcast ($uint<32>) _b0  ) ) (total_msgs ) 
    //  file .Aa/nic.linked.opt.aa, line 368
    $call [call_stmt_1038_call] $module accessQueueTotalMsgs(tag R_READMEM_1033_wire_constant q_base_address type_cast_1036_wire_constant) (total_msgs)  
    $delay call_stmt_1038_call 4
    $buffering  $in call_stmt_1038_call tag 1
    $buffering  $in call_stmt_1038_call R_READMEM_1033_wire_constant 1
    $buffering  $in call_stmt_1038_call q_base_address 1
    $buffering  $in call_stmt_1038_call type_cast_1036_wire_constant 1
    $buffering  $out call_stmt_1038_call total_msgs 1
  }
  // end data-path
  // 	$call accessQueueTotalMsgs (tag READMEM q_base_address ($bitcast ($uint<32>) _b0  ) ) (total_msgs ) 
  //  file .Aa/nic.linked.opt.aa, line 368
  // tag
  // q_base_address
  call_stmt_1038_call <=> (call_stmt_1038/call_stmt_1038_Sample/crr call_stmt_1038/call_stmt_1038_Update/ccr) (call_stmt_1038/call_stmt_1038_Sample/cra call_stmt_1038/call_stmt_1038_Update/cca)
}
$module [getQueueBufPointer] 
{
  $in queue_type:$int<2>
  // can point into 
  server_id:$int<8>
  // can point into  foreign( $void )
  $out qptr:$int<64>
  // can point into  foreign( $void )
  // pipe-declarations for block %getQueueBufPointer
  //  file .Aa/nic.linked.opt.aa, line 370
  // there are no memory spaces local to this module.
  $CP 
  {
    // begin control-path 
    ::[assign_stmt_1048_to_assign_stmt_1071] 
    {
      // start:  	base_idx := ( $call getBaseIndex (queue_type server_id ) ) $buffering 1// bits of buffering = 8. 
      //  file .Aa/nic.linked.opt.aa, line 375
      $T[assign_stmt_1048_sample_start_] 
      $T[assign_stmt_1048_sample_completed_] 
      $T[assign_stmt_1048_update_start_] 
      $T[assign_stmt_1048_update_completed_] 
      // Source expression
      // ( $call getBaseIndex (queue_type server_id ) )
      // queue_type
      // server_id
      // Target expression
      // (as target) base_idx
      // both source and target are implicit: use interlock 
      // Interlock 
      ;;[assign_stmt_1048_Sample] 
      {
        $T [req] $T [ack] // interlock-sample.
      }
      ;;[assign_stmt_1048_Update] 
      {
        $T [req] $T [ack] // interlock-update.
      }
      assign_stmt_1048_sample_start_ &-> (assign_stmt_1048_Sample)
      assign_stmt_1048_sample_completed_ <-& (assign_stmt_1048_Sample)
      assign_stmt_1048_sample_completed_ &-> ($null)
      assign_stmt_1048_update_start_ &-> (assign_stmt_1048_Update)
      assign_stmt_1048_update_completed_ <-& (assign_stmt_1048_Update)
      // start: Forward dependencies from ( $call getBaseIndex (queue_type server_id ) ) to transition assign_stmt_1048_sample_start_
      // done: Forward dependencies from ( $call getBaseIndex (queue_type server_id ) ) to transition assign_stmt_1048_sample_start_
      // start: WAR dependencies for base_idx
      // done: WAR dependencies for base_idx
      // end:  	base_idx := ( $call getBaseIndex (queue_type server_id ) ) $buffering 1// bits of buffering = 8. 
      // start: 	$call accessRegister (READMEM _hF  (base_idx + 4 ) ($bitcast ($uint<32>) _b0  ) ) (qptr_h ) 
      //  file .Aa/nic.linked.opt.aa, line 376
      $T[call_stmt_1057_sample_start_] 
      $T[call_stmt_1057_sample_completed_] 
      $T[call_stmt_1057_update_start_] 
      $T[call_stmt_1057_update_completed_] 
      // Call input argument 0
      // Call input argument 1
      // Call input argument 2
      // (base_idx + 4 )
      // base_idx
      // Call input argument 3
      // start: Forward dependencies from (base_idx + 4 ) to transition call_stmt_1057_sample_start_
      call_stmt_1057_sample_start_ <-& (assign_stmt_1048_update_completed_)
      // done: Forward dependencies from (base_idx + 4 ) to transition call_stmt_1057_sample_start_
      ;;[call_stmt_1057_Sample] 
      {
        $T [crr] $T [cra] 
      }
      ;;[call_stmt_1057_Update] 
      {
        $T [ccr] $T [cca] 
      }
      call_stmt_1057_sample_start_ &-> (call_stmt_1057_Sample)
      call_stmt_1057_sample_completed_ <-& (call_stmt_1057_Sample)
      call_stmt_1057_sample_completed_ &-> ($null)
      call_stmt_1057_update_start_ &-> (call_stmt_1057_Update)
      call_stmt_1057_update_completed_ <-& (call_stmt_1057_Update)
      // Call output argument 0
      // (as target) qptr_h
      // start: WAR dependencies for qptr_h
      // done: WAR dependencies for qptr_h
      // end: 	$call accessRegister (READMEM _hF  (base_idx + 4 ) ($bitcast ($uint<32>) _b0  ) ) (qptr_h ) 
      // start: 	$call accessRegister (READMEM _hF  (base_idx + 5 ) ($bitcast ($uint<32>) _b0  ) ) (qptr_l ) 
      //  file .Aa/nic.linked.opt.aa, line 377
      $T[call_stmt_1066_sample_start_] 
      $T[call_stmt_1066_sample_completed_] 
      $T[call_stmt_1066_update_start_] 
      $T[call_stmt_1066_update_completed_] 
      // Call input argument 0
      // Call input argument 1
      // Call input argument 2
      // (base_idx + 5 )
      // base_idx
      // Call input argument 3
      // start: Forward dependencies from (base_idx + 5 ) to transition call_stmt_1066_sample_start_
      call_stmt_1066_sample_start_ <-& (assign_stmt_1048_update_completed_)
      // done: Forward dependencies from (base_idx + 5 ) to transition call_stmt_1066_sample_start_
      ;;[call_stmt_1066_Sample] 
      {
        $T [crr] $T [cra] 
      }
      ;;[call_stmt_1066_Update] 
      {
        $T [ccr] $T [cca] 
      }
      call_stmt_1066_sample_start_ &-> (call_stmt_1066_Sample)
      call_stmt_1066_sample_completed_ <-& (call_stmt_1066_Sample)
      call_stmt_1066_sample_completed_ &-> ($null)
      call_stmt_1066_update_start_ &-> (call_stmt_1066_Update)
      call_stmt_1066_update_completed_ <-& (call_stmt_1066_Update)
      // Call output argument 0
      // (as target) qptr_l
      // start: WAR dependencies for qptr_l
      // done: WAR dependencies for qptr_l
      // end: 	$call accessRegister (READMEM _hF  (base_idx + 5 ) ($bitcast ($uint<32>) _b0  ) ) (qptr_l ) 
      // start:  	qptr := (qptr_h && qptr_l) $buffering 1// bits of buffering = 64. 
      //  file .Aa/nic.linked.opt.aa, line 378
      // Source expression
      // (qptr_h && qptr_l)
      $T[CONCAT_u32_u64_1070_sample_start_] 
      $T[CONCAT_u32_u64_1070_sample_completed_] 
      $T[CONCAT_u32_u64_1070_update_start_] 
      $T[CONCAT_u32_u64_1070_update_completed_] 
      // qptr_h
      // qptr_l
      // start: Forward dependencies from qptr_h to transition CONCAT_u32_u64_1070_sample_start_
      CONCAT_u32_u64_1070_sample_start_ <-& (call_stmt_1057_update_completed_)
      // done: Forward dependencies from qptr_h to transition CONCAT_u32_u64_1070_sample_start_
      // start: Forward dependencies from qptr_l to transition CONCAT_u32_u64_1070_sample_start_
      CONCAT_u32_u64_1070_sample_start_ <-& (call_stmt_1066_update_completed_)
      // done: Forward dependencies from qptr_l to transition CONCAT_u32_u64_1070_sample_start_
      ;;[CONCAT_u32_u64_1070_Sample] 
      {
        // binary expression 
        $T [rr] $T [ra]  // (split) binary operation 
      }
      ;;[CONCAT_u32_u64_1070_Update] 
      {
        // binary expression 
        $T [cr] $T [ca] // (split) binary operation 
      }
      CONCAT_u32_u64_1070_sample_start_ &-> (CONCAT_u32_u64_1070_Sample)
      CONCAT_u32_u64_1070_sample_completed_ <-& (CONCAT_u32_u64_1070_Sample)
      CONCAT_u32_u64_1070_sample_completed_ &-> ($null)
      CONCAT_u32_u64_1070_update_start_ &-> (CONCAT_u32_u64_1070_Update)
      CONCAT_u32_u64_1070_update_completed_ <-& (CONCAT_u32_u64_1070_Update)
      // Target expression
      // (as target) qptr
      // qptr
      // write to interface object
      // start: WAR dependencies for qptr
      // done: WAR dependencies for qptr
      // qptr
      // write to interface object
      // end:  	qptr := (qptr_h && qptr_l) $buffering 1// bits of buffering = 64. 
      // load-store dependencies..
      // memory-space  memory_space_0
      //  call_stmt_1057 store
      //  call_stmt_1066 store
      $T [call_stmt_1057_call_stmt_1066_delay] $delay
      // call_stmt_1057(store) -> call_stmt_1066(store)
      call_stmt_1066_sample_start_ <-& (call_stmt_1057_call_stmt_1066_delay)
      call_stmt_1057_call_stmt_1066_delay <-& (call_stmt_1057_update_completed_)
    }
  }
  // end control-path
  $DP 
  {
    // begin data-path 
    // constant-object-declarations for block %getQueueBufPointer
    //  file .Aa/nic.linked.opt.aa, line 370
    // ( $call getBaseIndex (queue_type server_id ) )
    // 	$call accessRegister (READMEM _hF  (base_idx + 4 ) ($bitcast ($uint<32>) _b0  ) ) (qptr_h ) 
    //  file .Aa/nic.linked.opt.aa, line 376
    // READMEM
    $constant $W[R_READMEM_1049_wire_constant] : $int<1> := _b1// 1
    // _hF 
    $constant $W[konst_1050_wire_constant] : $int<4> := _b1111// 15
    // 4 
    $constant $W[konst_1052_wire_constant] : $int<8> := _b00000100// 4
    // ($bitcast ($uint<32>) _b0  )
    $constant $W[type_cast_1055_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // 	$call accessRegister (READMEM _hF  (base_idx + 5 ) ($bitcast ($uint<32>) _b0  ) ) (qptr_l ) 
    //  file .Aa/nic.linked.opt.aa, line 377
    // READMEM
    $constant $W[R_READMEM_1058_wire_constant] : $int<1> := _b1// 1
    // _hF 
    $constant $W[konst_1059_wire_constant] : $int<4> := _b1111// 15
    // 5 
    $constant $W[konst_1061_wire_constant] : $int<8> := _b00000101// 5
    // ($bitcast ($uint<32>) _b0  )
    $constant $W[type_cast_1064_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // 	base_idx := ( $call getBaseIndex (queue_type server_id ) ) $buffering 1// bits of buffering = 8. 
    //  file .Aa/nic.linked.opt.aa, line 375
    // ( $call getBaseIndex (queue_type server_id ) )
    $intermediate $W[call_getBaseIndex_expr_1047_wire] : $int<8>
    // base_idx
    $W[base_idx_1048] : $int<8>
    // 	$call accessRegister (READMEM _hF  (base_idx + 4 ) ($bitcast ($uint<32>) _b0  ) ) (qptr_h ) 
    //  file .Aa/nic.linked.opt.aa, line 376
    // (base_idx + 4 )
    $intermediate $W[ADD_u8_u8_1053_wire] : $int<8>
    // qptr_h
    $W[qptr_h_1057] : $int<32>
    // 	$call accessRegister (READMEM _hF  (base_idx + 5 ) ($bitcast ($uint<32>) _b0  ) ) (qptr_l ) 
    //  file .Aa/nic.linked.opt.aa, line 377
    // (base_idx + 5 )
    $intermediate $W[ADD_u8_u8_1062_wire] : $int<8>
    // qptr_l
    $W[qptr_l_1066] : $int<32>
    // 	qptr := (qptr_h && qptr_l) $buffering 1// bits of buffering = 64. 
    //  file .Aa/nic.linked.opt.aa, line 378
    // qptr
    // 	base_idx := ( $call getBaseIndex (queue_type server_id ) ) $buffering 1// bits of buffering = 8. 
    //  file .Aa/nic.linked.opt.aa, line 375
    # := [W_base_idx_1044_inst] (call_getBaseIndex_expr_1047_wire) (base_idx_1048)     
    // ( $call getBaseIndex (queue_type server_id ) )
    //  file .Aa/nic.linked.opt.aa, line 375
    $call [call_getBaseIndex_expr_1047_inst] $module getBaseIndex(queue_type server_id) (call_getBaseIndex_expr_1047_wire)   $flowthrough
    // 	$call accessRegister (READMEM _hF  (base_idx + 4 ) ($bitcast ($uint<32>) _b0  ) ) (qptr_h ) 
    //  file .Aa/nic.linked.opt.aa, line 376
    // (base_idx + 4 )
    +[ADD_u8_u8_1053_inst] (base_idx_1048 konst_1052_wire_constant) (ADD_u8_u8_1053_wire)   $flowthrough 
    $delay ADD_u8_u8_1053_inst 0
    $call [call_stmt_1057_call] $module accessRegister(R_READMEM_1049_wire_constant konst_1050_wire_constant ADD_u8_u8_1053_wire type_cast_1055_wire_constant) (qptr_h_1057)  
    $delay call_stmt_1057_call 4
    $buffering  $in call_stmt_1057_call R_READMEM_1049_wire_constant 1
    $buffering  $in call_stmt_1057_call konst_1050_wire_constant 1
    $buffering  $in call_stmt_1057_call ADD_u8_u8_1053_wire 1
    $buffering  $in call_stmt_1057_call type_cast_1055_wire_constant 1
    $buffering  $out call_stmt_1057_call qptr_h_1057 1
    // 	$call accessRegister (READMEM _hF  (base_idx + 5 ) ($bitcast ($uint<32>) _b0  ) ) (qptr_l ) 
    //  file .Aa/nic.linked.opt.aa, line 377
    // (base_idx + 5 )
    +[ADD_u8_u8_1062_inst] (base_idx_1048 konst_1061_wire_constant) (ADD_u8_u8_1062_wire)   $flowthrough 
    $delay ADD_u8_u8_1062_inst 0
    $call [call_stmt_1066_call] $module accessRegister(R_READMEM_1058_wire_constant konst_1059_wire_constant ADD_u8_u8_1062_wire type_cast_1064_wire_constant) (qptr_l_1066)  
    $delay call_stmt_1066_call 4
    $buffering  $in call_stmt_1066_call R_READMEM_1058_wire_constant 1
    $buffering  $in call_stmt_1066_call konst_1059_wire_constant 1
    $buffering  $in call_stmt_1066_call ADD_u8_u8_1062_wire 1
    $buffering  $in call_stmt_1066_call type_cast_1064_wire_constant 1
    $buffering  $out call_stmt_1066_call qptr_l_1066 1
    // 	qptr := (qptr_h && qptr_l) $buffering 1// bits of buffering = 64. 
    //  file .Aa/nic.linked.opt.aa, line 378
    // (qptr_h && qptr_l)
    &&[CONCAT_u32_u64_1070_inst] (qptr_h_1057 qptr_l_1066) (qptr)   
    $buffering  $out CONCAT_u32_u64_1070_inst qptr 1
    $delay CONCAT_u32_u64_1070_inst 1
  }
  // end data-path
  // 	base_idx := ( $call getBaseIndex (queue_type server_id ) ) $buffering 1// bits of buffering = 8. 
  //  file .Aa/nic.linked.opt.aa, line 375
  // queue_type
  // server_id
  // ( $call getBaseIndex (queue_type server_id ) )
  W_base_idx_1044_inst <=> (assign_stmt_1048_to_assign_stmt_1071/assign_stmt_1048_Sample/req assign_stmt_1048_to_assign_stmt_1071/assign_stmt_1048_Update/req) (assign_stmt_1048_to_assign_stmt_1071/assign_stmt_1048_Sample/ack assign_stmt_1048_to_assign_stmt_1071/assign_stmt_1048_Update/ack)
  // 	$call accessRegister (READMEM _hF  (base_idx + 4 ) ($bitcast ($uint<32>) _b0  ) ) (qptr_h ) 
  //  file .Aa/nic.linked.opt.aa, line 376
  // (base_idx + 4 )
  // base_idx
  call_stmt_1057_call <=> (assign_stmt_1048_to_assign_stmt_1071/call_stmt_1057_Sample/crr assign_stmt_1048_to_assign_stmt_1071/call_stmt_1057_Update/ccr) (assign_stmt_1048_to_assign_stmt_1071/call_stmt_1057_Sample/cra assign_stmt_1048_to_assign_stmt_1071/call_stmt_1057_Update/cca)
  // 	$call accessRegister (READMEM _hF  (base_idx + 5 ) ($bitcast ($uint<32>) _b0  ) ) (qptr_l ) 
  //  file .Aa/nic.linked.opt.aa, line 377
  // (base_idx + 5 )
  // base_idx
  call_stmt_1066_call <=> (assign_stmt_1048_to_assign_stmt_1071/call_stmt_1066_Sample/crr assign_stmt_1048_to_assign_stmt_1071/call_stmt_1066_Update/ccr) (assign_stmt_1048_to_assign_stmt_1071/call_stmt_1066_Sample/cra assign_stmt_1048_to_assign_stmt_1071/call_stmt_1066_Update/cca)
  // 	qptr := (qptr_h && qptr_l) $buffering 1// bits of buffering = 64. 
  //  file .Aa/nic.linked.opt.aa, line 378
  // (qptr_h && qptr_l)
  // qptr_h
  // qptr_l
  CONCAT_u32_u64_1070_inst <=> (assign_stmt_1048_to_assign_stmt_1071/CONCAT_u32_u64_1070_Sample/rr assign_stmt_1048_to_assign_stmt_1071/CONCAT_u32_u64_1070_Update/cr) (assign_stmt_1048_to_assign_stmt_1071/CONCAT_u32_u64_1070_Sample/ra assign_stmt_1048_to_assign_stmt_1071/CONCAT_u32_u64_1070_Update/ca)
  $attribute input_buffering => "0"
  $attribute output_buffering => "0"
}
$pipeline $depth 7 $buffering 1 $module [accessMemoryDword] 
{
  $in tag:$int<8>
  // can point into 
  rwbar:$int<1>
  // can point into 
  base_addr:$int<64>
  // can point into  foreign( $void )
  offset:$int<64>
  // can point into  foreign( $void )
  wdata:$int<64>
  // can point into  foreign( $void )
  $out rdata:$int<64>
  // can point into  foreign( $void )
  // pipe-declarations for block %accessMemoryDword
  //  file .Aa/nic.linked.opt.aa, line 382
  // there are no memory spaces local to this module.
  $CP 
  {
    // begin control-path 
    // pipelined module
    :|:[call_stmt_1089] 
    {
      $T [tag_update_enable] 
      $scc_arc tag_update_enable => $entry
      $T [tag_update_enable_out] 
      tag_update_enable &-> (tag_update_enable_out)
      $null &-> (tag_update_enable)
      $T [rwbar_update_enable] 
      $scc_arc rwbar_update_enable => $entry
      $T [rwbar_update_enable_out] 
      rwbar_update_enable &-> (rwbar_update_enable_out)
      $null &-> (rwbar_update_enable)
      $T [base_addr_update_enable] 
      $scc_arc base_addr_update_enable => $entry
      $T [base_addr_update_enable_out] 
      base_addr_update_enable &-> (base_addr_update_enable_out)
      $null &-> (base_addr_update_enable)
      $T [offset_update_enable] 
      $scc_arc offset_update_enable => $entry
      $T [offset_update_enable_out] 
      offset_update_enable &-> (offset_update_enable_out)
      $null &-> (offset_update_enable)
      $T [wdata_update_enable] 
      $scc_arc wdata_update_enable => $entry
      $T [wdata_update_enable_out] 
      wdata_update_enable &-> (wdata_update_enable_out)
      $null &-> (wdata_update_enable)
      $T [rdata_update_enable] 
      $T [rdata_update_enable_in] 
      $null &-> (rdata_update_enable)
      $null <-& (rdata_update_enable_in) 
      $null &-> (rdata_update_enable)
      $scc_arc $exit => rdata_update_enable
      rdata_update_enable <-& (rdata_update_enable_in) 
      // start: 	$call doMemAccess (tag ( $mux rwbar LDD  STD )  base_addr offset wdata ) (rdata ) 
      //  file .Aa/nic.linked.opt.aa, line 387
      $T[call_stmt_1089_sample_start_] 
      $T[call_stmt_1089_sample_completed_] 
      $T[call_stmt_1089_update_start_] 
      $T[call_stmt_1089_update_completed_] 
      // Call input argument 0
      // tag
      // Call input argument 1
      // ( $mux rwbar LDD  STD ) 
      // rwbar
      // Call input argument 2
      // base_addr
      // Call input argument 3
      // offset
      // Call input argument 4
      // wdata
      // start: Forward dependencies from tag to transition call_stmt_1089_sample_start_
      call_stmt_1089_sample_start_ <-& ($entry)
      // done: Forward dependencies from tag to transition call_stmt_1089_sample_start_
      // RAW reenables for tag
      tag_update_enable o<-& (call_stmt_1089_sample_completed_ 0)
      // start: Forward dependencies from ( $mux rwbar LDD  STD )  to transition call_stmt_1089_sample_start_
      call_stmt_1089_sample_start_ <-& ($entry)
      // done: Forward dependencies from ( $mux rwbar LDD  STD )  to transition call_stmt_1089_sample_start_
      // RAW reenables for ( $mux rwbar LDD  STD ) 
      rwbar_update_enable o<-& (call_stmt_1089_sample_completed_ 0)
      // start: Forward dependencies from base_addr to transition call_stmt_1089_sample_start_
      call_stmt_1089_sample_start_ <-& ($entry)
      // done: Forward dependencies from base_addr to transition call_stmt_1089_sample_start_
      // RAW reenables for base_addr
      base_addr_update_enable o<-& (call_stmt_1089_sample_completed_ 0)
      // start: Forward dependencies from offset to transition call_stmt_1089_sample_start_
      call_stmt_1089_sample_start_ <-& ($entry)
      // done: Forward dependencies from offset to transition call_stmt_1089_sample_start_
      // RAW reenables for offset
      offset_update_enable o<-& (call_stmt_1089_sample_completed_ 0)
      // start: Forward dependencies from wdata to transition call_stmt_1089_sample_start_
      call_stmt_1089_sample_start_ <-& ($entry)
      // done: Forward dependencies from wdata to transition call_stmt_1089_sample_start_
      // RAW reenables for wdata
      wdata_update_enable o<-& (call_stmt_1089_sample_completed_ 0)
      ;;[call_stmt_1089_Sample] 
      {
        $T [crr] $T [cra] 
      }
      ;;[call_stmt_1089_Update] 
      {
        $T [ccr] $T [cca] 
      }
      call_stmt_1089_sample_start_ &-> (call_stmt_1089_Sample)
      call_stmt_1089_sample_completed_ <-& (call_stmt_1089_Sample)
      call_stmt_1089_sample_completed_ &-> ($null)
      call_stmt_1089_update_start_ &-> (call_stmt_1089_Update)
      call_stmt_1089_update_completed_ <-& (call_stmt_1089_Update)
      // Call output argument 0
      // (as target) rdata
      // rdata
      // write to interface object
      // rdata
      // write to interface object
      call_stmt_1089_update_start_ <-& (rdata_update_enable)
      // self-release: 
      call_stmt_1089_sample_start_ o<-& (call_stmt_1089_sample_completed_ 1)
      $null &-> (call_stmt_1089_update_start_)
      call_stmt_1089_update_start_ o<-& (call_stmt_1089_update_completed_ 0)
      // start: WAR dependencies for rdata
      // done: WAR dependencies for rdata
      // end: 	$call doMemAccess (tag ( $mux rwbar LDD  STD )  base_addr offset wdata ) (rdata ) 
      // load-store dependencies..
      // pipe read/write dependencies for pipe MEMORY_TO_NIC_RESPONSE
      // read-dependencies for pipe MEMORY_TO_NIC_RESPONSE
      // write-dependencies for pipe MEMORY_TO_NIC_RESPONSE
      // signal write dependencies for MEMORY_TO_NIC_RESPONSE
      // pipe read/write dependencies for pipe NIC_DEBUG_SIGNAL
      // read-dependencies for pipe NIC_DEBUG_SIGNAL
      // write-dependencies for pipe NIC_DEBUG_SIGNAL
      // signal write dependencies for NIC_DEBUG_SIGNAL
      // pipe read/write dependencies for pipe NIC_TO_MEMORY_REQUEST
      // read-dependencies for pipe NIC_TO_MEMORY_REQUEST
      // write-dependencies for pipe NIC_TO_MEMORY_REQUEST
      // signal write dependencies for NIC_TO_MEMORY_REQUEST
      // pipe read/write dependencies for pipe memory_access_lock
      // read-dependencies for pipe memory_access_lock
      // write-dependencies for pipe memory_access_lock
      // signal write dependencies for memory_access_lock
    }
    ( rdata_update_enable_in)
    ( tag_update_enable_out rwbar_update_enable_out base_addr_update_enable_out offset_update_enable_out wdata_update_enable_out)
    $P [tag_update_enable] 
    $P [rwbar_update_enable] 
    $P [base_addr_update_enable] 
    $P [offset_update_enable] 
    $P [wdata_update_enable] 
    $P [rdata_update_enable] 
    $bind tag_update_enable <= call_stmt_1089 : tag_update_enable_out
    $bind rwbar_update_enable <= call_stmt_1089 : rwbar_update_enable_out
    $bind base_addr_update_enable <= call_stmt_1089 : base_addr_update_enable_out
    $bind offset_update_enable <= call_stmt_1089 : offset_update_enable_out
    $bind wdata_update_enable <= call_stmt_1089 : wdata_update_enable_out
    $bind rdata_update_enable => call_stmt_1089 : rdata_update_enable_in
  }
  // end control-path
  $DP 
  {
    // begin data-path 
    // constant-object-declarations for block %accessMemoryDword
    //  file .Aa/nic.linked.opt.aa, line 382
    // 	$call doMemAccess (tag ( $mux rwbar LDD  STD )  base_addr offset wdata ) (rdata ) 
    //  file .Aa/nic.linked.opt.aa, line 387
    // ( $mux rwbar LDD  STD ) 
    // LDD
    $constant $W[R_LDD_1082_wire_constant] : $int<3> := _b101// 5
    // STD
    $constant $W[R_STD_1083_wire_constant] : $int<3> := _b010// 2
    // 	$call doMemAccess (tag ( $mux rwbar LDD  STD )  base_addr offset wdata ) (rdata ) 
    //  file .Aa/nic.linked.opt.aa, line 387
    // ( $mux rwbar LDD  STD ) 
    $intermediate $W[MUX_1084_wire] : $int<3>
    // rdata
    // 	$call doMemAccess (tag ( $mux rwbar LDD  STD )  base_addr offset wdata ) (rdata ) 
    //  file .Aa/nic.linked.opt.aa, line 387
    // ( $mux rwbar LDD  STD ) 
    ? [MUX_1084_inst] (rwbar R_LDD_1082_wire_constant R_STD_1083_wire_constant) (MUX_1084_wire)  $flowthrough
    $call [call_stmt_1089_call] $module doMemAccess(tag MUX_1084_wire base_addr offset wdata) (rdata)  
    $delay call_stmt_1089_call 36
    $buffering  $in call_stmt_1089_call tag 1
    $buffering  $in call_stmt_1089_call MUX_1084_wire 1
    $buffering  $in call_stmt_1089_call base_addr 1
    $buffering  $in call_stmt_1089_call offset 1
    $buffering  $in call_stmt_1089_call wdata 1
    $buffering  $out call_stmt_1089_call rdata 1
  }
  // end data-path
  // 	$call doMemAccess (tag ( $mux rwbar LDD  STD )  base_addr offset wdata ) (rdata ) 
  //  file .Aa/nic.linked.opt.aa, line 387
  // tag
  // rwbar
  // ( $mux rwbar LDD  STD ) 
  // base_addr
  // offset
  // wdata
  call_stmt_1089_call <=> (call_stmt_1089/call_stmt_1089_Sample/crr call_stmt_1089/call_stmt_1089_Update/ccr) (call_stmt_1089/call_stmt_1089_Sample/cra call_stmt_1089/call_stmt_1089_Update/cca)
  $attribute delay => "38"
}
$module [accessQueueElement] 
{
  $in tag:$int<8>
  // can point into 
  rwbar:$int<1>
  // can point into 
  base_addr:$int<64>
  // can point into  foreign( $void )
  index:$int<32>
  // can point into  foreign( $void )
  wdata:$int<64>
  // can point into  foreign( $void )
  $out rdata:$int<64>
  // can point into  foreign( $void )
  // pipe-declarations for block %accessQueueElement
  //  file .Aa/nic.linked.opt.aa, line 390
  // there are no memory spaces local to this module.
  $CP 
  {
    // begin control-path 
    ::[assign_stmt_1107_to_call_stmt_1114] 
    {
      // start: WAR dependencies for offset
      // ignored out-of-scope w_root  index : $uint<32> 
      // done: WAR dependencies for offset
      // start:  	$volatile offset := ((($bitcast ($uint<29>) _b0  ) && index) && ($bitcast ($uint<3>) _b0  )) $buffering 1
      //  file .Aa/nic.linked.opt.aa, line 395
      // volatile! 
      // Source expression
      // ((($bitcast ($uint<29>) _b0  ) && index) && ($bitcast ($uint<3>) _b0  ))
      // (($bitcast ($uint<29>) _b0  ) && index)
      // index
      // Target expression
      // (as target) offset
      // start: WAR dependencies for offset
      // ignored out-of-scope w_root  index : $uint<32> 
      // done: WAR dependencies for offset
      // end:  	$volatile offset := ((($bitcast ($uint<29>) _b0  ) && index) && ($bitcast ($uint<3>) _b0  )) $buffering 1
      // start: 	$call accessMemoryDword (tag rwbar base_addr offset wdata ) (rdata ) 
      //  file .Aa/nic.linked.opt.aa, line 396
      $T[call_stmt_1114_sample_start_] 
      $T[call_stmt_1114_sample_completed_] 
      $T[call_stmt_1114_update_start_] 
      $T[call_stmt_1114_update_completed_] 
      // Call input argument 0
      // tag
      // Call input argument 1
      // rwbar
      // Call input argument 2
      // base_addr
      // Call input argument 3
      // offset
      // Call input argument 4
      // wdata
      // start: Forward dependencies from tag to transition call_stmt_1114_sample_start_
      // done: Forward dependencies from tag to transition call_stmt_1114_sample_start_
      // start: Forward dependencies from rwbar to transition call_stmt_1114_sample_start_
      // done: Forward dependencies from rwbar to transition call_stmt_1114_sample_start_
      // start: Forward dependencies from base_addr to transition call_stmt_1114_sample_start_
      // done: Forward dependencies from base_addr to transition call_stmt_1114_sample_start_
      // start: Forward dependencies from offset to transition call_stmt_1114_sample_start_
      // done: Forward dependencies from offset to transition call_stmt_1114_sample_start_
      // start: Forward dependencies from wdata to transition call_stmt_1114_sample_start_
      // done: Forward dependencies from wdata to transition call_stmt_1114_sample_start_
      ;;[call_stmt_1114_Sample] 
      {
        $T [crr] $T [cra] 
      }
      ;;[call_stmt_1114_Update] 
      {
        $T [ccr] $T [cca] 
      }
      call_stmt_1114_sample_start_ &-> (call_stmt_1114_Sample)
      call_stmt_1114_sample_completed_ <-& (call_stmt_1114_Sample)
      call_stmt_1114_sample_completed_ &-> ($null)
      call_stmt_1114_update_start_ &-> (call_stmt_1114_Update)
      call_stmt_1114_update_completed_ <-& (call_stmt_1114_Update)
      // Call output argument 0
      // (as target) rdata
      // rdata
      // write to interface object
      // rdata
      // write to interface object
      // start: WAR dependencies for rdata
      // done: WAR dependencies for rdata
      // end: 	$call accessMemoryDword (tag rwbar base_addr offset wdata ) (rdata ) 
      // load-store dependencies..
      // pipe read/write dependencies for pipe MEMORY_TO_NIC_RESPONSE
      // read-dependencies for pipe MEMORY_TO_NIC_RESPONSE
      // write-dependencies for pipe MEMORY_TO_NIC_RESPONSE
      // signal write dependencies for MEMORY_TO_NIC_RESPONSE
      // pipe read/write dependencies for pipe NIC_DEBUG_SIGNAL
      // read-dependencies for pipe NIC_DEBUG_SIGNAL
      // write-dependencies for pipe NIC_DEBUG_SIGNAL
      // signal write dependencies for NIC_DEBUG_SIGNAL
      // pipe read/write dependencies for pipe NIC_TO_MEMORY_REQUEST
      // read-dependencies for pipe NIC_TO_MEMORY_REQUEST
      // write-dependencies for pipe NIC_TO_MEMORY_REQUEST
      // signal write dependencies for NIC_TO_MEMORY_REQUEST
      // pipe read/write dependencies for pipe memory_access_lock
      // read-dependencies for pipe memory_access_lock
      // write-dependencies for pipe memory_access_lock
      // signal write dependencies for memory_access_lock
    }
  }
  // end control-path
  $DP 
  {
    // begin data-path 
    // constant-object-declarations for block %accessQueueElement
    //  file .Aa/nic.linked.opt.aa, line 390
    // ($bitcast ($uint<29>) _b0  )
    $constant $W[type_cast_1101_wire_constant] : $int<29> := _b00000000000000000000000000000// 0
    // ($bitcast ($uint<3>) _b0  )
    $constant $W[type_cast_1105_wire_constant] : $int<3> := _b000// 0
    // 	$call accessMemoryDword (tag rwbar base_addr offset wdata ) (rdata ) 
    //  file .Aa/nic.linked.opt.aa, line 396
    // 	$volatile offset := ((($bitcast ($uint<29>) _b0  ) && index) && ($bitcast ($uint<3>) _b0  )) $buffering 1
    //  file .Aa/nic.linked.opt.aa, line 395
    // (($bitcast ($uint<29>) _b0  ) && index)
    $intermediate $W[CONCAT_u29_u61_1103_wire] : $int<61>
    // offset
    $W[offset_1107] : $int<64>
    // 	$call accessMemoryDword (tag rwbar base_addr offset wdata ) (rdata ) 
    //  file .Aa/nic.linked.opt.aa, line 396
    // rdata
    // 	$volatile offset := ((($bitcast ($uint<29>) _b0  ) && index) && ($bitcast ($uint<3>) _b0  )) $buffering 1
    //  file .Aa/nic.linked.opt.aa, line 395
    // (($bitcast ($uint<29>) _b0  ) && index)
    &&[CONCAT_u29_u61_1103_inst] (type_cast_1101_wire_constant index) (CONCAT_u29_u61_1103_wire)   $flowthrough 
    $delay CONCAT_u29_u61_1103_inst 0
    // ((($bitcast ($uint<29>) _b0  ) && index) && ($bitcast ($uint<3>) _b0  ))
    &&[CONCAT_u61_u64_1106_inst] (CONCAT_u29_u61_1103_wire type_cast_1105_wire_constant) (offset_1107)   $flowthrough 
    $delay CONCAT_u61_u64_1106_inst 0
    // 	$call accessMemoryDword (tag rwbar base_addr offset wdata ) (rdata ) 
    //  file .Aa/nic.linked.opt.aa, line 396
    $call [call_stmt_1114_call] $module accessMemoryDword(tag rwbar base_addr offset_1107 wdata) (rdata)  
    $delay call_stmt_1114_call 38
    $buffering  $in call_stmt_1114_call tag 1
    $buffering  $in call_stmt_1114_call rwbar 1
    $buffering  $in call_stmt_1114_call base_addr 1
    $buffering  $in call_stmt_1114_call offset_1107 1
    $buffering  $in call_stmt_1114_call wdata 1
    $buffering  $out call_stmt_1114_call rdata 1
  }
  // end data-path
  // 	$volatile offset := ((($bitcast ($uint<29>) _b0  ) && index) && ($bitcast ($uint<3>) _b0  )) $buffering 1
  //  file .Aa/nic.linked.opt.aa, line 395
  // ((($bitcast ($uint<29>) _b0  ) && index) && ($bitcast ($uint<3>) _b0  ))
  // (($bitcast ($uint<29>) _b0  ) && index)
  // index
  // 	$call accessMemoryDword (tag rwbar base_addr offset wdata ) (rdata ) 
  //  file .Aa/nic.linked.opt.aa, line 396
  // tag
  // rwbar
  // base_addr
  // offset
  // wdata
  call_stmt_1114_call <=> (assign_stmt_1107_to_call_stmt_1114/call_stmt_1114_Sample/crr assign_stmt_1107_to_call_stmt_1114/call_stmt_1114_Update/ccr) (assign_stmt_1107_to_call_stmt_1114/call_stmt_1114_Sample/cra assign_stmt_1107_to_call_stmt_1114/call_stmt_1114_Update/cca)
  $attribute input_buffering => "0"
  $attribute output_buffering => "0"
}
$module [getQueueElement] 
{
  $in tag:$int<8>
  // can point into 
  buf_base_addr:$int<64>
  // can point into  foreign( $void )
  read_index:$int<32>
  // can point into  foreign( $void )
  $out q_r_data:$int<64>
  // can point into  foreign( $void )
  // pipe-declarations for block %getQueueElement
  //  file .Aa/nic.linked.opt.aa, line 400
  // there are no memory spaces local to this module.
  $CP 
  {
    // begin control-path 
    ::[call_stmt_1128] 
    {
      // start: 	$call accessQueueElement (tag READMEM buf_base_addr read_index ($bitcast ($uint<64>) _b0  ) ) (q_r_data ) 
      //  file .Aa/nic.linked.opt.aa, line 405
      $T[call_stmt_1128_sample_start_] 
      $T[call_stmt_1128_sample_completed_] 
      $T[call_stmt_1128_update_start_] 
      $T[call_stmt_1128_update_completed_] 
      // Call input argument 0
      // tag
      // Call input argument 1
      // Call input argument 2
      // buf_base_addr
      // Call input argument 3
      // read_index
      // Call input argument 4
      // start: Forward dependencies from tag to transition call_stmt_1128_sample_start_
      // done: Forward dependencies from tag to transition call_stmt_1128_sample_start_
      // start: Forward dependencies from buf_base_addr to transition call_stmt_1128_sample_start_
      // done: Forward dependencies from buf_base_addr to transition call_stmt_1128_sample_start_
      // start: Forward dependencies from read_index to transition call_stmt_1128_sample_start_
      // done: Forward dependencies from read_index to transition call_stmt_1128_sample_start_
      ;;[call_stmt_1128_Sample] 
      {
        $T [crr] $T [cra] 
      }
      ;;[call_stmt_1128_Update] 
      {
        $T [ccr] $T [cca] 
      }
      call_stmt_1128_sample_start_ &-> (call_stmt_1128_Sample)
      call_stmt_1128_sample_completed_ <-& (call_stmt_1128_Sample)
      call_stmt_1128_sample_completed_ &-> ($null)
      call_stmt_1128_update_start_ &-> (call_stmt_1128_Update)
      call_stmt_1128_update_completed_ <-& (call_stmt_1128_Update)
      // Call output argument 0
      // (as target) q_r_data
      // q_r_data
      // write to interface object
      // q_r_data
      // write to interface object
      // start: WAR dependencies for q_r_data
      // done: WAR dependencies for q_r_data
      // end: 	$call accessQueueElement (tag READMEM buf_base_addr read_index ($bitcast ($uint<64>) _b0  ) ) (q_r_data ) 
      // load-store dependencies..
      // pipe read/write dependencies for pipe MEMORY_TO_NIC_RESPONSE
      // read-dependencies for pipe MEMORY_TO_NIC_RESPONSE
      // write-dependencies for pipe MEMORY_TO_NIC_RESPONSE
      // signal write dependencies for MEMORY_TO_NIC_RESPONSE
      // pipe read/write dependencies for pipe NIC_DEBUG_SIGNAL
      // read-dependencies for pipe NIC_DEBUG_SIGNAL
      // write-dependencies for pipe NIC_DEBUG_SIGNAL
      // signal write dependencies for NIC_DEBUG_SIGNAL
      // pipe read/write dependencies for pipe NIC_TO_MEMORY_REQUEST
      // read-dependencies for pipe NIC_TO_MEMORY_REQUEST
      // write-dependencies for pipe NIC_TO_MEMORY_REQUEST
      // signal write dependencies for NIC_TO_MEMORY_REQUEST
      // pipe read/write dependencies for pipe memory_access_lock
      // read-dependencies for pipe memory_access_lock
      // write-dependencies for pipe memory_access_lock
      // signal write dependencies for memory_access_lock
    }
  }
  // end control-path
  $DP 
  {
    // begin data-path 
    // constant-object-declarations for block %getQueueElement
    //  file .Aa/nic.linked.opt.aa, line 400
    // 	$call accessQueueElement (tag READMEM buf_base_addr read_index ($bitcast ($uint<64>) _b0  ) ) (q_r_data ) 
    //  file .Aa/nic.linked.opt.aa, line 405
    // READMEM
    $constant $W[R_READMEM_1122_wire_constant] : $int<1> := _b1// 1
    // ($bitcast ($uint<64>) _b0  )
    $constant $W[type_cast_1126_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000000000// 0
    // 	$call accessQueueElement (tag READMEM buf_base_addr read_index ($bitcast ($uint<64>) _b0  ) ) (q_r_data ) 
    //  file .Aa/nic.linked.opt.aa, line 405
    // q_r_data
    // 	$call accessQueueElement (tag READMEM buf_base_addr read_index ($bitcast ($uint<64>) _b0  ) ) (q_r_data ) 
    //  file .Aa/nic.linked.opt.aa, line 405
    $call [call_stmt_1128_call] $module accessQueueElement(tag R_READMEM_1122_wire_constant buf_base_addr read_index type_cast_1126_wire_constant) (q_r_data)  
    $delay call_stmt_1128_call 4
    $buffering  $in call_stmt_1128_call tag 1
    $buffering  $in call_stmt_1128_call R_READMEM_1122_wire_constant 1
    $buffering  $in call_stmt_1128_call buf_base_addr 1
    $buffering  $in call_stmt_1128_call read_index 1
    $buffering  $in call_stmt_1128_call type_cast_1126_wire_constant 1
    $buffering  $out call_stmt_1128_call q_r_data 1
  }
  // end data-path
  // 	$call accessQueueElement (tag READMEM buf_base_addr read_index ($bitcast ($uint<64>) _b0  ) ) (q_r_data ) 
  //  file .Aa/nic.linked.opt.aa, line 405
  // tag
  // buf_base_addr
  // read_index
  call_stmt_1128_call <=> (call_stmt_1128/call_stmt_1128_Sample/crr call_stmt_1128/call_stmt_1128_Update/ccr) (call_stmt_1128/call_stmt_1128_Sample/cra call_stmt_1128/call_stmt_1128_Update/cca)
}
$module [setQueuePointers] 
{
  $in tag:$int<8>
  // can point into 
  q_base_address:$int<64>
  // can point into  foreign( $void )
  wp:$int<32>
  // can point into  foreign( $void )
  rp:$int<32>
  // can point into  foreign( $void )
  // pipe-declarations for block %setQueuePointers
  //  file .Aa/nic.linked.opt.aa, line 407
  // there are no memory spaces local to this module.
  $CP 
  {
    // begin control-path 
    ::[call_stmt_1144_to_call_stmt_1150] 
    {
      // start: 	$call accessQueueReadIndex (tag WRITEMEM q_base_address rp ) (ign_rp ) 
      //  file .Aa/nic.linked.opt.aa, line 413
      $T[call_stmt_1144_sample_start_] 
      $T[call_stmt_1144_sample_completed_] 
      $T[call_stmt_1144_update_start_] 
      $T[call_stmt_1144_update_completed_] 
      // Call input argument 0
      // tag
      // Call input argument 1
      // Call input argument 2
      // q_base_address
      // Call input argument 3
      // rp
      // start: Forward dependencies from tag to transition call_stmt_1144_sample_start_
      // done: Forward dependencies from tag to transition call_stmt_1144_sample_start_
      // start: Forward dependencies from q_base_address to transition call_stmt_1144_sample_start_
      // done: Forward dependencies from q_base_address to transition call_stmt_1144_sample_start_
      // start: Forward dependencies from rp to transition call_stmt_1144_sample_start_
      // done: Forward dependencies from rp to transition call_stmt_1144_sample_start_
      ;;[call_stmt_1144_Sample] 
      {
        $T [crr] $T [cra] 
      }
      ;;[call_stmt_1144_Update] 
      {
        $T [ccr] $T [cca] 
      }
      call_stmt_1144_sample_start_ &-> (call_stmt_1144_Sample)
      call_stmt_1144_sample_completed_ <-& (call_stmt_1144_Sample)
      call_stmt_1144_sample_completed_ &-> ($null)
      call_stmt_1144_update_start_ &-> (call_stmt_1144_Update)
      call_stmt_1144_update_completed_ <-& (call_stmt_1144_Update)
      // Call output argument 0
      // (as target) ign_rp
      // start: WAR dependencies for ign_rp
      // done: WAR dependencies for ign_rp
      // end: 	$call accessQueueReadIndex (tag WRITEMEM q_base_address rp ) (ign_rp ) 
      // start: 	$call accessQueueWriteIndex (tag WRITEMEM q_base_address wp ) (ign_wp ) 
      //  file .Aa/nic.linked.opt.aa, line 414
      $T[call_stmt_1150_sample_start_] 
      $T[call_stmt_1150_sample_completed_] 
      $T[call_stmt_1150_update_start_] 
      $T[call_stmt_1150_update_completed_] 
      // Call input argument 0
      // tag
      // Call input argument 1
      // Call input argument 2
      // q_base_address
      // Call input argument 3
      // wp
      // start: Forward dependencies from tag to transition call_stmt_1150_sample_start_
      // done: Forward dependencies from tag to transition call_stmt_1150_sample_start_
      // start: Forward dependencies from q_base_address to transition call_stmt_1150_sample_start_
      // done: Forward dependencies from q_base_address to transition call_stmt_1150_sample_start_
      // start: Forward dependencies from wp to transition call_stmt_1150_sample_start_
      // done: Forward dependencies from wp to transition call_stmt_1150_sample_start_
      ;;[call_stmt_1150_Sample] 
      {
        $T [crr] $T [cra] 
      }
      ;;[call_stmt_1150_Update] 
      {
        $T [ccr] $T [cca] 
      }
      call_stmt_1150_sample_start_ &-> (call_stmt_1150_Sample)
      call_stmt_1150_sample_completed_ <-& (call_stmt_1150_Sample)
      call_stmt_1150_sample_completed_ &-> ($null)
      call_stmt_1150_update_start_ &-> (call_stmt_1150_Update)
      call_stmt_1150_update_completed_ <-& (call_stmt_1150_Update)
      // Call output argument 0
      // (as target) ign_wp
      // start: WAR dependencies for ign_wp
      // done: WAR dependencies for ign_wp
      // end: 	$call accessQueueWriteIndex (tag WRITEMEM q_base_address wp ) (ign_wp ) 
      // load-store dependencies..
      // pipe read/write dependencies for pipe MEMORY_TO_NIC_RESPONSE
      // read-dependencies for pipe MEMORY_TO_NIC_RESPONSE
      call_stmt_1150_sample_start_ <-& (call_stmt_1144_update_completed_)
      // write-dependencies for pipe MEMORY_TO_NIC_RESPONSE
      // signal write dependencies for MEMORY_TO_NIC_RESPONSE
      // pipe read/write dependencies for pipe NIC_DEBUG_SIGNAL
      // read-dependencies for pipe NIC_DEBUG_SIGNAL
      // write-dependencies for pipe NIC_DEBUG_SIGNAL
      // signal write dependencies for NIC_DEBUG_SIGNAL
      call_stmt_1150_sample_start_ <-& (call_stmt_1144_update_completed_)
      // pipe read/write dependencies for pipe NIC_TO_MEMORY_REQUEST
      // read-dependencies for pipe NIC_TO_MEMORY_REQUEST
      // write-dependencies for pipe NIC_TO_MEMORY_REQUEST
      call_stmt_1150_sample_start_ <-& (call_stmt_1144_update_completed_)
      // signal write dependencies for NIC_TO_MEMORY_REQUEST
      // pipe read/write dependencies for pipe memory_access_lock
      // read-dependencies for pipe memory_access_lock
      // write-dependencies for pipe memory_access_lock
      call_stmt_1150_sample_start_ <-& (call_stmt_1144_update_completed_)
      // signal write dependencies for memory_access_lock
    }
  }
  // end control-path
  $DP 
  {
    // begin data-path 
    // constant-object-declarations for block %setQueuePointers
    //  file .Aa/nic.linked.opt.aa, line 407
    // 	$call accessQueueReadIndex (tag WRITEMEM q_base_address rp ) (ign_rp ) 
    //  file .Aa/nic.linked.opt.aa, line 413
    // WRITEMEM
    $constant $W[R_WRITEMEM_1140_wire_constant] : $int<1> := _b0// 0
    // 	$call accessQueueWriteIndex (tag WRITEMEM q_base_address wp ) (ign_wp ) 
    //  file .Aa/nic.linked.opt.aa, line 414
    // WRITEMEM
    $constant $W[R_WRITEMEM_1146_wire_constant] : $int<1> := _b0// 0
    // 	$call accessQueueReadIndex (tag WRITEMEM q_base_address rp ) (ign_rp ) 
    //  file .Aa/nic.linked.opt.aa, line 413
    // ign_rp
    $W[ign_rp_1144] : $int<32>
    // 	$call accessQueueWriteIndex (tag WRITEMEM q_base_address wp ) (ign_wp ) 
    //  file .Aa/nic.linked.opt.aa, line 414
    // ign_wp
    $W[ign_wp_1150] : $int<32>
    // 	$call accessQueueReadIndex (tag WRITEMEM q_base_address rp ) (ign_rp ) 
    //  file .Aa/nic.linked.opt.aa, line 413
    $call [call_stmt_1144_call] $module accessQueueReadIndex(tag R_WRITEMEM_1140_wire_constant q_base_address rp) (ign_rp_1144)  
    $delay call_stmt_1144_call 4
    $buffering  $in call_stmt_1144_call tag 1
    $buffering  $in call_stmt_1144_call R_WRITEMEM_1140_wire_constant 1
    $buffering  $in call_stmt_1144_call q_base_address 1
    $buffering  $in call_stmt_1144_call rp 1
    $buffering  $out call_stmt_1144_call ign_rp_1144 1
    // 	$call accessQueueWriteIndex (tag WRITEMEM q_base_address wp ) (ign_wp ) 
    //  file .Aa/nic.linked.opt.aa, line 414
    $call [call_stmt_1150_call] $module accessQueueWriteIndex(tag R_WRITEMEM_1146_wire_constant q_base_address wp) (ign_wp_1150)  
    $delay call_stmt_1150_call 4
    $buffering  $in call_stmt_1150_call tag 1
    $buffering  $in call_stmt_1150_call R_WRITEMEM_1146_wire_constant 1
    $buffering  $in call_stmt_1150_call q_base_address 1
    $buffering  $in call_stmt_1150_call wp 1
    $buffering  $out call_stmt_1150_call ign_wp_1150 1
  }
  // end data-path
  // 	$call accessQueueReadIndex (tag WRITEMEM q_base_address rp ) (ign_rp ) 
  //  file .Aa/nic.linked.opt.aa, line 413
  // tag
  // q_base_address
  // rp
  call_stmt_1144_call <=> (call_stmt_1144_to_call_stmt_1150/call_stmt_1144_Sample/crr call_stmt_1144_to_call_stmt_1150/call_stmt_1144_Update/ccr) (call_stmt_1144_to_call_stmt_1150/call_stmt_1144_Sample/cra call_stmt_1144_to_call_stmt_1150/call_stmt_1144_Update/cca)
  // 	$call accessQueueWriteIndex (tag WRITEMEM q_base_address wp ) (ign_wp ) 
  //  file .Aa/nic.linked.opt.aa, line 414
  // tag
  // q_base_address
  // wp
  call_stmt_1150_call <=> (call_stmt_1144_to_call_stmt_1150/call_stmt_1150_Sample/crr call_stmt_1144_to_call_stmt_1150/call_stmt_1150_Update/ccr) (call_stmt_1144_to_call_stmt_1150/call_stmt_1150_Sample/cra call_stmt_1144_to_call_stmt_1150/call_stmt_1150_Update/cca)
}
$module [setTotalMessages] 
{
  $in tag:$int<8>
  // can point into 
  q_base_address:$int<64>
  // can point into  foreign( $void )
  updated_total_msgs:$int<32>
  // can point into  foreign( $void )
  // pipe-declarations for block %setTotalMessages
  //  file .Aa/nic.linked.opt.aa, line 416
  // there are no memory spaces local to this module.
  $CP 
  {
    // begin control-path 
    ::[call_stmt_1161] 
    {
      // start: 	$call accessQueueTotalMsgs (tag WRITEMEM q_base_address updated_total_msgs ) (ignore ) 
      //  file .Aa/nic.linked.opt.aa, line 421
      $T[call_stmt_1161_sample_start_] 
      $T[call_stmt_1161_sample_completed_] 
      $T[call_stmt_1161_update_start_] 
      $T[call_stmt_1161_update_completed_] 
      // Call input argument 0
      // tag
      // Call input argument 1
      // Call input argument 2
      // q_base_address
      // Call input argument 3
      // updated_total_msgs
      // start: Forward dependencies from tag to transition call_stmt_1161_sample_start_
      // done: Forward dependencies from tag to transition call_stmt_1161_sample_start_
      // start: Forward dependencies from q_base_address to transition call_stmt_1161_sample_start_
      // done: Forward dependencies from q_base_address to transition call_stmt_1161_sample_start_
      // start: Forward dependencies from updated_total_msgs to transition call_stmt_1161_sample_start_
      // done: Forward dependencies from updated_total_msgs to transition call_stmt_1161_sample_start_
      ;;[call_stmt_1161_Sample] 
      {
        $T [crr] $T [cra] 
      }
      ;;[call_stmt_1161_Update] 
      {
        $T [ccr] $T [cca] 
      }
      call_stmt_1161_sample_start_ &-> (call_stmt_1161_Sample)
      call_stmt_1161_sample_completed_ <-& (call_stmt_1161_Sample)
      call_stmt_1161_sample_completed_ &-> ($null)
      call_stmt_1161_update_start_ &-> (call_stmt_1161_Update)
      call_stmt_1161_update_completed_ <-& (call_stmt_1161_Update)
      // Call output argument 0
      // (as target) ignore
      // start: WAR dependencies for ignore
      // done: WAR dependencies for ignore
      // end: 	$call accessQueueTotalMsgs (tag WRITEMEM q_base_address updated_total_msgs ) (ignore ) 
      // load-store dependencies..
      // pipe read/write dependencies for pipe MEMORY_TO_NIC_RESPONSE
      // read-dependencies for pipe MEMORY_TO_NIC_RESPONSE
      // write-dependencies for pipe MEMORY_TO_NIC_RESPONSE
      // signal write dependencies for MEMORY_TO_NIC_RESPONSE
      // pipe read/write dependencies for pipe NIC_DEBUG_SIGNAL
      // read-dependencies for pipe NIC_DEBUG_SIGNAL
      // write-dependencies for pipe NIC_DEBUG_SIGNAL
      // signal write dependencies for NIC_DEBUG_SIGNAL
      // pipe read/write dependencies for pipe NIC_TO_MEMORY_REQUEST
      // read-dependencies for pipe NIC_TO_MEMORY_REQUEST
      // write-dependencies for pipe NIC_TO_MEMORY_REQUEST
      // signal write dependencies for NIC_TO_MEMORY_REQUEST
      // pipe read/write dependencies for pipe memory_access_lock
      // read-dependencies for pipe memory_access_lock
      // write-dependencies for pipe memory_access_lock
      // signal write dependencies for memory_access_lock
    }
  }
  // end control-path
  $DP 
  {
    // begin data-path 
    // constant-object-declarations for block %setTotalMessages
    //  file .Aa/nic.linked.opt.aa, line 416
    // 	$call accessQueueTotalMsgs (tag WRITEMEM q_base_address updated_total_msgs ) (ignore ) 
    //  file .Aa/nic.linked.opt.aa, line 421
    // WRITEMEM
    $constant $W[R_WRITEMEM_1157_wire_constant] : $int<1> := _b0// 0
    // 	$call accessQueueTotalMsgs (tag WRITEMEM q_base_address updated_total_msgs ) (ignore ) 
    //  file .Aa/nic.linked.opt.aa, line 421
    // ignore
    $W[ignore_1161] : $int<32>
    // 	$call accessQueueTotalMsgs (tag WRITEMEM q_base_address updated_total_msgs ) (ignore ) 
    //  file .Aa/nic.linked.opt.aa, line 421
    $call [call_stmt_1161_call] $module accessQueueTotalMsgs(tag R_WRITEMEM_1157_wire_constant q_base_address updated_total_msgs) (ignore_1161)  
    $delay call_stmt_1161_call 4
    $buffering  $in call_stmt_1161_call tag 1
    $buffering  $in call_stmt_1161_call R_WRITEMEM_1157_wire_constant 1
    $buffering  $in call_stmt_1161_call q_base_address 1
    $buffering  $in call_stmt_1161_call updated_total_msgs 1
    $buffering  $out call_stmt_1161_call ignore_1161 1
  }
  // end data-path
  // 	$call accessQueueTotalMsgs (tag WRITEMEM q_base_address updated_total_msgs ) (ignore ) 
  //  file .Aa/nic.linked.opt.aa, line 421
  // tag
  // q_base_address
  // updated_total_msgs
  call_stmt_1161_call <=> (call_stmt_1161/call_stmt_1161_Sample/crr call_stmt_1161/call_stmt_1161_Update/ccr) (call_stmt_1161/call_stmt_1161_Sample/cra call_stmt_1161/call_stmt_1161_Update/cca)
}
$pipeline $depth 7 $buffering 1 $module [accessMemoryByte] 
{
  $in tag:$int<8>
  // can point into 
  rwbar:$int<1>
  // can point into 
  byte_addr_base:$int<64>
  // can point into  foreign( $void )
  offset:$int<64>
  // can point into 
  wbyte:$int<8>
  // can point into 
  $out rbyte:$int<8>
  // can point into  foreign( $void )
  // pipe-declarations for block %accessMemoryByte
  //  file .Aa/nic.linked.opt.aa, line 423
  // there are no memory spaces local to this module.
  $CP 
  {
    // begin control-path 
    // pipelined module
    :|:[call_stmt_1182_to_assign_stmt_1186] 
    {
      $T [tag_update_enable] 
      $scc_arc tag_update_enable => $entry
      $T [tag_update_enable_out] 
      tag_update_enable &-> (tag_update_enable_out)
      $null &-> (tag_update_enable)
      $T [rwbar_update_enable] 
      $scc_arc rwbar_update_enable => $entry
      $T [rwbar_update_enable_out] 
      rwbar_update_enable &-> (rwbar_update_enable_out)
      $null &-> (rwbar_update_enable)
      $T [byte_addr_base_update_enable] 
      $scc_arc byte_addr_base_update_enable => $entry
      $T [byte_addr_base_update_enable_out] 
      byte_addr_base_update_enable &-> (byte_addr_base_update_enable_out)
      $null &-> (byte_addr_base_update_enable)
      $T [offset_update_enable] 
      $scc_arc offset_update_enable => $entry
      $T [offset_update_enable_out] 
      offset_update_enable &-> (offset_update_enable_out)
      $null &-> (offset_update_enable)
      $T [wbyte_update_enable] 
      $scc_arc wbyte_update_enable => $entry
      $T [wbyte_update_enable_out] 
      wbyte_update_enable &-> (wbyte_update_enable_out)
      $null &-> (wbyte_update_enable)
      $T [rbyte_update_enable] 
      $T [rbyte_update_enable_in] 
      $null &-> (rbyte_update_enable)
      $null <-& (rbyte_update_enable_in) 
      $null &-> (rbyte_update_enable)
      $scc_arc $exit => rbyte_update_enable
      rbyte_update_enable <-& (rbyte_update_enable_in) 
      // start: 	$call doMemAccess (tag ( $mux rwbar LDB  STB )  byte_addr_base offset (($bitcast ($uint<56>) _b0  ) && wbyte) ) (rdword ) 
      //  file .Aa/nic.linked.opt.aa, line 428
      $T[call_stmt_1182_sample_start_] 
      $T[call_stmt_1182_sample_completed_] 
      $T[call_stmt_1182_update_start_] 
      $T[call_stmt_1182_update_completed_] 
      // Call input argument 0
      // tag
      // Call input argument 1
      // ( $mux rwbar LDB  STB ) 
      // rwbar
      // Call input argument 2
      // byte_addr_base
      // Call input argument 3
      // offset
      // Call input argument 4
      // (($bitcast ($uint<56>) _b0  ) && wbyte)
      // wbyte
      // start: Forward dependencies from tag to transition call_stmt_1182_sample_start_
      call_stmt_1182_sample_start_ <-& ($entry)
      // done: Forward dependencies from tag to transition call_stmt_1182_sample_start_
      // RAW reenables for tag
      tag_update_enable o<-& (call_stmt_1182_sample_completed_ 0)
      // start: Forward dependencies from ( $mux rwbar LDB  STB )  to transition call_stmt_1182_sample_start_
      call_stmt_1182_sample_start_ <-& ($entry)
      // done: Forward dependencies from ( $mux rwbar LDB  STB )  to transition call_stmt_1182_sample_start_
      // RAW reenables for ( $mux rwbar LDB  STB ) 
      rwbar_update_enable o<-& (call_stmt_1182_sample_completed_ 0)
      // start: Forward dependencies from byte_addr_base to transition call_stmt_1182_sample_start_
      call_stmt_1182_sample_start_ <-& ($entry)
      // done: Forward dependencies from byte_addr_base to transition call_stmt_1182_sample_start_
      // RAW reenables for byte_addr_base
      byte_addr_base_update_enable o<-& (call_stmt_1182_sample_completed_ 0)
      // start: Forward dependencies from offset to transition call_stmt_1182_sample_start_
      call_stmt_1182_sample_start_ <-& ($entry)
      // done: Forward dependencies from offset to transition call_stmt_1182_sample_start_
      // RAW reenables for offset
      offset_update_enable o<-& (call_stmt_1182_sample_completed_ 0)
      // start: Forward dependencies from (($bitcast ($uint<56>) _b0  ) && wbyte) to transition call_stmt_1182_sample_start_
      call_stmt_1182_sample_start_ <-& ($entry)
      // done: Forward dependencies from (($bitcast ($uint<56>) _b0  ) && wbyte) to transition call_stmt_1182_sample_start_
      // RAW reenables for (($bitcast ($uint<56>) _b0  ) && wbyte)
      wbyte_update_enable o<-& (call_stmt_1182_sample_completed_ 0)
      ;;[call_stmt_1182_Sample] 
      {
        $T [crr] $T [cra] 
      }
      ;;[call_stmt_1182_Update] 
      {
        $T [ccr] $T [cca] 
      }
      call_stmt_1182_sample_start_ &-> (call_stmt_1182_Sample)
      call_stmt_1182_sample_completed_ <-& (call_stmt_1182_Sample)
      call_stmt_1182_sample_completed_ &-> ($null)
      call_stmt_1182_update_start_ &-> (call_stmt_1182_Update)
      call_stmt_1182_update_completed_ <-& (call_stmt_1182_Update)
      // Call output argument 0
      // (as target) rdword
      // self-release: 
      call_stmt_1182_sample_start_ o<-& (call_stmt_1182_sample_completed_ 1)
      $null &-> (call_stmt_1182_update_start_)
      call_stmt_1182_update_start_ o<-& (call_stmt_1182_update_completed_ 0)
      // start: WAR dependencies for rdword
      // done: WAR dependencies for rdword
      // end: 	$call doMemAccess (tag ( $mux rwbar LDB  STB )  byte_addr_base offset (($bitcast ($uint<56>) _b0  ) && wbyte) ) (rdword ) 
      // start: WAR dependencies for rbyte
      // done: WAR dependencies for rbyte
      // start:  	$volatile rbyte := ( $slice rdword 7 0 )  $buffering 1
      //  file .Aa/nic.linked.opt.aa, line 429
      // volatile! 
      // Source expression
      // ( $slice rdword 7 0 ) 
      // rdword
      // Target expression
      // (as target) rbyte
      // rbyte
      // write to interface object
      // start: WAR dependencies for rbyte
      // done: WAR dependencies for rbyte
      // rbyte
      // write to interface object
      call_stmt_1182_update_start_ <-& (rbyte_update_enable)
      // end:  	$volatile rbyte := ( $slice rdword 7 0 )  $buffering 1
      // load-store dependencies..
      // pipe read/write dependencies for pipe MEMORY_TO_NIC_RESPONSE
      // read-dependencies for pipe MEMORY_TO_NIC_RESPONSE
      // write-dependencies for pipe MEMORY_TO_NIC_RESPONSE
      // signal write dependencies for MEMORY_TO_NIC_RESPONSE
      // pipe read/write dependencies for pipe NIC_DEBUG_SIGNAL
      // read-dependencies for pipe NIC_DEBUG_SIGNAL
      // write-dependencies for pipe NIC_DEBUG_SIGNAL
      // signal write dependencies for NIC_DEBUG_SIGNAL
      // pipe read/write dependencies for pipe NIC_TO_MEMORY_REQUEST
      // read-dependencies for pipe NIC_TO_MEMORY_REQUEST
      // write-dependencies for pipe NIC_TO_MEMORY_REQUEST
      // signal write dependencies for NIC_TO_MEMORY_REQUEST
      // pipe read/write dependencies for pipe memory_access_lock
      // read-dependencies for pipe memory_access_lock
      // write-dependencies for pipe memory_access_lock
      // signal write dependencies for memory_access_lock
    }
    ( rbyte_update_enable_in)
    ( tag_update_enable_out rwbar_update_enable_out byte_addr_base_update_enable_out offset_update_enable_out wbyte_update_enable_out)
    $P [tag_update_enable] 
    $P [rwbar_update_enable] 
    $P [byte_addr_base_update_enable] 
    $P [offset_update_enable] 
    $P [wbyte_update_enable] 
    $P [rbyte_update_enable] 
    $bind tag_update_enable <= call_stmt_1182_to_assign_stmt_1186 : tag_update_enable_out
    $bind rwbar_update_enable <= call_stmt_1182_to_assign_stmt_1186 : rwbar_update_enable_out
    $bind byte_addr_base_update_enable <= call_stmt_1182_to_assign_stmt_1186 : byte_addr_base_update_enable_out
    $bind offset_update_enable <= call_stmt_1182_to_assign_stmt_1186 : offset_update_enable_out
    $bind wbyte_update_enable <= call_stmt_1182_to_assign_stmt_1186 : wbyte_update_enable_out
    $bind rbyte_update_enable => call_stmt_1182_to_assign_stmt_1186 : rbyte_update_enable_in
  }
  // end control-path
  $DP 
  {
    // begin data-path 
    // constant-object-declarations for block %accessMemoryByte
    //  file .Aa/nic.linked.opt.aa, line 423
    // 	$call doMemAccess (tag ( $mux rwbar LDB  STB )  byte_addr_base offset (($bitcast ($uint<56>) _b0  ) && wbyte) ) (rdword ) 
    //  file .Aa/nic.linked.opt.aa, line 428
    // ( $mux rwbar LDB  STB ) 
    // LDB
    $constant $W[R_LDB_1172_wire_constant] : $int<3> := _b110// 6
    // STB
    $constant $W[R_STB_1173_wire_constant] : $int<3> := _b011// 3
    // ($bitcast ($uint<56>) _b0  )
    $constant $W[type_cast_1178_wire_constant] : $int<56> := _b00000000000000000000000000000000000000000000000000000000// 0
    // 	$call doMemAccess (tag ( $mux rwbar LDB  STB )  byte_addr_base offset (($bitcast ($uint<56>) _b0  ) && wbyte) ) (rdword ) 
    //  file .Aa/nic.linked.opt.aa, line 428
    // ( $mux rwbar LDB  STB ) 
    $intermediate $W[MUX_1174_wire] : $int<3>
    // (($bitcast ($uint<56>) _b0  ) && wbyte)
    $intermediate $W[CONCAT_u56_u64_1180_wire] : $int<64>
    // rdword
    $W[rdword_1182] : $int<64>
    // 	$volatile rbyte := ( $slice rdword 7 0 )  $buffering 1
    //  file .Aa/nic.linked.opt.aa, line 429
    // rbyte
    // 	$call doMemAccess (tag ( $mux rwbar LDB  STB )  byte_addr_base offset (($bitcast ($uint<56>) _b0  ) && wbyte) ) (rdword ) 
    //  file .Aa/nic.linked.opt.aa, line 428
    // ( $mux rwbar LDB  STB ) 
    ? [MUX_1174_inst] (rwbar R_LDB_1172_wire_constant R_STB_1173_wire_constant) (MUX_1174_wire)  $flowthrough
    // (($bitcast ($uint<56>) _b0  ) && wbyte)
    &&[CONCAT_u56_u64_1180_inst] (type_cast_1178_wire_constant wbyte) (CONCAT_u56_u64_1180_wire)   $flowthrough 
    $delay CONCAT_u56_u64_1180_inst 0
    $call [call_stmt_1182_call] $module doMemAccess(tag MUX_1174_wire byte_addr_base offset CONCAT_u56_u64_1180_wire) (rdword_1182)  
    $delay call_stmt_1182_call 36
    $buffering  $in call_stmt_1182_call tag 1
    $buffering  $in call_stmt_1182_call MUX_1174_wire 1
    $buffering  $in call_stmt_1182_call byte_addr_base 1
    $buffering  $in call_stmt_1182_call offset 1
    $buffering  $in call_stmt_1182_call CONCAT_u56_u64_1180_wire 1
    $buffering  $out call_stmt_1182_call rdword_1182 1
    // 	$volatile rbyte := ( $slice rdword 7 0 )  $buffering 1
    //  file .Aa/nic.linked.opt.aa, line 429
    // ( $slice rdword 7 0 ) 
    [:] [slice_1185_inst] (rdword_1182 7 0) (rbyte)  $flowthrough
    $delay slice_1185_inst 0
  }
  // end data-path
  // 	$call doMemAccess (tag ( $mux rwbar LDB  STB )  byte_addr_base offset (($bitcast ($uint<56>) _b0  ) && wbyte) ) (rdword ) 
  //  file .Aa/nic.linked.opt.aa, line 428
  // tag
  // rwbar
  // ( $mux rwbar LDB  STB ) 
  // byte_addr_base
  // offset
  // (($bitcast ($uint<56>) _b0  ) && wbyte)
  // wbyte
  call_stmt_1182_call <=> (call_stmt_1182_to_assign_stmt_1186/call_stmt_1182_Sample/crr call_stmt_1182_to_assign_stmt_1186/call_stmt_1182_Update/ccr) (call_stmt_1182_to_assign_stmt_1186/call_stmt_1182_Sample/cra call_stmt_1182_to_assign_stmt_1186/call_stmt_1182_Update/cca)
  // 	$volatile rbyte := ( $slice rdword 7 0 )  $buffering 1
  //  file .Aa/nic.linked.opt.aa, line 429
  // rdword
  $attribute delay => "38"
}
$module [releaseLock] 
{
  $in tag:$int<8>
  // can point into 
  lock_address_pointer:$int<64>
  // can point into  foreign( $void )
  // pipe-declarations for block %releaseLock
  //  file .Aa/nic.linked.opt.aa, line 432
  // there are no memory spaces local to this module.
  $CP 
  {
    // begin control-path 
    ::[call_stmt_1197] 
    {
      // start: 	$call accessMemoryByte (tag WRITEMEM lock_address_pointer 0  0  ) (ignore ) 
      //  file .Aa/nic.linked.opt.aa, line 437
      $T[call_stmt_1197_sample_start_] 
      $T[call_stmt_1197_sample_completed_] 
      $T[call_stmt_1197_update_start_] 
      $T[call_stmt_1197_update_completed_] 
      // Call input argument 0
      // tag
      // Call input argument 1
      // Call input argument 2
      // lock_address_pointer
      // Call input argument 3
      // Call input argument 4
      // start: Forward dependencies from tag to transition call_stmt_1197_sample_start_
      // done: Forward dependencies from tag to transition call_stmt_1197_sample_start_
      // start: Forward dependencies from lock_address_pointer to transition call_stmt_1197_sample_start_
      // done: Forward dependencies from lock_address_pointer to transition call_stmt_1197_sample_start_
      ;;[call_stmt_1197_Sample] 
      {
        $T [crr] $T [cra] 
      }
      ;;[call_stmt_1197_Update] 
      {
        $T [ccr] $T [cca] 
      }
      call_stmt_1197_sample_start_ &-> (call_stmt_1197_Sample)
      call_stmt_1197_sample_completed_ <-& (call_stmt_1197_Sample)
      call_stmt_1197_sample_completed_ &-> ($null)
      call_stmt_1197_update_start_ &-> (call_stmt_1197_Update)
      call_stmt_1197_update_completed_ <-& (call_stmt_1197_Update)
      // Call output argument 0
      // (as target) ignore
      // start: WAR dependencies for ignore
      // done: WAR dependencies for ignore
      // end: 	$call accessMemoryByte (tag WRITEMEM lock_address_pointer 0  0  ) (ignore ) 
      // load-store dependencies..
      // pipe read/write dependencies for pipe MEMORY_TO_NIC_RESPONSE
      // read-dependencies for pipe MEMORY_TO_NIC_RESPONSE
      // write-dependencies for pipe MEMORY_TO_NIC_RESPONSE
      // signal write dependencies for MEMORY_TO_NIC_RESPONSE
      // pipe read/write dependencies for pipe NIC_DEBUG_SIGNAL
      // read-dependencies for pipe NIC_DEBUG_SIGNAL
      // write-dependencies for pipe NIC_DEBUG_SIGNAL
      // signal write dependencies for NIC_DEBUG_SIGNAL
      // pipe read/write dependencies for pipe NIC_TO_MEMORY_REQUEST
      // read-dependencies for pipe NIC_TO_MEMORY_REQUEST
      // write-dependencies for pipe NIC_TO_MEMORY_REQUEST
      // signal write dependencies for NIC_TO_MEMORY_REQUEST
      // pipe read/write dependencies for pipe memory_access_lock
      // read-dependencies for pipe memory_access_lock
      // write-dependencies for pipe memory_access_lock
      // signal write dependencies for memory_access_lock
    }
  }
  // end control-path
  $DP 
  {
    // begin data-path 
    // constant-object-declarations for block %releaseLock
    //  file .Aa/nic.linked.opt.aa, line 432
    // 	$call accessMemoryByte (tag WRITEMEM lock_address_pointer 0  0  ) (ignore ) 
    //  file .Aa/nic.linked.opt.aa, line 437
    // WRITEMEM
    $constant $W[R_WRITEMEM_1192_wire_constant] : $int<1> := _b0// 0
    // 0 
    $constant $W[konst_1194_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000000000// 0
    // 0 
    $constant $W[konst_1195_wire_constant] : $int<8> := _b00000000// 0
    // 	$call accessMemoryByte (tag WRITEMEM lock_address_pointer 0  0  ) (ignore ) 
    //  file .Aa/nic.linked.opt.aa, line 437
    // ignore
    $W[ignore_1197] : $int<8>
    // 	$call accessMemoryByte (tag WRITEMEM lock_address_pointer 0  0  ) (ignore ) 
    //  file .Aa/nic.linked.opt.aa, line 437
    $call [call_stmt_1197_call] $module accessMemoryByte(tag R_WRITEMEM_1192_wire_constant lock_address_pointer konst_1194_wire_constant konst_1195_wire_constant) (ignore_1197)  
    $delay call_stmt_1197_call 38
    $buffering  $in call_stmt_1197_call tag 1
    $buffering  $in call_stmt_1197_call R_WRITEMEM_1192_wire_constant 1
    $buffering  $in call_stmt_1197_call lock_address_pointer 1
    $buffering  $in call_stmt_1197_call konst_1194_wire_constant 1
    $buffering  $in call_stmt_1197_call konst_1195_wire_constant 1
    $buffering  $out call_stmt_1197_call ignore_1197 1
  }
  // end data-path
  // 	$call accessMemoryByte (tag WRITEMEM lock_address_pointer 0  0  ) (ignore ) 
  //  file .Aa/nic.linked.opt.aa, line 437
  // tag
  // lock_address_pointer
  call_stmt_1197_call <=> (call_stmt_1197/call_stmt_1197_Sample/crr call_stmt_1197/call_stmt_1197_Update/ccr) (call_stmt_1197/call_stmt_1197_Sample/cra call_stmt_1197/call_stmt_1197_Update/cca)
}
$module [popFromQueue] 
{
  $in tag:$int<8>
  // can point into 
  queue_type:$int<2>
  // can point into 
  server_id:$int<8>
  // can point into  foreign( $void )
  $out q_r_data:$int<64>
  // can point into  foreign( $void )
  status:$int<1>
  // can point into  foreign( $void )
  // pipe-declarations for block %popFromQueue
  //  file .Aa/nic.linked.opt.aa, line 439
  // there are no memory spaces local to this module.
  $CP 
  {
    // begin control-path 
    ::[call_stmt_1208] 
    {
      // start: 	$call getQueuePointer (queue_type server_id ) (q_base_address ) 
      //  file .Aa/nic.linked.opt.aa, line 444
      $T[call_stmt_1208_sample_start_] 
      $T[call_stmt_1208_sample_completed_] 
      $T[call_stmt_1208_update_start_] 
      $T[call_stmt_1208_update_completed_] 
      // Call input argument 0
      // queue_type
      // Call input argument 1
      // server_id
      // start: Forward dependencies from queue_type to transition call_stmt_1208_sample_start_
      // done: Forward dependencies from queue_type to transition call_stmt_1208_sample_start_
      // start: Forward dependencies from server_id to transition call_stmt_1208_sample_start_
      // done: Forward dependencies from server_id to transition call_stmt_1208_sample_start_
      ;;[call_stmt_1208_Sample] 
      {
        $T [crr] $T [cra] 
      }
      ;;[call_stmt_1208_Update] 
      {
        $T [ccr] $T [cca] 
      }
      call_stmt_1208_sample_start_ &-> (call_stmt_1208_Sample)
      call_stmt_1208_sample_completed_ <-& (call_stmt_1208_Sample)
      call_stmt_1208_sample_completed_ &-> ($null)
      call_stmt_1208_update_start_ &-> (call_stmt_1208_Update)
      call_stmt_1208_update_completed_ <-& (call_stmt_1208_Update)
      // Call output argument 0
      // (as target) q_base_address
      // start: WAR dependencies for q_base_address
      // done: WAR dependencies for q_base_address
      // end: 	$call getQueuePointer (queue_type server_id ) (q_base_address ) 
      // load-store dependencies..
      // memory-space  memory_space_0
      //  call_stmt_1208 store
    }
    ::[call_stmt_1216_to_call_stmt_1231] 
    {
      // start: 	$call accessQueueMisc (tag READMEM q_base_address ($bitcast ($uint<32>) _b0  ) ) (misc ) 
      //  file .Aa/nic.linked.opt.aa, line 446
      $T[call_stmt_1216_sample_start_] 
      $T[call_stmt_1216_sample_completed_] 
      $T[call_stmt_1216_update_start_] 
      $T[call_stmt_1216_update_completed_] 
      // Call input argument 0
      // tag
      // Call input argument 1
      // Call input argument 2
      // q_base_address
      // Call input argument 3
      // start: Forward dependencies from tag to transition call_stmt_1216_sample_start_
      // done: Forward dependencies from tag to transition call_stmt_1216_sample_start_
      // start: Forward dependencies from q_base_address to transition call_stmt_1216_sample_start_
      // done: Forward dependencies from q_base_address to transition call_stmt_1216_sample_start_
      ;;[call_stmt_1216_Sample] 
      {
        $T [crr] $T [cra] 
      }
      ;;[call_stmt_1216_Update] 
      {
        $T [ccr] $T [cca] 
      }
      call_stmt_1216_sample_start_ &-> (call_stmt_1216_Sample)
      call_stmt_1216_sample_completed_ <-& (call_stmt_1216_Sample)
      call_stmt_1216_sample_completed_ &-> ($null)
      call_stmt_1216_update_start_ &-> (call_stmt_1216_Update)
      call_stmt_1216_update_completed_ <-& (call_stmt_1216_Update)
      // Call output argument 0
      // (as target) misc
      // start: WAR dependencies for misc
      // done: WAR dependencies for misc
      // end: 	$call accessQueueMisc (tag READMEM q_base_address ($bitcast ($uint<32>) _b0  ) ) (misc ) 
      // start: WAR dependencies for lock_n
      // done: WAR dependencies for lock_n
      // start:  	$volatile lock_n := (misc [] 0 ) $buffering 1
      //  file .Aa/nic.linked.opt.aa, line 447
      // volatile! 
      // Source expression
      // (misc [] 0 )
      // misc
      // Target expression
      // (as target) lock_n
      // start: WAR dependencies for lock_n
      // done: WAR dependencies for lock_n
      // end:  	$volatile lock_n := (misc [] 0 ) $buffering 1
      // start: 	$guard (~lock_n) $call getQueueLockPointer (queue_type server_id ) (q_lock_address ) 
      //  file .Aa/nic.linked.opt.aa, line 448
      $T[call_stmt_1226_sample_start_] 
      $T[call_stmt_1226_sample_completed_] 
      $T[call_stmt_1226_update_start_] 
      $T[call_stmt_1226_update_completed_] 
      // Guard expression
      // lock_n
      // start: Forward dependencies from lock_n to transition call_stmt_1226_sample_start_
      call_stmt_1226_sample_start_ <-& (call_stmt_1216_update_completed_)
      // done: Forward dependencies from lock_n to transition call_stmt_1226_sample_start_
      // Call input argument 0
      // queue_type
      // Call input argument 1
      // server_id
      // start: Forward dependencies from queue_type to transition call_stmt_1226_sample_start_
      // done: Forward dependencies from queue_type to transition call_stmt_1226_sample_start_
      // start: Forward dependencies from server_id to transition call_stmt_1226_sample_start_
      // done: Forward dependencies from server_id to transition call_stmt_1226_sample_start_
      ;;[call_stmt_1226_Sample] 
      {
        $T [crr] $T [cra] 
      }
      ;;[call_stmt_1226_Update] 
      {
        $T [ccr] $T [cca] 
      }
      call_stmt_1226_sample_start_ &-> (call_stmt_1226_Sample)
      call_stmt_1226_sample_completed_ <-& (call_stmt_1226_Sample)
      call_stmt_1226_sample_completed_ &-> ($null)
      call_stmt_1226_update_start_ &-> (call_stmt_1226_Update)
      call_stmt_1226_update_completed_ <-& (call_stmt_1226_Update)
      // Call output argument 0
      // (as target) q_lock_address
      // start: WAR dependencies for q_lock_address
      // done: WAR dependencies for q_lock_address
      // end: 	$guard (~lock_n) $call getQueueLockPointer (queue_type server_id ) (q_lock_address ) 
      // start: 	$guard (~lock_n) $call acquireLock (tag q_lock_address ) (m_ok ) 
      //  file .Aa/nic.linked.opt.aa, line 449
      $T[call_stmt_1231_sample_start_] 
      $T[call_stmt_1231_sample_completed_] 
      $T[call_stmt_1231_update_start_] 
      $T[call_stmt_1231_update_completed_] 
      // Guard expression
      // lock_n
      // start: Forward dependencies from lock_n to transition call_stmt_1231_sample_start_
      call_stmt_1231_sample_start_ <-& (call_stmt_1216_update_completed_)
      // done: Forward dependencies from lock_n to transition call_stmt_1231_sample_start_
      // Call input argument 0
      // tag
      // Call input argument 1
      // q_lock_address
      // start: Forward dependencies from tag to transition call_stmt_1231_sample_start_
      // done: Forward dependencies from tag to transition call_stmt_1231_sample_start_
      // start: Forward dependencies from q_lock_address to transition call_stmt_1231_sample_start_
      call_stmt_1231_sample_start_ <-& (call_stmt_1226_update_completed_)
      // done: Forward dependencies from q_lock_address to transition call_stmt_1231_sample_start_
      ;;[call_stmt_1231_Sample] 
      {
        $T [crr] $T [cra] 
      }
      ;;[call_stmt_1231_Update] 
      {
        $T [ccr] $T [cca] 
      }
      call_stmt_1231_sample_start_ &-> (call_stmt_1231_Sample)
      call_stmt_1231_sample_completed_ <-& (call_stmt_1231_Sample)
      call_stmt_1231_sample_completed_ &-> ($null)
      call_stmt_1231_update_start_ &-> (call_stmt_1231_Update)
      call_stmt_1231_update_completed_ <-& (call_stmt_1231_Update)
      // Call output argument 0
      // (as target) m_ok
      // start: WAR dependencies for m_ok
      // done: WAR dependencies for m_ok
      // end: 	$guard (~lock_n) $call acquireLock (tag q_lock_address ) (m_ok ) 
      // load-store dependencies..
      // memory-space  memory_space_0
      //  call_stmt_1226 store
      // pipe read/write dependencies for pipe MEMORY_TO_NIC_RESPONSE
      // read-dependencies for pipe MEMORY_TO_NIC_RESPONSE
      call_stmt_1231_sample_start_ <-& (call_stmt_1216_update_completed_)
      // write-dependencies for pipe MEMORY_TO_NIC_RESPONSE
      // signal write dependencies for MEMORY_TO_NIC_RESPONSE
      // pipe read/write dependencies for pipe NIC_DEBUG_SIGNAL
      // read-dependencies for pipe NIC_DEBUG_SIGNAL
      // write-dependencies for pipe NIC_DEBUG_SIGNAL
      // signal write dependencies for NIC_DEBUG_SIGNAL
      call_stmt_1231_sample_start_ <-& (call_stmt_1216_update_completed_)
      // pipe read/write dependencies for pipe NIC_TO_MEMORY_REQUEST
      // read-dependencies for pipe NIC_TO_MEMORY_REQUEST
      // write-dependencies for pipe NIC_TO_MEMORY_REQUEST
      call_stmt_1231_sample_start_ <-& (call_stmt_1216_update_completed_)
      // signal write dependencies for NIC_TO_MEMORY_REQUEST
      // pipe read/write dependencies for pipe memory_access_lock
      // read-dependencies for pipe memory_access_lock
      // write-dependencies for pipe memory_access_lock
      call_stmt_1231_sample_start_ <-& (call_stmt_1216_update_completed_)
      // signal write dependencies for memory_access_lock
    }
    ::[call_stmt_1237_to_assign_stmt_1267] 
    {
      // start: 	$call getQueuePointers (tag q_base_address ) (write_index read_index ) 
      //  file .Aa/nic.linked.opt.aa, line 451
      $T[call_stmt_1237_sample_start_] 
      $T[call_stmt_1237_sample_completed_] 
      $T[call_stmt_1237_update_start_] 
      $T[call_stmt_1237_update_completed_] 
      // Call input argument 0
      // tag
      // Call input argument 1
      // q_base_address
      // start: Forward dependencies from tag to transition call_stmt_1237_sample_start_
      // done: Forward dependencies from tag to transition call_stmt_1237_sample_start_
      // start: Forward dependencies from q_base_address to transition call_stmt_1237_sample_start_
      // done: Forward dependencies from q_base_address to transition call_stmt_1237_sample_start_
      ;;[call_stmt_1237_Sample] 
      {
        $T [crr] $T [cra] 
      }
      ;;[call_stmt_1237_Update] 
      {
        $T [ccr] $T [cca] 
      }
      call_stmt_1237_sample_start_ &-> (call_stmt_1237_Sample)
      call_stmt_1237_sample_completed_ <-& (call_stmt_1237_Sample)
      call_stmt_1237_sample_completed_ &-> ($null)
      call_stmt_1237_update_start_ &-> (call_stmt_1237_Update)
      call_stmt_1237_update_completed_ <-& (call_stmt_1237_Update)
      // Call output argument 0
      // (as target) write_index
      // Call output argument 1
      // (as target) read_index
      // start: WAR dependencies for write_index
      // done: WAR dependencies for write_index
      // start: WAR dependencies for read_index
      // done: WAR dependencies for read_index
      // end: 	$call getQueuePointers (tag q_base_address ) (write_index read_index ) 
      // start: 	$call getQueueLength (tag q_base_address ) (queue_length ) 
      //  file .Aa/nic.linked.opt.aa, line 452
      $T[call_stmt_1241_sample_start_] 
      $T[call_stmt_1241_sample_completed_] 
      $T[call_stmt_1241_update_start_] 
      $T[call_stmt_1241_update_completed_] 
      // Call input argument 0
      // tag
      // Call input argument 1
      // q_base_address
      // start: Forward dependencies from tag to transition call_stmt_1241_sample_start_
      // done: Forward dependencies from tag to transition call_stmt_1241_sample_start_
      // start: Forward dependencies from q_base_address to transition call_stmt_1241_sample_start_
      // done: Forward dependencies from q_base_address to transition call_stmt_1241_sample_start_
      ;;[call_stmt_1241_Sample] 
      {
        $T [crr] $T [cra] 
      }
      ;;[call_stmt_1241_Update] 
      {
        $T [ccr] $T [cca] 
      }
      call_stmt_1241_sample_start_ &-> (call_stmt_1241_Sample)
      call_stmt_1241_sample_completed_ <-& (call_stmt_1241_Sample)
      call_stmt_1241_sample_completed_ &-> ($null)
      call_stmt_1241_update_start_ &-> (call_stmt_1241_Update)
      call_stmt_1241_update_completed_ <-& (call_stmt_1241_Update)
      // Call output argument 0
      // (as target) queue_length
      // start: WAR dependencies for queue_length
      // done: WAR dependencies for queue_length
      // end: 	$call getQueueLength (tag q_base_address ) (queue_length ) 
      // start: 	$call getTotalMessages (tag q_base_address ) (total_msgs ) 
      //  file .Aa/nic.linked.opt.aa, line 453
      $T[call_stmt_1245_sample_start_] 
      $T[call_stmt_1245_sample_completed_] 
      $T[call_stmt_1245_update_start_] 
      $T[call_stmt_1245_update_completed_] 
      // Call input argument 0
      // tag
      // Call input argument 1
      // q_base_address
      // start: Forward dependencies from tag to transition call_stmt_1245_sample_start_
      // done: Forward dependencies from tag to transition call_stmt_1245_sample_start_
      // start: Forward dependencies from q_base_address to transition call_stmt_1245_sample_start_
      // done: Forward dependencies from q_base_address to transition call_stmt_1245_sample_start_
      ;;[call_stmt_1245_Sample] 
      {
        $T [crr] $T [cra] 
      }
      ;;[call_stmt_1245_Update] 
      {
        $T [ccr] $T [cca] 
      }
      call_stmt_1245_sample_start_ &-> (call_stmt_1245_Sample)
      call_stmt_1245_sample_completed_ <-& (call_stmt_1245_Sample)
      call_stmt_1245_sample_completed_ &-> ($null)
      call_stmt_1245_update_start_ &-> (call_stmt_1245_Update)
      call_stmt_1245_update_completed_ <-& (call_stmt_1245_Update)
      // Call output argument 0
      // (as target) total_msgs
      // start: WAR dependencies for total_msgs
      // done: WAR dependencies for total_msgs
      // end: 	$call getTotalMessages (tag q_base_address ) (total_msgs ) 
      // start: WAR dependencies for q_empty
      // done: WAR dependencies for q_empty
      // start:  	$volatile q_empty := (total_msgs == 0 ) $buffering 1
      //  file .Aa/nic.linked.opt.aa, line 454
      // volatile! 
      // Source expression
      // (total_msgs == 0 )
      // total_msgs
      // Target expression
      // (as target) q_empty
      // start: WAR dependencies for q_empty
      // done: WAR dependencies for q_empty
      // end:  	$volatile q_empty := (total_msgs == 0 ) $buffering 1
      // start:  	$guard (~q_empty) QUEUE_MONITOR_SIGNAL := (((($bitcast ($uint<4>) queue_type ) && PREPOPQ) && ($bitcast ($uint<8>) total_msgs )) && (($bitcast ($uint<8>) write_index ) && ($bitcast ($uint<8>) read_index ))) $buffering 1// bits of buffering = 32. 
      //  file .Aa/nic.linked.opt.aa, line 455
      // Guard expression 
      // q_empty
      // Source expression
      // (((($bitcast ($uint<4>) queue_type ) && PREPOPQ) && ($bitcast ($uint<8>) total_msgs )) && (($bitcast ($uint<8>) write_index ) && ($bitcast ($uint<8>) read_index )))
      $T[CONCAT_u16_u32_1266_sample_start_] 
      $T[CONCAT_u16_u32_1266_sample_completed_] 
      $T[CONCAT_u16_u32_1266_update_start_] 
      $T[CONCAT_u16_u32_1266_update_completed_] 
      // Guard dependency for expression CONCAT_u16_u32_1266 with guard R_q_empty_1251
      CONCAT_u16_u32_1266_sample_start_ <-& (call_stmt_1245_update_completed_)
      // ((($bitcast ($uint<4>) queue_type ) && PREPOPQ) && ($bitcast ($uint<8>) total_msgs ))
      // (($bitcast ($uint<4>) queue_type ) && PREPOPQ)
      // ($bitcast ($uint<4>) queue_type )
      // queue_type
      // ($bitcast ($uint<8>) total_msgs )
      // total_msgs
      // (($bitcast ($uint<8>) write_index ) && ($bitcast ($uint<8>) read_index ))
      // ($bitcast ($uint<8>) write_index )
      // write_index
      // ($bitcast ($uint<8>) read_index )
      // read_index
      // start: Forward dependencies from ((($bitcast ($uint<4>) queue_type ) && PREPOPQ) && ($bitcast ($uint<8>) total_msgs )) to transition CONCAT_u16_u32_1266_sample_start_
      CONCAT_u16_u32_1266_sample_start_ <-& (call_stmt_1245_update_completed_)
      // done: Forward dependencies from ((($bitcast ($uint<4>) queue_type ) && PREPOPQ) && ($bitcast ($uint<8>) total_msgs )) to transition CONCAT_u16_u32_1266_sample_start_
      // start: Forward dependencies from (($bitcast ($uint<8>) write_index ) && ($bitcast ($uint<8>) read_index )) to transition CONCAT_u16_u32_1266_sample_start_
      CONCAT_u16_u32_1266_sample_start_ <-& (call_stmt_1237_update_completed_)
      // done: Forward dependencies from (($bitcast ($uint<8>) write_index ) && ($bitcast ($uint<8>) read_index )) to transition CONCAT_u16_u32_1266_sample_start_
      ;;[CONCAT_u16_u32_1266_Sample] 
      {
        // binary expression 
        $T [rr] $T [ra]  // (split) binary operation 
      }
      ;;[CONCAT_u16_u32_1266_Update] 
      {
        // binary expression 
        $T [cr] $T [ca] // (split) binary operation 
      }
      CONCAT_u16_u32_1266_sample_start_ &-> (CONCAT_u16_u32_1266_Sample)
      CONCAT_u16_u32_1266_sample_completed_ <-& (CONCAT_u16_u32_1266_Sample)
      CONCAT_u16_u32_1266_sample_completed_ &-> ($null)
      CONCAT_u16_u32_1266_update_start_ &-> (CONCAT_u16_u32_1266_Update)
      CONCAT_u16_u32_1266_update_completed_ <-& (CONCAT_u16_u32_1266_Update)
      // Target expression
      // (as target) QUEUE_MONITOR_SIGNAL
      $T[WPIPE_QUEUE_MONITOR_SIGNAL_1252_sample_start_] 
      $T[WPIPE_QUEUE_MONITOR_SIGNAL_1252_sample_completed_] 
      $T[WPIPE_QUEUE_MONITOR_SIGNAL_1252_update_start_] 
      $T[WPIPE_QUEUE_MONITOR_SIGNAL_1252_update_completed_] 
      // Guard dependency for expression WPIPE_QUEUE_MONITOR_SIGNAL_1252 with guard R_q_empty_1251
      // Guard forward dependency 
      WPIPE_QUEUE_MONITOR_SIGNAL_1252_sample_start_ <-& (call_stmt_1245_update_completed_)
      ;;[WPIPE_QUEUE_MONITOR_SIGNAL_1252_Sample] 
      {
        // pipe write sample-start QUEUE_MONITOR_SIGNAL
        $T [req] $T [ack] 
      }
      ;;[WPIPE_QUEUE_MONITOR_SIGNAL_1252_Update] 
      {
        // pipe write update (complete) QUEUE_MONITOR_SIGNAL
        $T [req] $T [ack] 
      }
      WPIPE_QUEUE_MONITOR_SIGNAL_1252_sample_start_ &-> (WPIPE_QUEUE_MONITOR_SIGNAL_1252_Sample)
      WPIPE_QUEUE_MONITOR_SIGNAL_1252_sample_completed_ <-& (WPIPE_QUEUE_MONITOR_SIGNAL_1252_Sample)
      WPIPE_QUEUE_MONITOR_SIGNAL_1252_update_start_ <-& (WPIPE_QUEUE_MONITOR_SIGNAL_1252_sample_completed_)
      WPIPE_QUEUE_MONITOR_SIGNAL_1252_update_start_ &-> (WPIPE_QUEUE_MONITOR_SIGNAL_1252_Update)
      WPIPE_QUEUE_MONITOR_SIGNAL_1252_update_completed_ <-& (WPIPE_QUEUE_MONITOR_SIGNAL_1252_Update)
      // start: Forward dependencies from (((($bitcast ($uint<4>) queue_type ) && PREPOPQ) && ($bitcast ($uint<8>) total_msgs )) && (($bitcast ($uint<8>) write_index ) && ($bitcast ($uint<8>) read_index ))) to transition WPIPE_QUEUE_MONITOR_SIGNAL_1252_sample_start_
      WPIPE_QUEUE_MONITOR_SIGNAL_1252_sample_start_ <-& (CONCAT_u16_u32_1266_update_completed_)
      // done: Forward dependencies from (((($bitcast ($uint<4>) queue_type ) && PREPOPQ) && ($bitcast ($uint<8>) total_msgs )) && (($bitcast ($uint<8>) write_index ) && ($bitcast ($uint<8>) read_index ))) to transition WPIPE_QUEUE_MONITOR_SIGNAL_1252_sample_start_
      // end:  	$guard (~q_empty) QUEUE_MONITOR_SIGNAL := (((($bitcast ($uint<4>) queue_type ) && PREPOPQ) && ($bitcast ($uint<8>) total_msgs )) && (($bitcast ($uint<8>) write_index ) && ($bitcast ($uint<8>) read_index ))) $buffering 1// bits of buffering = 32. 
      // load-store dependencies..
      // pipe read/write dependencies for pipe MEMORY_TO_NIC_RESPONSE
      // read-dependencies for pipe MEMORY_TO_NIC_RESPONSE
      call_stmt_1241_sample_start_ <-& (call_stmt_1237_update_completed_)
      call_stmt_1245_sample_start_ <-& (call_stmt_1241_update_completed_)
      // write-dependencies for pipe MEMORY_TO_NIC_RESPONSE
      // signal write dependencies for MEMORY_TO_NIC_RESPONSE
      // pipe read/write dependencies for pipe NIC_DEBUG_SIGNAL
      // read-dependencies for pipe NIC_DEBUG_SIGNAL
      // write-dependencies for pipe NIC_DEBUG_SIGNAL
      // signal write dependencies for NIC_DEBUG_SIGNAL
      call_stmt_1241_sample_start_ <-& (call_stmt_1237_update_completed_)
      call_stmt_1245_sample_start_ <-& (call_stmt_1241_update_completed_)
      // pipe read/write dependencies for pipe NIC_TO_MEMORY_REQUEST
      // read-dependencies for pipe NIC_TO_MEMORY_REQUEST
      // write-dependencies for pipe NIC_TO_MEMORY_REQUEST
      call_stmt_1241_sample_start_ <-& (call_stmt_1237_update_completed_)
      call_stmt_1245_sample_start_ <-& (call_stmt_1241_update_completed_)
      // signal write dependencies for NIC_TO_MEMORY_REQUEST
      // pipe read/write dependencies for pipe QUEUE_MONITOR_SIGNAL
      // read-dependencies for pipe QUEUE_MONITOR_SIGNAL
      // write-dependencies for pipe QUEUE_MONITOR_SIGNAL
      // signal write dependencies for QUEUE_MONITOR_SIGNAL
      // pipe read/write dependencies for pipe memory_access_lock
      // read-dependencies for pipe memory_access_lock
      // write-dependencies for pipe memory_access_lock
      call_stmt_1241_sample_start_ <-& (call_stmt_1237_update_completed_)
      call_stmt_1245_sample_start_ <-& (call_stmt_1241_update_completed_)
      // signal write dependencies for memory_access_lock
    }
    ::[assign_stmt_1275_to_assign_stmt_1326] 
    {
      // start: WAR dependencies for round_off
      // ignored out-of-scope w_root 	$call getQueuePointers (tag q_base_address ) (write_index read_index ) 
      // ignored out-of-scope w_root 	$call getQueueLength (tag q_base_address ) (queue_length ) 
      // done: WAR dependencies for round_off
      // start:  	$volatile round_off := (read_index == (queue_length - 1 )) $buffering 1
      //  file .Aa/nic.linked.opt.aa, line 457
      // volatile! 
      // Source expression
      // (read_index == (queue_length - 1 ))
      // read_index
      // (queue_length - 1 )
      // queue_length
      // Target expression
      // (as target) round_off
      // start: WAR dependencies for round_off
      // ignored out-of-scope w_root 	$call getQueuePointers (tag q_base_address ) (write_index read_index ) 
      // ignored out-of-scope w_root 	$call getQueueLength (tag q_base_address ) (queue_length ) 
      // done: WAR dependencies for round_off
      // end:  	$volatile round_off := (read_index == (queue_length - 1 )) $buffering 1
      // start: WAR dependencies for next_ri
      // ignored out-of-scope w_root 	$call getQueuePointers (tag q_base_address ) (write_index read_index ) 
      // ignored out-of-scope w_root 	$call getQueueLength (tag q_base_address ) (queue_length ) 
      // done: WAR dependencies for next_ri
      // start:  	$volatile next_ri := ( $mux round_off 0   (read_index + 1 ) )  $buffering 1
      //  file .Aa/nic.linked.opt.aa, line 458
      // volatile! 
      // Source expression
      // ( $mux round_off 0   (read_index + 1 ) ) 
      // round_off
      // (read_index + 1 )
      // read_index
      // Target expression
      // (as target) next_ri
      // start: WAR dependencies for next_ri
      // ignored out-of-scope w_root 	$call getQueuePointers (tag q_base_address ) (write_index read_index ) 
      // ignored out-of-scope w_root 	$call getQueueLength (tag q_base_address ) (queue_length ) 
      // done: WAR dependencies for next_ri
      // end:  	$volatile next_ri := ( $mux round_off 0   (read_index + 1 ) )  $buffering 1
      // start: 	$guard (~q_empty) $call getQueueBufPointer (queue_type server_id ) (q_buf_address ) 
      //  file .Aa/nic.linked.opt.aa, line 459
      $T[call_stmt_1288_sample_start_] 
      $T[call_stmt_1288_sample_completed_] 
      $T[call_stmt_1288_update_start_] 
      $T[call_stmt_1288_update_completed_] 
      // Guard expression
      // q_empty
      // start: Forward dependencies from q_empty to transition call_stmt_1288_sample_start_
      // done: Forward dependencies from q_empty to transition call_stmt_1288_sample_start_
      // Call input argument 0
      // queue_type
      // Call input argument 1
      // server_id
      // start: Forward dependencies from queue_type to transition call_stmt_1288_sample_start_
      // done: Forward dependencies from queue_type to transition call_stmt_1288_sample_start_
      // start: Forward dependencies from server_id to transition call_stmt_1288_sample_start_
      // done: Forward dependencies from server_id to transition call_stmt_1288_sample_start_
      ;;[call_stmt_1288_Sample] 
      {
        $T [crr] $T [cra] 
      }
      ;;[call_stmt_1288_Update] 
      {
        $T [ccr] $T [cca] 
      }
      call_stmt_1288_sample_start_ &-> (call_stmt_1288_Sample)
      call_stmt_1288_sample_completed_ <-& (call_stmt_1288_Sample)
      call_stmt_1288_sample_completed_ &-> ($null)
      call_stmt_1288_update_start_ &-> (call_stmt_1288_Update)
      call_stmt_1288_update_completed_ <-& (call_stmt_1288_Update)
      // Call output argument 0
      // (as target) q_buf_address
      // start: WAR dependencies for q_buf_address
      // done: WAR dependencies for q_buf_address
      // end: 	$guard (~q_empty) $call getQueueBufPointer (queue_type server_id ) (q_buf_address ) 
      // start: 	$guard (~q_empty) $call getQueueElement (tag q_buf_address read_index ) (q_r_data ) 
      //  file .Aa/nic.linked.opt.aa, line 460
      $T[call_stmt_1294_sample_start_] 
      $T[call_stmt_1294_sample_completed_] 
      $T[call_stmt_1294_update_start_] 
      $T[call_stmt_1294_update_completed_] 
      // Guard expression
      // q_empty
      // start: Forward dependencies from q_empty to transition call_stmt_1294_sample_start_
      // done: Forward dependencies from q_empty to transition call_stmt_1294_sample_start_
      // Call input argument 0
      // tag
      // Call input argument 1
      // q_buf_address
      // Call input argument 2
      // read_index
      // start: Forward dependencies from tag to transition call_stmt_1294_sample_start_
      // done: Forward dependencies from tag to transition call_stmt_1294_sample_start_
      // start: Forward dependencies from q_buf_address to transition call_stmt_1294_sample_start_
      call_stmt_1294_sample_start_ <-& (call_stmt_1288_update_completed_)
      // done: Forward dependencies from q_buf_address to transition call_stmt_1294_sample_start_
      // start: Forward dependencies from read_index to transition call_stmt_1294_sample_start_
      // done: Forward dependencies from read_index to transition call_stmt_1294_sample_start_
      ;;[call_stmt_1294_Sample] 
      {
        $T [crr] $T [cra] 
      }
      ;;[call_stmt_1294_Update] 
      {
        $T [ccr] $T [cca] 
      }
      call_stmt_1294_sample_start_ &-> (call_stmt_1294_Sample)
      call_stmt_1294_sample_completed_ <-& (call_stmt_1294_Sample)
      call_stmt_1294_sample_completed_ &-> ($null)
      call_stmt_1294_update_start_ &-> (call_stmt_1294_Update)
      call_stmt_1294_update_completed_ <-& (call_stmt_1294_Update)
      // Call output argument 0
      // (as target) q_r_data
      // q_r_data
      // write to interface object
      // q_r_data
      // write to interface object
      // start: WAR dependencies for q_r_data
      // done: WAR dependencies for q_r_data
      // end: 	$guard (~q_empty) $call getQueueElement (tag q_buf_address read_index ) (q_r_data ) 
      // start: 	$guard (~q_empty) $call setQueuePointers (tag q_base_address write_index next_ri ) () 
      //  file .Aa/nic.linked.opt.aa, line 461
      $T[call_stmt_1300_sample_start_] 
      $T[call_stmt_1300_sample_completed_] 
      $T[call_stmt_1300_update_start_] 
      $T[call_stmt_1300_update_completed_] 
      // Guard expression
      // q_empty
      // start: Forward dependencies from q_empty to transition call_stmt_1300_sample_start_
      // done: Forward dependencies from q_empty to transition call_stmt_1300_sample_start_
      // Call input argument 0
      // tag
      // Call input argument 1
      // q_base_address
      // Call input argument 2
      // write_index
      // Call input argument 3
      // next_ri
      // start: Forward dependencies from tag to transition call_stmt_1300_sample_start_
      // done: Forward dependencies from tag to transition call_stmt_1300_sample_start_
      // start: Forward dependencies from q_base_address to transition call_stmt_1300_sample_start_
      // done: Forward dependencies from q_base_address to transition call_stmt_1300_sample_start_
      // start: Forward dependencies from write_index to transition call_stmt_1300_sample_start_
      // done: Forward dependencies from write_index to transition call_stmt_1300_sample_start_
      // start: Forward dependencies from next_ri to transition call_stmt_1300_sample_start_
      // done: Forward dependencies from next_ri to transition call_stmt_1300_sample_start_
      ;;[call_stmt_1300_Sample] 
      {
        $T [crr] $T [cra] 
      }
      ;;[call_stmt_1300_Update] 
      {
        $T [ccr] $T [cca] 
      }
      call_stmt_1300_sample_start_ &-> (call_stmt_1300_Sample)
      call_stmt_1300_sample_completed_ <-& (call_stmt_1300_Sample)
      call_stmt_1300_sample_completed_ &-> ($null)
      call_stmt_1300_update_start_ &-> (call_stmt_1300_Update)
      call_stmt_1300_update_completed_ <-& (call_stmt_1300_Update)
      // end: 	$guard (~q_empty) $call setQueuePointers (tag q_base_address write_index next_ri ) () 
      // start: 	$guard (~q_empty) $call setTotalMessages (tag q_base_address (total_msgs - ($bitcast ($uint<32>) _b1  )) ) () 
      //  file .Aa/nic.linked.opt.aa, line 462
      $T[call_stmt_1308_sample_start_] 
      $T[call_stmt_1308_sample_completed_] 
      $T[call_stmt_1308_update_start_] 
      $T[call_stmt_1308_update_completed_] 
      // Guard expression
      // q_empty
      // start: Forward dependencies from q_empty to transition call_stmt_1308_sample_start_
      // done: Forward dependencies from q_empty to transition call_stmt_1308_sample_start_
      // Call input argument 0
      // tag
      // Call input argument 1
      // q_base_address
      // Call input argument 2
      // (total_msgs - ($bitcast ($uint<32>) _b1  ))
      // total_msgs
      // start: Forward dependencies from tag to transition call_stmt_1308_sample_start_
      // done: Forward dependencies from tag to transition call_stmt_1308_sample_start_
      // start: Forward dependencies from q_base_address to transition call_stmt_1308_sample_start_
      // done: Forward dependencies from q_base_address to transition call_stmt_1308_sample_start_
      // start: Forward dependencies from (total_msgs - ($bitcast ($uint<32>) _b1  )) to transition call_stmt_1308_sample_start_
      // done: Forward dependencies from (total_msgs - ($bitcast ($uint<32>) _b1  )) to transition call_stmt_1308_sample_start_
      ;;[call_stmt_1308_Sample] 
      {
        $T [crr] $T [cra] 
      }
      ;;[call_stmt_1308_Update] 
      {
        $T [ccr] $T [cca] 
      }
      call_stmt_1308_sample_start_ &-> (call_stmt_1308_Sample)
      call_stmt_1308_sample_completed_ <-& (call_stmt_1308_Sample)
      call_stmt_1308_sample_completed_ &-> ($null)
      call_stmt_1308_update_start_ &-> (call_stmt_1308_Update)
      call_stmt_1308_update_completed_ <-& (call_stmt_1308_Update)
      // end: 	$guard (~q_empty) $call setTotalMessages (tag q_base_address (total_msgs - ($bitcast ($uint<32>) _b1  )) ) () 
      // start:  	$guard (~q_empty) QUEUE_MONITOR_SIGNAL := (((($bitcast ($uint<4>) queue_type ) && POPQ) && ($bitcast ($uint<8>) (total_msgs - 1 ) )) && (($bitcast ($uint<8>) write_index ) && ($bitcast ($uint<8>) next_ri ))) $buffering 1// bits of buffering = 32. 
      //  file .Aa/nic.linked.opt.aa, line 463
      // Guard expression 
      // q_empty
      // Source expression
      // (((($bitcast ($uint<4>) queue_type ) && POPQ) && ($bitcast ($uint<8>) (total_msgs - 1 ) )) && (($bitcast ($uint<8>) write_index ) && ($bitcast ($uint<8>) next_ri )))
      $T[CONCAT_u16_u32_1325_sample_start_] 
      $T[CONCAT_u16_u32_1325_sample_completed_] 
      $T[CONCAT_u16_u32_1325_update_start_] 
      $T[CONCAT_u16_u32_1325_update_completed_] 
      // Guard dependency for expression CONCAT_u16_u32_1325 with guard R_q_empty_1309
      // root call_stmt_1245 of guard-expression not in visited elements.
      // ((($bitcast ($uint<4>) queue_type ) && POPQ) && ($bitcast ($uint<8>) (total_msgs - 1 ) ))
      // (($bitcast ($uint<4>) queue_type ) && POPQ)
      // ($bitcast ($uint<4>) queue_type )
      // queue_type
      // ($bitcast ($uint<8>) (total_msgs - 1 ) )
      // (total_msgs - 1 )
      // total_msgs
      // (($bitcast ($uint<8>) write_index ) && ($bitcast ($uint<8>) next_ri ))
      // ($bitcast ($uint<8>) write_index )
      // write_index
      // ($bitcast ($uint<8>) next_ri )
      // next_ri
      // start: Forward dependencies from ((($bitcast ($uint<4>) queue_type ) && POPQ) && ($bitcast ($uint<8>) (total_msgs - 1 ) )) to transition CONCAT_u16_u32_1325_sample_start_
      // done: Forward dependencies from ((($bitcast ($uint<4>) queue_type ) && POPQ) && ($bitcast ($uint<8>) (total_msgs - 1 ) )) to transition CONCAT_u16_u32_1325_sample_start_
      // start: Forward dependencies from (($bitcast ($uint<8>) write_index ) && ($bitcast ($uint<8>) next_ri )) to transition CONCAT_u16_u32_1325_sample_start_
      // done: Forward dependencies from (($bitcast ($uint<8>) write_index ) && ($bitcast ($uint<8>) next_ri )) to transition CONCAT_u16_u32_1325_sample_start_
      ;;[CONCAT_u16_u32_1325_Sample] 
      {
        // binary expression 
        $T [rr] $T [ra]  // (split) binary operation 
      }
      ;;[CONCAT_u16_u32_1325_Update] 
      {
        // binary expression 
        $T [cr] $T [ca] // (split) binary operation 
      }
      CONCAT_u16_u32_1325_sample_start_ &-> (CONCAT_u16_u32_1325_Sample)
      CONCAT_u16_u32_1325_sample_completed_ <-& (CONCAT_u16_u32_1325_Sample)
      CONCAT_u16_u32_1325_sample_completed_ &-> ($null)
      CONCAT_u16_u32_1325_update_start_ &-> (CONCAT_u16_u32_1325_Update)
      CONCAT_u16_u32_1325_update_completed_ <-& (CONCAT_u16_u32_1325_Update)
      // Target expression
      // (as target) QUEUE_MONITOR_SIGNAL
      $T[WPIPE_QUEUE_MONITOR_SIGNAL_1310_sample_start_] 
      $T[WPIPE_QUEUE_MONITOR_SIGNAL_1310_sample_completed_] 
      $T[WPIPE_QUEUE_MONITOR_SIGNAL_1310_update_start_] 
      $T[WPIPE_QUEUE_MONITOR_SIGNAL_1310_update_completed_] 
      // Guard dependency for expression WPIPE_QUEUE_MONITOR_SIGNAL_1310 with guard R_q_empty_1309
      // root call_stmt_1245 not in visited_elements
      ;;[WPIPE_QUEUE_MONITOR_SIGNAL_1310_Sample] 
      {
        // pipe write sample-start QUEUE_MONITOR_SIGNAL
        $T [req] $T [ack] 
      }
      ;;[WPIPE_QUEUE_MONITOR_SIGNAL_1310_Update] 
      {
        // pipe write update (complete) QUEUE_MONITOR_SIGNAL
        $T [req] $T [ack] 
      }
      WPIPE_QUEUE_MONITOR_SIGNAL_1310_sample_start_ &-> (WPIPE_QUEUE_MONITOR_SIGNAL_1310_Sample)
      WPIPE_QUEUE_MONITOR_SIGNAL_1310_sample_completed_ <-& (WPIPE_QUEUE_MONITOR_SIGNAL_1310_Sample)
      WPIPE_QUEUE_MONITOR_SIGNAL_1310_update_start_ <-& (WPIPE_QUEUE_MONITOR_SIGNAL_1310_sample_completed_)
      WPIPE_QUEUE_MONITOR_SIGNAL_1310_update_start_ &-> (WPIPE_QUEUE_MONITOR_SIGNAL_1310_Update)
      WPIPE_QUEUE_MONITOR_SIGNAL_1310_update_completed_ <-& (WPIPE_QUEUE_MONITOR_SIGNAL_1310_Update)
      // start: Forward dependencies from (((($bitcast ($uint<4>) queue_type ) && POPQ) && ($bitcast ($uint<8>) (total_msgs - 1 ) )) && (($bitcast ($uint<8>) write_index ) && ($bitcast ($uint<8>) next_ri ))) to transition WPIPE_QUEUE_MONITOR_SIGNAL_1310_sample_start_
      WPIPE_QUEUE_MONITOR_SIGNAL_1310_sample_start_ <-& (CONCAT_u16_u32_1325_update_completed_)
      // done: Forward dependencies from (((($bitcast ($uint<4>) queue_type ) && POPQ) && ($bitcast ($uint<8>) (total_msgs - 1 ) )) && (($bitcast ($uint<8>) write_index ) && ($bitcast ($uint<8>) next_ri ))) to transition WPIPE_QUEUE_MONITOR_SIGNAL_1310_sample_start_
      // end:  	$guard (~q_empty) QUEUE_MONITOR_SIGNAL := (((($bitcast ($uint<4>) queue_type ) && POPQ) && ($bitcast ($uint<8>) (total_msgs - 1 ) )) && (($bitcast ($uint<8>) write_index ) && ($bitcast ($uint<8>) next_ri ))) $buffering 1// bits of buffering = 32. 
      // load-store dependencies..
      // memory-space  memory_space_0
      //  call_stmt_1288 store
      // pipe read/write dependencies for pipe MEMORY_TO_NIC_RESPONSE
      // read-dependencies for pipe MEMORY_TO_NIC_RESPONSE
      call_stmt_1300_sample_start_ <-& (call_stmt_1294_update_completed_)
      call_stmt_1308_sample_start_ <-& (call_stmt_1300_update_completed_)
      // write-dependencies for pipe MEMORY_TO_NIC_RESPONSE
      // signal write dependencies for MEMORY_TO_NIC_RESPONSE
      // pipe read/write dependencies for pipe NIC_DEBUG_SIGNAL
      // read-dependencies for pipe NIC_DEBUG_SIGNAL
      // write-dependencies for pipe NIC_DEBUG_SIGNAL
      // signal write dependencies for NIC_DEBUG_SIGNAL
      call_stmt_1300_sample_start_ <-& (call_stmt_1294_update_completed_)
      call_stmt_1308_sample_start_ <-& (call_stmt_1300_update_completed_)
      // pipe read/write dependencies for pipe NIC_TO_MEMORY_REQUEST
      // read-dependencies for pipe NIC_TO_MEMORY_REQUEST
      // write-dependencies for pipe NIC_TO_MEMORY_REQUEST
      call_stmt_1300_sample_start_ <-& (call_stmt_1294_update_completed_)
      call_stmt_1308_sample_start_ <-& (call_stmt_1300_update_completed_)
      // signal write dependencies for NIC_TO_MEMORY_REQUEST
      // pipe read/write dependencies for pipe QUEUE_MONITOR_SIGNAL
      // read-dependencies for pipe QUEUE_MONITOR_SIGNAL
      // write-dependencies for pipe QUEUE_MONITOR_SIGNAL
      // signal write dependencies for QUEUE_MONITOR_SIGNAL
      // pipe read/write dependencies for pipe memory_access_lock
      // read-dependencies for pipe memory_access_lock
      // write-dependencies for pipe memory_access_lock
      call_stmt_1300_sample_start_ <-& (call_stmt_1294_update_completed_)
      call_stmt_1308_sample_start_ <-& (call_stmt_1300_update_completed_)
      // signal write dependencies for memory_access_lock
    }
    ::[call_stmt_1331_to_assign_stmt_1334] 
    {
      // start: 	$guard (~lock_n) $call releaseLock (tag q_lock_address ) () 
      //  file .Aa/nic.linked.opt.aa, line 465
      $T[call_stmt_1331_sample_start_] 
      $T[call_stmt_1331_sample_completed_] 
      $T[call_stmt_1331_update_start_] 
      $T[call_stmt_1331_update_completed_] 
      // Guard expression
      // lock_n
      // start: Forward dependencies from lock_n to transition call_stmt_1331_sample_start_
      // done: Forward dependencies from lock_n to transition call_stmt_1331_sample_start_
      // Call input argument 0
      // tag
      // Call input argument 1
      // q_lock_address
      // start: Forward dependencies from tag to transition call_stmt_1331_sample_start_
      // done: Forward dependencies from tag to transition call_stmt_1331_sample_start_
      // start: Forward dependencies from q_lock_address to transition call_stmt_1331_sample_start_
      // done: Forward dependencies from q_lock_address to transition call_stmt_1331_sample_start_
      ;;[call_stmt_1331_Sample] 
      {
        $T [crr] $T [cra] 
      }
      ;;[call_stmt_1331_Update] 
      {
        $T [ccr] $T [cca] 
      }
      call_stmt_1331_sample_start_ &-> (call_stmt_1331_Sample)
      call_stmt_1331_sample_completed_ <-& (call_stmt_1331_Sample)
      call_stmt_1331_sample_completed_ &-> ($null)
      call_stmt_1331_update_start_ &-> (call_stmt_1331_Update)
      call_stmt_1331_update_completed_ <-& (call_stmt_1331_Update)
      // end: 	$guard (~lock_n) $call releaseLock (tag q_lock_address ) () 
      // start:  	status := q_empty $buffering 1// bits of buffering = 1. 
      //  file .Aa/nic.linked.opt.aa, line 466
      $T[assign_stmt_1334_sample_start_] 
      $T[assign_stmt_1334_sample_completed_] 
      $T[assign_stmt_1334_update_start_] 
      $T[assign_stmt_1334_update_completed_] 
      // Source expression
      // q_empty
      // Target expression
      // (as target) status
      // status
      // write to interface object
      // both source and target are implicit: use interlock 
      // Interlock 
      ;;[assign_stmt_1334_Sample] 
      {
        $T [req] $T [ack] // interlock-sample.
      }
      ;;[assign_stmt_1334_Update] 
      {
        $T [req] $T [ack] // interlock-update.
      }
      assign_stmt_1334_sample_start_ &-> (assign_stmt_1334_Sample)
      assign_stmt_1334_sample_completed_ <-& (assign_stmt_1334_Sample)
      assign_stmt_1334_sample_completed_ &-> ($null)
      assign_stmt_1334_update_start_ &-> (assign_stmt_1334_Update)
      assign_stmt_1334_update_completed_ <-& (assign_stmt_1334_Update)
      // start: Forward dependencies from q_empty to transition assign_stmt_1334_sample_start_
      // done: Forward dependencies from q_empty to transition assign_stmt_1334_sample_start_
      // start: WAR dependencies for status
      // done: WAR dependencies for status
      // status
      // write to interface object
      // end:  	status := q_empty $buffering 1// bits of buffering = 1. 
      // load-store dependencies..
      // pipe read/write dependencies for pipe MEMORY_TO_NIC_RESPONSE
      // read-dependencies for pipe MEMORY_TO_NIC_RESPONSE
      // write-dependencies for pipe MEMORY_TO_NIC_RESPONSE
      // signal write dependencies for MEMORY_TO_NIC_RESPONSE
      // pipe read/write dependencies for pipe NIC_DEBUG_SIGNAL
      // read-dependencies for pipe NIC_DEBUG_SIGNAL
      // write-dependencies for pipe NIC_DEBUG_SIGNAL
      // signal write dependencies for NIC_DEBUG_SIGNAL
      // pipe read/write dependencies for pipe NIC_TO_MEMORY_REQUEST
      // read-dependencies for pipe NIC_TO_MEMORY_REQUEST
      // write-dependencies for pipe NIC_TO_MEMORY_REQUEST
      // signal write dependencies for NIC_TO_MEMORY_REQUEST
      // pipe read/write dependencies for pipe memory_access_lock
      // read-dependencies for pipe memory_access_lock
      // write-dependencies for pipe memory_access_lock
      // signal write dependencies for memory_access_lock
    }
  }
  // end control-path
  $DP 
  {
    // begin data-path 
    // constant-object-declarations for block %popFromQueue
    //  file .Aa/nic.linked.opt.aa, line 439
    // 	$call getQueuePointer (queue_type server_id ) (q_base_address ) 
    //  file .Aa/nic.linked.opt.aa, line 444
    // 	$call accessQueueMisc (tag READMEM q_base_address ($bitcast ($uint<32>) _b0  ) ) (misc ) 
    //  file .Aa/nic.linked.opt.aa, line 446
    // READMEM
    $constant $W[R_READMEM_1211_wire_constant] : $int<1> := _b1// 1
    // ($bitcast ($uint<32>) _b0  )
    $constant $W[type_cast_1214_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // 0 
    $constant $W[konst_1219_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // 	$guard (~lock_n) $call getQueueLockPointer (queue_type server_id ) (q_lock_address ) 
    //  file .Aa/nic.linked.opt.aa, line 448
    // 	$guard (~lock_n) $call acquireLock (tag q_lock_address ) (m_ok ) 
    //  file .Aa/nic.linked.opt.aa, line 449
    // 	$call getQueuePointers (tag q_base_address ) (write_index read_index ) 
    //  file .Aa/nic.linked.opt.aa, line 451
    // 	$call getQueueLength (tag q_base_address ) (queue_length ) 
    //  file .Aa/nic.linked.opt.aa, line 452
    // 	$call getTotalMessages (tag q_base_address ) (total_msgs ) 
    //  file .Aa/nic.linked.opt.aa, line 453
    // 0 
    $constant $W[konst_1248_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // PREPOPQ
    $constant $W[R_PREPOPQ_1255_wire_constant] : $int<4> := _b0011// 3
    // 1 
    $constant $W[konst_1272_wire_constant] : $int<32> := _b00000000000000000000000000000001// 1
    // ( $mux round_off 0   (read_index + 1 ) ) 
    // 0 
    $constant $W[konst_1278_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // 1 
    $constant $W[konst_1280_wire_constant] : $int<32> := _b00000000000000000000000000000001// 1
    // 	$guard (~q_empty) $call getQueueBufPointer (queue_type server_id ) (q_buf_address ) 
    //  file .Aa/nic.linked.opt.aa, line 459
    // 	$guard (~q_empty) $call getQueueElement (tag q_buf_address read_index ) (q_r_data ) 
    //  file .Aa/nic.linked.opt.aa, line 460
    // 	$guard (~q_empty) $call setQueuePointers (tag q_base_address write_index next_ri ) () 
    //  file .Aa/nic.linked.opt.aa, line 461
    // 	$guard (~q_empty) $call setTotalMessages (tag q_base_address (total_msgs - ($bitcast ($uint<32>) _b1  )) ) () 
    //  file .Aa/nic.linked.opt.aa, line 462
    // ($bitcast ($uint<32>) _b1  )
    $constant $W[type_cast_1306_wire_constant] : $int<32> := _b00000000000000000000000000000001// 1
    // POPQ
    $constant $W[R_POPQ_1313_wire_constant] : $int<4> := _b0001// 1
    // 1 
    $constant $W[konst_1316_wire_constant] : $int<32> := _b00000000000000000000000000000001// 1
    // 	$guard (~lock_n) $call releaseLock (tag q_lock_address ) () 
    //  file .Aa/nic.linked.opt.aa, line 465
    // 	$call getQueuePointer (queue_type server_id ) (q_base_address ) 
    //  file .Aa/nic.linked.opt.aa, line 444
    // q_base_address
    $W[q_base_address_1208] : $int<64>
    // 	$call accessQueueMisc (tag READMEM q_base_address ($bitcast ($uint<32>) _b0  ) ) (misc ) 
    //  file .Aa/nic.linked.opt.aa, line 446
    // misc
    $W[misc_1216] : $int<32>
    // 	$volatile lock_n := (misc [] 0 ) $buffering 1
    //  file .Aa/nic.linked.opt.aa, line 447
    // lock_n
    $W[lock_n_1221] : $int<1>
    // 	$guard (~lock_n) $call getQueueLockPointer (queue_type server_id ) (q_lock_address ) 
    //  file .Aa/nic.linked.opt.aa, line 448
    // q_lock_address
    $W[q_lock_address_1226] : $int<64>
    // 	$guard (~lock_n) $call acquireLock (tag q_lock_address ) (m_ok ) 
    //  file .Aa/nic.linked.opt.aa, line 449
    // m_ok
    $W[m_ok_1231] : $int<1>
    // 	$call getQueuePointers (tag q_base_address ) (write_index read_index ) 
    //  file .Aa/nic.linked.opt.aa, line 451
    // write_index
    $W[write_index_1237] : $int<32>
    // read_index
    $W[read_index_1237] : $int<32>
    // 	$call getQueueLength (tag q_base_address ) (queue_length ) 
    //  file .Aa/nic.linked.opt.aa, line 452
    // queue_length
    $W[queue_length_1241] : $int<32>
    // 	$call getTotalMessages (tag q_base_address ) (total_msgs ) 
    //  file .Aa/nic.linked.opt.aa, line 453
    // total_msgs
    $W[total_msgs_1245] : $int<32>
    // 	$volatile q_empty := (total_msgs == 0 ) $buffering 1
    //  file .Aa/nic.linked.opt.aa, line 454
    // q_empty
    $W[q_empty_1250] : $int<1>
    // 	$guard (~q_empty) QUEUE_MONITOR_SIGNAL := (((($bitcast ($uint<4>) queue_type ) && PREPOPQ) && ($bitcast ($uint<8>) total_msgs )) && (($bitcast ($uint<8>) write_index ) && ($bitcast ($uint<8>) read_index ))) $buffering 1// bits of buffering = 32. 
    //  file .Aa/nic.linked.opt.aa, line 455
    // ($bitcast ($uint<4>) queue_type )
    $intermediate $W[type_cast_1254_wire] : $int<4>
    // (($bitcast ($uint<4>) queue_type ) && PREPOPQ)
    $intermediate $W[CONCAT_u4_u8_1256_wire] : $int<8>
    // ($bitcast ($uint<8>) total_msgs )
    $intermediate $W[type_cast_1258_wire] : $int<8>
    // ((($bitcast ($uint<4>) queue_type ) && PREPOPQ) && ($bitcast ($uint<8>) total_msgs ))
    $intermediate $W[CONCAT_u8_u16_1259_wire] : $int<16>
    // ($bitcast ($uint<8>) write_index )
    $intermediate $W[type_cast_1261_wire] : $int<8>
    // ($bitcast ($uint<8>) read_index )
    $intermediate $W[type_cast_1263_wire] : $int<8>
    // (($bitcast ($uint<8>) write_index ) && ($bitcast ($uint<8>) read_index ))
    $intermediate $W[CONCAT_u8_u16_1264_wire] : $int<16>
    // (((($bitcast ($uint<4>) queue_type ) && PREPOPQ) && ($bitcast ($uint<8>) total_msgs )) && (($bitcast ($uint<8>) write_index ) && ($bitcast ($uint<8>) read_index )))
    $intermediate $W[CONCAT_u16_u32_1266_wire] : $int<32>
    // QUEUE_MONITOR_SIGNAL
    // 	$volatile round_off := (read_index == (queue_length - 1 )) $buffering 1
    //  file .Aa/nic.linked.opt.aa, line 457
    // (queue_length - 1 )
    $intermediate $W[SUB_u32_u32_1273_wire] : $int<32>
    // round_off
    $W[round_off_1275] : $int<1>
    // 	$volatile next_ri := ( $mux round_off 0   (read_index + 1 ) )  $buffering 1
    //  file .Aa/nic.linked.opt.aa, line 458
    // (read_index + 1 )
    $intermediate $W[ADD_u32_u32_1281_wire] : $int<32>
    // next_ri
    $W[next_ri_1283] : $int<32>
    // 	$guard (~q_empty) $call getQueueBufPointer (queue_type server_id ) (q_buf_address ) 
    //  file .Aa/nic.linked.opt.aa, line 459
    // q_buf_address
    $W[q_buf_address_1288] : $int<64>
    // 	$guard (~q_empty) $call getQueueElement (tag q_buf_address read_index ) (q_r_data ) 
    //  file .Aa/nic.linked.opt.aa, line 460
    // q_r_data
    // 	$guard (~q_empty) $call setQueuePointers (tag q_base_address write_index next_ri ) () 
    //  file .Aa/nic.linked.opt.aa, line 461
    // 	$guard (~q_empty) $call setTotalMessages (tag q_base_address (total_msgs - ($bitcast ($uint<32>) _b1  )) ) () 
    //  file .Aa/nic.linked.opt.aa, line 462
    // (total_msgs - ($bitcast ($uint<32>) _b1  ))
    $intermediate $W[SUB_u32_u32_1307_wire] : $int<32>
    // 	$guard (~q_empty) QUEUE_MONITOR_SIGNAL := (((($bitcast ($uint<4>) queue_type ) && POPQ) && ($bitcast ($uint<8>) (total_msgs - 1 ) )) && (($bitcast ($uint<8>) write_index ) && ($bitcast ($uint<8>) next_ri ))) $buffering 1// bits of buffering = 32. 
    //  file .Aa/nic.linked.opt.aa, line 463
    // ($bitcast ($uint<4>) queue_type )
    $intermediate $W[type_cast_1312_wire] : $int<4>
    // (($bitcast ($uint<4>) queue_type ) && POPQ)
    $intermediate $W[CONCAT_u4_u8_1314_wire] : $int<8>
    // (total_msgs - 1 )
    $intermediate $W[SUB_u32_u32_1317_wire] : $int<32>
    // ($bitcast ($uint<8>) (total_msgs - 1 ) )
    $intermediate $W[type_cast_1318_wire] : $int<8>
    // ((($bitcast ($uint<4>) queue_type ) && POPQ) && ($bitcast ($uint<8>) (total_msgs - 1 ) ))
    $intermediate $W[CONCAT_u8_u16_1319_wire] : $int<16>
    // ($bitcast ($uint<8>) write_index )
    $intermediate $W[type_cast_1321_wire] : $int<8>
    // ($bitcast ($uint<8>) next_ri )
    $intermediate $W[type_cast_1323_wire] : $int<8>
    // (($bitcast ($uint<8>) write_index ) && ($bitcast ($uint<8>) next_ri ))
    $intermediate $W[CONCAT_u8_u16_1324_wire] : $int<16>
    // (((($bitcast ($uint<4>) queue_type ) && POPQ) && ($bitcast ($uint<8>) (total_msgs - 1 ) )) && (($bitcast ($uint<8>) write_index ) && ($bitcast ($uint<8>) next_ri )))
    $intermediate $W[CONCAT_u16_u32_1325_wire] : $int<32>
    // QUEUE_MONITOR_SIGNAL
    // 	$guard (~lock_n) $call releaseLock (tag q_lock_address ) () 
    //  file .Aa/nic.linked.opt.aa, line 465
    // 	status := q_empty $buffering 1// bits of buffering = 1. 
    //  file .Aa/nic.linked.opt.aa, line 466
    // status
    // 	$call getQueuePointer (queue_type server_id ) (q_base_address ) 
    //  file .Aa/nic.linked.opt.aa, line 444
    $call [call_stmt_1208_call] $module getQueuePointer(queue_type server_id) (q_base_address_1208)  
    $delay call_stmt_1208_call 4
    $buffering  $in call_stmt_1208_call queue_type 1
    $buffering  $in call_stmt_1208_call server_id 1
    $buffering  $out call_stmt_1208_call q_base_address_1208 1
    // 	$call accessQueueMisc (tag READMEM q_base_address ($bitcast ($uint<32>) _b0  ) ) (misc ) 
    //  file .Aa/nic.linked.opt.aa, line 446
    $call [call_stmt_1216_call] $module accessQueueMisc(tag R_READMEM_1211_wire_constant q_base_address_1208 type_cast_1214_wire_constant) (misc_1216)  
    $delay call_stmt_1216_call 4
    $buffering  $in call_stmt_1216_call tag 1
    $buffering  $in call_stmt_1216_call R_READMEM_1211_wire_constant 1
    $buffering  $in call_stmt_1216_call q_base_address_1208 1
    $buffering  $in call_stmt_1216_call type_cast_1214_wire_constant 1
    $buffering  $out call_stmt_1216_call misc_1216 1
    // 	$volatile lock_n := (misc [] 0 ) $buffering 1
    //  file .Aa/nic.linked.opt.aa, line 447
    // (misc [] 0 )
    [][BITSEL_u32_u1_1220_inst] (misc_1216 konst_1219_wire_constant) (lock_n_1221)   $flowthrough 
    $delay BITSEL_u32_u1_1220_inst 0
    // 	$guard (~lock_n) $call getQueueLockPointer (queue_type server_id ) (q_lock_address ) 
    //  file .Aa/nic.linked.opt.aa, line 448
    $call [call_stmt_1226_call] $module getQueueLockPointer(queue_type server_id) (q_lock_address_1226) $guard ( ~ lock_n_1221 )  
    $delay call_stmt_1226_call 4
    $buffering  $in call_stmt_1226_call queue_type 1
    $buffering  $in call_stmt_1226_call server_id 1
    $buffering  $out call_stmt_1226_call q_lock_address_1226 1
    // 	$guard (~lock_n) $call acquireLock (tag q_lock_address ) (m_ok ) 
    //  file .Aa/nic.linked.opt.aa, line 449
    $call [call_stmt_1231_call] $module acquireLock(tag q_lock_address_1226) (m_ok_1231) $guard ( ~ lock_n_1221 )  
    $delay call_stmt_1231_call 4
    $buffering  $in call_stmt_1231_call tag 1
    $buffering  $in call_stmt_1231_call q_lock_address_1226 1
    $buffering  $out call_stmt_1231_call m_ok_1231 1
    // 	$call getQueuePointers (tag q_base_address ) (write_index read_index ) 
    //  file .Aa/nic.linked.opt.aa, line 451
    $call [call_stmt_1237_call] $module getQueuePointers(tag q_base_address_1208) (write_index_1237 read_index_1237)  
    $delay call_stmt_1237_call 4
    $buffering  $in call_stmt_1237_call tag 1
    $buffering  $in call_stmt_1237_call q_base_address_1208 1
    $buffering  $out call_stmt_1237_call write_index_1237 1
    $buffering  $out call_stmt_1237_call read_index_1237 1
    // 	$call getQueueLength (tag q_base_address ) (queue_length ) 
    //  file .Aa/nic.linked.opt.aa, line 452
    $call [call_stmt_1241_call] $module getQueueLength(tag q_base_address_1208) (queue_length_1241)  
    $delay call_stmt_1241_call 4
    $buffering  $in call_stmt_1241_call tag 1
    $buffering  $in call_stmt_1241_call q_base_address_1208 1
    $buffering  $out call_stmt_1241_call queue_length_1241 1
    // 	$call getTotalMessages (tag q_base_address ) (total_msgs ) 
    //  file .Aa/nic.linked.opt.aa, line 453
    $call [call_stmt_1245_call] $module getTotalMessages(tag q_base_address_1208) (total_msgs_1245)  
    $delay call_stmt_1245_call 4
    $buffering  $in call_stmt_1245_call tag 1
    $buffering  $in call_stmt_1245_call q_base_address_1208 1
    $buffering  $out call_stmt_1245_call total_msgs_1245 1
    // 	$volatile q_empty := (total_msgs == 0 ) $buffering 1
    //  file .Aa/nic.linked.opt.aa, line 454
    // (total_msgs == 0 )
    ==[EQ_u32_u1_1249_inst] (total_msgs_1245 konst_1248_wire_constant) (q_empty_1250)   $flowthrough 
    $delay EQ_u32_u1_1249_inst 0
    // 	$guard (~q_empty) QUEUE_MONITOR_SIGNAL := (((($bitcast ($uint<4>) queue_type ) && PREPOPQ) && ($bitcast ($uint<8>) total_msgs )) && (($bitcast ($uint<8>) write_index ) && ($bitcast ($uint<8>) read_index ))) $buffering 1// bits of buffering = 32. 
    //  file .Aa/nic.linked.opt.aa, line 455
    // ($bitcast ($uint<4>) queue_type )
    # := [type_cast_1254_inst] (queue_type) (type_cast_1254_wire)  $guard ( ~ q_empty_1250 )  $flowthrough
    $delay type_cast_1254_inst 0
    // (($bitcast ($uint<4>) queue_type ) && PREPOPQ)
    &&[CONCAT_u4_u8_1256_inst] (type_cast_1254_wire R_PREPOPQ_1255_wire_constant) (CONCAT_u4_u8_1256_wire) $guard ( ~ q_empty_1250 )   $flowthrough 
    $delay CONCAT_u4_u8_1256_inst 0
    // ($bitcast ($uint<8>) total_msgs )
    # := [type_cast_1258_inst] (total_msgs_1245) (type_cast_1258_wire)  $guard ( ~ q_empty_1250 )  $flowthrough
    $delay type_cast_1258_inst 0
    // ((($bitcast ($uint<4>) queue_type ) && PREPOPQ) && ($bitcast ($uint<8>) total_msgs ))
    &&[CONCAT_u8_u16_1259_inst] (CONCAT_u4_u8_1256_wire type_cast_1258_wire) (CONCAT_u8_u16_1259_wire) $guard ( ~ q_empty_1250 )   $flowthrough 
    $delay CONCAT_u8_u16_1259_inst 0
    // ($bitcast ($uint<8>) write_index )
    # := [type_cast_1261_inst] (write_index_1237) (type_cast_1261_wire)  $guard ( ~ q_empty_1250 )  $flowthrough
    $delay type_cast_1261_inst 0
    // ($bitcast ($uint<8>) read_index )
    # := [type_cast_1263_inst] (read_index_1237) (type_cast_1263_wire)  $guard ( ~ q_empty_1250 )  $flowthrough
    $delay type_cast_1263_inst 0
    // (($bitcast ($uint<8>) write_index ) && ($bitcast ($uint<8>) read_index ))
    &&[CONCAT_u8_u16_1264_inst] (type_cast_1261_wire type_cast_1263_wire) (CONCAT_u8_u16_1264_wire) $guard ( ~ q_empty_1250 )   $flowthrough 
    $delay CONCAT_u8_u16_1264_inst 0
    // (((($bitcast ($uint<4>) queue_type ) && PREPOPQ) && ($bitcast ($uint<8>) total_msgs )) && (($bitcast ($uint<8>) write_index ) && ($bitcast ($uint<8>) read_index )))
    &&[CONCAT_u16_u32_1266_inst] (CONCAT_u8_u16_1259_wire CONCAT_u8_u16_1264_wire) (CONCAT_u16_u32_1266_wire) $guard ( ~ q_empty_1250 )   
    $buffering  $out CONCAT_u16_u32_1266_inst CONCAT_u16_u32_1266_wire 1
    $delay CONCAT_u16_u32_1266_inst 1
    // QUEUE_MONITOR_SIGNAL
    $ioport $out [WPIPE_QUEUE_MONITOR_SIGNAL_1252_inst]  (CONCAT_u16_u32_1266_wire) (QUEUE_MONITOR_SIGNAL) $guard ( ~ q_empty_1250 ) 
    // 	$volatile round_off := (read_index == (queue_length - 1 )) $buffering 1
    //  file .Aa/nic.linked.opt.aa, line 457
    // (queue_length - 1 )
    -[SUB_u32_u32_1273_inst] (queue_length_1241 konst_1272_wire_constant) (SUB_u32_u32_1273_wire)   $flowthrough 
    $delay SUB_u32_u32_1273_inst 0
    // (read_index == (queue_length - 1 ))
    ==[EQ_u32_u1_1274_inst] (read_index_1237 SUB_u32_u32_1273_wire) (round_off_1275)   $flowthrough 
    $delay EQ_u32_u1_1274_inst 0
    // 	$volatile next_ri := ( $mux round_off 0   (read_index + 1 ) )  $buffering 1
    //  file .Aa/nic.linked.opt.aa, line 458
    // (read_index + 1 )
    +[ADD_u32_u32_1281_inst] (read_index_1237 konst_1280_wire_constant) (ADD_u32_u32_1281_wire)   $flowthrough 
    $delay ADD_u32_u32_1281_inst 0
    // ( $mux round_off 0   (read_index + 1 ) ) 
    ? [MUX_1282_inst] (round_off_1275 konst_1278_wire_constant ADD_u32_u32_1281_wire) (next_ri_1283)  $flowthrough
    // 	$guard (~q_empty) $call getQueueBufPointer (queue_type server_id ) (q_buf_address ) 
    //  file .Aa/nic.linked.opt.aa, line 459
    $call [call_stmt_1288_call] $module getQueueBufPointer(queue_type server_id) (q_buf_address_1288) $guard ( ~ q_empty_1250 )  
    $delay call_stmt_1288_call 4
    $buffering  $in call_stmt_1288_call queue_type 1
    $buffering  $in call_stmt_1288_call server_id 1
    $buffering  $out call_stmt_1288_call q_buf_address_1288 1
    // 	$guard (~q_empty) $call getQueueElement (tag q_buf_address read_index ) (q_r_data ) 
    //  file .Aa/nic.linked.opt.aa, line 460
    $call [call_stmt_1294_call] $module getQueueElement(tag q_buf_address_1288 read_index_1237) (q_r_data) $guard ( ~ q_empty_1250 )  
    $delay call_stmt_1294_call 4
    $buffering  $in call_stmt_1294_call tag 1
    $buffering  $in call_stmt_1294_call q_buf_address_1288 1
    $buffering  $in call_stmt_1294_call read_index_1237 1
    $buffering  $out call_stmt_1294_call q_r_data 1
    // 	$guard (~q_empty) $call setQueuePointers (tag q_base_address write_index next_ri ) () 
    //  file .Aa/nic.linked.opt.aa, line 461
    $call [call_stmt_1300_call] $module setQueuePointers(tag q_base_address_1208 write_index_1237 next_ri_1283) () $guard ( ~ q_empty_1250 )  
    $delay call_stmt_1300_call 4
    $buffering  $in call_stmt_1300_call tag 1
    $buffering  $in call_stmt_1300_call q_base_address_1208 1
    $buffering  $in call_stmt_1300_call write_index_1237 1
    $buffering  $in call_stmt_1300_call next_ri_1283 1
    // 	$guard (~q_empty) $call setTotalMessages (tag q_base_address (total_msgs - ($bitcast ($uint<32>) _b1  )) ) () 
    //  file .Aa/nic.linked.opt.aa, line 462
    // (total_msgs - ($bitcast ($uint<32>) _b1  ))
    -[SUB_u32_u32_1307_inst] (total_msgs_1245 type_cast_1306_wire_constant) (SUB_u32_u32_1307_wire) $guard ( ~ q_empty_1250 )   $flowthrough 
    $delay SUB_u32_u32_1307_inst 0
    $call [call_stmt_1308_call] $module setTotalMessages(tag q_base_address_1208 SUB_u32_u32_1307_wire) () $guard ( ~ q_empty_1250 )  
    $delay call_stmt_1308_call 4
    $buffering  $in call_stmt_1308_call tag 1
    $buffering  $in call_stmt_1308_call q_base_address_1208 1
    $buffering  $in call_stmt_1308_call SUB_u32_u32_1307_wire 1
    // 	$guard (~q_empty) QUEUE_MONITOR_SIGNAL := (((($bitcast ($uint<4>) queue_type ) && POPQ) && ($bitcast ($uint<8>) (total_msgs - 1 ) )) && (($bitcast ($uint<8>) write_index ) && ($bitcast ($uint<8>) next_ri ))) $buffering 1// bits of buffering = 32. 
    //  file .Aa/nic.linked.opt.aa, line 463
    // ($bitcast ($uint<4>) queue_type )
    # := [type_cast_1312_inst] (queue_type) (type_cast_1312_wire)  $guard ( ~ q_empty_1250 )  $flowthrough
    $delay type_cast_1312_inst 0
    // (($bitcast ($uint<4>) queue_type ) && POPQ)
    &&[CONCAT_u4_u8_1314_inst] (type_cast_1312_wire R_POPQ_1313_wire_constant) (CONCAT_u4_u8_1314_wire) $guard ( ~ q_empty_1250 )   $flowthrough 
    $delay CONCAT_u4_u8_1314_inst 0
    // (total_msgs - 1 )
    -[SUB_u32_u32_1317_inst] (total_msgs_1245 konst_1316_wire_constant) (SUB_u32_u32_1317_wire) $guard ( ~ q_empty_1250 )   $flowthrough 
    $delay SUB_u32_u32_1317_inst 0
    // ($bitcast ($uint<8>) (total_msgs - 1 ) )
    # := [type_cast_1318_inst] (SUB_u32_u32_1317_wire) (type_cast_1318_wire)  $guard ( ~ q_empty_1250 )  $flowthrough
    $delay type_cast_1318_inst 0
    // ((($bitcast ($uint<4>) queue_type ) && POPQ) && ($bitcast ($uint<8>) (total_msgs - 1 ) ))
    &&[CONCAT_u8_u16_1319_inst] (CONCAT_u4_u8_1314_wire type_cast_1318_wire) (CONCAT_u8_u16_1319_wire) $guard ( ~ q_empty_1250 )   $flowthrough 
    $delay CONCAT_u8_u16_1319_inst 0
    // ($bitcast ($uint<8>) write_index )
    # := [type_cast_1321_inst] (write_index_1237) (type_cast_1321_wire)  $guard ( ~ q_empty_1250 )  $flowthrough
    $delay type_cast_1321_inst 0
    // ($bitcast ($uint<8>) next_ri )
    # := [type_cast_1323_inst] (next_ri_1283) (type_cast_1323_wire)  $guard ( ~ q_empty_1250 )  $flowthrough
    $delay type_cast_1323_inst 0
    // (($bitcast ($uint<8>) write_index ) && ($bitcast ($uint<8>) next_ri ))
    &&[CONCAT_u8_u16_1324_inst] (type_cast_1321_wire type_cast_1323_wire) (CONCAT_u8_u16_1324_wire) $guard ( ~ q_empty_1250 )   $flowthrough 
    $delay CONCAT_u8_u16_1324_inst 0
    // (((($bitcast ($uint<4>) queue_type ) && POPQ) && ($bitcast ($uint<8>) (total_msgs - 1 ) )) && (($bitcast ($uint<8>) write_index ) && ($bitcast ($uint<8>) next_ri )))
    &&[CONCAT_u16_u32_1325_inst] (CONCAT_u8_u16_1319_wire CONCAT_u8_u16_1324_wire) (CONCAT_u16_u32_1325_wire) $guard ( ~ q_empty_1250 )   
    $buffering  $out CONCAT_u16_u32_1325_inst CONCAT_u16_u32_1325_wire 1
    $delay CONCAT_u16_u32_1325_inst 1
    // QUEUE_MONITOR_SIGNAL
    $ioport $out [WPIPE_QUEUE_MONITOR_SIGNAL_1310_inst]  (CONCAT_u16_u32_1325_wire) (QUEUE_MONITOR_SIGNAL) $guard ( ~ q_empty_1250 ) 
    // 	$guard (~lock_n) $call releaseLock (tag q_lock_address ) () 
    //  file .Aa/nic.linked.opt.aa, line 465
    $call [call_stmt_1331_call] $module releaseLock(tag q_lock_address_1226) () $guard ( ~ lock_n_1221 )  
    $delay call_stmt_1331_call 4
    $buffering  $in call_stmt_1331_call tag 1
    $buffering  $in call_stmt_1331_call q_lock_address_1226 1
    // 	status := q_empty $buffering 1// bits of buffering = 1. 
    //  file .Aa/nic.linked.opt.aa, line 466
    # := [W_status_1332_inst] (q_empty_1250) (status)     
  }
  // end data-path
  // 	$call getQueuePointer (queue_type server_id ) (q_base_address ) 
  //  file .Aa/nic.linked.opt.aa, line 444
  // queue_type
  // server_id
  call_stmt_1208_call <=> (call_stmt_1208/call_stmt_1208_Sample/crr call_stmt_1208/call_stmt_1208_Update/ccr) (call_stmt_1208/call_stmt_1208_Sample/cra call_stmt_1208/call_stmt_1208_Update/cca)
  // 	$call accessQueueMisc (tag READMEM q_base_address ($bitcast ($uint<32>) _b0  ) ) (misc ) 
  //  file .Aa/nic.linked.opt.aa, line 446
  // tag
  // q_base_address
  call_stmt_1216_call <=> (call_stmt_1216_to_call_stmt_1231/call_stmt_1216_Sample/crr call_stmt_1216_to_call_stmt_1231/call_stmt_1216_Update/ccr) (call_stmt_1216_to_call_stmt_1231/call_stmt_1216_Sample/cra call_stmt_1216_to_call_stmt_1231/call_stmt_1216_Update/cca)
  // 	$volatile lock_n := (misc [] 0 ) $buffering 1
  //  file .Aa/nic.linked.opt.aa, line 447
  // (misc [] 0 )
  // misc
  // 	$guard (~lock_n) $call getQueueLockPointer (queue_type server_id ) (q_lock_address ) 
  //  file .Aa/nic.linked.opt.aa, line 448
  // queue_type
  // server_id
  call_stmt_1226_call <=> (call_stmt_1216_to_call_stmt_1231/call_stmt_1226_Sample/crr call_stmt_1216_to_call_stmt_1231/call_stmt_1226_Update/ccr) (call_stmt_1216_to_call_stmt_1231/call_stmt_1226_Sample/cra call_stmt_1216_to_call_stmt_1231/call_stmt_1226_Update/cca)
  // 	$guard (~lock_n) $call acquireLock (tag q_lock_address ) (m_ok ) 
  //  file .Aa/nic.linked.opt.aa, line 449
  // tag
  // q_lock_address
  call_stmt_1231_call <=> (call_stmt_1216_to_call_stmt_1231/call_stmt_1231_Sample/crr call_stmt_1216_to_call_stmt_1231/call_stmt_1231_Update/ccr) (call_stmt_1216_to_call_stmt_1231/call_stmt_1231_Sample/cra call_stmt_1216_to_call_stmt_1231/call_stmt_1231_Update/cca)
  // 	$call getQueuePointers (tag q_base_address ) (write_index read_index ) 
  //  file .Aa/nic.linked.opt.aa, line 451
  // tag
  // q_base_address
  call_stmt_1237_call <=> (call_stmt_1237_to_assign_stmt_1267/call_stmt_1237_Sample/crr call_stmt_1237_to_assign_stmt_1267/call_stmt_1237_Update/ccr) (call_stmt_1237_to_assign_stmt_1267/call_stmt_1237_Sample/cra call_stmt_1237_to_assign_stmt_1267/call_stmt_1237_Update/cca)
  // 	$call getQueueLength (tag q_base_address ) (queue_length ) 
  //  file .Aa/nic.linked.opt.aa, line 452
  // tag
  // q_base_address
  call_stmt_1241_call <=> (call_stmt_1237_to_assign_stmt_1267/call_stmt_1241_Sample/crr call_stmt_1237_to_assign_stmt_1267/call_stmt_1241_Update/ccr) (call_stmt_1237_to_assign_stmt_1267/call_stmt_1241_Sample/cra call_stmt_1237_to_assign_stmt_1267/call_stmt_1241_Update/cca)
  // 	$call getTotalMessages (tag q_base_address ) (total_msgs ) 
  //  file .Aa/nic.linked.opt.aa, line 453
  // tag
  // q_base_address
  call_stmt_1245_call <=> (call_stmt_1237_to_assign_stmt_1267/call_stmt_1245_Sample/crr call_stmt_1237_to_assign_stmt_1267/call_stmt_1245_Update/ccr) (call_stmt_1237_to_assign_stmt_1267/call_stmt_1245_Sample/cra call_stmt_1237_to_assign_stmt_1267/call_stmt_1245_Update/cca)
  // 	$volatile q_empty := (total_msgs == 0 ) $buffering 1
  //  file .Aa/nic.linked.opt.aa, line 454
  // (total_msgs == 0 )
  // total_msgs
  // 	$guard (~q_empty) QUEUE_MONITOR_SIGNAL := (((($bitcast ($uint<4>) queue_type ) && PREPOPQ) && ($bitcast ($uint<8>) total_msgs )) && (($bitcast ($uint<8>) write_index ) && ($bitcast ($uint<8>) read_index ))) $buffering 1// bits of buffering = 32. 
  //  file .Aa/nic.linked.opt.aa, line 455
  // (((($bitcast ($uint<4>) queue_type ) && PREPOPQ) && ($bitcast ($uint<8>) total_msgs )) && (($bitcast ($uint<8>) write_index ) && ($bitcast ($uint<8>) read_index )))
  // ((($bitcast ($uint<4>) queue_type ) && PREPOPQ) && ($bitcast ($uint<8>) total_msgs ))
  // (($bitcast ($uint<4>) queue_type ) && PREPOPQ)
  // queue_type
  // total_msgs
  // (($bitcast ($uint<8>) write_index ) && ($bitcast ($uint<8>) read_index ))
  // write_index
  // read_index
  CONCAT_u16_u32_1266_inst <=> (call_stmt_1237_to_assign_stmt_1267/CONCAT_u16_u32_1266_Sample/rr call_stmt_1237_to_assign_stmt_1267/CONCAT_u16_u32_1266_Update/cr) (call_stmt_1237_to_assign_stmt_1267/CONCAT_u16_u32_1266_Sample/ra call_stmt_1237_to_assign_stmt_1267/CONCAT_u16_u32_1266_Update/ca)
  // QUEUE_MONITOR_SIGNAL
  WPIPE_QUEUE_MONITOR_SIGNAL_1252_inst <=> (call_stmt_1237_to_assign_stmt_1267/WPIPE_QUEUE_MONITOR_SIGNAL_1252_Sample/req call_stmt_1237_to_assign_stmt_1267/WPIPE_QUEUE_MONITOR_SIGNAL_1252_Update/req) (call_stmt_1237_to_assign_stmt_1267/WPIPE_QUEUE_MONITOR_SIGNAL_1252_Sample/ack call_stmt_1237_to_assign_stmt_1267/WPIPE_QUEUE_MONITOR_SIGNAL_1252_Update/ack)
  // 	$volatile round_off := (read_index == (queue_length - 1 )) $buffering 1
  //  file .Aa/nic.linked.opt.aa, line 457
  // (read_index == (queue_length - 1 ))
  // read_index
  // (queue_length - 1 )
  // queue_length
  // 	$volatile next_ri := ( $mux round_off 0   (read_index + 1 ) )  $buffering 1
  //  file .Aa/nic.linked.opt.aa, line 458
  // round_off
  // (read_index + 1 )
  // read_index
  // ( $mux round_off 0   (read_index + 1 ) ) 
  // 	$guard (~q_empty) $call getQueueBufPointer (queue_type server_id ) (q_buf_address ) 
  //  file .Aa/nic.linked.opt.aa, line 459
  // queue_type
  // server_id
  call_stmt_1288_call <=> (assign_stmt_1275_to_assign_stmt_1326/call_stmt_1288_Sample/crr assign_stmt_1275_to_assign_stmt_1326/call_stmt_1288_Update/ccr) (assign_stmt_1275_to_assign_stmt_1326/call_stmt_1288_Sample/cra assign_stmt_1275_to_assign_stmt_1326/call_stmt_1288_Update/cca)
  // 	$guard (~q_empty) $call getQueueElement (tag q_buf_address read_index ) (q_r_data ) 
  //  file .Aa/nic.linked.opt.aa, line 460
  // tag
  // q_buf_address
  // read_index
  call_stmt_1294_call <=> (assign_stmt_1275_to_assign_stmt_1326/call_stmt_1294_Sample/crr assign_stmt_1275_to_assign_stmt_1326/call_stmt_1294_Update/ccr) (assign_stmt_1275_to_assign_stmt_1326/call_stmt_1294_Sample/cra assign_stmt_1275_to_assign_stmt_1326/call_stmt_1294_Update/cca)
  // 	$guard (~q_empty) $call setQueuePointers (tag q_base_address write_index next_ri ) () 
  //  file .Aa/nic.linked.opt.aa, line 461
  // tag
  // q_base_address
  // write_index
  // next_ri
  call_stmt_1300_call <=> (assign_stmt_1275_to_assign_stmt_1326/call_stmt_1300_Sample/crr assign_stmt_1275_to_assign_stmt_1326/call_stmt_1300_Update/ccr) (assign_stmt_1275_to_assign_stmt_1326/call_stmt_1300_Sample/cra assign_stmt_1275_to_assign_stmt_1326/call_stmt_1300_Update/cca)
  // 	$guard (~q_empty) $call setTotalMessages (tag q_base_address (total_msgs - ($bitcast ($uint<32>) _b1  )) ) () 
  //  file .Aa/nic.linked.opt.aa, line 462
  // tag
  // q_base_address
  // (total_msgs - ($bitcast ($uint<32>) _b1  ))
  // total_msgs
  call_stmt_1308_call <=> (assign_stmt_1275_to_assign_stmt_1326/call_stmt_1308_Sample/crr assign_stmt_1275_to_assign_stmt_1326/call_stmt_1308_Update/ccr) (assign_stmt_1275_to_assign_stmt_1326/call_stmt_1308_Sample/cra assign_stmt_1275_to_assign_stmt_1326/call_stmt_1308_Update/cca)
  // 	$guard (~q_empty) QUEUE_MONITOR_SIGNAL := (((($bitcast ($uint<4>) queue_type ) && POPQ) && ($bitcast ($uint<8>) (total_msgs - 1 ) )) && (($bitcast ($uint<8>) write_index ) && ($bitcast ($uint<8>) next_ri ))) $buffering 1// bits of buffering = 32. 
  //  file .Aa/nic.linked.opt.aa, line 463
  // (((($bitcast ($uint<4>) queue_type ) && POPQ) && ($bitcast ($uint<8>) (total_msgs - 1 ) )) && (($bitcast ($uint<8>) write_index ) && ($bitcast ($uint<8>) next_ri )))
  // ((($bitcast ($uint<4>) queue_type ) && POPQ) && ($bitcast ($uint<8>) (total_msgs - 1 ) ))
  // (($bitcast ($uint<4>) queue_type ) && POPQ)
  // queue_type
  // (total_msgs - 1 )
  // total_msgs
  // (($bitcast ($uint<8>) write_index ) && ($bitcast ($uint<8>) next_ri ))
  // write_index
  // next_ri
  CONCAT_u16_u32_1325_inst <=> (assign_stmt_1275_to_assign_stmt_1326/CONCAT_u16_u32_1325_Sample/rr assign_stmt_1275_to_assign_stmt_1326/CONCAT_u16_u32_1325_Update/cr) (assign_stmt_1275_to_assign_stmt_1326/CONCAT_u16_u32_1325_Sample/ra assign_stmt_1275_to_assign_stmt_1326/CONCAT_u16_u32_1325_Update/ca)
  // QUEUE_MONITOR_SIGNAL
  WPIPE_QUEUE_MONITOR_SIGNAL_1310_inst <=> (assign_stmt_1275_to_assign_stmt_1326/WPIPE_QUEUE_MONITOR_SIGNAL_1310_Sample/req assign_stmt_1275_to_assign_stmt_1326/WPIPE_QUEUE_MONITOR_SIGNAL_1310_Update/req) (assign_stmt_1275_to_assign_stmt_1326/WPIPE_QUEUE_MONITOR_SIGNAL_1310_Sample/ack assign_stmt_1275_to_assign_stmt_1326/WPIPE_QUEUE_MONITOR_SIGNAL_1310_Update/ack)
  // 	$guard (~lock_n) $call releaseLock (tag q_lock_address ) () 
  //  file .Aa/nic.linked.opt.aa, line 465
  // tag
  // q_lock_address
  call_stmt_1331_call <=> (call_stmt_1331_to_assign_stmt_1334/call_stmt_1331_Sample/crr call_stmt_1331_to_assign_stmt_1334/call_stmt_1331_Update/ccr) (call_stmt_1331_to_assign_stmt_1334/call_stmt_1331_Sample/cra call_stmt_1331_to_assign_stmt_1334/call_stmt_1331_Update/cca)
  // 	status := q_empty $buffering 1// bits of buffering = 1. 
  //  file .Aa/nic.linked.opt.aa, line 466
  // q_empty
  W_status_1332_inst <=> (call_stmt_1331_to_assign_stmt_1334/assign_stmt_1334_Sample/req call_stmt_1331_to_assign_stmt_1334/assign_stmt_1334_Update/req) (call_stmt_1331_to_assign_stmt_1334/assign_stmt_1334_Sample/ack call_stmt_1331_to_assign_stmt_1334/assign_stmt_1334_Update/ack)
}
$module [writeEthernetHeaderToMem] 
{
  $in tag:$int<8>
  // can point into 
  buf_pointer:$int<64>
  // can point into  foreign( $void )
  $out addr_offset:$int<16>
  // can point into 
  // pipe-declarations for block %writeEthernetHeaderToMem
  //  file .Aa/nic.linked.opt.aa, line 468
  // pipe-declarations for block %writeEthernetHeaderToMem%main
  //  file .Aa/nic.linked.opt.aa, line 473
  // there are no memory spaces local to this module.
  $CP 
  {
    // begin control-path 
    <>[branch_block_stmt_1340] // Branch Block  file .Aa/nic.linked.opt.aa, line 473
    {
      $P [branch_block_stmt_1340__entry__]
      branch_block_stmt_1340__entry__ <-| ($entry)
      $P [branch_block_stmt_1340__exit__]
      branch_block_stmt_1340__exit__ |-> ($exit)
      $P [assign_stmt_1348__entry__] 
      $P [assign_stmt_1348__exit__] 
      $P [do_while_stmt_1349__entry__] 
      $P [do_while_stmt_1349__exit__] 
      ::[assign_stmt_1348] 
      {
        // start: WAR dependencies for ethHeaderTag
        // ignored out-of-scope w_root  tag : $uint<8> 
        // done: WAR dependencies for ethHeaderTag
        // start:  		$volatile ethHeaderTag := ((tag << 2 ) | ($bitcast ($uint<8>) 1  )) $buffering 1
        //  file .Aa/nic.linked.opt.aa, line 475
        // volatile! 
        // Source expression
        // ((tag << 2 ) | ($bitcast ($uint<8>) 1  ))
        // (tag << 2 )
        // tag
        // Target expression
        // (as target) ethHeaderTag
        // start: WAR dependencies for ethHeaderTag
        // ignored out-of-scope w_root  tag : $uint<8> 
        // done: WAR dependencies for ethHeaderTag
        // end:  		$volatile ethHeaderTag := ((tag << 2 ) | ($bitcast ($uint<8>) 1  )) $buffering 1
        // load-store dependencies..
      }
      assign_stmt_1348__entry__ |-> (assign_stmt_1348)
      assign_stmt_1348__exit__ <-| (assign_stmt_1348)
      // do-while-statement  
      //  file .Aa/nic.linked.opt.aa, line 476
      <o> [do_while_stmt_1349]  $depth 15 $buffering 1 
      {
        $P[do_while_stmt_1349__entry__] 
        $P[do_while_stmt_1349__exit__] 
        $P[loop_back] 
        $P[condition_done] 
        $P[loop_body_done] 
        $pipeline [do_while_stmt_1349_loop_body] 
        {
          // Pipelined!
          $T[back_edge_to_loop_body] 
          $T[first_time_through_loop_body] 
          $T[loop_body_start] 
          $T[condition_evaluated] 
          $transitionmerge [entry_tmerge] (back_edge_to_loop_body first_time_through_loop_body) (loop_body_start)
          $entry <-& (loop_body_start)
          $T[aggregated_phi_sample_req] 
          $T[aggregated_phi_sample_ack] 
          $T[aggregated_phi_sample_ack_d] $delay
          aggregated_phi_sample_ack_d <-& (aggregated_phi_sample_ack)
          $T[aggregated_phi_update_req] 
          $T[aggregated_phi_update_ack] 
          // do not loop-back unless all phi's have used up their triggering tokens.
          condition_evaluated <-& (aggregated_phi_update_ack)
          aggregated_phi_sample_req o<-& (aggregated_phi_update_ack 0)
          // start:  multi-source PHI statement phi_stmt_1351
          // 			$phi addr_offset := 			  ($bitcast ($uint<16>) 8  ) $on   $entry 			  naddr_offset $on   $loopback 
          // type of target is $uint<16>
          $T[phi_stmt_1351_sample_start_] 
          $T[phi_stmt_1351_sample_completed_] 
          $T[phi_stmt_1351_update_start_] 
          $T[phi_stmt_1351_update_completed_] 
          $T[phi_stmt_1351_sample_start__ps] 
          phi_stmt_1351_sample_start__ps <-& (aggregated_phi_sample_req)
          $T[phi_stmt_1351_sample_completed__ps] 
          phi_stmt_1351_sample_completed__ps &-> (aggregated_phi_sample_ack)
          $T[phi_stmt_1351_update_start__ps] 
          phi_stmt_1351_update_start__ps <-& (aggregated_phi_update_req)
          $T[phi_stmt_1351_update_completed__ps] 
          phi_stmt_1351_update_completed_ <-& (phi_stmt_1351_update_completed__ps)
          aggregated_phi_sample_req <-& (phi_stmt_1351_sample_start_)
          aggregated_phi_sample_ack &-> (phi_stmt_1351_sample_completed_)
          aggregated_phi_update_req <-& (phi_stmt_1351_update_start_)
          $T[phi_stmt_1351_loopback_trigger] 
          phi_stmt_1351_loopback_trigger <-& (back_edge_to_loop_body)
          $T[phi_stmt_1351_loopback_sample_req] 
          $T[phi_stmt_1351_loopback_sample_req_ps] 
          phi_stmt_1351_loopback_sample_req <-& (phi_stmt_1351_loopback_sample_req_ps)
          phi_stmt_1351_loopback_sample_req &-> ($null)
          $T[phi_stmt_1351_entry_trigger] 
          phi_stmt_1351_entry_trigger <-& (first_time_through_loop_body)
          $T[phi_stmt_1351_entry_sample_req] 
          $T[phi_stmt_1351_entry_sample_req_ps] 
          phi_stmt_1351_entry_sample_req <-& (phi_stmt_1351_entry_sample_req_ps)
          phi_stmt_1351_entry_sample_req &-> ($null)
          phi_stmt_1351_update_start_ o<-& (phi_stmt_1351_update_completed_ 0)
          phi_stmt_1351_sample_start_ o<-& (phi_stmt_1351_sample_completed_ 1)
          $T[phi_stmt_1351_merged_reqs] 
          $T[phi_stmt_1351_phi_mux_ack] 
          $T[phi_stmt_1351_phi_mux_ack_ps] 
          phi_stmt_1351_phi_mux_ack_ps <-& (phi_stmt_1351_phi_mux_ack)
          aggregated_phi_update_ack <-& (phi_stmt_1351_update_completed_)
          $T[type_cast_1354_sample_start__ps] 
          $T[type_cast_1354_sample_completed__ps] 
          $T[type_cast_1354_update_start__ps] 
          $T[type_cast_1354_update_completed__ps] 
          // dummies for constant expression source for phi
          $T[type_cast_1354_sample_start_] 
          $T[type_cast_1354_sample_completed_] 
          type_cast_1354_sample_completed_ <-& (type_cast_1354_sample_start_)
          $T[type_cast_1354_update_start_] 
          $T [type_cast_1354_update_completed_] $delay 
          type_cast_1354_update_completed_ <-& (type_cast_1354_update_start_)
          // Phi start dependency for implicit/constant alternative.
          type_cast_1354_sample_start_ <-& (type_cast_1354_sample_start__ps)
          type_cast_1354_update_start_ <-& (type_cast_1354_update_start__ps)
          // Phi complete dependency.
          type_cast_1354_sample_completed__ps <-& (type_cast_1354_sample_completed_)
          type_cast_1354_update_completed__ps <-& (type_cast_1354_update_completed_)
          $T[R_naddr_offset_1355_sample_start__ps] 
          $T[R_naddr_offset_1355_sample_completed__ps] 
          $T[R_naddr_offset_1355_update_start__ps] 
          $T[R_naddr_offset_1355_update_completed__ps] 
          // interlock for implicit-variable-ref/signal-read in Phi alternative 1
          $T[R_naddr_offset_1355_sample_start_] 
          $T[R_naddr_offset_1355_sample_completed_] 
          $T[R_naddr_offset_1355_update_start_] 
          $T[R_naddr_offset_1355_update_completed_] 
          ;;[R_naddr_offset_1355_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          R_naddr_offset_1355_sample_start_ &-> (R_naddr_offset_1355_Sample)
          R_naddr_offset_1355_sample_completed_ <-& (R_naddr_offset_1355_Sample)
          ;;[R_naddr_offset_1355_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          R_naddr_offset_1355_update_start_ &-> (R_naddr_offset_1355_Update)
          R_naddr_offset_1355_update_completed_ <-& (R_naddr_offset_1355_Update)
          // RAW reenables for naddr_offset
          // Phi start dependency for implicit/constant alternative.
          R_naddr_offset_1355_sample_start_ <-& (R_naddr_offset_1355_sample_start__ps)
          R_naddr_offset_1355_update_start_ <-& (R_naddr_offset_1355_update_start__ps)
          // Phi complete dependency.
          R_naddr_offset_1355_sample_completed__ps <-& (R_naddr_offset_1355_sample_completed_)
          R_naddr_offset_1355_update_completed__ps <-& (R_naddr_offset_1355_update_completed_)
          $phisequencer [ phi_stmt_1351_phi_seq] : 
          phi_stmt_1351_entry_trigger type_cast_1354_sample_start__ps type_cast_1354_sample_completed__ps type_cast_1354_update_start__ps type_cast_1354_update_completed__ps phi_stmt_1351_loopback_trigger R_naddr_offset_1355_sample_start__ps R_naddr_offset_1355_sample_completed__ps R_naddr_offset_1355_update_start__ps R_naddr_offset_1355_update_completed__ps :
          phi_stmt_1351_sample_start__ps phi_stmt_1351_sample_completed__ps phi_stmt_1351_update_start__ps phi_stmt_1351_update_completed__ps :
          phi_stmt_1351_entry_sample_req_ps phi_stmt_1351_loopback_sample_req_ps : 
          phi_stmt_1351_phi_mux_ack_ps
          // done: PHI Statement phi_stmt_1351
          // start:  multi-source PHI statement phi_stmt_1356
          // 			$phi first_time := 			  ($bitcast ($uint<1>) _b1  ) $on   $entry 			  ($bitcast ($uint<1>) _b0  ) $on   $loopback 
          // type of target is $uint<1>
          $T[phi_stmt_1356_sample_start_] 
          $T[phi_stmt_1356_sample_completed_] 
          $T[phi_stmt_1356_update_start_] 
          $T[phi_stmt_1356_update_completed_] 
          $T[phi_stmt_1356_sample_start__ps] 
          phi_stmt_1356_sample_start__ps <-& (aggregated_phi_sample_req)
          $T[phi_stmt_1356_sample_completed__ps] 
          phi_stmt_1356_sample_completed__ps &-> (aggregated_phi_sample_ack)
          $T[phi_stmt_1356_update_start__ps] 
          phi_stmt_1356_update_start__ps <-& (aggregated_phi_update_req)
          $T[phi_stmt_1356_update_completed__ps] 
          phi_stmt_1356_update_completed_ <-& (phi_stmt_1356_update_completed__ps)
          aggregated_phi_sample_req <-& (phi_stmt_1356_sample_start_)
          aggregated_phi_sample_ack &-> (phi_stmt_1356_sample_completed_)
          aggregated_phi_update_req <-& (phi_stmt_1356_update_start_)
          $T[phi_stmt_1356_loopback_trigger] 
          phi_stmt_1356_loopback_trigger <-& (back_edge_to_loop_body)
          $T[phi_stmt_1356_loopback_sample_req] 
          $T[phi_stmt_1356_loopback_sample_req_ps] 
          phi_stmt_1356_loopback_sample_req <-& (phi_stmt_1356_loopback_sample_req_ps)
          phi_stmt_1356_loopback_sample_req &-> ($null)
          $T[phi_stmt_1356_entry_trigger] 
          phi_stmt_1356_entry_trigger <-& (first_time_through_loop_body)
          $T[phi_stmt_1356_entry_sample_req] 
          $T[phi_stmt_1356_entry_sample_req_ps] 
          phi_stmt_1356_entry_sample_req <-& (phi_stmt_1356_entry_sample_req_ps)
          phi_stmt_1356_entry_sample_req &-> ($null)
          phi_stmt_1356_update_start_ o<-& (phi_stmt_1356_update_completed_ 0)
          phi_stmt_1356_sample_start_ o<-& (phi_stmt_1356_sample_completed_ 1)
          $T[phi_stmt_1356_merged_reqs] 
          $T[phi_stmt_1356_phi_mux_ack] 
          $T[phi_stmt_1356_phi_mux_ack_ps] 
          phi_stmt_1356_phi_mux_ack_ps <-& (phi_stmt_1356_phi_mux_ack)
          aggregated_phi_update_ack <-& (phi_stmt_1356_update_completed_)
          $T[type_cast_1359_sample_start__ps] 
          $T[type_cast_1359_sample_completed__ps] 
          $T[type_cast_1359_update_start__ps] 
          $T[type_cast_1359_update_completed__ps] 
          // dummies for constant expression source for phi
          $T[type_cast_1359_sample_start_] 
          $T[type_cast_1359_sample_completed_] 
          type_cast_1359_sample_completed_ <-& (type_cast_1359_sample_start_)
          $T[type_cast_1359_update_start_] 
          $T [type_cast_1359_update_completed_] $delay 
          type_cast_1359_update_completed_ <-& (type_cast_1359_update_start_)
          // Phi start dependency for implicit/constant alternative.
          type_cast_1359_sample_start_ <-& (type_cast_1359_sample_start__ps)
          type_cast_1359_update_start_ <-& (type_cast_1359_update_start__ps)
          // Phi complete dependency.
          type_cast_1359_sample_completed__ps <-& (type_cast_1359_sample_completed_)
          type_cast_1359_update_completed__ps <-& (type_cast_1359_update_completed_)
          $T[type_cast_1361_sample_start__ps] 
          $T[type_cast_1361_sample_completed__ps] 
          $T[type_cast_1361_update_start__ps] 
          $T[type_cast_1361_update_completed__ps] 
          // dummies for constant expression source for phi
          $T[type_cast_1361_sample_start_] 
          $T[type_cast_1361_sample_completed_] 
          type_cast_1361_sample_completed_ <-& (type_cast_1361_sample_start_)
          $T[type_cast_1361_update_start_] 
          $T [type_cast_1361_update_completed_] $delay 
          type_cast_1361_update_completed_ <-& (type_cast_1361_update_start_)
          // Phi start dependency for implicit/constant alternative.
          type_cast_1361_sample_start_ <-& (type_cast_1361_sample_start__ps)
          type_cast_1361_update_start_ <-& (type_cast_1361_update_start__ps)
          // Phi complete dependency.
          type_cast_1361_sample_completed__ps <-& (type_cast_1361_sample_completed_)
          type_cast_1361_update_completed__ps <-& (type_cast_1361_update_completed_)
          $phisequencer [ phi_stmt_1356_phi_seq] : 
          phi_stmt_1356_entry_trigger type_cast_1359_sample_start__ps type_cast_1359_sample_completed__ps type_cast_1359_update_start__ps type_cast_1359_update_completed__ps phi_stmt_1356_loopback_trigger type_cast_1361_sample_start__ps type_cast_1361_sample_completed__ps type_cast_1361_update_start__ps type_cast_1361_update_completed__ps :
          phi_stmt_1356_sample_start__ps phi_stmt_1356_sample_completed__ps phi_stmt_1356_update_start__ps phi_stmt_1356_update_completed__ps :
          phi_stmt_1356_entry_sample_req_ps phi_stmt_1356_loopback_sample_req_ps : 
          phi_stmt_1356_phi_mux_ack_ps
          // done: PHI Statement phi_stmt_1356
          // start:  single source PHI statement phi_stmt_1362
          // 			$phi ethernet_header := 			  nic_rx_to_header $on   $entry ,   $loopback 
          // type of target is $uint<73>
          $T[phi_stmt_1362_sample_start_] 
          $T[phi_stmt_1362_sample_completed_] 
          $T[phi_stmt_1362_update_start_] 
          $T[phi_stmt_1362_update_completed_] 
          aggregated_phi_sample_req <-& (phi_stmt_1362_sample_start_)
          aggregated_phi_sample_ack &-> (phi_stmt_1362_sample_completed_)
          aggregated_phi_update_req <-& (phi_stmt_1362_update_start_)
          // non-implicit source expression in single-source phi
          // nic_rx_to_header
          $T[RPIPE_nic_rx_to_header_1364_sample_start_] 
          $T[RPIPE_nic_rx_to_header_1364_sample_completed_] 
          $T[RPIPE_nic_rx_to_header_1364_update_start_] 
          $T[RPIPE_nic_rx_to_header_1364_update_completed_] 
          ;;[RPIPE_nic_rx_to_header_1364_Sample] 
          {
            // pipe read sample
            $T [rr] $T [ra] 
          }
          ;;[RPIPE_nic_rx_to_header_1364_Update] 
          {
            // pipe read update
            $T [cr] $T [ca] 
          }
          RPIPE_nic_rx_to_header_1364_sample_start_ &-> (RPIPE_nic_rx_to_header_1364_Sample)
          RPIPE_nic_rx_to_header_1364_sample_completed_ <-& (RPIPE_nic_rx_to_header_1364_Sample)
          RPIPE_nic_rx_to_header_1364_update_start_ <-& (RPIPE_nic_rx_to_header_1364_sample_completed_)
          RPIPE_nic_rx_to_header_1364_update_start_ &-> (RPIPE_nic_rx_to_header_1364_Update)
          RPIPE_nic_rx_to_header_1364_update_completed_ <-& (RPIPE_nic_rx_to_header_1364_Update)
          RPIPE_nic_rx_to_header_1364_sample_start_ o<-& (RPIPE_nic_rx_to_header_1364_update_completed_ 0)
          // RAW reenables for nic_rx_to_header
          // producer  and  consumer are both determined by PHI statements.
          aggregated_phi_sample_req &-> (RPIPE_nic_rx_to_header_1364_sample_start_)
          aggregated_phi_sample_ack <-& (RPIPE_nic_rx_to_header_1364_sample_completed_)
          aggregated_phi_update_req &-> (RPIPE_nic_rx_to_header_1364_update_start_)
          phi_stmt_1362_update_completed_ <-& (RPIPE_nic_rx_to_header_1364_update_completed_)
          aggregated_phi_update_ack <-& (phi_stmt_1362_update_completed_)
          // done: PHI Statement phi_stmt_1362
          // start: WAR dependencies for wdata
          // done: WAR dependencies for wdata
          // start:  			$volatile wdata := ( $slice ethernet_header 71 8 )  $buffering 1
          //  file .Aa/nic.linked.opt.aa, line 486
          // volatile! 
          // Source expression
          // ( $slice ethernet_header 71 8 ) 
          // ethernet_header
          // Target expression
          // (as target) wdata
          // start: WAR dependencies for wdata
          // done: WAR dependencies for wdata
          // end:  			$volatile wdata := ( $slice ethernet_header 71 8 )  $buffering 1
          // start:  			type_cast_1307_1307_delayed_1_0 := ($bitcast ($uint<64>) addr_offset ) $buffering 1 $cut_through // bits of buffering = 64. 
          //  file .Aa/nic.linked.opt.aa, line 487
          // Source expression
          // ($bitcast ($uint<64>) addr_offset )
          $T[type_cast_1372_sample_start_] 
          $T[type_cast_1372_sample_completed_] 
          $T[type_cast_1372_update_start_] 
          $T[type_cast_1372_update_completed_] 
          // addr_offset
          // start: Forward dependencies from addr_offset to transition type_cast_1372_sample_start_
          type_cast_1372_sample_start_ <-& (phi_stmt_1351_update_completed_)
          // done: Forward dependencies from addr_offset to transition type_cast_1372_sample_start_
          ;;[type_cast_1372_Sample] 
          {
            // unary expression 
            $T [rr] $T [ra] // (split) unary operation
          }
          ;;[type_cast_1372_Update] 
          {
            // unary expression 
            $T [cr] $T [ca] //(split) unary operation
          }
          type_cast_1372_sample_start_ &-> (type_cast_1372_Sample)
          type_cast_1372_sample_completed_ <-& (type_cast_1372_Sample)
          type_cast_1372_sample_completed_ &-> ($null)
          type_cast_1372_update_start_ &-> (type_cast_1372_Update)
          type_cast_1372_update_completed_ <-& (type_cast_1372_Update)
          // RAW reenables for addr_offset
          phi_stmt_1351_update_start_ o<-& (type_cast_1372_sample_completed_ 0)
          // self-release: 
          type_cast_1372_sample_start_ o<-& (type_cast_1372_sample_completed_ 1)
          $null &-> (type_cast_1372_update_start_)
          type_cast_1372_update_start_ o<-& (type_cast_1372_update_completed_ 0)
          // Target expression
          // (as target) type_cast_1307_1307_delayed_1_0
          // start: WAR dependencies for type_cast_1307_1307_delayed_1_0
          // done: WAR dependencies for type_cast_1307_1307_delayed_1_0
          // end:  			type_cast_1307_1307_delayed_1_0 := ($bitcast ($uint<64>) addr_offset ) $buffering 1 $cut_through // bits of buffering = 64. 
          // start: 			$call accessMemoryDword (ethHeaderTag WRITEMEM buf_pointer type_cast_1307_1307_delayed_1_0 wdata ) (ignore_return ) 
          //  file .Aa/nic.linked.opt.aa, line 488
          $T[call_stmt_1380_sample_start_] 
          $T[call_stmt_1380_sample_completed_] 
          $T[call_stmt_1380_update_start_] 
          $T[call_stmt_1380_update_completed_] 
          // Call input argument 0
          // ethHeaderTag
          // Call input argument 1
          // Call input argument 2
          // buf_pointer
          // Call input argument 3
          // type_cast_1307_1307_delayed_1_0
          // Call input argument 4
          // wdata
          // start: Forward dependencies from ethHeaderTag to transition call_stmt_1380_sample_start_
          // done: Forward dependencies from ethHeaderTag to transition call_stmt_1380_sample_start_
          // RAW reenables for ethHeaderTag
          // start: Forward dependencies from buf_pointer to transition call_stmt_1380_sample_start_
          // done: Forward dependencies from buf_pointer to transition call_stmt_1380_sample_start_
          // RAW reenables for buf_pointer
          // start: Forward dependencies from type_cast_1307_1307_delayed_1_0 to transition call_stmt_1380_sample_start_
          call_stmt_1380_sample_start_ <-& (type_cast_1372_update_completed_)
          // done: Forward dependencies from type_cast_1307_1307_delayed_1_0 to transition call_stmt_1380_sample_start_
          // RAW reenables for type_cast_1307_1307_delayed_1_0
          type_cast_1372_update_start_ o<-& (call_stmt_1380_sample_completed_ 0)
          // start: Forward dependencies from wdata to transition call_stmt_1380_sample_start_
          call_stmt_1380_sample_start_ <-& (phi_stmt_1362_update_completed_)
          // done: Forward dependencies from wdata to transition call_stmt_1380_sample_start_
          // RAW reenables for wdata
          phi_stmt_1362_update_start_ o<-& (call_stmt_1380_sample_completed_ 0)
          ;;[call_stmt_1380_Sample] 
          {
            $T [crr] $T [cra] 
          }
          ;;[call_stmt_1380_Update] 
          {
            $T [ccr] $T [cca] 
          }
          call_stmt_1380_sample_start_ &-> (call_stmt_1380_Sample)
          call_stmt_1380_sample_completed_ <-& (call_stmt_1380_Sample)
          call_stmt_1380_sample_completed_ &-> ($null)
          call_stmt_1380_update_start_ &-> (call_stmt_1380_Update)
          call_stmt_1380_update_completed_ <-& (call_stmt_1380_Update)
          // Call output argument 0
          // (as target) ignore_return
          // self-release: 
          call_stmt_1380_sample_start_ o<-& (call_stmt_1380_sample_completed_ 1)
          $null &-> (call_stmt_1380_update_start_)
          call_stmt_1380_update_start_ o<-& (call_stmt_1380_update_completed_ 0)
          // start: WAR dependencies for ignore_return
          // done: WAR dependencies for ignore_return
          // end: 			$call accessMemoryDword (ethHeaderTag WRITEMEM buf_pointer type_cast_1307_1307_delayed_1_0 wdata ) (ignore_return ) 
          // start: WAR dependencies for naddr_offset
          // WAR dependency: Read: naddr_offset before Write: 			$volatile naddr_offset := (addr_offset + 8 ) $buffering 1
          //  WAR  PHI-PHI dependency ignored...
          // done: WAR dependencies for naddr_offset
          // start:  			$volatile naddr_offset := (addr_offset + 8 ) $buffering 1
          //  file .Aa/nic.linked.opt.aa, line 489
          // volatile! 
          // Source expression
          // (addr_offset + 8 )
          // addr_offset
          // Target expression
          // (as target) naddr_offset
          // start: WAR dependencies for naddr_offset
          // WAR dependency: Read: naddr_offset before Write: 			$volatile naddr_offset := (addr_offset + 8 ) $buffering 1
          //  WAR  PHI-PHI dependency ignored...
          // done: WAR dependencies for naddr_offset
          // end:  			$volatile naddr_offset := (addr_offset + 8 ) $buffering 1
          // first_time
          $T [loop_body_delay_to_condition_start] $delay
          loop_body_start &-> (loop_body_delay_to_condition_start)
          loop_body_delay_to_condition_start &-> (condition_evaluated)
          // start: Forward dependencies from first_time to transition condition_evaluated
          condition_evaluated <-& (phi_stmt_1356_update_completed_)
          // done: Forward dependencies from first_time to transition condition_evaluated
          condition_evaluated &-> ($null)
          // load-store dependencies..
          // pipe read/write dependencies for pipe MEMORY_TO_NIC_RESPONSE
          // read-dependencies for pipe MEMORY_TO_NIC_RESPONSE
          // write-dependencies for pipe MEMORY_TO_NIC_RESPONSE
          // signal write dependencies for MEMORY_TO_NIC_RESPONSE
          // pipe read/write dependencies for pipe NIC_DEBUG_SIGNAL
          // read-dependencies for pipe NIC_DEBUG_SIGNAL
          // write-dependencies for pipe NIC_DEBUG_SIGNAL
          // signal write dependencies for NIC_DEBUG_SIGNAL
          // pipe read/write dependencies for pipe NIC_TO_MEMORY_REQUEST
          // read-dependencies for pipe NIC_TO_MEMORY_REQUEST
          // write-dependencies for pipe NIC_TO_MEMORY_REQUEST
          // signal write dependencies for NIC_TO_MEMORY_REQUEST
          // pipe read/write dependencies for pipe memory_access_lock
          // read-dependencies for pipe memory_access_lock
          // write-dependencies for pipe memory_access_lock
          // signal write dependencies for memory_access_lock
          // pipe read/write dependencies for pipe nic_rx_to_header
          // read-dependencies for pipe nic_rx_to_header
          // write-dependencies for pipe nic_rx_to_header
          // signal write dependencies for nic_rx_to_header
        }
        ( first_time_through_loop_body  back_edge_to_loop_body) 
        ( condition_evaluated )
        ;; [loop_exit] 
        {
          $T [ack] 
        }
        ;; [loop_taken] 
        {
          $T [ack] 
        }
        do_while_stmt_1349__entry__ <-| ($entry)
        loop_body_done <-| ( do_while_stmt_1349_loop_body ) 
        condition_done |-> (loop_exit loop_taken)
        do_while_stmt_1349__exit__ |-> ($exit)
        $bind condition_done <= do_while_stmt_1349_loop_body : condition_evaluated
        $bind do_while_stmt_1349__entry__  => do_while_stmt_1349_loop_body : first_time_through_loop_body 
        $bind loop_back  => do_while_stmt_1349_loop_body : back_edge_to_loop_body 
        $terminate (loop_exit loop_taken loop_body_done) (loop_back do_while_stmt_1349__exit__)
      }
      do_while_stmt_1349__entry__ |-> (do_while_stmt_1349)
      do_while_stmt_1349__exit__ <-| (do_while_stmt_1349)
      assign_stmt_1348__entry__ <-| (branch_block_stmt_1340__entry__)
      do_while_stmt_1349__entry__ <-| (assign_stmt_1348__exit__)
      do_while_stmt_1349__exit__ |-> (branch_block_stmt_1340__exit__)
    }
  }
  // end control-path
  $DP 
  {
    // begin data-path 
    // constant-object-declarations for block %writeEthernetHeaderToMem%main%
    //  file .Aa/nic.linked.opt.aa, line 478
    // constant-object-declarations for block %writeEthernetHeaderToMem%main
    //  file .Aa/nic.linked.opt.aa, line 473
    // constant-object-declarations for block %writeEthernetHeaderToMem
    //  file .Aa/nic.linked.opt.aa, line 468
    // constant-declarations for block %writeEthernetHeaderToMem%main
    //  file .Aa/nic.linked.opt.aa, line 473
    // 2 
    $constant $W[konst_1343_wire_constant] : $int<8> := _b00000010// 2
    // ($bitcast ($uint<8>) 1  )
    $constant $W[type_cast_1346_wire_constant] : $int<8> := _b00000001// 1
    // do-while statement  
    //  file .Aa/nic.linked.opt.aa, line 476
    // constant-declarations for block %writeEthernetHeaderToMem%main%
    //  file .Aa/nic.linked.opt.aa, line 478
    // constant-declarations for phi:  			$phi addr_offset := 			  ($bitcast ($uint<16>) 8  ) $on   $entry 			  naddr_offset $on   $loopback 
    // type of target is $uint<16>
    //  file .Aa/nic.linked.opt.aa, line 479
    // ($bitcast ($uint<16>) 8  )
    $constant $W[type_cast_1354_wire_constant] : $int<16> := _b0000000000001000// 8
    // constant-declarations for phi:  			$phi first_time := 			  ($bitcast ($uint<1>) _b1  ) $on   $entry 			  ($bitcast ($uint<1>) _b0  ) $on   $loopback 
    // type of target is $uint<1>
    //  file .Aa/nic.linked.opt.aa, line 481
    // ($bitcast ($uint<1>) _b1  )
    $constant $W[type_cast_1359_wire_constant] : $int<1> := _b1// 1
    // ($bitcast ($uint<1>) _b0  )
    $constant $W[type_cast_1361_wire_constant] : $int<1> := _b0// 0
    // constant-declarations for phi:  			$phi ethernet_header := 			  nic_rx_to_header $on   $entry ,   $loopback 
    // type of target is $uint<73>
    //  file .Aa/nic.linked.opt.aa, line 483
    // 			$call accessMemoryDword (ethHeaderTag WRITEMEM buf_pointer type_cast_1307_1307_delayed_1_0 wdata ) (ignore_return ) 
    //  file .Aa/nic.linked.opt.aa, line 488
    // WRITEMEM
    $constant $W[R_WRITEMEM_1375_wire_constant] : $int<1> := _b0// 0
    // 8 
    $constant $W[konst_1383_wire_constant] : $int<16> := _b0000000000001000// 8
    // block %writeEthernetHeaderToMem%main
    //  file .Aa/nic.linked.opt.aa, line 473
    // 		$volatile ethHeaderTag := ((tag << 2 ) | ($bitcast ($uint<8>) 1  )) $buffering 1
    //  file .Aa/nic.linked.opt.aa, line 475
    // (tag << 2 )
    $intermediate $W[SHL_u8_u8_1344_wire] : $int<8>
    // ethHeaderTag
    $W[ethHeaderTag_1348] : $int<8>
    // do-while statement  
    //  file .Aa/nic.linked.opt.aa, line 476
    // merge-statement  
    //  file .Aa/nic.linked.opt.aa, line 478
    // 			$phi addr_offset := 			  ($bitcast ($uint<16>) 8  ) $on   $entry 			  naddr_offset $on   $loopback 
    // type of target is $uint<16>
    //  file .Aa/nic.linked.opt.aa, line 479
    $W[naddr_offset_1385_1355_buffered] : $int<16>
    // addr_offset
    // 			$phi first_time := 			  ($bitcast ($uint<1>) _b1  ) $on   $entry 			  ($bitcast ($uint<1>) _b0  ) $on   $loopback 
    // type of target is $uint<1>
    //  file .Aa/nic.linked.opt.aa, line 481
    // first_time
    $W[first_time_1356] : $int<1>
    // 			$phi ethernet_header := 			  nic_rx_to_header $on   $entry ,   $loopback 
    // type of target is $uint<73>
    //  file .Aa/nic.linked.opt.aa, line 483
    // nic_rx_to_header
    $W[RPIPE_nic_rx_to_header_1364_wire] : $int<73>
    // ethernet_header
    $W[ethernet_header_1362] : $int<73>
    // 			$volatile wdata := ( $slice ethernet_header 71 8 )  $buffering 1
    //  file .Aa/nic.linked.opt.aa, line 486
    // wdata
    $W[wdata_1369] : $int<64>
    // 			type_cast_1307_1307_delayed_1_0 := ($bitcast ($uint<64>) addr_offset ) $buffering 1 $cut_through // bits of buffering = 64. 
    //  file .Aa/nic.linked.opt.aa, line 487
    // type_cast_1307_1307_delayed_1_0
    $W[type_cast_1307_1307_delayed_1_0_1373] : $int<64>
    // 			$call accessMemoryDword (ethHeaderTag WRITEMEM buf_pointer type_cast_1307_1307_delayed_1_0 wdata ) (ignore_return ) 
    //  file .Aa/nic.linked.opt.aa, line 488
    // ignore_return
    $W[ignore_return_1380] : $int<64>
    // 			$volatile naddr_offset := (addr_offset + 8 ) $buffering 1
    //  file .Aa/nic.linked.opt.aa, line 489
    // naddr_offset
    $W[naddr_offset_1385] : $int<16>
    // datapath-instances for block %writeEthernetHeaderToMem%main
    //  file .Aa/nic.linked.opt.aa, line 473
    // 		$volatile ethHeaderTag := ((tag << 2 ) | ($bitcast ($uint<8>) 1  )) $buffering 1
    //  file .Aa/nic.linked.opt.aa, line 475
    // (tag << 2 )
    <<[SHL_u8_u8_1344_inst] (tag konst_1343_wire_constant) (SHL_u8_u8_1344_wire)   $flowthrough 
    $delay SHL_u8_u8_1344_inst 0
    // ((tag << 2 ) | ($bitcast ($uint<8>) 1  ))
    |[OR_u8_u8_1347_inst] (SHL_u8_u8_1344_wire type_cast_1346_wire_constant) (ethHeaderTag_1348)   $flowthrough 
    $delay OR_u8_u8_1347_inst 0
    // datapath-instances for do-while  
    //  file .Aa/nic.linked.opt.aa, line 476
    ==0? [do_while_stmt_1349_branch] (first_time_1356)
    $flowthrough
    // data-path instances for merge  
    //  file .Aa/nic.linked.opt.aa, line 478
    // 			$phi addr_offset := 			  ($bitcast ($uint<16>) 8  ) $on   $entry 			  naddr_offset $on   $loopback 
    // type of target is $uint<16>
    //  file .Aa/nic.linked.opt.aa, line 479
    # := [naddr_offset_1385_1355_buf] (naddr_offset_1385) (naddr_offset_1385_1355_buffered)   $in_phi    $fullrate
    $buffering $out naddr_offset_1385_1355_buf naddr_offset_1385_1355_buffered  1
    # $phi [phi_stmt_1351] (type_cast_1354_wire_constant naddr_offset_1385_1355_buffered) ( addr_offset ) $fullrate
    // $buffering  $out phi_stmt_1351 addr_offset 2
    // 			$phi first_time := 			  ($bitcast ($uint<1>) _b1  ) $on   $entry 			  ($bitcast ($uint<1>) _b0  ) $on   $loopback 
    // type of target is $uint<1>
    //  file .Aa/nic.linked.opt.aa, line 481
    # $phi [phi_stmt_1356] (type_cast_1359_wire_constant type_cast_1361_wire_constant) ( first_time_1356 ) $fullrate
    // $buffering  $out phi_stmt_1356 first_time_1356 2
    // 			$phi ethernet_header := 			  nic_rx_to_header $on   $entry ,   $loopback 
    // type of target is $uint<73>
    //  file .Aa/nic.linked.opt.aa, line 483
    // nic_rx_to_header
    $ioport $in [RPIPE_nic_rx_to_header_1364_inst] (nic_rx_to_header) (RPIPE_nic_rx_to_header_1364_wire)  $fullrate 
    $buffering $out RPIPE_nic_rx_to_header_1364_inst RPIPE_nic_rx_to_header_1364_wire 1
    # := [ssrc_phi_stmt_1362] (RPIPE_nic_rx_to_header_1364_wire) (ethernet_header_1362)     $flowthrough 
    // 			$volatile wdata := ( $slice ethernet_header 71 8 )  $buffering 1
    //  file .Aa/nic.linked.opt.aa, line 486
    // ( $slice ethernet_header 71 8 ) 
    [:] [slice_1368_inst] (ethernet_header_1362 71 8) (wdata_1369)  $flowthrough
    $delay slice_1368_inst 0
    // 			type_cast_1307_1307_delayed_1_0 := ($bitcast ($uint<64>) addr_offset ) $buffering 1 $cut_through // bits of buffering = 64. 
    //  file .Aa/nic.linked.opt.aa, line 487
    // ($bitcast ($uint<64>) addr_offset )
    # := [type_cast_1372_inst] (addr_offset) (type_cast_1307_1307_delayed_1_0_1373)      $fullrate
    $buffering  $out type_cast_1372_inst type_cast_1307_1307_delayed_1_0_1373 1
    $delay type_cast_1372_inst 1
    // 			$call accessMemoryDword (ethHeaderTag WRITEMEM buf_pointer type_cast_1307_1307_delayed_1_0 wdata ) (ignore_return ) 
    //  file .Aa/nic.linked.opt.aa, line 488
    $call [call_stmt_1380_call] $module accessMemoryDword(ethHeaderTag_1348 R_WRITEMEM_1375_wire_constant buf_pointer type_cast_1307_1307_delayed_1_0_1373 wdata_1369) (ignore_return_1380)   $fullrate
    $delay call_stmt_1380_call 38
    $buffering  $in call_stmt_1380_call ethHeaderTag_1348 1
    $buffering  $in call_stmt_1380_call R_WRITEMEM_1375_wire_constant 1
    $buffering  $in call_stmt_1380_call buf_pointer 1
    $buffering  $in call_stmt_1380_call type_cast_1307_1307_delayed_1_0_1373 1
    $buffering  $in call_stmt_1380_call wdata_1369 1
    $buffering  $out call_stmt_1380_call ignore_return_1380 1
    // 			$volatile naddr_offset := (addr_offset + 8 ) $buffering 1
    //  file .Aa/nic.linked.opt.aa, line 489
    // (addr_offset + 8 )
    +[ADD_u16_u16_1384_inst] (addr_offset konst_1383_wire_constant) (naddr_offset_1385)   $flowthrough 
    $delay ADD_u16_u16_1384_inst 0
  }
  // end data-path
  // 		$volatile ethHeaderTag := ((tag << 2 ) | ($bitcast ($uint<8>) 1  )) $buffering 1
  //  file .Aa/nic.linked.opt.aa, line 475
  // ((tag << 2 ) | ($bitcast ($uint<8>) 1  ))
  // (tag << 2 )
  // tag
  // CP-DP links for do-while  do_while_stmt_1349
  //  file .Aa/nic.linked.opt.aa, line 476
  phi_stmt_1351 <=> (branch_block_stmt_1340/do_while_stmt_1349/do_while_stmt_1349_loop_body/phi_stmt_1351_entry_sample_req branch_block_stmt_1340/do_while_stmt_1349/do_while_stmt_1349_loop_body/phi_stmt_1351_loopback_sample_req) (branch_block_stmt_1340/do_while_stmt_1349/do_while_stmt_1349_loop_body/phi_stmt_1351_phi_mux_ack)
  naddr_offset_1385_1355_buf <=> (branch_block_stmt_1340/do_while_stmt_1349/do_while_stmt_1349_loop_body/R_naddr_offset_1355_Sample/req branch_block_stmt_1340/do_while_stmt_1349/do_while_stmt_1349_loop_body/R_naddr_offset_1355_Update/req) (branch_block_stmt_1340/do_while_stmt_1349/do_while_stmt_1349_loop_body/R_naddr_offset_1355_Sample/ack branch_block_stmt_1340/do_while_stmt_1349/do_while_stmt_1349_loop_body/R_naddr_offset_1355_Update/ack)
  phi_stmt_1356 <=> (branch_block_stmt_1340/do_while_stmt_1349/do_while_stmt_1349_loop_body/phi_stmt_1356_entry_sample_req branch_block_stmt_1340/do_while_stmt_1349/do_while_stmt_1349_loop_body/phi_stmt_1356_loopback_sample_req) (branch_block_stmt_1340/do_while_stmt_1349/do_while_stmt_1349_loop_body/phi_stmt_1356_phi_mux_ack)
  // nic_rx_to_header
  RPIPE_nic_rx_to_header_1364_inst <=> (branch_block_stmt_1340/do_while_stmt_1349/do_while_stmt_1349_loop_body/RPIPE_nic_rx_to_header_1364_Sample/rr branch_block_stmt_1340/do_while_stmt_1349/do_while_stmt_1349_loop_body/RPIPE_nic_rx_to_header_1364_Update/cr) (branch_block_stmt_1340/do_while_stmt_1349/do_while_stmt_1349_loop_body/RPIPE_nic_rx_to_header_1364_Sample/ra branch_block_stmt_1340/do_while_stmt_1349/do_while_stmt_1349_loop_body/RPIPE_nic_rx_to_header_1364_Update/ca)
  // 			$volatile wdata := ( $slice ethernet_header 71 8 )  $buffering 1
  //  file .Aa/nic.linked.opt.aa, line 486
  // ethernet_header
  // 			type_cast_1307_1307_delayed_1_0 := ($bitcast ($uint<64>) addr_offset ) $buffering 1 $cut_through // bits of buffering = 64. 
  //  file .Aa/nic.linked.opt.aa, line 487
  // addr_offset
  // ($bitcast ($uint<64>) addr_offset )
  type_cast_1372_inst <=> (branch_block_stmt_1340/do_while_stmt_1349/do_while_stmt_1349_loop_body/type_cast_1372_Sample/rr branch_block_stmt_1340/do_while_stmt_1349/do_while_stmt_1349_loop_body/type_cast_1372_Update/cr) (branch_block_stmt_1340/do_while_stmt_1349/do_while_stmt_1349_loop_body/type_cast_1372_Sample/ra branch_block_stmt_1340/do_while_stmt_1349/do_while_stmt_1349_loop_body/type_cast_1372_Update/ca)
  // 			$call accessMemoryDword (ethHeaderTag WRITEMEM buf_pointer type_cast_1307_1307_delayed_1_0 wdata ) (ignore_return ) 
  //  file .Aa/nic.linked.opt.aa, line 488
  // ethHeaderTag
  // buf_pointer
  // type_cast_1307_1307_delayed_1_0
  // wdata
  call_stmt_1380_call <=> (branch_block_stmt_1340/do_while_stmt_1349/do_while_stmt_1349_loop_body/call_stmt_1380_Sample/crr branch_block_stmt_1340/do_while_stmt_1349/do_while_stmt_1349_loop_body/call_stmt_1380_Update/ccr) (branch_block_stmt_1340/do_while_stmt_1349/do_while_stmt_1349_loop_body/call_stmt_1380_Sample/cra branch_block_stmt_1340/do_while_stmt_1349/do_while_stmt_1349_loop_body/call_stmt_1380_Update/cca)
  // 			$volatile naddr_offset := (addr_offset + 8 ) $buffering 1
  //  file .Aa/nic.linked.opt.aa, line 489
  // (addr_offset + 8 )
  // addr_offset
  // first_time
  do_while_stmt_1349_branch <=> (branch_block_stmt_1340/do_while_stmt_1349/do_while_stmt_1349_loop_body/condition_evaluated) (branch_block_stmt_1340/do_while_stmt_1349/loop_exit/ack branch_block_stmt_1340/do_while_stmt_1349/loop_taken/ack)
}
$module [writePayloadToMem] 
{
  $in tag:$int<8>
  // can point into 
  max_addr_offset:$int<16>
  // can point into  foreign( $void )
  base_buf_pointer:$int<64>
  // can point into  foreign( $void )
  addr_offset:$int<16>
  // can point into 
  $out packet_size_11:$int<11>
  // can point into 
  bad_packet_identifier:$int<1>
  // can point into  foreign( $void )
  last_keep:$int<8>
  // can point into 
  // pipe-declarations for block %writePayloadToMem
  //  file .Aa/nic.linked.opt.aa, line 493
  // pipe-declarations for block %writePayloadToMem%loop
  //  file .Aa/nic.linked.opt.aa, line 498
  // there are no memory spaces local to this module.
  $CP 
  {
    // begin control-path 
    <>[branch_block_stmt_1399] // Branch Block  file .Aa/nic.linked.opt.aa, line 498
    {
      $P [branch_block_stmt_1399__entry__]
      branch_block_stmt_1399__entry__ <-| ($entry)
      $P [branch_block_stmt_1399__exit__]
      branch_block_stmt_1399__exit__ |-> ($exit)
      $P [assign_stmt_1407__entry__] 
      $P [assign_stmt_1407__exit__] 
      $P [do_while_stmt_1408__entry__] 
      $P [do_while_stmt_1408__exit__] 
      ::[assign_stmt_1407] 
      {
        // start: WAR dependencies for payloadTag
        // ignored out-of-scope w_root  tag : $uint<8> 
        // done: WAR dependencies for payloadTag
        // start:  		$volatile payloadTag := ((tag << 2 ) | ($bitcast ($uint<8>) 2  )) $buffering 1
        //  file .Aa/nic.linked.opt.aa, line 500
        // volatile! 
        // Source expression
        // ((tag << 2 ) | ($bitcast ($uint<8>) 2  ))
        // (tag << 2 )
        // tag
        // Target expression
        // (as target) payloadTag
        // start: WAR dependencies for payloadTag
        // ignored out-of-scope w_root  tag : $uint<8> 
        // done: WAR dependencies for payloadTag
        // end:  		$volatile payloadTag := ((tag << 2 ) | ($bitcast ($uint<8>) 2  )) $buffering 1
        // load-store dependencies..
      }
      assign_stmt_1407__entry__ |-> (assign_stmt_1407)
      assign_stmt_1407__exit__ <-| (assign_stmt_1407)
      // do-while-statement  
      //  file .Aa/nic.linked.opt.aa, line 501
      <o> [do_while_stmt_1408]  $depth 15 $buffering 1 
      {
        $P[do_while_stmt_1408__entry__] 
        $P[do_while_stmt_1408__exit__] 
        $P[loop_back] 
        $P[condition_done] 
        $P[loop_body_done] 
        $pipeline [do_while_stmt_1408_loop_body] 
        {
          // Pipelined!
          $T[back_edge_to_loop_body] 
          $T[first_time_through_loop_body] 
          $T[loop_body_start] 
          $T[condition_evaluated] 
          $transitionmerge [entry_tmerge] (back_edge_to_loop_body first_time_through_loop_body) (loop_body_start)
          $entry <-& (loop_body_start)
          $T[aggregated_phi_sample_req] 
          $T[aggregated_phi_sample_ack] 
          $T[aggregated_phi_sample_ack_d] $delay
          aggregated_phi_sample_ack_d <-& (aggregated_phi_sample_ack)
          $T[aggregated_phi_update_req] 
          $T[aggregated_phi_update_ack] 
          // do not loop-back unless all phi's have used up their triggering tokens.
          condition_evaluated <-& (aggregated_phi_update_ack)
          aggregated_phi_sample_req o<-& (aggregated_phi_update_ack 0)
          // start:  multi-source PHI statement phi_stmt_1410
          // 			$phi active_addr_offset := 			  (addr_offset + 8 ) $on   $entry 			  nactive_addr_offset $on   $loopback 
          // type of target is $uint<16>
          $T[phi_stmt_1410_sample_start_] 
          $T[phi_stmt_1410_sample_completed_] 
          $T[phi_stmt_1410_update_start_] 
          $T[phi_stmt_1410_update_completed_] 
          $T[phi_stmt_1410_sample_start__ps] 
          phi_stmt_1410_sample_start__ps <-& (aggregated_phi_sample_req)
          $T[phi_stmt_1410_sample_completed__ps] 
          phi_stmt_1410_sample_completed__ps &-> (aggregated_phi_sample_ack)
          $T[phi_stmt_1410_update_start__ps] 
          phi_stmt_1410_update_start__ps <-& (aggregated_phi_update_req)
          $T[phi_stmt_1410_update_completed__ps] 
          phi_stmt_1410_update_completed_ <-& (phi_stmt_1410_update_completed__ps)
          aggregated_phi_sample_req <-& (phi_stmt_1410_sample_start_)
          aggregated_phi_sample_ack &-> (phi_stmt_1410_sample_completed_)
          aggregated_phi_update_req <-& (phi_stmt_1410_update_start_)
          $T[phi_stmt_1410_loopback_trigger] 
          phi_stmt_1410_loopback_trigger <-& (back_edge_to_loop_body)
          $T[phi_stmt_1410_loopback_sample_req] 
          $T[phi_stmt_1410_loopback_sample_req_ps] 
          phi_stmt_1410_loopback_sample_req <-& (phi_stmt_1410_loopback_sample_req_ps)
          phi_stmt_1410_loopback_sample_req &-> ($null)
          $T[phi_stmt_1410_entry_trigger] 
          phi_stmt_1410_entry_trigger <-& (first_time_through_loop_body)
          $T[phi_stmt_1410_entry_sample_req] 
          $T[phi_stmt_1410_entry_sample_req_ps] 
          phi_stmt_1410_entry_sample_req <-& (phi_stmt_1410_entry_sample_req_ps)
          phi_stmt_1410_entry_sample_req &-> ($null)
          phi_stmt_1410_update_start_ o<-& (phi_stmt_1410_update_completed_ 0)
          phi_stmt_1410_sample_start_ o<-& (phi_stmt_1410_sample_completed_ 1)
          $T[phi_stmt_1410_merged_reqs] 
          $T[phi_stmt_1410_phi_mux_ack] 
          $T[phi_stmt_1410_phi_mux_ack_ps] 
          phi_stmt_1410_phi_mux_ack_ps <-& (phi_stmt_1410_phi_mux_ack)
          aggregated_phi_update_ack <-& (phi_stmt_1410_update_completed_)
          $T[ADD_u16_u16_1414_sample_start__ps] 
          $T[ADD_u16_u16_1414_sample_completed__ps] 
          $T[ADD_u16_u16_1414_update_start__ps] 
          $T[ADD_u16_u16_1414_update_completed__ps] 
          // source expression in Phi alternative 0
          // (addr_offset + 8 )
          $T[ADD_u16_u16_1414_sample_start_] 
          $T[ADD_u16_u16_1414_sample_completed_] 
          $T[ADD_u16_u16_1414_update_start_] 
          $T[ADD_u16_u16_1414_update_completed_] 
          // addr_offset
          // start: Forward dependencies from addr_offset to transition ADD_u16_u16_1414_sample_start_
          // done: Forward dependencies from addr_offset to transition ADD_u16_u16_1414_sample_start_
          ;;[ADD_u16_u16_1414_Sample] 
          {
            // binary expression 
            $T [rr] $T [ra]  // (split) binary operation 
          }
          ;;[ADD_u16_u16_1414_Update] 
          {
            // binary expression 
            $T [cr] $T [ca] // (split) binary operation 
          }
          ADD_u16_u16_1414_sample_start_ &-> (ADD_u16_u16_1414_Sample)
          ADD_u16_u16_1414_sample_completed_ <-& (ADD_u16_u16_1414_Sample)
          ADD_u16_u16_1414_sample_completed_ &-> ($null)
          ADD_u16_u16_1414_update_start_ &-> (ADD_u16_u16_1414_Update)
          ADD_u16_u16_1414_update_completed_ <-& (ADD_u16_u16_1414_Update)
          // RAW reenables for addr_offset
          // self-release: 
          ADD_u16_u16_1414_sample_start_ o<-& (ADD_u16_u16_1414_sample_completed_ 1)
          $null &-> (ADD_u16_u16_1414_update_start_)
          ADD_u16_u16_1414_update_start_ o<-& (ADD_u16_u16_1414_update_completed_ 0)
          // Phi start dependency
          ADD_u16_u16_1414_sample_start_ <-& (ADD_u16_u16_1414_sample_start__ps)
          ADD_u16_u16_1414_update_start_ <-& (ADD_u16_u16_1414_update_start__ps)
          // RAW reenables for (addr_offset + 8 )
          // producer  and  consumer are both determined by PHI statements.
          // Phi complete dependency.
          ADD_u16_u16_1414_sample_completed__ps <-& (ADD_u16_u16_1414_sample_completed_)
          ADD_u16_u16_1414_update_completed__ps <-& (ADD_u16_u16_1414_update_completed_)
          $T[R_nactive_addr_offset_1415_sample_start__ps] 
          $T[R_nactive_addr_offset_1415_sample_completed__ps] 
          $T[R_nactive_addr_offset_1415_update_start__ps] 
          $T[R_nactive_addr_offset_1415_update_completed__ps] 
          // interlock for implicit-variable-ref/signal-read in Phi alternative 1
          $T[R_nactive_addr_offset_1415_sample_start_] 
          $T[R_nactive_addr_offset_1415_sample_completed_] 
          $T[R_nactive_addr_offset_1415_update_start_] 
          $T[R_nactive_addr_offset_1415_update_completed_] 
          ;;[R_nactive_addr_offset_1415_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          R_nactive_addr_offset_1415_sample_start_ &-> (R_nactive_addr_offset_1415_Sample)
          R_nactive_addr_offset_1415_sample_completed_ <-& (R_nactive_addr_offset_1415_Sample)
          ;;[R_nactive_addr_offset_1415_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          R_nactive_addr_offset_1415_update_start_ &-> (R_nactive_addr_offset_1415_Update)
          R_nactive_addr_offset_1415_update_completed_ <-& (R_nactive_addr_offset_1415_Update)
          // RAW reenables for nactive_addr_offset
          // Phi start dependency for implicit/constant alternative.
          R_nactive_addr_offset_1415_sample_start_ <-& (R_nactive_addr_offset_1415_sample_start__ps)
          R_nactive_addr_offset_1415_update_start_ <-& (R_nactive_addr_offset_1415_update_start__ps)
          // Phi complete dependency.
          R_nactive_addr_offset_1415_sample_completed__ps <-& (R_nactive_addr_offset_1415_sample_completed_)
          R_nactive_addr_offset_1415_update_completed__ps <-& (R_nactive_addr_offset_1415_update_completed_)
          $phisequencer [ phi_stmt_1410_phi_seq] : 
          phi_stmt_1410_entry_trigger ADD_u16_u16_1414_sample_start__ps ADD_u16_u16_1414_sample_completed__ps ADD_u16_u16_1414_update_start__ps ADD_u16_u16_1414_update_completed__ps phi_stmt_1410_loopback_trigger R_nactive_addr_offset_1415_sample_start__ps R_nactive_addr_offset_1415_sample_completed__ps R_nactive_addr_offset_1415_update_start__ps R_nactive_addr_offset_1415_update_completed__ps :
          phi_stmt_1410_sample_start__ps phi_stmt_1410_sample_completed__ps phi_stmt_1410_update_start__ps phi_stmt_1410_update_completed__ps :
          phi_stmt_1410_entry_sample_req_ps phi_stmt_1410_loopback_sample_req_ps : 
          phi_stmt_1410_phi_mux_ack_ps
          // done: PHI Statement phi_stmt_1410
          // start:  single source PHI statement phi_stmt_1416
          // 			$phi payload_data := 			  nic_rx_to_packet $on   $entry ,   $loopback 
          // type of target is $uint<73>
          $T[phi_stmt_1416_sample_start_] 
          $T[phi_stmt_1416_sample_completed_] 
          $T[phi_stmt_1416_update_start_] 
          $T[phi_stmt_1416_update_completed_] 
          aggregated_phi_sample_req <-& (phi_stmt_1416_sample_start_)
          aggregated_phi_sample_ack &-> (phi_stmt_1416_sample_completed_)
          aggregated_phi_update_req <-& (phi_stmt_1416_update_start_)
          // non-implicit source expression in single-source phi
          // nic_rx_to_packet
          $T[RPIPE_nic_rx_to_packet_1418_sample_start_] 
          $T[RPIPE_nic_rx_to_packet_1418_sample_completed_] 
          $T[RPIPE_nic_rx_to_packet_1418_update_start_] 
          $T[RPIPE_nic_rx_to_packet_1418_update_completed_] 
          ;;[RPIPE_nic_rx_to_packet_1418_Sample] 
          {
            // pipe read sample
            $T [rr] $T [ra] 
          }
          ;;[RPIPE_nic_rx_to_packet_1418_Update] 
          {
            // pipe read update
            $T [cr] $T [ca] 
          }
          RPIPE_nic_rx_to_packet_1418_sample_start_ &-> (RPIPE_nic_rx_to_packet_1418_Sample)
          RPIPE_nic_rx_to_packet_1418_sample_completed_ <-& (RPIPE_nic_rx_to_packet_1418_Sample)
          RPIPE_nic_rx_to_packet_1418_update_start_ <-& (RPIPE_nic_rx_to_packet_1418_sample_completed_)
          RPIPE_nic_rx_to_packet_1418_update_start_ &-> (RPIPE_nic_rx_to_packet_1418_Update)
          RPIPE_nic_rx_to_packet_1418_update_completed_ <-& (RPIPE_nic_rx_to_packet_1418_Update)
          RPIPE_nic_rx_to_packet_1418_sample_start_ o<-& (RPIPE_nic_rx_to_packet_1418_update_completed_ 0)
          // RAW reenables for nic_rx_to_packet
          // producer  and  consumer are both determined by PHI statements.
          aggregated_phi_sample_req &-> (RPIPE_nic_rx_to_packet_1418_sample_start_)
          aggregated_phi_sample_ack <-& (RPIPE_nic_rx_to_packet_1418_sample_completed_)
          aggregated_phi_update_req &-> (RPIPE_nic_rx_to_packet_1418_update_start_)
          phi_stmt_1416_update_completed_ <-& (RPIPE_nic_rx_to_packet_1418_update_completed_)
          aggregated_phi_update_ack <-& (phi_stmt_1416_update_completed_)
          // done: PHI Statement phi_stmt_1416
          // start: WAR dependencies for last_bit
          // done: WAR dependencies for last_bit
          // start:  			$volatile last_bit := ( $slice payload_data 72 72 )  $buffering 1
          //  file .Aa/nic.linked.opt.aa, line 509
          // volatile! 
          // Source expression
          // ( $slice payload_data 72 72 ) 
          // payload_data
          // Target expression
          // (as target) last_bit
          // start: WAR dependencies for last_bit
          // done: WAR dependencies for last_bit
          // end:  			$volatile last_bit := ( $slice payload_data 72 72 )  $buffering 1
          // start: WAR dependencies for wdata
          // done: WAR dependencies for wdata
          // start:  			$volatile wdata := ( $slice payload_data 71 8 )  $buffering 1
          //  file .Aa/nic.linked.opt.aa, line 510
          // volatile! 
          // Source expression
          // ( $slice payload_data 71 8 ) 
          // payload_data
          // Target expression
          // (as target) wdata
          // start: WAR dependencies for wdata
          // done: WAR dependencies for wdata
          // end:  			$volatile wdata := ( $slice payload_data 71 8 )  $buffering 1
          // start: WAR dependencies for wkeep
          // done: WAR dependencies for wkeep
          // start:  			$volatile wkeep := ( $slice payload_data 7 0 )  $buffering 1
          //  file .Aa/nic.linked.opt.aa, line 511
          // volatile! 
          // Source expression
          // ( $slice payload_data 7 0 ) 
          // payload_data
          // Target expression
          // (as target) wkeep
          // start: WAR dependencies for wkeep
          // done: WAR dependencies for wkeep
          // end:  			$volatile wkeep := ( $slice payload_data 7 0 )  $buffering 1
          // start: WAR dependencies for last_keep
          // done: WAR dependencies for last_keep
          // start:  			$volatile last_keep := wkeep $buffering 1
          //  file .Aa/nic.linked.opt.aa, line 512
          // volatile! 
          // Source expression
          // wkeep
          // Target expression
          // (as target) last_keep
          // last_keep
          // write to interface object
          // start: WAR dependencies for last_keep
          // done: WAR dependencies for last_keep
          // last_keep
          // write to interface object
          // end:  			$volatile last_keep := wkeep $buffering 1
          // start: WAR dependencies for nactive_addr_offset
          // WAR dependency: Read: nactive_addr_offset before Write: 			$volatile nactive_addr_offset := (active_addr_offset + 8 ) $buffering 1
          //  WAR  PHI-PHI dependency ignored...
          // done: WAR dependencies for nactive_addr_offset
          // start:  			$volatile nactive_addr_offset := (active_addr_offset + 8 ) $buffering 1
          //  file .Aa/nic.linked.opt.aa, line 513
          // volatile! 
          // Source expression
          // (active_addr_offset + 8 )
          // active_addr_offset
          // Target expression
          // (as target) nactive_addr_offset
          // start: WAR dependencies for nactive_addr_offset
          // WAR dependency: Read: nactive_addr_offset before Write: 			$volatile nactive_addr_offset := (active_addr_offset + 8 ) $buffering 1
          //  WAR  PHI-PHI dependency ignored...
          // done: WAR dependencies for nactive_addr_offset
          // end:  			$volatile nactive_addr_offset := (active_addr_offset + 8 ) $buffering 1
          // start: WAR dependencies for overflow
          // ignored out-of-scope w_root  max_addr_offset : $uint<16> 
          // done: WAR dependencies for overflow
          // start:  			$volatile overflow := (( ~ last_bit ) & (active_addr_offset == max_addr_offset)) $buffering 1
          //  file .Aa/nic.linked.opt.aa, line 514
          // volatile! 
          // Source expression
          // (( ~ last_bit ) & (active_addr_offset == max_addr_offset))
          // ( ~ last_bit )
          // last_bit
          // (active_addr_offset == max_addr_offset)
          // active_addr_offset
          // max_addr_offset
          // Target expression
          // (as target) overflow
          // start: WAR dependencies for overflow
          // ignored out-of-scope w_root  max_addr_offset : $uint<16> 
          // done: WAR dependencies for overflow
          // end:  			$volatile overflow := (( ~ last_bit ) & (active_addr_offset == max_addr_offset)) $buffering 1
          // start: WAR dependencies for continue_flag
          // ignored out-of-scope w_root  max_addr_offset : $uint<16> 
          // done: WAR dependencies for continue_flag
          // start:  			$volatile continue_flag := (( ~ overflow ) & ( ~ last_bit )) $buffering 1
          //  file .Aa/nic.linked.opt.aa, line 515
          // volatile! 
          // Source expression
          // (( ~ overflow ) & ( ~ last_bit ))
          // ( ~ overflow )
          // overflow
          // ( ~ last_bit )
          // last_bit
          // Target expression
          // (as target) continue_flag
          // start: WAR dependencies for continue_flag
          // ignored out-of-scope w_root  max_addr_offset : $uint<16> 
          // done: WAR dependencies for continue_flag
          // end:  			$volatile continue_flag := (( ~ overflow ) & ( ~ last_bit )) $buffering 1
          // start: 			$call accessMemoryDword (payloadTag WRITEMEM base_buf_pointer ($bitcast ($uint<64>) active_addr_offset ) wdata ) (ignore_return ) 
          //  file .Aa/nic.linked.opt.aa, line 516
          $T[call_stmt_1462_sample_start_] 
          $T[call_stmt_1462_sample_completed_] 
          $T[call_stmt_1462_update_start_] 
          $T[call_stmt_1462_update_completed_] 
          // Call input argument 0
          // payloadTag
          // Call input argument 1
          // Call input argument 2
          // base_buf_pointer
          // Call input argument 3
          // ($bitcast ($uint<64>) active_addr_offset )
          // active_addr_offset
          // Call input argument 4
          // wdata
          // start: Forward dependencies from payloadTag to transition call_stmt_1462_sample_start_
          // done: Forward dependencies from payloadTag to transition call_stmt_1462_sample_start_
          // RAW reenables for payloadTag
          // start: Forward dependencies from base_buf_pointer to transition call_stmt_1462_sample_start_
          // done: Forward dependencies from base_buf_pointer to transition call_stmt_1462_sample_start_
          // RAW reenables for base_buf_pointer
          // start: Forward dependencies from ($bitcast ($uint<64>) active_addr_offset ) to transition call_stmt_1462_sample_start_
          call_stmt_1462_sample_start_ <-& (phi_stmt_1410_update_completed_)
          // done: Forward dependencies from ($bitcast ($uint<64>) active_addr_offset ) to transition call_stmt_1462_sample_start_
          // RAW reenables for ($bitcast ($uint<64>) active_addr_offset )
          phi_stmt_1410_update_start_ o<-& (call_stmt_1462_sample_completed_ 0)
          // start: Forward dependencies from wdata to transition call_stmt_1462_sample_start_
          call_stmt_1462_sample_start_ <-& (phi_stmt_1416_update_completed_)
          // done: Forward dependencies from wdata to transition call_stmt_1462_sample_start_
          // RAW reenables for wdata
          phi_stmt_1416_update_start_ o<-& (call_stmt_1462_sample_completed_ 0)
          ;;[call_stmt_1462_Sample] 
          {
            $T [crr] $T [cra] 
          }
          ;;[call_stmt_1462_Update] 
          {
            $T [ccr] $T [cca] 
          }
          call_stmt_1462_sample_start_ &-> (call_stmt_1462_Sample)
          call_stmt_1462_sample_completed_ <-& (call_stmt_1462_Sample)
          call_stmt_1462_sample_completed_ &-> ($null)
          call_stmt_1462_update_start_ &-> (call_stmt_1462_Update)
          call_stmt_1462_update_completed_ <-& (call_stmt_1462_Update)
          // Call output argument 0
          // (as target) ignore_return
          // self-release: 
          call_stmt_1462_sample_start_ o<-& (call_stmt_1462_sample_completed_ 1)
          $null &-> (call_stmt_1462_update_start_)
          call_stmt_1462_update_start_ o<-& (call_stmt_1462_update_completed_ 0)
          // start: WAR dependencies for ignore_return
          // done: WAR dependencies for ignore_return
          // end: 			$call accessMemoryDword (payloadTag WRITEMEM base_buf_pointer ($bitcast ($uint<64>) active_addr_offset ) wdata ) (ignore_return ) 
          // continue_flag
          $T [loop_body_delay_to_condition_start] $delay
          loop_body_start &-> (loop_body_delay_to_condition_start)
          loop_body_delay_to_condition_start &-> (condition_evaluated)
          // start: Forward dependencies from continue_flag to transition condition_evaluated
          condition_evaluated <-& (phi_stmt_1410_update_completed_)
          condition_evaluated <-& (phi_stmt_1416_update_completed_)
          // done: Forward dependencies from continue_flag to transition condition_evaluated
          condition_evaluated &-> ($null)
          // load-store dependencies..
          // pipe read/write dependencies for pipe MEMORY_TO_NIC_RESPONSE
          // read-dependencies for pipe MEMORY_TO_NIC_RESPONSE
          // write-dependencies for pipe MEMORY_TO_NIC_RESPONSE
          // signal write dependencies for MEMORY_TO_NIC_RESPONSE
          // pipe read/write dependencies for pipe NIC_DEBUG_SIGNAL
          // read-dependencies for pipe NIC_DEBUG_SIGNAL
          // write-dependencies for pipe NIC_DEBUG_SIGNAL
          // signal write dependencies for NIC_DEBUG_SIGNAL
          // pipe read/write dependencies for pipe NIC_TO_MEMORY_REQUEST
          // read-dependencies for pipe NIC_TO_MEMORY_REQUEST
          // write-dependencies for pipe NIC_TO_MEMORY_REQUEST
          // signal write dependencies for NIC_TO_MEMORY_REQUEST
          // pipe read/write dependencies for pipe memory_access_lock
          // read-dependencies for pipe memory_access_lock
          // write-dependencies for pipe memory_access_lock
          // signal write dependencies for memory_access_lock
          // pipe read/write dependencies for pipe nic_rx_to_packet
          // read-dependencies for pipe nic_rx_to_packet
          // write-dependencies for pipe nic_rx_to_packet
          // signal write dependencies for nic_rx_to_packet
        }
        ( first_time_through_loop_body  back_edge_to_loop_body) 
        ( condition_evaluated )
        ;; [loop_exit] 
        {
          $T [ack] 
        }
        ;; [loop_taken] 
        {
          $T [ack] 
        }
        do_while_stmt_1408__entry__ <-| ($entry)
        loop_body_done <-| ( do_while_stmt_1408_loop_body ) 
        condition_done |-> (loop_exit loop_taken)
        do_while_stmt_1408__exit__ |-> ($exit)
        $bind condition_done <= do_while_stmt_1408_loop_body : condition_evaluated
        $bind do_while_stmt_1408__entry__  => do_while_stmt_1408_loop_body : first_time_through_loop_body 
        $bind loop_back  => do_while_stmt_1408_loop_body : back_edge_to_loop_body 
        $terminate (loop_exit loop_taken loop_body_done) (loop_back do_while_stmt_1408__exit__)
      }
      do_while_stmt_1408__entry__ |-> (do_while_stmt_1408)
      do_while_stmt_1408__exit__ <-| (do_while_stmt_1408)
      assign_stmt_1407__entry__ <-| (branch_block_stmt_1399__entry__)
      do_while_stmt_1408__entry__ <-| (assign_stmt_1407__exit__)
      do_while_stmt_1408__exit__ |-> (branch_block_stmt_1399__exit__)
    }
    ::[assign_stmt_1476_to_assign_stmt_1480] 
    {
      // start: WAR dependencies for bad_packet_identifier
      // ignored out-of-scope w_root  max_addr_offset : $uint<16> 
      // ignored out-of-scope w_root 			$phi active_addr_offset := 			  (addr_offset + 8 ) $on   $entry 			  nactive_addr_offset $on   $loopback 
      // type of target is $uint<16>
      // ignored out-of-scope w_root 			$phi payload_data := 			  nic_rx_to_packet $on   $entry ,   $loopback 
      // type of target is $uint<73>
      // done: WAR dependencies for bad_packet_identifier
      // start:  	$volatile bad_packet_identifier := (overflow | ((tdata == BAD_PACKET_DATA) & (last_keep == 0 ))) $buffering 1
      //  file .Aa/nic.linked.opt.aa, line 520
      // volatile! 
      // Source expression
      // (overflow | ((tdata == BAD_PACKET_DATA) & (last_keep == 0 )))
      // overflow
      // ((tdata == BAD_PACKET_DATA) & (last_keep == 0 ))
      // (tdata == BAD_PACKET_DATA)
      // tdata
      // (last_keep == 0 )
      // last_keep
      // Target expression
      // (as target) bad_packet_identifier
      // bad_packet_identifier
      // write to interface object
      // start: WAR dependencies for bad_packet_identifier
      // ignored out-of-scope w_root  max_addr_offset : $uint<16> 
      // ignored out-of-scope w_root 			$phi active_addr_offset := 			  (addr_offset + 8 ) $on   $entry 			  nactive_addr_offset $on   $loopback 
      // type of target is $uint<16>
      // ignored out-of-scope w_root 			$phi payload_data := 			  nic_rx_to_packet $on   $entry ,   $loopback 
      // type of target is $uint<73>
      // done: WAR dependencies for bad_packet_identifier
      // bad_packet_identifier
      // write to interface object
      // end:  	$volatile bad_packet_identifier := (overflow | ((tdata == BAD_PACKET_DATA) & (last_keep == 0 ))) $buffering 1
      // start: WAR dependencies for packet_size_11
      // ignored out-of-scope w_root 			$phi active_addr_offset := 			  (addr_offset + 8 ) $on   $entry 			  nactive_addr_offset $on   $loopback 
      // type of target is $uint<16>
      // done: WAR dependencies for packet_size_11
      // start:  	$volatile packet_size_11 := ($bitcast ($uint<11>) active_addr_offset ) $buffering 1
      //  file .Aa/nic.linked.opt.aa, line 521
      // volatile! 
      // Source expression
      // ($bitcast ($uint<11>) active_addr_offset )
      // active_addr_offset
      // Target expression
      // (as target) packet_size_11
      // packet_size_11
      // write to interface object
      // start: WAR dependencies for packet_size_11
      // ignored out-of-scope w_root 			$phi active_addr_offset := 			  (addr_offset + 8 ) $on   $entry 			  nactive_addr_offset $on   $loopback 
      // type of target is $uint<16>
      // done: WAR dependencies for packet_size_11
      // packet_size_11
      // write to interface object
      // end:  	$volatile packet_size_11 := ($bitcast ($uint<11>) active_addr_offset ) $buffering 1
      // load-store dependencies..
    }
  }
  // end control-path
  $DP 
  {
    // begin data-path 
    // constant-object-declarations for block %writePayloadToMem%loop%
    //  file .Aa/nic.linked.opt.aa, line 503
    // constant-object-declarations for block %writePayloadToMem%loop
    //  file .Aa/nic.linked.opt.aa, line 498
    // constant-object-declarations for block %writePayloadToMem
    //  file .Aa/nic.linked.opt.aa, line 493
    // constant-declarations for block %writePayloadToMem%loop
    //  file .Aa/nic.linked.opt.aa, line 498
    // 2 
    $constant $W[konst_1402_wire_constant] : $int<8> := _b00000010// 2
    // ($bitcast ($uint<8>) 2  )
    $constant $W[type_cast_1405_wire_constant] : $int<8> := _b00000010// 2
    // do-while statement  
    //  file .Aa/nic.linked.opt.aa, line 501
    // constant-declarations for block %writePayloadToMem%loop%
    //  file .Aa/nic.linked.opt.aa, line 503
    // constant-declarations for phi:  			$phi active_addr_offset := 			  (addr_offset + 8 ) $on   $entry 			  nactive_addr_offset $on   $loopback 
    // type of target is $uint<16>
    //  file .Aa/nic.linked.opt.aa, line 504
    // 8 
    $constant $W[konst_1413_wire_constant] : $int<16> := _b0000000000001000// 8
    // constant-declarations for phi:  			$phi payload_data := 			  nic_rx_to_packet $on   $entry ,   $loopback 
    // type of target is $uint<73>
    //  file .Aa/nic.linked.opt.aa, line 506
    // 8 
    $constant $W[konst_1437_wire_constant] : $int<16> := _b0000000000001000// 8
    // 			$call accessMemoryDword (payloadTag WRITEMEM base_buf_pointer ($bitcast ($uint<64>) active_addr_offset ) wdata ) (ignore_return ) 
    //  file .Aa/nic.linked.opt.aa, line 516
    // WRITEMEM
    $constant $W[R_WRITEMEM_1456_wire_constant] : $int<1> := _b0// 0
    // BAD_PACKET_DATA
    $constant $W[R_BAD_PACKET_DATA_1469_wire_constant] : $int<64> := _b1111111111111111111111111111111111111111111111111111111111111111// -1
    // 0 
    $constant $W[konst_1472_wire_constant] : $int<8> := _b00000000// 0
    // block %writePayloadToMem%loop
    //  file .Aa/nic.linked.opt.aa, line 498
    // 		$volatile payloadTag := ((tag << 2 ) | ($bitcast ($uint<8>) 2  )) $buffering 1
    //  file .Aa/nic.linked.opt.aa, line 500
    // (tag << 2 )
    $intermediate $W[SHL_u8_u8_1403_wire] : $int<8>
    // payloadTag
    $W[payloadTag_1407] : $int<8>
    // do-while statement  
    //  file .Aa/nic.linked.opt.aa, line 501
    // merge-statement  
    //  file .Aa/nic.linked.opt.aa, line 503
    // 			$phi active_addr_offset := 			  (addr_offset + 8 ) $on   $entry 			  nactive_addr_offset $on   $loopback 
    // type of target is $uint<16>
    //  file .Aa/nic.linked.opt.aa, line 504
    // (addr_offset + 8 )
    $intermediate $W[ADD_u16_u16_1414_wire] : $int<16>
    $W[nactive_addr_offset_1439_1415_buffered] : $int<16>
    // active_addr_offset
    $W[active_addr_offset_1410] : $int<16>
    // 			$phi payload_data := 			  nic_rx_to_packet $on   $entry ,   $loopback 
    // type of target is $uint<73>
    //  file .Aa/nic.linked.opt.aa, line 506
    // nic_rx_to_packet
    $W[RPIPE_nic_rx_to_packet_1418_wire] : $int<73>
    // payload_data
    $W[payload_data_1416] : $int<73>
    // 			$volatile last_bit := ( $slice payload_data 72 72 )  $buffering 1
    //  file .Aa/nic.linked.opt.aa, line 509
    // last_bit
    $W[last_bit_1423] : $int<1>
    // 			$volatile wdata := ( $slice payload_data 71 8 )  $buffering 1
    //  file .Aa/nic.linked.opt.aa, line 510
    // wdata
    $W[wdata_1427] : $int<64>
    // 			$volatile wkeep := ( $slice payload_data 7 0 )  $buffering 1
    //  file .Aa/nic.linked.opt.aa, line 511
    // wkeep
    $W[wkeep_1431] : $int<8>
    // 			$volatile last_keep := wkeep $buffering 1
    //  file .Aa/nic.linked.opt.aa, line 512
    // last_keep
    // 			$volatile nactive_addr_offset := (active_addr_offset + 8 ) $buffering 1
    //  file .Aa/nic.linked.opt.aa, line 513
    // nactive_addr_offset
    $W[nactive_addr_offset_1439] : $int<16>
    // 			$volatile overflow := (( ~ last_bit ) & (active_addr_offset == max_addr_offset)) $buffering 1
    //  file .Aa/nic.linked.opt.aa, line 514
    // ( ~ last_bit )
    $intermediate $W[NOT_u1_u1_1442_wire] : $int<1>
    // (active_addr_offset == max_addr_offset)
    $intermediate $W[EQ_u16_u1_1445_wire] : $int<1>
    // overflow
    $W[overflow_1447] : $int<1>
    // 			$volatile continue_flag := (( ~ overflow ) & ( ~ last_bit )) $buffering 1
    //  file .Aa/nic.linked.opt.aa, line 515
    // ( ~ overflow )
    $intermediate $W[NOT_u1_u1_1450_wire] : $int<1>
    // ( ~ last_bit )
    $intermediate $W[NOT_u1_u1_1452_wire] : $int<1>
    // continue_flag
    $W[continue_flag_1454] : $int<1>
    // 			$call accessMemoryDword (payloadTag WRITEMEM base_buf_pointer ($bitcast ($uint<64>) active_addr_offset ) wdata ) (ignore_return ) 
    //  file .Aa/nic.linked.opt.aa, line 516
    // ($bitcast ($uint<64>) active_addr_offset )
    $intermediate $W[type_cast_1459_wire] : $int<64>
    // ignore_return
    $W[ignore_return_1462] : $int<64>
    // 	$volatile bad_packet_identifier := (overflow | ((tdata == BAD_PACKET_DATA) & (last_keep == 0 ))) $buffering 1
    //  file .Aa/nic.linked.opt.aa, line 520
    // (tdata == BAD_PACKET_DATA)
    $intermediate $W[EQ_u64_u1_1470_wire] : $int<1>
    // (last_keep == 0 )
    $intermediate $W[EQ_u8_u1_1473_wire] : $int<1>
    // ((tdata == BAD_PACKET_DATA) & (last_keep == 0 ))
    $intermediate $W[AND_u1_u1_1474_wire] : $int<1>
    // bad_packet_identifier
    // 	$volatile packet_size_11 := ($bitcast ($uint<11>) active_addr_offset ) $buffering 1
    //  file .Aa/nic.linked.opt.aa, line 521
    // packet_size_11
    // datapath-instances for block %writePayloadToMem%loop
    //  file .Aa/nic.linked.opt.aa, line 498
    // 		$volatile payloadTag := ((tag << 2 ) | ($bitcast ($uint<8>) 2  )) $buffering 1
    //  file .Aa/nic.linked.opt.aa, line 500
    // (tag << 2 )
    <<[SHL_u8_u8_1403_inst] (tag konst_1402_wire_constant) (SHL_u8_u8_1403_wire)   $flowthrough 
    $delay SHL_u8_u8_1403_inst 0
    // ((tag << 2 ) | ($bitcast ($uint<8>) 2  ))
    |[OR_u8_u8_1406_inst] (SHL_u8_u8_1403_wire type_cast_1405_wire_constant) (payloadTag_1407)   $flowthrough 
    $delay OR_u8_u8_1406_inst 0
    // datapath-instances for do-while  
    //  file .Aa/nic.linked.opt.aa, line 501
    ==0? [do_while_stmt_1408_branch] (continue_flag_1454)
    $flowthrough
    // data-path instances for merge  
    //  file .Aa/nic.linked.opt.aa, line 503
    // 			$phi active_addr_offset := 			  (addr_offset + 8 ) $on   $entry 			  nactive_addr_offset $on   $loopback 
    // type of target is $uint<16>
    //  file .Aa/nic.linked.opt.aa, line 504
    // (addr_offset + 8 )
    +[ADD_u16_u16_1414_inst] (addr_offset konst_1413_wire_constant) (ADD_u16_u16_1414_wire)    $fullrate
    $buffering  $out ADD_u16_u16_1414_inst ADD_u16_u16_1414_wire 1
    $delay ADD_u16_u16_1414_inst 1
    # := [nactive_addr_offset_1439_1415_buf] (nactive_addr_offset_1439) (nactive_addr_offset_1439_1415_buffered)   $in_phi    $fullrate
    $buffering $out nactive_addr_offset_1439_1415_buf nactive_addr_offset_1439_1415_buffered  1
    # $phi [phi_stmt_1410] (ADD_u16_u16_1414_wire nactive_addr_offset_1439_1415_buffered) ( active_addr_offset_1410 ) $fullrate
    // $buffering  $out phi_stmt_1410 active_addr_offset_1410 2
    // 			$phi payload_data := 			  nic_rx_to_packet $on   $entry ,   $loopback 
    // type of target is $uint<73>
    //  file .Aa/nic.linked.opt.aa, line 506
    // nic_rx_to_packet
    $ioport $in [RPIPE_nic_rx_to_packet_1418_inst] (nic_rx_to_packet) (RPIPE_nic_rx_to_packet_1418_wire)  $fullrate 
    $buffering $out RPIPE_nic_rx_to_packet_1418_inst RPIPE_nic_rx_to_packet_1418_wire 1
    # := [ssrc_phi_stmt_1416] (RPIPE_nic_rx_to_packet_1418_wire) (payload_data_1416)     $flowthrough 
    // 			$volatile last_bit := ( $slice payload_data 72 72 )  $buffering 1
    //  file .Aa/nic.linked.opt.aa, line 509
    // ( $slice payload_data 72 72 ) 
    [:] [slice_1422_inst] (payload_data_1416 72 72) (last_bit_1423)  $flowthrough
    $delay slice_1422_inst 0
    // 			$volatile wdata := ( $slice payload_data 71 8 )  $buffering 1
    //  file .Aa/nic.linked.opt.aa, line 510
    // ( $slice payload_data 71 8 ) 
    [:] [slice_1426_inst] (payload_data_1416 71 8) (wdata_1427)  $flowthrough
    $delay slice_1426_inst 0
    // 			$volatile wkeep := ( $slice payload_data 7 0 )  $buffering 1
    //  file .Aa/nic.linked.opt.aa, line 511
    // ( $slice payload_data 7 0 ) 
    [:] [slice_1430_inst] (payload_data_1416 7 0) (wkeep_1431)  $flowthrough
    $delay slice_1430_inst 0
    // 			$volatile last_keep := wkeep $buffering 1
    //  file .Aa/nic.linked.opt.aa, line 512
    # := [W_last_keep_1432_inst] (wkeep_1431) (last_keep)     $flowthrough 
    // 			$volatile nactive_addr_offset := (active_addr_offset + 8 ) $buffering 1
    //  file .Aa/nic.linked.opt.aa, line 513
    // (active_addr_offset + 8 )
    +[ADD_u16_u16_1438_inst] (active_addr_offset_1410 konst_1437_wire_constant) (nactive_addr_offset_1439)   $flowthrough 
    $delay ADD_u16_u16_1438_inst 0
    // 			$volatile overflow := (( ~ last_bit ) & (active_addr_offset == max_addr_offset)) $buffering 1
    //  file .Aa/nic.linked.opt.aa, line 514
    // ( ~ last_bit )
    ~ [NOT_u1_u1_1442_inst] (last_bit_1423) (NOT_u1_u1_1442_wire)   $flowthrough
    $delay NOT_u1_u1_1442_inst 0
    // (active_addr_offset == max_addr_offset)
    ==[EQ_u16_u1_1445_inst] (active_addr_offset_1410 max_addr_offset) (EQ_u16_u1_1445_wire)   $flowthrough 
    $delay EQ_u16_u1_1445_inst 0
    // (( ~ last_bit ) & (active_addr_offset == max_addr_offset))
    &[AND_u1_u1_1446_inst] (NOT_u1_u1_1442_wire EQ_u16_u1_1445_wire) (overflow_1447)   $flowthrough 
    $delay AND_u1_u1_1446_inst 0
    // 			$volatile continue_flag := (( ~ overflow ) & ( ~ last_bit )) $buffering 1
    //  file .Aa/nic.linked.opt.aa, line 515
    // ( ~ overflow )
    ~ [NOT_u1_u1_1450_inst] (overflow_1447) (NOT_u1_u1_1450_wire)   $flowthrough
    $delay NOT_u1_u1_1450_inst 0
    // ( ~ last_bit )
    ~ [NOT_u1_u1_1452_inst] (last_bit_1423) (NOT_u1_u1_1452_wire)   $flowthrough
    $delay NOT_u1_u1_1452_inst 0
    // (( ~ overflow ) & ( ~ last_bit ))
    &[AND_u1_u1_1453_inst] (NOT_u1_u1_1450_wire NOT_u1_u1_1452_wire) (continue_flag_1454)   $flowthrough 
    $delay AND_u1_u1_1453_inst 0
    // 			$call accessMemoryDword (payloadTag WRITEMEM base_buf_pointer ($bitcast ($uint<64>) active_addr_offset ) wdata ) (ignore_return ) 
    //  file .Aa/nic.linked.opt.aa, line 516
    // ($bitcast ($uint<64>) active_addr_offset )
    # := [type_cast_1459_inst] (active_addr_offset_1410) (type_cast_1459_wire)   $flowthrough
    $delay type_cast_1459_inst 0
    $call [call_stmt_1462_call] $module accessMemoryDword(payloadTag_1407 R_WRITEMEM_1456_wire_constant base_buf_pointer type_cast_1459_wire wdata_1427) (ignore_return_1462)   $fullrate
    $delay call_stmt_1462_call 38
    $buffering  $in call_stmt_1462_call payloadTag_1407 1
    $buffering  $in call_stmt_1462_call R_WRITEMEM_1456_wire_constant 1
    $buffering  $in call_stmt_1462_call base_buf_pointer 1
    $buffering  $in call_stmt_1462_call type_cast_1459_wire 1
    $buffering  $in call_stmt_1462_call wdata_1427 1
    $buffering  $out call_stmt_1462_call ignore_return_1462 1
    // 	$volatile bad_packet_identifier := (overflow | ((tdata == BAD_PACKET_DATA) & (last_keep == 0 ))) $buffering 1
    //  file .Aa/nic.linked.opt.aa, line 520
    // (tdata == BAD_PACKET_DATA)
    ==[EQ_u64_u1_1470_inst] (wdata_1427 R_BAD_PACKET_DATA_1469_wire_constant) (EQ_u64_u1_1470_wire)   $flowthrough 
    $delay EQ_u64_u1_1470_inst 0
    // (last_keep == 0 )
    ==[EQ_u8_u1_1473_inst] (last_keep konst_1472_wire_constant) (EQ_u8_u1_1473_wire)   $flowthrough 
    $delay EQ_u8_u1_1473_inst 0
    // ((tdata == BAD_PACKET_DATA) & (last_keep == 0 ))
    &[AND_u1_u1_1474_inst] (EQ_u64_u1_1470_wire EQ_u8_u1_1473_wire) (AND_u1_u1_1474_wire)   $flowthrough 
    $delay AND_u1_u1_1474_inst 0
    // (overflow | ((tdata == BAD_PACKET_DATA) & (last_keep == 0 )))
    |[OR_u1_u1_1475_inst] (overflow_1447 AND_u1_u1_1474_wire) (bad_packet_identifier)   $flowthrough 
    $delay OR_u1_u1_1475_inst 0
    // 	$volatile packet_size_11 := ($bitcast ($uint<11>) active_addr_offset ) $buffering 1
    //  file .Aa/nic.linked.opt.aa, line 521
    // ($bitcast ($uint<11>) active_addr_offset )
    # := [type_cast_1479_inst] (active_addr_offset_1410) (packet_size_11)   $flowthrough
    $delay type_cast_1479_inst 0
  }
  // end data-path
  // 		$volatile payloadTag := ((tag << 2 ) | ($bitcast ($uint<8>) 2  )) $buffering 1
  //  file .Aa/nic.linked.opt.aa, line 500
  // ((tag << 2 ) | ($bitcast ($uint<8>) 2  ))
  // (tag << 2 )
  // tag
  // CP-DP links for do-while  do_while_stmt_1408
  //  file .Aa/nic.linked.opt.aa, line 501
  phi_stmt_1410 <=> (branch_block_stmt_1399/do_while_stmt_1408/do_while_stmt_1408_loop_body/phi_stmt_1410_entry_sample_req branch_block_stmt_1399/do_while_stmt_1408/do_while_stmt_1408_loop_body/phi_stmt_1410_loopback_sample_req) (branch_block_stmt_1399/do_while_stmt_1408/do_while_stmt_1408_loop_body/phi_stmt_1410_phi_mux_ack)
  // (addr_offset + 8 )
  // addr_offset
  ADD_u16_u16_1414_inst <=> (branch_block_stmt_1399/do_while_stmt_1408/do_while_stmt_1408_loop_body/ADD_u16_u16_1414_Sample/rr branch_block_stmt_1399/do_while_stmt_1408/do_while_stmt_1408_loop_body/ADD_u16_u16_1414_Update/cr) (branch_block_stmt_1399/do_while_stmt_1408/do_while_stmt_1408_loop_body/ADD_u16_u16_1414_Sample/ra branch_block_stmt_1399/do_while_stmt_1408/do_while_stmt_1408_loop_body/ADD_u16_u16_1414_Update/ca)
  nactive_addr_offset_1439_1415_buf <=> (branch_block_stmt_1399/do_while_stmt_1408/do_while_stmt_1408_loop_body/R_nactive_addr_offset_1415_Sample/req branch_block_stmt_1399/do_while_stmt_1408/do_while_stmt_1408_loop_body/R_nactive_addr_offset_1415_Update/req) (branch_block_stmt_1399/do_while_stmt_1408/do_while_stmt_1408_loop_body/R_nactive_addr_offset_1415_Sample/ack branch_block_stmt_1399/do_while_stmt_1408/do_while_stmt_1408_loop_body/R_nactive_addr_offset_1415_Update/ack)
  // nic_rx_to_packet
  RPIPE_nic_rx_to_packet_1418_inst <=> (branch_block_stmt_1399/do_while_stmt_1408/do_while_stmt_1408_loop_body/RPIPE_nic_rx_to_packet_1418_Sample/rr branch_block_stmt_1399/do_while_stmt_1408/do_while_stmt_1408_loop_body/RPIPE_nic_rx_to_packet_1418_Update/cr) (branch_block_stmt_1399/do_while_stmt_1408/do_while_stmt_1408_loop_body/RPIPE_nic_rx_to_packet_1418_Sample/ra branch_block_stmt_1399/do_while_stmt_1408/do_while_stmt_1408_loop_body/RPIPE_nic_rx_to_packet_1418_Update/ca)
  // 			$volatile last_bit := ( $slice payload_data 72 72 )  $buffering 1
  //  file .Aa/nic.linked.opt.aa, line 509
  // payload_data
  // 			$volatile wdata := ( $slice payload_data 71 8 )  $buffering 1
  //  file .Aa/nic.linked.opt.aa, line 510
  // payload_data
  // 			$volatile wkeep := ( $slice payload_data 7 0 )  $buffering 1
  //  file .Aa/nic.linked.opt.aa, line 511
  // payload_data
  // 			$volatile last_keep := wkeep $buffering 1
  //  file .Aa/nic.linked.opt.aa, line 512
  // wkeep
  // 			$volatile nactive_addr_offset := (active_addr_offset + 8 ) $buffering 1
  //  file .Aa/nic.linked.opt.aa, line 513
  // (active_addr_offset + 8 )
  // active_addr_offset
  // 			$volatile overflow := (( ~ last_bit ) & (active_addr_offset == max_addr_offset)) $buffering 1
  //  file .Aa/nic.linked.opt.aa, line 514
  // (( ~ last_bit ) & (active_addr_offset == max_addr_offset))
  // last_bit
  // (active_addr_offset == max_addr_offset)
  // active_addr_offset
  // max_addr_offset
  // 			$volatile continue_flag := (( ~ overflow ) & ( ~ last_bit )) $buffering 1
  //  file .Aa/nic.linked.opt.aa, line 515
  // (( ~ overflow ) & ( ~ last_bit ))
  // overflow
  // last_bit
  // 			$call accessMemoryDword (payloadTag WRITEMEM base_buf_pointer ($bitcast ($uint<64>) active_addr_offset ) wdata ) (ignore_return ) 
  //  file .Aa/nic.linked.opt.aa, line 516
  // payloadTag
  // base_buf_pointer
  // active_addr_offset
  // wdata
  call_stmt_1462_call <=> (branch_block_stmt_1399/do_while_stmt_1408/do_while_stmt_1408_loop_body/call_stmt_1462_Sample/crr branch_block_stmt_1399/do_while_stmt_1408/do_while_stmt_1408_loop_body/call_stmt_1462_Update/ccr) (branch_block_stmt_1399/do_while_stmt_1408/do_while_stmt_1408_loop_body/call_stmt_1462_Sample/cra branch_block_stmt_1399/do_while_stmt_1408/do_while_stmt_1408_loop_body/call_stmt_1462_Update/cca)
  // continue_flag
  do_while_stmt_1408_branch <=> (branch_block_stmt_1399/do_while_stmt_1408/do_while_stmt_1408_loop_body/condition_evaluated) (branch_block_stmt_1399/do_while_stmt_1408/loop_exit/ack branch_block_stmt_1399/do_while_stmt_1408/loop_taken/ack)
  // 	$volatile bad_packet_identifier := (overflow | ((tdata == BAD_PACKET_DATA) & (last_keep == 0 ))) $buffering 1
  //  file .Aa/nic.linked.opt.aa, line 520
  // (overflow | ((tdata == BAD_PACKET_DATA) & (last_keep == 0 )))
  // overflow
  // ((tdata == BAD_PACKET_DATA) & (last_keep == 0 ))
  // (tdata == BAD_PACKET_DATA)
  // tdata
  // (last_keep == 0 )
  // last_keep
  // 	$volatile packet_size_11 := ($bitcast ($uint<11>) active_addr_offset ) $buffering 1
  //  file .Aa/nic.linked.opt.aa, line 521
  // active_addr_offset
}
$module [writeControlInformationToMem] 
{
  $in tag:$int<8>
  // can point into 
  base_buffer_pointer:$int<64>
  // can point into  foreign( $void )
  max_addr_offset:$int<16>
  // can point into  foreign( $void )
  packet_size:$int<11>
  // can point into 
  last_keep:$int<8>
  // can point into 
  // pipe-declarations for block %writeControlInformationToMem
  //  file .Aa/nic.linked.opt.aa, line 523
  // there are no memory spaces local to this module.
  $CP 
  {
    // begin control-path 
    ::[assign_stmt_1497_to_call_stmt_1512] 
    {
      // start: WAR dependencies for control_data
      // ignored out-of-scope w_root  max_addr_offset : $uint<16> 
      // ignored out-of-scope w_root  packet_size : $uint<11> 
      // ignored out-of-scope w_root  last_keep : $uint<8> 
      // done: WAR dependencies for control_data
      // start:  	$volatile control_data := ((max_addr_offset && ($bitcast ($uint<29>) _b0  )) && (packet_size && last_keep)) $buffering 1
      //  file .Aa/nic.linked.opt.aa, line 528
      // volatile! 
      // Source expression
      // ((max_addr_offset && ($bitcast ($uint<29>) _b0  )) && (packet_size && last_keep))
      // (max_addr_offset && ($bitcast ($uint<29>) _b0  ))
      // max_addr_offset
      // (packet_size && last_keep)
      // packet_size
      // last_keep
      // Target expression
      // (as target) control_data
      // start: WAR dependencies for control_data
      // ignored out-of-scope w_root  max_addr_offset : $uint<16> 
      // ignored out-of-scope w_root  packet_size : $uint<11> 
      // ignored out-of-scope w_root  last_keep : $uint<8> 
      // done: WAR dependencies for control_data
      // end:  	$volatile control_data := ((max_addr_offset && ($bitcast ($uint<29>) _b0  )) && (packet_size && last_keep)) $buffering 1
      // start: WAR dependencies for ctrlInfoTag
      // ignored out-of-scope w_root  tag : $uint<8> 
      // done: WAR dependencies for ctrlInfoTag
      // start:  	$volatile ctrlInfoTag := ((tag << 2 ) | ($bitcast ($uint<8>) 3  )) $buffering 1
      //  file .Aa/nic.linked.opt.aa, line 529
      // volatile! 
      // Source expression
      // ((tag << 2 ) | ($bitcast ($uint<8>) 3  ))
      // (tag << 2 )
      // tag
      // Target expression
      // (as target) ctrlInfoTag
      // start: WAR dependencies for ctrlInfoTag
      // ignored out-of-scope w_root  tag : $uint<8> 
      // done: WAR dependencies for ctrlInfoTag
      // end:  	$volatile ctrlInfoTag := ((tag << 2 ) | ($bitcast ($uint<8>) 3  )) $buffering 1
      // start: 	$call accessMemoryDword (ctrlInfoTag WRITEMEM base_buffer_pointer 0  control_data ) (ignore_return ) 
      //  file .Aa/nic.linked.opt.aa, line 530
      $T[call_stmt_1512_sample_start_] 
      $T[call_stmt_1512_sample_completed_] 
      $T[call_stmt_1512_update_start_] 
      $T[call_stmt_1512_update_completed_] 
      // Call input argument 0
      // ctrlInfoTag
      // Call input argument 1
      // Call input argument 2
      // base_buffer_pointer
      // Call input argument 3
      // Call input argument 4
      // control_data
      // start: Forward dependencies from ctrlInfoTag to transition call_stmt_1512_sample_start_
      // done: Forward dependencies from ctrlInfoTag to transition call_stmt_1512_sample_start_
      // start: Forward dependencies from base_buffer_pointer to transition call_stmt_1512_sample_start_
      // done: Forward dependencies from base_buffer_pointer to transition call_stmt_1512_sample_start_
      // start: Forward dependencies from control_data to transition call_stmt_1512_sample_start_
      // done: Forward dependencies from control_data to transition call_stmt_1512_sample_start_
      ;;[call_stmt_1512_Sample] 
      {
        $T [crr] $T [cra] 
      }
      ;;[call_stmt_1512_Update] 
      {
        $T [ccr] $T [cca] 
      }
      call_stmt_1512_sample_start_ &-> (call_stmt_1512_Sample)
      call_stmt_1512_sample_completed_ <-& (call_stmt_1512_Sample)
      call_stmt_1512_sample_completed_ &-> ($null)
      call_stmt_1512_update_start_ &-> (call_stmt_1512_Update)
      call_stmt_1512_update_completed_ <-& (call_stmt_1512_Update)
      // Call output argument 0
      // (as target) ignore_return
      // start: WAR dependencies for ignore_return
      // done: WAR dependencies for ignore_return
      // end: 	$call accessMemoryDword (ctrlInfoTag WRITEMEM base_buffer_pointer 0  control_data ) (ignore_return ) 
      // load-store dependencies..
      // pipe read/write dependencies for pipe MEMORY_TO_NIC_RESPONSE
      // read-dependencies for pipe MEMORY_TO_NIC_RESPONSE
      // write-dependencies for pipe MEMORY_TO_NIC_RESPONSE
      // signal write dependencies for MEMORY_TO_NIC_RESPONSE
      // pipe read/write dependencies for pipe NIC_DEBUG_SIGNAL
      // read-dependencies for pipe NIC_DEBUG_SIGNAL
      // write-dependencies for pipe NIC_DEBUG_SIGNAL
      // signal write dependencies for NIC_DEBUG_SIGNAL
      // pipe read/write dependencies for pipe NIC_TO_MEMORY_REQUEST
      // read-dependencies for pipe NIC_TO_MEMORY_REQUEST
      // write-dependencies for pipe NIC_TO_MEMORY_REQUEST
      // signal write dependencies for NIC_TO_MEMORY_REQUEST
      // pipe read/write dependencies for pipe memory_access_lock
      // read-dependencies for pipe memory_access_lock
      // write-dependencies for pipe memory_access_lock
      // signal write dependencies for memory_access_lock
    }
  }
  // end control-path
  $DP 
  {
    // begin data-path 
    // constant-object-declarations for block %writeControlInformationToMem
    //  file .Aa/nic.linked.opt.aa, line 523
    // ($bitcast ($uint<29>) _b0  )
    $constant $W[type_cast_1491_wire_constant] : $int<29> := _b00000000000000000000000000000// 0
    // 2 
    $constant $W[konst_1500_wire_constant] : $int<8> := _b00000010// 2
    // ($bitcast ($uint<8>) 3  )
    $constant $W[type_cast_1503_wire_constant] : $int<8> := _b00000011// 3
    // 	$call accessMemoryDword (ctrlInfoTag WRITEMEM base_buffer_pointer 0  control_data ) (ignore_return ) 
    //  file .Aa/nic.linked.opt.aa, line 530
    // WRITEMEM
    $constant $W[R_WRITEMEM_1507_wire_constant] : $int<1> := _b0// 0
    // 0 
    $constant $W[konst_1509_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000000000// 0
    // 	$volatile control_data := ((max_addr_offset && ($bitcast ($uint<29>) _b0  )) && (packet_size && last_keep)) $buffering 1
    //  file .Aa/nic.linked.opt.aa, line 528
    // (max_addr_offset && ($bitcast ($uint<29>) _b0  ))
    $intermediate $W[CONCAT_u16_u45_1492_wire] : $int<45>
    // (packet_size && last_keep)
    $intermediate $W[CONCAT_u11_u19_1495_wire] : $int<19>
    // control_data
    $W[control_data_1497] : $int<64>
    // 	$volatile ctrlInfoTag := ((tag << 2 ) | ($bitcast ($uint<8>) 3  )) $buffering 1
    //  file .Aa/nic.linked.opt.aa, line 529
    // (tag << 2 )
    $intermediate $W[SHL_u8_u8_1501_wire] : $int<8>
    // ctrlInfoTag
    $W[ctrlInfoTag_1505] : $int<8>
    // 	$call accessMemoryDword (ctrlInfoTag WRITEMEM base_buffer_pointer 0  control_data ) (ignore_return ) 
    //  file .Aa/nic.linked.opt.aa, line 530
    // ignore_return
    $W[ignore_return_1512] : $int<64>
    // 	$volatile control_data := ((max_addr_offset && ($bitcast ($uint<29>) _b0  )) && (packet_size && last_keep)) $buffering 1
    //  file .Aa/nic.linked.opt.aa, line 528
    // (max_addr_offset && ($bitcast ($uint<29>) _b0  ))
    &&[CONCAT_u16_u45_1492_inst] (max_addr_offset type_cast_1491_wire_constant) (CONCAT_u16_u45_1492_wire)   $flowthrough 
    $delay CONCAT_u16_u45_1492_inst 0
    // (packet_size && last_keep)
    &&[CONCAT_u11_u19_1495_inst] (packet_size last_keep) (CONCAT_u11_u19_1495_wire)   $flowthrough 
    $delay CONCAT_u11_u19_1495_inst 0
    // ((max_addr_offset && ($bitcast ($uint<29>) _b0  )) && (packet_size && last_keep))
    &&[CONCAT_u45_u64_1496_inst] (CONCAT_u16_u45_1492_wire CONCAT_u11_u19_1495_wire) (control_data_1497)   $flowthrough 
    $delay CONCAT_u45_u64_1496_inst 0
    // 	$volatile ctrlInfoTag := ((tag << 2 ) | ($bitcast ($uint<8>) 3  )) $buffering 1
    //  file .Aa/nic.linked.opt.aa, line 529
    // (tag << 2 )
    <<[SHL_u8_u8_1501_inst] (tag konst_1500_wire_constant) (SHL_u8_u8_1501_wire)   $flowthrough 
    $delay SHL_u8_u8_1501_inst 0
    // ((tag << 2 ) | ($bitcast ($uint<8>) 3  ))
    |[OR_u8_u8_1504_inst] (SHL_u8_u8_1501_wire type_cast_1503_wire_constant) (ctrlInfoTag_1505)   $flowthrough 
    $delay OR_u8_u8_1504_inst 0
    // 	$call accessMemoryDword (ctrlInfoTag WRITEMEM base_buffer_pointer 0  control_data ) (ignore_return ) 
    //  file .Aa/nic.linked.opt.aa, line 530
    $call [call_stmt_1512_call] $module accessMemoryDword(ctrlInfoTag_1505 R_WRITEMEM_1507_wire_constant base_buffer_pointer konst_1509_wire_constant control_data_1497) (ignore_return_1512)  
    $delay call_stmt_1512_call 38
    $buffering  $in call_stmt_1512_call ctrlInfoTag_1505 1
    $buffering  $in call_stmt_1512_call R_WRITEMEM_1507_wire_constant 1
    $buffering  $in call_stmt_1512_call base_buffer_pointer 1
    $buffering  $in call_stmt_1512_call konst_1509_wire_constant 1
    $buffering  $in call_stmt_1512_call control_data_1497 1
    $buffering  $out call_stmt_1512_call ignore_return_1512 1
  }
  // end data-path
  // 	$volatile control_data := ((max_addr_offset && ($bitcast ($uint<29>) _b0  )) && (packet_size && last_keep)) $buffering 1
  //  file .Aa/nic.linked.opt.aa, line 528
  // ((max_addr_offset && ($bitcast ($uint<29>) _b0  )) && (packet_size && last_keep))
  // (max_addr_offset && ($bitcast ($uint<29>) _b0  ))
  // max_addr_offset
  // (packet_size && last_keep)
  // packet_size
  // last_keep
  // 	$volatile ctrlInfoTag := ((tag << 2 ) | ($bitcast ($uint<8>) 3  )) $buffering 1
  //  file .Aa/nic.linked.opt.aa, line 529
  // ((tag << 2 ) | ($bitcast ($uint<8>) 3  ))
  // (tag << 2 )
  // tag
  // 	$call accessMemoryDword (ctrlInfoTag WRITEMEM base_buffer_pointer 0  control_data ) (ignore_return ) 
  //  file .Aa/nic.linked.opt.aa, line 530
  // ctrlInfoTag
  // base_buffer_pointer
  // control_data
  call_stmt_1512_call <=> (assign_stmt_1497_to_call_stmt_1512/call_stmt_1512_Sample/crr assign_stmt_1497_to_call_stmt_1512/call_stmt_1512_Update/ccr) (assign_stmt_1497_to_call_stmt_1512/call_stmt_1512_Sample/cra assign_stmt_1497_to_call_stmt_1512/call_stmt_1512_Update/cca)
}
$pipeline $depth 31 $buffering 1 $module [loadBuffer] 
{
  $in tag:$int<8>
  // can point into 
  max_addr_offset:$int<16>
  // can point into  foreign( $void )
  rx_buffer_pointer:$int<64>
  // can point into  foreign( $void )
  $out bad_packet_identifier:$int<1>
  // can point into  foreign( $void )
  // pipe-declarations for block %loadBuffer
  //  file .Aa/nic.linked.opt.aa, line 532
  // there are no memory spaces local to this module.
  $CP 
  {
    // begin control-path 
    // pipelined module
    :|:[call_stmt_1522_to_call_stmt_1559] 
    {
      $T [tag_update_enable] 
      $scc_arc tag_update_enable => $entry
      $T [tag_update_enable_out] 
      tag_update_enable &-> (tag_update_enable_out)
      $null &-> (tag_update_enable)
      $T [max_addr_offset_update_enable] 
      $scc_arc max_addr_offset_update_enable => $entry
      $T [max_addr_offset_update_enable_out] 
      max_addr_offset_update_enable &-> (max_addr_offset_update_enable_out)
      $null &-> (max_addr_offset_update_enable)
      $T [rx_buffer_pointer_update_enable] 
      $scc_arc rx_buffer_pointer_update_enable => $entry
      $T [rx_buffer_pointer_update_enable_out] 
      rx_buffer_pointer_update_enable &-> (rx_buffer_pointer_update_enable_out)
      $null &-> (rx_buffer_pointer_update_enable)
      $T [bad_packet_identifier_update_enable] 
      $T [bad_packet_identifier_update_enable_in] 
      $null &-> (bad_packet_identifier_update_enable)
      $null <-& (bad_packet_identifier_update_enable_in) 
      $null &-> (bad_packet_identifier_update_enable)
      $scc_arc $exit => bad_packet_identifier_update_enable
      bad_packet_identifier_update_enable <-& (bad_packet_identifier_update_enable_in) 
      // start: 	$call writeEthernetHeaderToMem (tag rx_buffer_pointer ) (addr_offset_after_eth_header ) 
      //  file .Aa/nic.linked.opt.aa, line 537
      $T[call_stmt_1522_sample_start_] 
      $T[call_stmt_1522_sample_completed_] 
      $T[call_stmt_1522_update_start_] 
      $T[call_stmt_1522_update_completed_] 
      // Call input argument 0
      // tag
      // Call input argument 1
      // rx_buffer_pointer
      // start: Forward dependencies from tag to transition call_stmt_1522_sample_start_
      call_stmt_1522_sample_start_ <-& ($entry)
      // done: Forward dependencies from tag to transition call_stmt_1522_sample_start_
      // RAW reenables for tag
      tag_update_enable o<-& (call_stmt_1522_sample_completed_ 0)
      // start: Forward dependencies from rx_buffer_pointer to transition call_stmt_1522_sample_start_
      call_stmt_1522_sample_start_ <-& ($entry)
      // done: Forward dependencies from rx_buffer_pointer to transition call_stmt_1522_sample_start_
      // RAW reenables for rx_buffer_pointer
      rx_buffer_pointer_update_enable o<-& (call_stmt_1522_sample_completed_ 0)
      ;;[call_stmt_1522_Sample] 
      {
        $T [crr] $T [cra] 
      }
      ;;[call_stmt_1522_Update] 
      {
        $T [ccr] $T [cca] 
      }
      call_stmt_1522_sample_start_ &-> (call_stmt_1522_Sample)
      call_stmt_1522_sample_completed_ <-& (call_stmt_1522_Sample)
      call_stmt_1522_sample_completed_ &-> ($null)
      call_stmt_1522_update_start_ &-> (call_stmt_1522_Update)
      call_stmt_1522_update_completed_ <-& (call_stmt_1522_Update)
      // Call output argument 0
      // (as target) addr_offset_after_eth_header
      // self-release: 
      call_stmt_1522_sample_start_ o<-& (call_stmt_1522_sample_completed_ 1)
      $null &-> (call_stmt_1522_update_start_)
      call_stmt_1522_update_start_ o<-& (call_stmt_1522_update_completed_ 0)
      // start: WAR dependencies for addr_offset_after_eth_header
      // done: WAR dependencies for addr_offset_after_eth_header
      // end: 	$call writeEthernetHeaderToMem (tag rx_buffer_pointer ) (addr_offset_after_eth_header ) 
      // Barrier in pipelined body 
      $T[barrier_stmt_1523_update_completed_] 
      barrier_stmt_1523_update_completed_ <-& (call_stmt_1522_update_completed_)
      // start:  	tag_1454_delayed_4_0 := tag $buffering 4 $cut_through // bits of buffering = 32. 
      //  file .Aa/nic.linked.opt.aa, line 539
      $T[assign_stmt_1526_sample_start_] 
      $T[assign_stmt_1526_sample_completed_] 
      $T[assign_stmt_1526_update_start_] 
      $T[assign_stmt_1526_update_completed_] 
      // Source expression
      // tag
      // Target expression
      // (as target) tag_1454_delayed_4_0
      // both source and target are implicit: use interlock 
      // Interlock 
      ;;[assign_stmt_1526_Sample] 
      {
        $T [req] $T [ack] // interlock-sample.
      }
      ;;[assign_stmt_1526_Update] 
      {
        $T [req] $T [ack] // interlock-update.
      }
      assign_stmt_1526_sample_start_ &-> (assign_stmt_1526_Sample)
      assign_stmt_1526_sample_completed_ <-& (assign_stmt_1526_Sample)
      assign_stmt_1526_sample_completed_ &-> ($null)
      assign_stmt_1526_update_start_ &-> (assign_stmt_1526_Update)
      assign_stmt_1526_update_completed_ <-& (assign_stmt_1526_Update)
      // barrier dependency for statement 
      assign_stmt_1526_sample_start_ <-& (barrier_stmt_1523_update_completed_)
      // start: Forward dependencies from tag to transition assign_stmt_1526_sample_start_
      assign_stmt_1526_sample_start_ <-& ($entry)
      // done: Forward dependencies from tag to transition assign_stmt_1526_sample_start_
      // RAW reenables for tag
      tag_update_enable o<-& (assign_stmt_1526_sample_completed_ 0)
      // self-release: 
      assign_stmt_1526_sample_start_ o<-& (assign_stmt_1526_sample_completed_ 1)
      $null &-> (assign_stmt_1526_update_start_)
      assign_stmt_1526_update_start_ o<-& (assign_stmt_1526_update_completed_ 0)
      // start: WAR dependencies for tag_1454_delayed_4_0
      // done: WAR dependencies for tag_1454_delayed_4_0
      // end:  	tag_1454_delayed_4_0 := tag $buffering 4 $cut_through // bits of buffering = 32. 
      // start:  	max_addr_offset_1455_delayed_4_0 := max_addr_offset $buffering 4 $cut_through // bits of buffering = 64. 
      //  file .Aa/nic.linked.opt.aa, line 540
      $T[assign_stmt_1529_sample_start_] 
      $T[assign_stmt_1529_sample_completed_] 
      $T[assign_stmt_1529_update_start_] 
      $T[assign_stmt_1529_update_completed_] 
      // Source expression
      // max_addr_offset
      // Target expression
      // (as target) max_addr_offset_1455_delayed_4_0
      // both source and target are implicit: use interlock 
      // Interlock 
      ;;[assign_stmt_1529_Sample] 
      {
        $T [req] $T [ack] // interlock-sample.
      }
      ;;[assign_stmt_1529_Update] 
      {
        $T [req] $T [ack] // interlock-update.
      }
      assign_stmt_1529_sample_start_ &-> (assign_stmt_1529_Sample)
      assign_stmt_1529_sample_completed_ <-& (assign_stmt_1529_Sample)
      assign_stmt_1529_sample_completed_ &-> ($null)
      assign_stmt_1529_update_start_ &-> (assign_stmt_1529_Update)
      assign_stmt_1529_update_completed_ <-& (assign_stmt_1529_Update)
      // barrier dependency for statement 
      assign_stmt_1529_sample_start_ <-& (barrier_stmt_1523_update_completed_)
      // start: Forward dependencies from max_addr_offset to transition assign_stmt_1529_sample_start_
      assign_stmt_1529_sample_start_ <-& ($entry)
      // done: Forward dependencies from max_addr_offset to transition assign_stmt_1529_sample_start_
      // RAW reenables for max_addr_offset
      max_addr_offset_update_enable o<-& (assign_stmt_1529_sample_completed_ 0)
      // self-release: 
      assign_stmt_1529_sample_start_ o<-& (assign_stmt_1529_sample_completed_ 1)
      $null &-> (assign_stmt_1529_update_start_)
      assign_stmt_1529_update_start_ o<-& (assign_stmt_1529_update_completed_ 0)
      // start: WAR dependencies for max_addr_offset_1455_delayed_4_0
      // done: WAR dependencies for max_addr_offset_1455_delayed_4_0
      // end:  	max_addr_offset_1455_delayed_4_0 := max_addr_offset $buffering 4 $cut_through // bits of buffering = 64. 
      // start:  	rx_buffer_pointer_1456_delayed_4_0 := rx_buffer_pointer $buffering 4 $cut_through // bits of buffering = 256. 
      //  file .Aa/nic.linked.opt.aa, line 541
      $T[assign_stmt_1532_sample_start_] 
      $T[assign_stmt_1532_sample_completed_] 
      $T[assign_stmt_1532_update_start_] 
      $T[assign_stmt_1532_update_completed_] 
      // Source expression
      // rx_buffer_pointer
      // Target expression
      // (as target) rx_buffer_pointer_1456_delayed_4_0
      // both source and target are implicit: use interlock 
      // Interlock 
      ;;[assign_stmt_1532_Sample] 
      {
        $T [req] $T [ack] // interlock-sample.
      }
      ;;[assign_stmt_1532_Update] 
      {
        $T [req] $T [ack] // interlock-update.
      }
      assign_stmt_1532_sample_start_ &-> (assign_stmt_1532_Sample)
      assign_stmt_1532_sample_completed_ <-& (assign_stmt_1532_Sample)
      assign_stmt_1532_sample_completed_ &-> ($null)
      assign_stmt_1532_update_start_ &-> (assign_stmt_1532_Update)
      assign_stmt_1532_update_completed_ <-& (assign_stmt_1532_Update)
      // barrier dependency for statement 
      assign_stmt_1532_sample_start_ <-& (barrier_stmt_1523_update_completed_)
      // start: Forward dependencies from rx_buffer_pointer to transition assign_stmt_1532_sample_start_
      assign_stmt_1532_sample_start_ <-& ($entry)
      // done: Forward dependencies from rx_buffer_pointer to transition assign_stmt_1532_sample_start_
      // RAW reenables for rx_buffer_pointer
      rx_buffer_pointer_update_enable o<-& (assign_stmt_1532_sample_completed_ 0)
      // self-release: 
      assign_stmt_1532_sample_start_ o<-& (assign_stmt_1532_sample_completed_ 1)
      $null &-> (assign_stmt_1532_update_start_)
      assign_stmt_1532_update_start_ o<-& (assign_stmt_1532_update_completed_ 0)
      // start: WAR dependencies for rx_buffer_pointer_1456_delayed_4_0
      // done: WAR dependencies for rx_buffer_pointer_1456_delayed_4_0
      // end:  	rx_buffer_pointer_1456_delayed_4_0 := rx_buffer_pointer $buffering 4 $cut_through // bits of buffering = 256. 
      // start: 	$call writePayloadToMem (tag_1454_delayed_4_0 max_addr_offset_1455_delayed_4_0 rx_buffer_pointer_1456_delayed_4_0 addr_offset_after_eth_header ) (packet_size bad_packet_identifier last_keep ) 
      //  file .Aa/nic.linked.opt.aa, line 542
      $T[call_stmt_1540_sample_start_] 
      $T[call_stmt_1540_sample_completed_] 
      $T[call_stmt_1540_update_start_] 
      $T[call_stmt_1540_update_completed_] 
      // Call input argument 0
      // tag_1454_delayed_4_0
      // Call input argument 1
      // max_addr_offset_1455_delayed_4_0
      // Call input argument 2
      // rx_buffer_pointer_1456_delayed_4_0
      // Call input argument 3
      // addr_offset_after_eth_header
      // start: Forward dependencies from tag_1454_delayed_4_0 to transition call_stmt_1540_sample_start_
      call_stmt_1540_sample_start_ <-& (assign_stmt_1526_update_completed_)
      // done: Forward dependencies from tag_1454_delayed_4_0 to transition call_stmt_1540_sample_start_
      // RAW reenables for tag_1454_delayed_4_0
      assign_stmt_1526_update_start_ o<-& (call_stmt_1540_sample_completed_ 0)
      // start: Forward dependencies from max_addr_offset_1455_delayed_4_0 to transition call_stmt_1540_sample_start_
      call_stmt_1540_sample_start_ <-& (assign_stmt_1529_update_completed_)
      // done: Forward dependencies from max_addr_offset_1455_delayed_4_0 to transition call_stmt_1540_sample_start_
      // RAW reenables for max_addr_offset_1455_delayed_4_0
      assign_stmt_1529_update_start_ o<-& (call_stmt_1540_sample_completed_ 0)
      // start: Forward dependencies from rx_buffer_pointer_1456_delayed_4_0 to transition call_stmt_1540_sample_start_
      call_stmt_1540_sample_start_ <-& (assign_stmt_1532_update_completed_)
      // done: Forward dependencies from rx_buffer_pointer_1456_delayed_4_0 to transition call_stmt_1540_sample_start_
      // RAW reenables for rx_buffer_pointer_1456_delayed_4_0
      assign_stmt_1532_update_start_ o<-& (call_stmt_1540_sample_completed_ 0)
      // start: Forward dependencies from addr_offset_after_eth_header to transition call_stmt_1540_sample_start_
      call_stmt_1540_sample_start_ <-& (call_stmt_1522_update_completed_)
      // done: Forward dependencies from addr_offset_after_eth_header to transition call_stmt_1540_sample_start_
      // RAW reenables for addr_offset_after_eth_header
      call_stmt_1522_update_start_ o<-& (call_stmt_1540_sample_completed_ 0)
      ;;[call_stmt_1540_Sample] 
      {
        $T [crr] $T [cra] 
      }
      ;;[call_stmt_1540_Update] 
      {
        $T [ccr] $T [cca] 
      }
      call_stmt_1540_sample_start_ &-> (call_stmt_1540_Sample)
      call_stmt_1540_sample_completed_ <-& (call_stmt_1540_Sample)
      call_stmt_1540_sample_completed_ &-> ($null)
      call_stmt_1540_update_start_ &-> (call_stmt_1540_Update)
      call_stmt_1540_update_completed_ <-& (call_stmt_1540_Update)
      // Call output argument 0
      // (as target) packet_size
      // Call output argument 1
      // (as target) bad_packet_identifier
      // bad_packet_identifier
      // write to interface object
      // bad_packet_identifier
      // write to interface object
      call_stmt_1540_update_start_ <-& (bad_packet_identifier_update_enable)
      // Call output argument 2
      // (as target) last_keep
      // self-release: 
      call_stmt_1540_sample_start_ o<-& (call_stmt_1540_sample_completed_ 1)
      $null &-> (call_stmt_1540_update_start_)
      call_stmt_1540_update_start_ o<-& (call_stmt_1540_update_completed_ 0)
      // start: WAR dependencies for packet_size
      // done: WAR dependencies for packet_size
      // start: WAR dependencies for bad_packet_identifier
      // done: WAR dependencies for bad_packet_identifier
      // start: WAR dependencies for last_keep
      // done: WAR dependencies for last_keep
      // end: 	$call writePayloadToMem (tag_1454_delayed_4_0 max_addr_offset_1455_delayed_4_0 rx_buffer_pointer_1456_delayed_4_0 addr_offset_after_eth_header ) (packet_size bad_packet_identifier last_keep ) 
      // start:  	bad_packet_identifier_1462_delayed_8_0 := bad_packet_identifier $buffering 8 $cut_through // bits of buffering = 8. 
      //  file .Aa/nic.linked.opt.aa, line 543
      $T[assign_stmt_1543_sample_start_] 
      $T[assign_stmt_1543_sample_completed_] 
      $T[assign_stmt_1543_update_start_] 
      $T[assign_stmt_1543_update_completed_] 
      // Source expression
      // bad_packet_identifier
      // Target expression
      // (as target) bad_packet_identifier_1462_delayed_8_0
      // both source and target are implicit: use interlock 
      // Interlock 
      ;;[assign_stmt_1543_Sample] 
      {
        $T [req] $T [ack] // interlock-sample.
      }
      ;;[assign_stmt_1543_Update] 
      {
        $T [req] $T [ack] // interlock-update.
      }
      assign_stmt_1543_sample_start_ &-> (assign_stmt_1543_Sample)
      assign_stmt_1543_sample_completed_ <-& (assign_stmt_1543_Sample)
      assign_stmt_1543_sample_completed_ &-> ($null)
      assign_stmt_1543_update_start_ &-> (assign_stmt_1543_Update)
      assign_stmt_1543_update_completed_ <-& (assign_stmt_1543_Update)
      // barrier dependency for statement 
      assign_stmt_1543_sample_start_ <-& (barrier_stmt_1523_update_completed_)
      // start: Forward dependencies from bad_packet_identifier to transition assign_stmt_1543_sample_start_
      assign_stmt_1543_sample_start_ <-& (call_stmt_1540_update_completed_)
      // done: Forward dependencies from bad_packet_identifier to transition assign_stmt_1543_sample_start_
      // RAW reenables for bad_packet_identifier
      call_stmt_1540_update_start_ o<-& (assign_stmt_1543_sample_completed_ 0)
      // self-release: 
      assign_stmt_1543_sample_start_ o<-& (assign_stmt_1543_sample_completed_ 1)
      $null &-> (assign_stmt_1543_update_start_)
      assign_stmt_1543_update_start_ o<-& (assign_stmt_1543_update_completed_ 0)
      // start: WAR dependencies for bad_packet_identifier_1462_delayed_8_0
      // done: WAR dependencies for bad_packet_identifier_1462_delayed_8_0
      // end:  	bad_packet_identifier_1462_delayed_8_0 := bad_packet_identifier $buffering 8 $cut_through // bits of buffering = 8. 
      // start:  	tag_1463_delayed_8_0 := tag $buffering 8 $cut_through // bits of buffering = 64. 
      //  file .Aa/nic.linked.opt.aa, line 544
      $T[assign_stmt_1546_sample_start_] 
      $T[assign_stmt_1546_sample_completed_] 
      $T[assign_stmt_1546_update_start_] 
      $T[assign_stmt_1546_update_completed_] 
      // Source expression
      // tag
      // Target expression
      // (as target) tag_1463_delayed_8_0
      // both source and target are implicit: use interlock 
      // Interlock 
      ;;[assign_stmt_1546_Sample] 
      {
        $T [req] $T [ack] // interlock-sample.
      }
      ;;[assign_stmt_1546_Update] 
      {
        $T [req] $T [ack] // interlock-update.
      }
      assign_stmt_1546_sample_start_ &-> (assign_stmt_1546_Sample)
      assign_stmt_1546_sample_completed_ <-& (assign_stmt_1546_Sample)
      assign_stmt_1546_sample_completed_ &-> ($null)
      assign_stmt_1546_update_start_ &-> (assign_stmt_1546_Update)
      assign_stmt_1546_update_completed_ <-& (assign_stmt_1546_Update)
      // barrier dependency for statement 
      assign_stmt_1546_sample_start_ <-& (barrier_stmt_1523_update_completed_)
      // start: Forward dependencies from tag to transition assign_stmt_1546_sample_start_
      assign_stmt_1546_sample_start_ <-& ($entry)
      // done: Forward dependencies from tag to transition assign_stmt_1546_sample_start_
      // RAW reenables for tag
      tag_update_enable o<-& (assign_stmt_1546_sample_completed_ 0)
      // self-release: 
      assign_stmt_1546_sample_start_ o<-& (assign_stmt_1546_sample_completed_ 1)
      $null &-> (assign_stmt_1546_update_start_)
      assign_stmt_1546_update_start_ o<-& (assign_stmt_1546_update_completed_ 0)
      // start: WAR dependencies for tag_1463_delayed_8_0
      // done: WAR dependencies for tag_1463_delayed_8_0
      // end:  	tag_1463_delayed_8_0 := tag $buffering 8 $cut_through // bits of buffering = 64. 
      // start:  	rx_buffer_pointer_1464_delayed_8_0 := rx_buffer_pointer $buffering 8 $cut_through // bits of buffering = 512. 
      //  file .Aa/nic.linked.opt.aa, line 545
      $T[assign_stmt_1549_sample_start_] 
      $T[assign_stmt_1549_sample_completed_] 
      $T[assign_stmt_1549_update_start_] 
      $T[assign_stmt_1549_update_completed_] 
      // Source expression
      // rx_buffer_pointer
      // Target expression
      // (as target) rx_buffer_pointer_1464_delayed_8_0
      // both source and target are implicit: use interlock 
      // Interlock 
      ;;[assign_stmt_1549_Sample] 
      {
        $T [req] $T [ack] // interlock-sample.
      }
      ;;[assign_stmt_1549_Update] 
      {
        $T [req] $T [ack] // interlock-update.
      }
      assign_stmt_1549_sample_start_ &-> (assign_stmt_1549_Sample)
      assign_stmt_1549_sample_completed_ <-& (assign_stmt_1549_Sample)
      assign_stmt_1549_sample_completed_ &-> ($null)
      assign_stmt_1549_update_start_ &-> (assign_stmt_1549_Update)
      assign_stmt_1549_update_completed_ <-& (assign_stmt_1549_Update)
      // barrier dependency for statement 
      assign_stmt_1549_sample_start_ <-& (barrier_stmt_1523_update_completed_)
      // start: Forward dependencies from rx_buffer_pointer to transition assign_stmt_1549_sample_start_
      assign_stmt_1549_sample_start_ <-& ($entry)
      // done: Forward dependencies from rx_buffer_pointer to transition assign_stmt_1549_sample_start_
      // RAW reenables for rx_buffer_pointer
      rx_buffer_pointer_update_enable o<-& (assign_stmt_1549_sample_completed_ 0)
      // self-release: 
      assign_stmt_1549_sample_start_ o<-& (assign_stmt_1549_sample_completed_ 1)
      $null &-> (assign_stmt_1549_update_start_)
      assign_stmt_1549_update_start_ o<-& (assign_stmt_1549_update_completed_ 0)
      // start: WAR dependencies for rx_buffer_pointer_1464_delayed_8_0
      // done: WAR dependencies for rx_buffer_pointer_1464_delayed_8_0
      // end:  	rx_buffer_pointer_1464_delayed_8_0 := rx_buffer_pointer $buffering 8 $cut_through // bits of buffering = 512. 
      // start:  	max_addr_offset_1465_delayed_8_0 := max_addr_offset $buffering 8 $cut_through // bits of buffering = 128. 
      //  file .Aa/nic.linked.opt.aa, line 546
      $T[assign_stmt_1552_sample_start_] 
      $T[assign_stmt_1552_sample_completed_] 
      $T[assign_stmt_1552_update_start_] 
      $T[assign_stmt_1552_update_completed_] 
      // Source expression
      // max_addr_offset
      // Target expression
      // (as target) max_addr_offset_1465_delayed_8_0
      // both source and target are implicit: use interlock 
      // Interlock 
      ;;[assign_stmt_1552_Sample] 
      {
        $T [req] $T [ack] // interlock-sample.
      }
      ;;[assign_stmt_1552_Update] 
      {
        $T [req] $T [ack] // interlock-update.
      }
      assign_stmt_1552_sample_start_ &-> (assign_stmt_1552_Sample)
      assign_stmt_1552_sample_completed_ <-& (assign_stmt_1552_Sample)
      assign_stmt_1552_sample_completed_ &-> ($null)
      assign_stmt_1552_update_start_ &-> (assign_stmt_1552_Update)
      assign_stmt_1552_update_completed_ <-& (assign_stmt_1552_Update)
      // barrier dependency for statement 
      assign_stmt_1552_sample_start_ <-& (barrier_stmt_1523_update_completed_)
      // start: Forward dependencies from max_addr_offset to transition assign_stmt_1552_sample_start_
      assign_stmt_1552_sample_start_ <-& ($entry)
      // done: Forward dependencies from max_addr_offset to transition assign_stmt_1552_sample_start_
      // RAW reenables for max_addr_offset
      max_addr_offset_update_enable o<-& (assign_stmt_1552_sample_completed_ 0)
      // self-release: 
      assign_stmt_1552_sample_start_ o<-& (assign_stmt_1552_sample_completed_ 1)
      $null &-> (assign_stmt_1552_update_start_)
      assign_stmt_1552_update_start_ o<-& (assign_stmt_1552_update_completed_ 0)
      // start: WAR dependencies for max_addr_offset_1465_delayed_8_0
      // done: WAR dependencies for max_addr_offset_1465_delayed_8_0
      // end:  	max_addr_offset_1465_delayed_8_0 := max_addr_offset $buffering 8 $cut_through // bits of buffering = 128. 
      // start: 	$guard (~bad_packet_identifier_1462_delayed_8_0) $call writeControlInformationToMem (tag_1463_delayed_8_0 rx_buffer_pointer_1464_delayed_8_0 max_addr_offset_1465_delayed_8_0 packet_size last_keep ) () 
      //  file .Aa/nic.linked.opt.aa, line 547
      $T[call_stmt_1559_sample_start_] 
      $T[call_stmt_1559_sample_completed_] 
      $T[call_stmt_1559_update_start_] 
      $T[call_stmt_1559_update_completed_] 
      // Guard expression
      // bad_packet_identifier_1462_delayed_8_0
      // start: Forward dependencies from bad_packet_identifier_1462_delayed_8_0 to transition call_stmt_1559_sample_start_
      call_stmt_1559_sample_start_ <-& (assign_stmt_1543_update_completed_)
      // done: Forward dependencies from bad_packet_identifier_1462_delayed_8_0 to transition call_stmt_1559_sample_start_
      // RAW reenables for bad_packet_identifier_1462_delayed_8_0
      assign_stmt_1543_update_start_ o<-& (call_stmt_1559_sample_completed_ 0)
      // Call input argument 0
      // tag_1463_delayed_8_0
      // Call input argument 1
      // rx_buffer_pointer_1464_delayed_8_0
      // Call input argument 2
      // max_addr_offset_1465_delayed_8_0
      // Call input argument 3
      // packet_size
      // Call input argument 4
      // last_keep
      // start: Forward dependencies from tag_1463_delayed_8_0 to transition call_stmt_1559_sample_start_
      call_stmt_1559_sample_start_ <-& (assign_stmt_1546_update_completed_)
      // done: Forward dependencies from tag_1463_delayed_8_0 to transition call_stmt_1559_sample_start_
      // RAW reenables for tag_1463_delayed_8_0
      assign_stmt_1546_update_start_ o<-& (call_stmt_1559_sample_completed_ 0)
      // start: Forward dependencies from rx_buffer_pointer_1464_delayed_8_0 to transition call_stmt_1559_sample_start_
      call_stmt_1559_sample_start_ <-& (assign_stmt_1549_update_completed_)
      // done: Forward dependencies from rx_buffer_pointer_1464_delayed_8_0 to transition call_stmt_1559_sample_start_
      // RAW reenables for rx_buffer_pointer_1464_delayed_8_0
      assign_stmt_1549_update_start_ o<-& (call_stmt_1559_sample_completed_ 0)
      // start: Forward dependencies from max_addr_offset_1465_delayed_8_0 to transition call_stmt_1559_sample_start_
      call_stmt_1559_sample_start_ <-& (assign_stmt_1552_update_completed_)
      // done: Forward dependencies from max_addr_offset_1465_delayed_8_0 to transition call_stmt_1559_sample_start_
      // RAW reenables for max_addr_offset_1465_delayed_8_0
      assign_stmt_1552_update_start_ o<-& (call_stmt_1559_sample_completed_ 0)
      // start: Forward dependencies from packet_size to transition call_stmt_1559_sample_start_
      call_stmt_1559_sample_start_ <-& (call_stmt_1540_update_completed_)
      // done: Forward dependencies from packet_size to transition call_stmt_1559_sample_start_
      // RAW reenables for packet_size
      call_stmt_1540_update_start_ o<-& (call_stmt_1559_sample_completed_ 0)
      // start: Forward dependencies from last_keep to transition call_stmt_1559_sample_start_
      call_stmt_1559_sample_start_ <-& (call_stmt_1540_update_completed_)
      // done: Forward dependencies from last_keep to transition call_stmt_1559_sample_start_
      // RAW reenables for last_keep
      call_stmt_1540_update_start_ o<-& (call_stmt_1559_sample_completed_ 0)
      ;;[call_stmt_1559_Sample] 
      {
        $T [crr] $T [cra] 
      }
      ;;[call_stmt_1559_Update] 
      {
        $T [ccr] $T [cca] 
      }
      call_stmt_1559_sample_start_ &-> (call_stmt_1559_Sample)
      call_stmt_1559_sample_completed_ <-& (call_stmt_1559_Sample)
      call_stmt_1559_sample_completed_ &-> ($null)
      call_stmt_1559_update_start_ &-> (call_stmt_1559_Update)
      call_stmt_1559_update_completed_ <-& (call_stmt_1559_Update)
      // self-release: 
      call_stmt_1559_sample_start_ o<-& (call_stmt_1559_sample_completed_ 1)
      $null &-> (call_stmt_1559_update_start_)
      call_stmt_1559_update_start_ o<-& (call_stmt_1559_update_completed_ 0)
      // end: 	$guard (~bad_packet_identifier_1462_delayed_8_0) $call writeControlInformationToMem (tag_1463_delayed_8_0 rx_buffer_pointer_1464_delayed_8_0 max_addr_offset_1465_delayed_8_0 packet_size last_keep ) () 
      // load-store dependencies..
      // pipe read/write dependencies for pipe MEMORY_TO_NIC_RESPONSE
      // read-dependencies for pipe MEMORY_TO_NIC_RESPONSE
      call_stmt_1540_sample_start_ <-& (call_stmt_1522_update_completed_)
      call_stmt_1559_sample_start_ <-& (call_stmt_1540_update_completed_)
      // ring dependency in pipeline.
      // function call expression/statement ...
      call_stmt_1522_sample_start_ o<-& (call_stmt_1559_update_completed_ 0)
      // write-dependencies for pipe MEMORY_TO_NIC_RESPONSE
      // signal write dependencies for MEMORY_TO_NIC_RESPONSE
      // pipe read/write dependencies for pipe NIC_DEBUG_SIGNAL
      // read-dependencies for pipe NIC_DEBUG_SIGNAL
      // write-dependencies for pipe NIC_DEBUG_SIGNAL
      // signal write dependencies for NIC_DEBUG_SIGNAL
      call_stmt_1540_sample_start_ <-& (call_stmt_1522_update_completed_)
      call_stmt_1559_sample_start_ <-& (call_stmt_1540_update_completed_)
      // ring dependency in pipeline.
      call_stmt_1522_sample_start_ o<-& (call_stmt_1559_update_completed_ 0)
      // pipe read/write dependencies for pipe NIC_TO_MEMORY_REQUEST
      // read-dependencies for pipe NIC_TO_MEMORY_REQUEST
      // write-dependencies for pipe NIC_TO_MEMORY_REQUEST
      call_stmt_1540_sample_start_ <-& (call_stmt_1522_update_completed_)
      call_stmt_1559_sample_start_ <-& (call_stmt_1540_update_completed_)
      // ring dependency in pipeline.
      call_stmt_1522_sample_start_ o<-& (call_stmt_1559_update_completed_ 0)
      // signal write dependencies for NIC_TO_MEMORY_REQUEST
      // pipe read/write dependencies for pipe memory_access_lock
      // read-dependencies for pipe memory_access_lock
      // write-dependencies for pipe memory_access_lock
      call_stmt_1540_sample_start_ <-& (call_stmt_1522_update_completed_)
      call_stmt_1559_sample_start_ <-& (call_stmt_1540_update_completed_)
      // ring dependency in pipeline.
      call_stmt_1522_sample_start_ o<-& (call_stmt_1559_update_completed_ 0)
      // signal write dependencies for memory_access_lock
      // pipe read/write dependencies for pipe nic_rx_to_header
      // read-dependencies for pipe nic_rx_to_header
      // write-dependencies for pipe nic_rx_to_header
      // signal write dependencies for nic_rx_to_header
      // pipe read/write dependencies for pipe nic_rx_to_packet
      // read-dependencies for pipe nic_rx_to_packet
      // write-dependencies for pipe nic_rx_to_packet
      // signal write dependencies for nic_rx_to_packet
    }
    ( bad_packet_identifier_update_enable_in)
    ( tag_update_enable_out max_addr_offset_update_enable_out rx_buffer_pointer_update_enable_out)
    $P [tag_update_enable] 
    $P [max_addr_offset_update_enable] 
    $P [rx_buffer_pointer_update_enable] 
    $P [bad_packet_identifier_update_enable] 
    $bind tag_update_enable <= call_stmt_1522_to_call_stmt_1559 : tag_update_enable_out
    $bind max_addr_offset_update_enable <= call_stmt_1522_to_call_stmt_1559 : max_addr_offset_update_enable_out
    $bind rx_buffer_pointer_update_enable <= call_stmt_1522_to_call_stmt_1559 : rx_buffer_pointer_update_enable_out
    $bind bad_packet_identifier_update_enable => call_stmt_1522_to_call_stmt_1559 : bad_packet_identifier_update_enable_in
  }
  // end control-path
  $DP 
  {
    // begin data-path 
    // constant-object-declarations for block %loadBuffer
    //  file .Aa/nic.linked.opt.aa, line 532
    // 	$call writeEthernetHeaderToMem (tag rx_buffer_pointer ) (addr_offset_after_eth_header ) 
    //  file .Aa/nic.linked.opt.aa, line 537
    // 	$call writePayloadToMem (tag_1454_delayed_4_0 max_addr_offset_1455_delayed_4_0 rx_buffer_pointer_1456_delayed_4_0 addr_offset_after_eth_header ) (packet_size bad_packet_identifier last_keep ) 
    //  file .Aa/nic.linked.opt.aa, line 542
    // 	$guard (~bad_packet_identifier_1462_delayed_8_0) $call writeControlInformationToMem (tag_1463_delayed_8_0 rx_buffer_pointer_1464_delayed_8_0 max_addr_offset_1465_delayed_8_0 packet_size last_keep ) () 
    //  file .Aa/nic.linked.opt.aa, line 547
    // 	$call writeEthernetHeaderToMem (tag rx_buffer_pointer ) (addr_offset_after_eth_header ) 
    //  file .Aa/nic.linked.opt.aa, line 537
    // addr_offset_after_eth_header
    $W[addr_offset_after_eth_header_1522] : $int<16>
    // 	tag_1454_delayed_4_0 := tag $buffering 4 $cut_through // bits of buffering = 32. 
    //  file .Aa/nic.linked.opt.aa, line 539
    // tag_1454_delayed_4_0
    $W[tag_1454_delayed_4_0_1526] : $int<8>
    // 	max_addr_offset_1455_delayed_4_0 := max_addr_offset $buffering 4 $cut_through // bits of buffering = 64. 
    //  file .Aa/nic.linked.opt.aa, line 540
    // max_addr_offset_1455_delayed_4_0
    $W[max_addr_offset_1455_delayed_4_0_1529] : $int<16>
    // 	rx_buffer_pointer_1456_delayed_4_0 := rx_buffer_pointer $buffering 4 $cut_through // bits of buffering = 256. 
    //  file .Aa/nic.linked.opt.aa, line 541
    // rx_buffer_pointer_1456_delayed_4_0
    $W[rx_buffer_pointer_1456_delayed_4_0_1532] : $int<64>
    // 	$call writePayloadToMem (tag_1454_delayed_4_0 max_addr_offset_1455_delayed_4_0 rx_buffer_pointer_1456_delayed_4_0 addr_offset_after_eth_header ) (packet_size bad_packet_identifier last_keep ) 
    //  file .Aa/nic.linked.opt.aa, line 542
    // packet_size
    $W[packet_size_1540] : $int<11>
    // bad_packet_identifier
    // last_keep
    $W[last_keep_1540] : $int<8>
    // 	bad_packet_identifier_1462_delayed_8_0 := bad_packet_identifier $buffering 8 $cut_through // bits of buffering = 8. 
    //  file .Aa/nic.linked.opt.aa, line 543
    // bad_packet_identifier_1462_delayed_8_0
    $W[bad_packet_identifier_1462_delayed_8_0_1543] : $int<1>
    // 	tag_1463_delayed_8_0 := tag $buffering 8 $cut_through // bits of buffering = 64. 
    //  file .Aa/nic.linked.opt.aa, line 544
    // tag_1463_delayed_8_0
    $W[tag_1463_delayed_8_0_1546] : $int<8>
    // 	rx_buffer_pointer_1464_delayed_8_0 := rx_buffer_pointer $buffering 8 $cut_through // bits of buffering = 512. 
    //  file .Aa/nic.linked.opt.aa, line 545
    // rx_buffer_pointer_1464_delayed_8_0
    $W[rx_buffer_pointer_1464_delayed_8_0_1549] : $int<64>
    // 	max_addr_offset_1465_delayed_8_0 := max_addr_offset $buffering 8 $cut_through // bits of buffering = 128. 
    //  file .Aa/nic.linked.opt.aa, line 546
    // max_addr_offset_1465_delayed_8_0
    $W[max_addr_offset_1465_delayed_8_0_1552] : $int<16>
    // 	$guard (~bad_packet_identifier_1462_delayed_8_0) $call writeControlInformationToMem (tag_1463_delayed_8_0 rx_buffer_pointer_1464_delayed_8_0 max_addr_offset_1465_delayed_8_0 packet_size last_keep ) () 
    //  file .Aa/nic.linked.opt.aa, line 547
    // 	$call writeEthernetHeaderToMem (tag rx_buffer_pointer ) (addr_offset_after_eth_header ) 
    //  file .Aa/nic.linked.opt.aa, line 537
    $call [call_stmt_1522_call] $module writeEthernetHeaderToMem(tag rx_buffer_pointer) (addr_offset_after_eth_header_1522)  
    $delay call_stmt_1522_call 4
    $buffering  $in call_stmt_1522_call tag 1
    $buffering  $in call_stmt_1522_call rx_buffer_pointer 1
    $buffering  $out call_stmt_1522_call addr_offset_after_eth_header_1522 1
    // 	tag_1454_delayed_4_0 := tag $buffering 4 $cut_through // bits of buffering = 32. 
    //  file .Aa/nic.linked.opt.aa, line 539
    # := [W_tag_1454_delayed_4_0_1524_inst] (tag) (tag_1454_delayed_4_0_1526)  $cut_through    
    $buffering  $out W_tag_1454_delayed_4_0_1524_inst tag_1454_delayed_4_0_1526 4
    // 	max_addr_offset_1455_delayed_4_0 := max_addr_offset $buffering 4 $cut_through // bits of buffering = 64. 
    //  file .Aa/nic.linked.opt.aa, line 540
    # := [W_max_addr_offset_1455_delayed_4_0_1527_inst] (max_addr_offset) (max_addr_offset_1455_delayed_4_0_1529)  $cut_through    
    $buffering  $out W_max_addr_offset_1455_delayed_4_0_1527_inst max_addr_offset_1455_delayed_4_0_1529 4
    // 	rx_buffer_pointer_1456_delayed_4_0 := rx_buffer_pointer $buffering 4 $cut_through // bits of buffering = 256. 
    //  file .Aa/nic.linked.opt.aa, line 541
    # := [W_rx_buffer_pointer_1456_delayed_4_0_1530_inst] (rx_buffer_pointer) (rx_buffer_pointer_1456_delayed_4_0_1532)  $cut_through    
    $buffering  $out W_rx_buffer_pointer_1456_delayed_4_0_1530_inst rx_buffer_pointer_1456_delayed_4_0_1532 4
    // 	$call writePayloadToMem (tag_1454_delayed_4_0 max_addr_offset_1455_delayed_4_0 rx_buffer_pointer_1456_delayed_4_0 addr_offset_after_eth_header ) (packet_size bad_packet_identifier last_keep ) 
    //  file .Aa/nic.linked.opt.aa, line 542
    $call [call_stmt_1540_call] $module writePayloadToMem(tag_1454_delayed_4_0_1526 max_addr_offset_1455_delayed_4_0_1529 rx_buffer_pointer_1456_delayed_4_0_1532 addr_offset_after_eth_header_1522) (packet_size_1540 bad_packet_identifier last_keep_1540)  
    $delay call_stmt_1540_call 4
    $buffering  $in call_stmt_1540_call tag_1454_delayed_4_0_1526 1
    $buffering  $in call_stmt_1540_call max_addr_offset_1455_delayed_4_0_1529 1
    $buffering  $in call_stmt_1540_call rx_buffer_pointer_1456_delayed_4_0_1532 1
    $buffering  $in call_stmt_1540_call addr_offset_after_eth_header_1522 1
    $buffering  $out call_stmt_1540_call packet_size_1540 1
    $buffering  $out call_stmt_1540_call bad_packet_identifier 1
    $buffering  $out call_stmt_1540_call last_keep_1540 1
    // 	bad_packet_identifier_1462_delayed_8_0 := bad_packet_identifier $buffering 8 $cut_through // bits of buffering = 8. 
    //  file .Aa/nic.linked.opt.aa, line 543
    # := [W_bad_packet_identifier_1462_delayed_8_0_1541_inst] (bad_packet_identifier) (bad_packet_identifier_1462_delayed_8_0_1543)  $cut_through    
    $buffering  $out W_bad_packet_identifier_1462_delayed_8_0_1541_inst bad_packet_identifier_1462_delayed_8_0_1543 8
    // 	tag_1463_delayed_8_0 := tag $buffering 8 $cut_through // bits of buffering = 64. 
    //  file .Aa/nic.linked.opt.aa, line 544
    # := [W_tag_1463_delayed_8_0_1544_inst] (tag) (tag_1463_delayed_8_0_1546)  $cut_through    
    $buffering  $out W_tag_1463_delayed_8_0_1544_inst tag_1463_delayed_8_0_1546 8
    // 	rx_buffer_pointer_1464_delayed_8_0 := rx_buffer_pointer $buffering 8 $cut_through // bits of buffering = 512. 
    //  file .Aa/nic.linked.opt.aa, line 545
    # := [W_rx_buffer_pointer_1464_delayed_8_0_1547_inst] (rx_buffer_pointer) (rx_buffer_pointer_1464_delayed_8_0_1549)  $cut_through    
    $buffering  $out W_rx_buffer_pointer_1464_delayed_8_0_1547_inst rx_buffer_pointer_1464_delayed_8_0_1549 8
    // 	max_addr_offset_1465_delayed_8_0 := max_addr_offset $buffering 8 $cut_through // bits of buffering = 128. 
    //  file .Aa/nic.linked.opt.aa, line 546
    # := [W_max_addr_offset_1465_delayed_8_0_1550_inst] (max_addr_offset) (max_addr_offset_1465_delayed_8_0_1552)  $cut_through    
    $buffering  $out W_max_addr_offset_1465_delayed_8_0_1550_inst max_addr_offset_1465_delayed_8_0_1552 8
    // 	$guard (~bad_packet_identifier_1462_delayed_8_0) $call writeControlInformationToMem (tag_1463_delayed_8_0 rx_buffer_pointer_1464_delayed_8_0 max_addr_offset_1465_delayed_8_0 packet_size last_keep ) () 
    //  file .Aa/nic.linked.opt.aa, line 547
    $call [call_stmt_1559_call] $module writeControlInformationToMem(tag_1463_delayed_8_0_1546 rx_buffer_pointer_1464_delayed_8_0_1549 max_addr_offset_1465_delayed_8_0_1552 packet_size_1540 last_keep_1540) () $guard ( ~ bad_packet_identifier_1462_delayed_8_0_1543 )  
    $delay call_stmt_1559_call 4
    $buffering  $in call_stmt_1559_call tag_1463_delayed_8_0_1546 1
    $buffering  $in call_stmt_1559_call rx_buffer_pointer_1464_delayed_8_0_1549 1
    $buffering  $in call_stmt_1559_call max_addr_offset_1465_delayed_8_0_1552 1
    $buffering  $in call_stmt_1559_call packet_size_1540 1
    $buffering  $in call_stmt_1559_call last_keep_1540 1
  }
  // end data-path
  // 	$call writeEthernetHeaderToMem (tag rx_buffer_pointer ) (addr_offset_after_eth_header ) 
  //  file .Aa/nic.linked.opt.aa, line 537
  // tag
  // rx_buffer_pointer
  call_stmt_1522_call <=> (call_stmt_1522_to_call_stmt_1559/call_stmt_1522_Sample/crr call_stmt_1522_to_call_stmt_1559/call_stmt_1522_Update/ccr) (call_stmt_1522_to_call_stmt_1559/call_stmt_1522_Sample/cra call_stmt_1522_to_call_stmt_1559/call_stmt_1522_Update/cca)
  // 	tag_1454_delayed_4_0 := tag $buffering 4 $cut_through // bits of buffering = 32. 
  //  file .Aa/nic.linked.opt.aa, line 539
  // tag
  W_tag_1454_delayed_4_0_1524_inst <=> (call_stmt_1522_to_call_stmt_1559/assign_stmt_1526_Sample/req call_stmt_1522_to_call_stmt_1559/assign_stmt_1526_Update/req) (call_stmt_1522_to_call_stmt_1559/assign_stmt_1526_Sample/ack call_stmt_1522_to_call_stmt_1559/assign_stmt_1526_Update/ack)
  // 	max_addr_offset_1455_delayed_4_0 := max_addr_offset $buffering 4 $cut_through // bits of buffering = 64. 
  //  file .Aa/nic.linked.opt.aa, line 540
  // max_addr_offset
  W_max_addr_offset_1455_delayed_4_0_1527_inst <=> (call_stmt_1522_to_call_stmt_1559/assign_stmt_1529_Sample/req call_stmt_1522_to_call_stmt_1559/assign_stmt_1529_Update/req) (call_stmt_1522_to_call_stmt_1559/assign_stmt_1529_Sample/ack call_stmt_1522_to_call_stmt_1559/assign_stmt_1529_Update/ack)
  // 	rx_buffer_pointer_1456_delayed_4_0 := rx_buffer_pointer $buffering 4 $cut_through // bits of buffering = 256. 
  //  file .Aa/nic.linked.opt.aa, line 541
  // rx_buffer_pointer
  W_rx_buffer_pointer_1456_delayed_4_0_1530_inst <=> (call_stmt_1522_to_call_stmt_1559/assign_stmt_1532_Sample/req call_stmt_1522_to_call_stmt_1559/assign_stmt_1532_Update/req) (call_stmt_1522_to_call_stmt_1559/assign_stmt_1532_Sample/ack call_stmt_1522_to_call_stmt_1559/assign_stmt_1532_Update/ack)
  // 	$call writePayloadToMem (tag_1454_delayed_4_0 max_addr_offset_1455_delayed_4_0 rx_buffer_pointer_1456_delayed_4_0 addr_offset_after_eth_header ) (packet_size bad_packet_identifier last_keep ) 
  //  file .Aa/nic.linked.opt.aa, line 542
  // tag_1454_delayed_4_0
  // max_addr_offset_1455_delayed_4_0
  // rx_buffer_pointer_1456_delayed_4_0
  // addr_offset_after_eth_header
  call_stmt_1540_call <=> (call_stmt_1522_to_call_stmt_1559/call_stmt_1540_Sample/crr call_stmt_1522_to_call_stmt_1559/call_stmt_1540_Update/ccr) (call_stmt_1522_to_call_stmt_1559/call_stmt_1540_Sample/cra call_stmt_1522_to_call_stmt_1559/call_stmt_1540_Update/cca)
  // 	bad_packet_identifier_1462_delayed_8_0 := bad_packet_identifier $buffering 8 $cut_through // bits of buffering = 8. 
  //  file .Aa/nic.linked.opt.aa, line 543
  // bad_packet_identifier
  W_bad_packet_identifier_1462_delayed_8_0_1541_inst <=> (call_stmt_1522_to_call_stmt_1559/assign_stmt_1543_Sample/req call_stmt_1522_to_call_stmt_1559/assign_stmt_1543_Update/req) (call_stmt_1522_to_call_stmt_1559/assign_stmt_1543_Sample/ack call_stmt_1522_to_call_stmt_1559/assign_stmt_1543_Update/ack)
  // 	tag_1463_delayed_8_0 := tag $buffering 8 $cut_through // bits of buffering = 64. 
  //  file .Aa/nic.linked.opt.aa, line 544
  // tag
  W_tag_1463_delayed_8_0_1544_inst <=> (call_stmt_1522_to_call_stmt_1559/assign_stmt_1546_Sample/req call_stmt_1522_to_call_stmt_1559/assign_stmt_1546_Update/req) (call_stmt_1522_to_call_stmt_1559/assign_stmt_1546_Sample/ack call_stmt_1522_to_call_stmt_1559/assign_stmt_1546_Update/ack)
  // 	rx_buffer_pointer_1464_delayed_8_0 := rx_buffer_pointer $buffering 8 $cut_through // bits of buffering = 512. 
  //  file .Aa/nic.linked.opt.aa, line 545
  // rx_buffer_pointer
  W_rx_buffer_pointer_1464_delayed_8_0_1547_inst <=> (call_stmt_1522_to_call_stmt_1559/assign_stmt_1549_Sample/req call_stmt_1522_to_call_stmt_1559/assign_stmt_1549_Update/req) (call_stmt_1522_to_call_stmt_1559/assign_stmt_1549_Sample/ack call_stmt_1522_to_call_stmt_1559/assign_stmt_1549_Update/ack)
  // 	max_addr_offset_1465_delayed_8_0 := max_addr_offset $buffering 8 $cut_through // bits of buffering = 128. 
  //  file .Aa/nic.linked.opt.aa, line 546
  // max_addr_offset
  W_max_addr_offset_1465_delayed_8_0_1550_inst <=> (call_stmt_1522_to_call_stmt_1559/assign_stmt_1552_Sample/req call_stmt_1522_to_call_stmt_1559/assign_stmt_1552_Update/req) (call_stmt_1522_to_call_stmt_1559/assign_stmt_1552_Sample/ack call_stmt_1522_to_call_stmt_1559/assign_stmt_1552_Update/ack)
  // 	$guard (~bad_packet_identifier_1462_delayed_8_0) $call writeControlInformationToMem (tag_1463_delayed_8_0 rx_buffer_pointer_1464_delayed_8_0 max_addr_offset_1465_delayed_8_0 packet_size last_keep ) () 
  //  file .Aa/nic.linked.opt.aa, line 547
  // tag_1463_delayed_8_0
  // rx_buffer_pointer_1464_delayed_8_0
  // max_addr_offset_1465_delayed_8_0
  // packet_size
  // last_keep
  call_stmt_1559_call <=> (call_stmt_1522_to_call_stmt_1559/call_stmt_1559_Sample/crr call_stmt_1522_to_call_stmt_1559/call_stmt_1559_Update/ccr) (call_stmt_1522_to_call_stmt_1559/call_stmt_1559_Sample/cra call_stmt_1522_to_call_stmt_1559/call_stmt_1559_Update/cca)
  $attribute delay => "1"
}
$module [setQueueElement] 
{
  $in tag:$int<8>
  // can point into 
  buf_base_address:$int<64>
  // can point into  foreign( $void )
  write_index:$int<32>
  // can point into  foreign( $void )
  q_w_data:$int<64>
  // can point into  foreign( $void )
  // pipe-declarations for block %setQueueElement
  //  file .Aa/nic.linked.opt.aa, line 550
  // there are no memory spaces local to this module.
  $CP 
  {
    // begin control-path 
    ::[call_stmt_1572] 
    {
      // start: 	$call accessQueueElement (tag WRITEMEM buf_base_address write_index q_w_data ) (q_r_data ) 
      //  file .Aa/nic.linked.opt.aa, line 555
      $T[call_stmt_1572_sample_start_] 
      $T[call_stmt_1572_sample_completed_] 
      $T[call_stmt_1572_update_start_] 
      $T[call_stmt_1572_update_completed_] 
      // Call input argument 0
      // tag
      // Call input argument 1
      // Call input argument 2
      // buf_base_address
      // Call input argument 3
      // write_index
      // Call input argument 4
      // q_w_data
      // start: Forward dependencies from tag to transition call_stmt_1572_sample_start_
      // done: Forward dependencies from tag to transition call_stmt_1572_sample_start_
      // start: Forward dependencies from buf_base_address to transition call_stmt_1572_sample_start_
      // done: Forward dependencies from buf_base_address to transition call_stmt_1572_sample_start_
      // start: Forward dependencies from write_index to transition call_stmt_1572_sample_start_
      // done: Forward dependencies from write_index to transition call_stmt_1572_sample_start_
      // start: Forward dependencies from q_w_data to transition call_stmt_1572_sample_start_
      // done: Forward dependencies from q_w_data to transition call_stmt_1572_sample_start_
      ;;[call_stmt_1572_Sample] 
      {
        $T [crr] $T [cra] 
      }
      ;;[call_stmt_1572_Update] 
      {
        $T [ccr] $T [cca] 
      }
      call_stmt_1572_sample_start_ &-> (call_stmt_1572_Sample)
      call_stmt_1572_sample_completed_ <-& (call_stmt_1572_Sample)
      call_stmt_1572_sample_completed_ &-> ($null)
      call_stmt_1572_update_start_ &-> (call_stmt_1572_Update)
      call_stmt_1572_update_completed_ <-& (call_stmt_1572_Update)
      // Call output argument 0
      // (as target) q_r_data
      // start: WAR dependencies for q_r_data
      // done: WAR dependencies for q_r_data
      // end: 	$call accessQueueElement (tag WRITEMEM buf_base_address write_index q_w_data ) (q_r_data ) 
      // load-store dependencies..
      // pipe read/write dependencies for pipe MEMORY_TO_NIC_RESPONSE
      // read-dependencies for pipe MEMORY_TO_NIC_RESPONSE
      // write-dependencies for pipe MEMORY_TO_NIC_RESPONSE
      // signal write dependencies for MEMORY_TO_NIC_RESPONSE
      // pipe read/write dependencies for pipe NIC_DEBUG_SIGNAL
      // read-dependencies for pipe NIC_DEBUG_SIGNAL
      // write-dependencies for pipe NIC_DEBUG_SIGNAL
      // signal write dependencies for NIC_DEBUG_SIGNAL
      // pipe read/write dependencies for pipe NIC_TO_MEMORY_REQUEST
      // read-dependencies for pipe NIC_TO_MEMORY_REQUEST
      // write-dependencies for pipe NIC_TO_MEMORY_REQUEST
      // signal write dependencies for NIC_TO_MEMORY_REQUEST
      // pipe read/write dependencies for pipe memory_access_lock
      // read-dependencies for pipe memory_access_lock
      // write-dependencies for pipe memory_access_lock
      // signal write dependencies for memory_access_lock
    }
  }
  // end control-path
  $DP 
  {
    // begin data-path 
    // constant-object-declarations for block %setQueueElement
    //  file .Aa/nic.linked.opt.aa, line 550
    // 	$call accessQueueElement (tag WRITEMEM buf_base_address write_index q_w_data ) (q_r_data ) 
    //  file .Aa/nic.linked.opt.aa, line 555
    // WRITEMEM
    $constant $W[R_WRITEMEM_1567_wire_constant] : $int<1> := _b0// 0
    // 	$call accessQueueElement (tag WRITEMEM buf_base_address write_index q_w_data ) (q_r_data ) 
    //  file .Aa/nic.linked.opt.aa, line 555
    // q_r_data
    $W[q_r_data_1572] : $int<64>
    // 	$call accessQueueElement (tag WRITEMEM buf_base_address write_index q_w_data ) (q_r_data ) 
    //  file .Aa/nic.linked.opt.aa, line 555
    $call [call_stmt_1572_call] $module accessQueueElement(tag R_WRITEMEM_1567_wire_constant buf_base_address write_index q_w_data) (q_r_data_1572)  
    $delay call_stmt_1572_call 4
    $buffering  $in call_stmt_1572_call tag 1
    $buffering  $in call_stmt_1572_call R_WRITEMEM_1567_wire_constant 1
    $buffering  $in call_stmt_1572_call buf_base_address 1
    $buffering  $in call_stmt_1572_call write_index 1
    $buffering  $in call_stmt_1572_call q_w_data 1
    $buffering  $out call_stmt_1572_call q_r_data_1572 1
  }
  // end data-path
  // 	$call accessQueueElement (tag WRITEMEM buf_base_address write_index q_w_data ) (q_r_data ) 
  //  file .Aa/nic.linked.opt.aa, line 555
  // tag
  // buf_base_address
  // write_index
  // q_w_data
  call_stmt_1572_call <=> (call_stmt_1572/call_stmt_1572_Sample/crr call_stmt_1572/call_stmt_1572_Update/ccr) (call_stmt_1572/call_stmt_1572_Sample/cra call_stmt_1572/call_stmt_1572_Update/cca)
}
$module [pushIntoQueue] 
{
  $in tag:$int<8>
  // can point into 
  queue_type:$int<2>
  // can point into 
  server_id:$int<8>
  // can point into  foreign( $void )
  q_w_data:$int<64>
  // can point into  foreign( $void )
  $out status:$int<1>
  // can point into  foreign( $void )
  // pipe-declarations for block %pushIntoQueue
  //  file .Aa/nic.linked.opt.aa, line 557
  // there are no memory spaces local to this module.
  $CP 
  {
    // begin control-path 
    ::[call_stmt_1583_to_call_stmt_1606] 
    {
      // start: 	$call getQueuePointer (queue_type server_id ) (q_base_address ) 
      //  file .Aa/nic.linked.opt.aa, line 562
      $T[call_stmt_1583_sample_start_] 
      $T[call_stmt_1583_sample_completed_] 
      $T[call_stmt_1583_update_start_] 
      $T[call_stmt_1583_update_completed_] 
      // Call input argument 0
      // queue_type
      // Call input argument 1
      // server_id
      // start: Forward dependencies from queue_type to transition call_stmt_1583_sample_start_
      // done: Forward dependencies from queue_type to transition call_stmt_1583_sample_start_
      // start: Forward dependencies from server_id to transition call_stmt_1583_sample_start_
      // done: Forward dependencies from server_id to transition call_stmt_1583_sample_start_
      ;;[call_stmt_1583_Sample] 
      {
        $T [crr] $T [cra] 
      }
      ;;[call_stmt_1583_Update] 
      {
        $T [ccr] $T [cca] 
      }
      call_stmt_1583_sample_start_ &-> (call_stmt_1583_Sample)
      call_stmt_1583_sample_completed_ <-& (call_stmt_1583_Sample)
      call_stmt_1583_sample_completed_ &-> ($null)
      call_stmt_1583_update_start_ &-> (call_stmt_1583_Update)
      call_stmt_1583_update_completed_ <-& (call_stmt_1583_Update)
      // Call output argument 0
      // (as target) q_base_address
      // start: WAR dependencies for q_base_address
      // done: WAR dependencies for q_base_address
      // end: 	$call getQueuePointer (queue_type server_id ) (q_base_address ) 
      // start: 	$call accessMemoryWord (tag READMEM q_base_address 28  ($bitcast ($uint<32>) _b0  ) ) (misc ) 
      //  file .Aa/nic.linked.opt.aa, line 563
      $T[call_stmt_1591_sample_start_] 
      $T[call_stmt_1591_sample_completed_] 
      $T[call_stmt_1591_update_start_] 
      $T[call_stmt_1591_update_completed_] 
      // Call input argument 0
      // tag
      // Call input argument 1
      // Call input argument 2
      // q_base_address
      // Call input argument 3
      // Call input argument 4
      // start: Forward dependencies from tag to transition call_stmt_1591_sample_start_
      // done: Forward dependencies from tag to transition call_stmt_1591_sample_start_
      // start: Forward dependencies from q_base_address to transition call_stmt_1591_sample_start_
      call_stmt_1591_sample_start_ <-& (call_stmt_1583_update_completed_)
      // done: Forward dependencies from q_base_address to transition call_stmt_1591_sample_start_
      ;;[call_stmt_1591_Sample] 
      {
        $T [crr] $T [cra] 
      }
      ;;[call_stmt_1591_Update] 
      {
        $T [ccr] $T [cca] 
      }
      call_stmt_1591_sample_start_ &-> (call_stmt_1591_Sample)
      call_stmt_1591_sample_completed_ <-& (call_stmt_1591_Sample)
      call_stmt_1591_sample_completed_ &-> ($null)
      call_stmt_1591_update_start_ &-> (call_stmt_1591_Update)
      call_stmt_1591_update_completed_ <-& (call_stmt_1591_Update)
      // Call output argument 0
      // (as target) misc
      // start: WAR dependencies for misc
      // done: WAR dependencies for misc
      // end: 	$call accessMemoryWord (tag READMEM q_base_address 28  ($bitcast ($uint<32>) _b0  ) ) (misc ) 
      // start: WAR dependencies for lock_n
      // done: WAR dependencies for lock_n
      // start:  	$volatile lock_n := (misc [] 0 ) $buffering 1
      //  file .Aa/nic.linked.opt.aa, line 564
      // volatile! 
      // Source expression
      // (misc [] 0 )
      // misc
      // Target expression
      // (as target) lock_n
      // start: WAR dependencies for lock_n
      // done: WAR dependencies for lock_n
      // end:  	$volatile lock_n := (misc [] 0 ) $buffering 1
      // start: 	$guard (~lock_n) $call getQueueLockPointer (queue_type server_id ) (q_lock_address ) 
      //  file .Aa/nic.linked.opt.aa, line 565
      $T[call_stmt_1601_sample_start_] 
      $T[call_stmt_1601_sample_completed_] 
      $T[call_stmt_1601_update_start_] 
      $T[call_stmt_1601_update_completed_] 
      // Guard expression
      // lock_n
      // start: Forward dependencies from lock_n to transition call_stmt_1601_sample_start_
      call_stmt_1601_sample_start_ <-& (call_stmt_1591_update_completed_)
      // done: Forward dependencies from lock_n to transition call_stmt_1601_sample_start_
      // Call input argument 0
      // queue_type
      // Call input argument 1
      // server_id
      // start: Forward dependencies from queue_type to transition call_stmt_1601_sample_start_
      // done: Forward dependencies from queue_type to transition call_stmt_1601_sample_start_
      // start: Forward dependencies from server_id to transition call_stmt_1601_sample_start_
      // done: Forward dependencies from server_id to transition call_stmt_1601_sample_start_
      ;;[call_stmt_1601_Sample] 
      {
        $T [crr] $T [cra] 
      }
      ;;[call_stmt_1601_Update] 
      {
        $T [ccr] $T [cca] 
      }
      call_stmt_1601_sample_start_ &-> (call_stmt_1601_Sample)
      call_stmt_1601_sample_completed_ <-& (call_stmt_1601_Sample)
      call_stmt_1601_sample_completed_ &-> ($null)
      call_stmt_1601_update_start_ &-> (call_stmt_1601_Update)
      call_stmt_1601_update_completed_ <-& (call_stmt_1601_Update)
      // Call output argument 0
      // (as target) q_lock_address
      // start: WAR dependencies for q_lock_address
      // done: WAR dependencies for q_lock_address
      // end: 	$guard (~lock_n) $call getQueueLockPointer (queue_type server_id ) (q_lock_address ) 
      // start: 	$guard (~lock_n) $call acquireLock (tag q_lock_address ) (m_ok ) 
      //  file .Aa/nic.linked.opt.aa, line 566
      $T[call_stmt_1606_sample_start_] 
      $T[call_stmt_1606_sample_completed_] 
      $T[call_stmt_1606_update_start_] 
      $T[call_stmt_1606_update_completed_] 
      // Guard expression
      // lock_n
      // start: Forward dependencies from lock_n to transition call_stmt_1606_sample_start_
      call_stmt_1606_sample_start_ <-& (call_stmt_1591_update_completed_)
      // done: Forward dependencies from lock_n to transition call_stmt_1606_sample_start_
      // Call input argument 0
      // tag
      // Call input argument 1
      // q_lock_address
      // start: Forward dependencies from tag to transition call_stmt_1606_sample_start_
      // done: Forward dependencies from tag to transition call_stmt_1606_sample_start_
      // start: Forward dependencies from q_lock_address to transition call_stmt_1606_sample_start_
      call_stmt_1606_sample_start_ <-& (call_stmt_1601_update_completed_)
      // done: Forward dependencies from q_lock_address to transition call_stmt_1606_sample_start_
      ;;[call_stmt_1606_Sample] 
      {
        $T [crr] $T [cra] 
      }
      ;;[call_stmt_1606_Update] 
      {
        $T [ccr] $T [cca] 
      }
      call_stmt_1606_sample_start_ &-> (call_stmt_1606_Sample)
      call_stmt_1606_sample_completed_ <-& (call_stmt_1606_Sample)
      call_stmt_1606_sample_completed_ &-> ($null)
      call_stmt_1606_update_start_ &-> (call_stmt_1606_Update)
      call_stmt_1606_update_completed_ <-& (call_stmt_1606_Update)
      // Call output argument 0
      // (as target) m_ok
      // start: WAR dependencies for m_ok
      // done: WAR dependencies for m_ok
      // end: 	$guard (~lock_n) $call acquireLock (tag q_lock_address ) (m_ok ) 
      // load-store dependencies..
      // memory-space  memory_space_0
      //  call_stmt_1583 store
      //  call_stmt_1601 store
      $T [call_stmt_1583_call_stmt_1601_delay] $delay
      // call_stmt_1583(store) -> call_stmt_1601(store)
      call_stmt_1601_sample_start_ <-& (call_stmt_1583_call_stmt_1601_delay)
      call_stmt_1583_call_stmt_1601_delay <-& (call_stmt_1583_update_completed_)
      // pipe read/write dependencies for pipe MEMORY_TO_NIC_RESPONSE
      // read-dependencies for pipe MEMORY_TO_NIC_RESPONSE
      call_stmt_1606_sample_start_ <-& (call_stmt_1591_update_completed_)
      // write-dependencies for pipe MEMORY_TO_NIC_RESPONSE
      // signal write dependencies for MEMORY_TO_NIC_RESPONSE
      // pipe read/write dependencies for pipe NIC_DEBUG_SIGNAL
      // read-dependencies for pipe NIC_DEBUG_SIGNAL
      // write-dependencies for pipe NIC_DEBUG_SIGNAL
      // signal write dependencies for NIC_DEBUG_SIGNAL
      call_stmt_1606_sample_start_ <-& (call_stmt_1591_update_completed_)
      // pipe read/write dependencies for pipe NIC_TO_MEMORY_REQUEST
      // read-dependencies for pipe NIC_TO_MEMORY_REQUEST
      // write-dependencies for pipe NIC_TO_MEMORY_REQUEST
      call_stmt_1606_sample_start_ <-& (call_stmt_1591_update_completed_)
      // signal write dependencies for NIC_TO_MEMORY_REQUEST
      // pipe read/write dependencies for pipe memory_access_lock
      // read-dependencies for pipe memory_access_lock
      // write-dependencies for pipe memory_access_lock
      call_stmt_1606_sample_start_ <-& (call_stmt_1591_update_completed_)
      // signal write dependencies for memory_access_lock
    }
    ::[call_stmt_1612_to_assign_stmt_1683] 
    {
      // start: 	$call getQueuePointers (tag q_base_address ) (write_index read_index ) 
      //  file .Aa/nic.linked.opt.aa, line 568
      $T[call_stmt_1612_sample_start_] 
      $T[call_stmt_1612_sample_completed_] 
      $T[call_stmt_1612_update_start_] 
      $T[call_stmt_1612_update_completed_] 
      // Call input argument 0
      // tag
      // Call input argument 1
      // q_base_address
      // start: Forward dependencies from tag to transition call_stmt_1612_sample_start_
      // done: Forward dependencies from tag to transition call_stmt_1612_sample_start_
      // start: Forward dependencies from q_base_address to transition call_stmt_1612_sample_start_
      // done: Forward dependencies from q_base_address to transition call_stmt_1612_sample_start_
      ;;[call_stmt_1612_Sample] 
      {
        $T [crr] $T [cra] 
      }
      ;;[call_stmt_1612_Update] 
      {
        $T [ccr] $T [cca] 
      }
      call_stmt_1612_sample_start_ &-> (call_stmt_1612_Sample)
      call_stmt_1612_sample_completed_ <-& (call_stmt_1612_Sample)
      call_stmt_1612_sample_completed_ &-> ($null)
      call_stmt_1612_update_start_ &-> (call_stmt_1612_Update)
      call_stmt_1612_update_completed_ <-& (call_stmt_1612_Update)
      // Call output argument 0
      // (as target) write_index
      // Call output argument 1
      // (as target) read_index
      // start: WAR dependencies for write_index
      // done: WAR dependencies for write_index
      // start: WAR dependencies for read_index
      // done: WAR dependencies for read_index
      // end: 	$call getQueuePointers (tag q_base_address ) (write_index read_index ) 
      // start: 	$call getQueueLength (tag q_base_address ) (queue_length ) 
      //  file .Aa/nic.linked.opt.aa, line 569
      $T[call_stmt_1616_sample_start_] 
      $T[call_stmt_1616_sample_completed_] 
      $T[call_stmt_1616_update_start_] 
      $T[call_stmt_1616_update_completed_] 
      // Call input argument 0
      // tag
      // Call input argument 1
      // q_base_address
      // start: Forward dependencies from tag to transition call_stmt_1616_sample_start_
      // done: Forward dependencies from tag to transition call_stmt_1616_sample_start_
      // start: Forward dependencies from q_base_address to transition call_stmt_1616_sample_start_
      // done: Forward dependencies from q_base_address to transition call_stmt_1616_sample_start_
      ;;[call_stmt_1616_Sample] 
      {
        $T [crr] $T [cra] 
      }
      ;;[call_stmt_1616_Update] 
      {
        $T [ccr] $T [cca] 
      }
      call_stmt_1616_sample_start_ &-> (call_stmt_1616_Sample)
      call_stmt_1616_sample_completed_ <-& (call_stmt_1616_Sample)
      call_stmt_1616_sample_completed_ &-> ($null)
      call_stmt_1616_update_start_ &-> (call_stmt_1616_Update)
      call_stmt_1616_update_completed_ <-& (call_stmt_1616_Update)
      // Call output argument 0
      // (as target) queue_length
      // start: WAR dependencies for queue_length
      // done: WAR dependencies for queue_length
      // end: 	$call getQueueLength (tag q_base_address ) (queue_length ) 
      // start: 	$call getTotalMessages (tag q_base_address ) (total_msgs ) 
      //  file .Aa/nic.linked.opt.aa, line 570
      $T[call_stmt_1620_sample_start_] 
      $T[call_stmt_1620_sample_completed_] 
      $T[call_stmt_1620_update_start_] 
      $T[call_stmt_1620_update_completed_] 
      // Call input argument 0
      // tag
      // Call input argument 1
      // q_base_address
      // start: Forward dependencies from tag to transition call_stmt_1620_sample_start_
      // done: Forward dependencies from tag to transition call_stmt_1620_sample_start_
      // start: Forward dependencies from q_base_address to transition call_stmt_1620_sample_start_
      // done: Forward dependencies from q_base_address to transition call_stmt_1620_sample_start_
      ;;[call_stmt_1620_Sample] 
      {
        $T [crr] $T [cra] 
      }
      ;;[call_stmt_1620_Update] 
      {
        $T [ccr] $T [cca] 
      }
      call_stmt_1620_sample_start_ &-> (call_stmt_1620_Sample)
      call_stmt_1620_sample_completed_ <-& (call_stmt_1620_Sample)
      call_stmt_1620_sample_completed_ &-> ($null)
      call_stmt_1620_update_start_ &-> (call_stmt_1620_Update)
      call_stmt_1620_update_completed_ <-& (call_stmt_1620_Update)
      // Call output argument 0
      // (as target) total_msgs
      // start: WAR dependencies for total_msgs
      // done: WAR dependencies for total_msgs
      // end: 	$call getTotalMessages (tag q_base_address ) (total_msgs ) 
      // start: WAR dependencies for round_off
      // done: WAR dependencies for round_off
      // start:  	$volatile round_off := (write_index == (queue_length - 1 )) $buffering 1
      //  file .Aa/nic.linked.opt.aa, line 571
      // volatile! 
      // Source expression
      // (write_index == (queue_length - 1 ))
      // write_index
      // (queue_length - 1 )
      // queue_length
      // Target expression
      // (as target) round_off
      // start: WAR dependencies for round_off
      // done: WAR dependencies for round_off
      // end:  	$volatile round_off := (write_index == (queue_length - 1 )) $buffering 1
      // start: WAR dependencies for next_wi
      // done: WAR dependencies for next_wi
      // start:  	$volatile next_wi := ( $mux round_off 0   (write_index + 1 ) )  $buffering 1
      //  file .Aa/nic.linked.opt.aa, line 572
      // volatile! 
      // Source expression
      // ( $mux round_off 0   (write_index + 1 ) ) 
      // round_off
      // (write_index + 1 )
      // write_index
      // Target expression
      // (as target) next_wi
      // start: WAR dependencies for next_wi
      // done: WAR dependencies for next_wi
      // end:  	$volatile next_wi := ( $mux round_off 0   (write_index + 1 ) )  $buffering 1
      // start: WAR dependencies for q_full
      // done: WAR dependencies for q_full
      // start:  	$volatile q_full := (total_msgs == queue_length) $buffering 1
      //  file .Aa/nic.linked.opt.aa, line 573
      // volatile! 
      // Source expression
      // (total_msgs == queue_length)
      // total_msgs
      // queue_length
      // Target expression
      // (as target) q_full
      // start: WAR dependencies for q_full
      // done: WAR dependencies for q_full
      // end:  	$volatile q_full := (total_msgs == queue_length) $buffering 1
      // start: 	$guard (~q_full) $call getQueueBufPointer (queue_type server_id ) (q_buf_address ) 
      //  file .Aa/nic.linked.opt.aa, line 574
      $T[call_stmt_1645_sample_start_] 
      $T[call_stmt_1645_sample_completed_] 
      $T[call_stmt_1645_update_start_] 
      $T[call_stmt_1645_update_completed_] 
      // Guard expression
      // q_full
      // start: Forward dependencies from q_full to transition call_stmt_1645_sample_start_
      call_stmt_1645_sample_start_ <-& (call_stmt_1616_update_completed_)
      call_stmt_1645_sample_start_ <-& (call_stmt_1620_update_completed_)
      // done: Forward dependencies from q_full to transition call_stmt_1645_sample_start_
      // Call input argument 0
      // queue_type
      // Call input argument 1
      // server_id
      // start: Forward dependencies from queue_type to transition call_stmt_1645_sample_start_
      // done: Forward dependencies from queue_type to transition call_stmt_1645_sample_start_
      // start: Forward dependencies from server_id to transition call_stmt_1645_sample_start_
      // done: Forward dependencies from server_id to transition call_stmt_1645_sample_start_
      ;;[call_stmt_1645_Sample] 
      {
        $T [crr] $T [cra] 
      }
      ;;[call_stmt_1645_Update] 
      {
        $T [ccr] $T [cca] 
      }
      call_stmt_1645_sample_start_ &-> (call_stmt_1645_Sample)
      call_stmt_1645_sample_completed_ <-& (call_stmt_1645_Sample)
      call_stmt_1645_sample_completed_ &-> ($null)
      call_stmt_1645_update_start_ &-> (call_stmt_1645_Update)
      call_stmt_1645_update_completed_ <-& (call_stmt_1645_Update)
      // Call output argument 0
      // (as target) q_buf_address
      // start: WAR dependencies for q_buf_address
      // done: WAR dependencies for q_buf_address
      // end: 	$guard (~q_full) $call getQueueBufPointer (queue_type server_id ) (q_buf_address ) 
      // start: 	$guard (~q_full) $call setQueueElement (tag q_buf_address write_index q_w_data ) () 
      //  file .Aa/nic.linked.opt.aa, line 575
      $T[call_stmt_1651_sample_start_] 
      $T[call_stmt_1651_sample_completed_] 
      $T[call_stmt_1651_update_start_] 
      $T[call_stmt_1651_update_completed_] 
      // Guard expression
      // q_full
      // start: Forward dependencies from q_full to transition call_stmt_1651_sample_start_
      call_stmt_1651_sample_start_ <-& (call_stmt_1616_update_completed_)
      call_stmt_1651_sample_start_ <-& (call_stmt_1620_update_completed_)
      // done: Forward dependencies from q_full to transition call_stmt_1651_sample_start_
      // Call input argument 0
      // tag
      // Call input argument 1
      // q_buf_address
      // Call input argument 2
      // write_index
      // Call input argument 3
      // q_w_data
      // start: Forward dependencies from tag to transition call_stmt_1651_sample_start_
      // done: Forward dependencies from tag to transition call_stmt_1651_sample_start_
      // start: Forward dependencies from q_buf_address to transition call_stmt_1651_sample_start_
      call_stmt_1651_sample_start_ <-& (call_stmt_1645_update_completed_)
      // done: Forward dependencies from q_buf_address to transition call_stmt_1651_sample_start_
      // start: Forward dependencies from write_index to transition call_stmt_1651_sample_start_
      call_stmt_1651_sample_start_ <-& (call_stmt_1612_update_completed_)
      // done: Forward dependencies from write_index to transition call_stmt_1651_sample_start_
      // start: Forward dependencies from q_w_data to transition call_stmt_1651_sample_start_
      // done: Forward dependencies from q_w_data to transition call_stmt_1651_sample_start_
      ;;[call_stmt_1651_Sample] 
      {
        $T [crr] $T [cra] 
      }
      ;;[call_stmt_1651_Update] 
      {
        $T [ccr] $T [cca] 
      }
      call_stmt_1651_sample_start_ &-> (call_stmt_1651_Sample)
      call_stmt_1651_sample_completed_ <-& (call_stmt_1651_Sample)
      call_stmt_1651_sample_completed_ &-> ($null)
      call_stmt_1651_update_start_ &-> (call_stmt_1651_Update)
      call_stmt_1651_update_completed_ <-& (call_stmt_1651_Update)
      // end: 	$guard (~q_full) $call setQueueElement (tag q_buf_address write_index q_w_data ) () 
      // start: 	$guard (~q_full) $call setQueuePointers (tag q_base_address next_wi read_index ) () 
      //  file .Aa/nic.linked.opt.aa, line 576
      $T[call_stmt_1657_sample_start_] 
      $T[call_stmt_1657_sample_completed_] 
      $T[call_stmt_1657_update_start_] 
      $T[call_stmt_1657_update_completed_] 
      // Guard expression
      // q_full
      // start: Forward dependencies from q_full to transition call_stmt_1657_sample_start_
      call_stmt_1657_sample_start_ <-& (call_stmt_1616_update_completed_)
      call_stmt_1657_sample_start_ <-& (call_stmt_1620_update_completed_)
      // done: Forward dependencies from q_full to transition call_stmt_1657_sample_start_
      // Call input argument 0
      // tag
      // Call input argument 1
      // q_base_address
      // Call input argument 2
      // next_wi
      // Call input argument 3
      // read_index
      // start: Forward dependencies from tag to transition call_stmt_1657_sample_start_
      // done: Forward dependencies from tag to transition call_stmt_1657_sample_start_
      // start: Forward dependencies from q_base_address to transition call_stmt_1657_sample_start_
      // done: Forward dependencies from q_base_address to transition call_stmt_1657_sample_start_
      // start: Forward dependencies from next_wi to transition call_stmt_1657_sample_start_
      call_stmt_1657_sample_start_ <-& (call_stmt_1612_update_completed_)
      call_stmt_1657_sample_start_ <-& (call_stmt_1616_update_completed_)
      // done: Forward dependencies from next_wi to transition call_stmt_1657_sample_start_
      // start: Forward dependencies from read_index to transition call_stmt_1657_sample_start_
      call_stmt_1657_sample_start_ <-& (call_stmt_1612_update_completed_)
      // done: Forward dependencies from read_index to transition call_stmt_1657_sample_start_
      ;;[call_stmt_1657_Sample] 
      {
        $T [crr] $T [cra] 
      }
      ;;[call_stmt_1657_Update] 
      {
        $T [ccr] $T [cca] 
      }
      call_stmt_1657_sample_start_ &-> (call_stmt_1657_Sample)
      call_stmt_1657_sample_completed_ <-& (call_stmt_1657_Sample)
      call_stmt_1657_sample_completed_ &-> ($null)
      call_stmt_1657_update_start_ &-> (call_stmt_1657_Update)
      call_stmt_1657_update_completed_ <-& (call_stmt_1657_Update)
      // end: 	$guard (~q_full) $call setQueuePointers (tag q_base_address next_wi read_index ) () 
      // start: 	$guard (~q_full) $call setTotalMessages (tag q_base_address (total_msgs + ($bitcast ($uint<32>) _b1  )) ) () 
      //  file .Aa/nic.linked.opt.aa, line 577
      $T[call_stmt_1665_sample_start_] 
      $T[call_stmt_1665_sample_completed_] 
      $T[call_stmt_1665_update_start_] 
      $T[call_stmt_1665_update_completed_] 
      // Guard expression
      // q_full
      // start: Forward dependencies from q_full to transition call_stmt_1665_sample_start_
      call_stmt_1665_sample_start_ <-& (call_stmt_1616_update_completed_)
      call_stmt_1665_sample_start_ <-& (call_stmt_1620_update_completed_)
      // done: Forward dependencies from q_full to transition call_stmt_1665_sample_start_
      // Call input argument 0
      // tag
      // Call input argument 1
      // q_base_address
      // Call input argument 2
      // (total_msgs + ($bitcast ($uint<32>) _b1  ))
      // total_msgs
      // start: Forward dependencies from tag to transition call_stmt_1665_sample_start_
      // done: Forward dependencies from tag to transition call_stmt_1665_sample_start_
      // start: Forward dependencies from q_base_address to transition call_stmt_1665_sample_start_
      // done: Forward dependencies from q_base_address to transition call_stmt_1665_sample_start_
      // start: Forward dependencies from (total_msgs + ($bitcast ($uint<32>) _b1  )) to transition call_stmt_1665_sample_start_
      call_stmt_1665_sample_start_ <-& (call_stmt_1620_update_completed_)
      // done: Forward dependencies from (total_msgs + ($bitcast ($uint<32>) _b1  )) to transition call_stmt_1665_sample_start_
      ;;[call_stmt_1665_Sample] 
      {
        $T [crr] $T [cra] 
      }
      ;;[call_stmt_1665_Update] 
      {
        $T [ccr] $T [cca] 
      }
      call_stmt_1665_sample_start_ &-> (call_stmt_1665_Sample)
      call_stmt_1665_sample_completed_ <-& (call_stmt_1665_Sample)
      call_stmt_1665_sample_completed_ &-> ($null)
      call_stmt_1665_update_start_ &-> (call_stmt_1665_Update)
      call_stmt_1665_update_completed_ <-& (call_stmt_1665_Update)
      // end: 	$guard (~q_full) $call setTotalMessages (tag q_base_address (total_msgs + ($bitcast ($uint<32>) _b1  )) ) () 
      // start:  	$guard (~q_full) QUEUE_MONITOR_SIGNAL := (((($bitcast ($uint<4>) queue_type ) && PUSHQ) && ($bitcast ($uint<8>) (total_msgs + 1 ) )) && (($bitcast ($uint<8>) next_wi ) && ($bitcast ($uint<8>) read_index ))) $buffering 1// bits of buffering = 32. 
      //  file .Aa/nic.linked.opt.aa, line 578
      // Guard expression 
      // q_full
      // Source expression
      // (((($bitcast ($uint<4>) queue_type ) && PUSHQ) && ($bitcast ($uint<8>) (total_msgs + 1 ) )) && (($bitcast ($uint<8>) next_wi ) && ($bitcast ($uint<8>) read_index )))
      $T[CONCAT_u16_u32_1682_sample_start_] 
      $T[CONCAT_u16_u32_1682_sample_completed_] 
      $T[CONCAT_u16_u32_1682_update_start_] 
      $T[CONCAT_u16_u32_1682_update_completed_] 
      // Guard dependency for expression CONCAT_u16_u32_1682 with guard R_q_full_1666
      CONCAT_u16_u32_1682_sample_start_ <-& (call_stmt_1616_update_completed_)
      CONCAT_u16_u32_1682_sample_start_ <-& (call_stmt_1620_update_completed_)
      // ((($bitcast ($uint<4>) queue_type ) && PUSHQ) && ($bitcast ($uint<8>) (total_msgs + 1 ) ))
      // (($bitcast ($uint<4>) queue_type ) && PUSHQ)
      // ($bitcast ($uint<4>) queue_type )
      // queue_type
      // ($bitcast ($uint<8>) (total_msgs + 1 ) )
      // (total_msgs + 1 )
      // total_msgs
      // (($bitcast ($uint<8>) next_wi ) && ($bitcast ($uint<8>) read_index ))
      // ($bitcast ($uint<8>) next_wi )
      // next_wi
      // ($bitcast ($uint<8>) read_index )
      // read_index
      // start: Forward dependencies from ((($bitcast ($uint<4>) queue_type ) && PUSHQ) && ($bitcast ($uint<8>) (total_msgs + 1 ) )) to transition CONCAT_u16_u32_1682_sample_start_
      CONCAT_u16_u32_1682_sample_start_ <-& (call_stmt_1620_update_completed_)
      // done: Forward dependencies from ((($bitcast ($uint<4>) queue_type ) && PUSHQ) && ($bitcast ($uint<8>) (total_msgs + 1 ) )) to transition CONCAT_u16_u32_1682_sample_start_
      // start: Forward dependencies from (($bitcast ($uint<8>) next_wi ) && ($bitcast ($uint<8>) read_index )) to transition CONCAT_u16_u32_1682_sample_start_
      CONCAT_u16_u32_1682_sample_start_ <-& (call_stmt_1612_update_completed_)
      CONCAT_u16_u32_1682_sample_start_ <-& (call_stmt_1616_update_completed_)
      // done: Forward dependencies from (($bitcast ($uint<8>) next_wi ) && ($bitcast ($uint<8>) read_index )) to transition CONCAT_u16_u32_1682_sample_start_
      ;;[CONCAT_u16_u32_1682_Sample] 
      {
        // binary expression 
        $T [rr] $T [ra]  // (split) binary operation 
      }
      ;;[CONCAT_u16_u32_1682_Update] 
      {
        // binary expression 
        $T [cr] $T [ca] // (split) binary operation 
      }
      CONCAT_u16_u32_1682_sample_start_ &-> (CONCAT_u16_u32_1682_Sample)
      CONCAT_u16_u32_1682_sample_completed_ <-& (CONCAT_u16_u32_1682_Sample)
      CONCAT_u16_u32_1682_sample_completed_ &-> ($null)
      CONCAT_u16_u32_1682_update_start_ &-> (CONCAT_u16_u32_1682_Update)
      CONCAT_u16_u32_1682_update_completed_ <-& (CONCAT_u16_u32_1682_Update)
      // Target expression
      // (as target) QUEUE_MONITOR_SIGNAL
      $T[WPIPE_QUEUE_MONITOR_SIGNAL_1667_sample_start_] 
      $T[WPIPE_QUEUE_MONITOR_SIGNAL_1667_sample_completed_] 
      $T[WPIPE_QUEUE_MONITOR_SIGNAL_1667_update_start_] 
      $T[WPIPE_QUEUE_MONITOR_SIGNAL_1667_update_completed_] 
      // Guard dependency for expression WPIPE_QUEUE_MONITOR_SIGNAL_1667 with guard R_q_full_1666
      // Guard forward dependency 
      WPIPE_QUEUE_MONITOR_SIGNAL_1667_sample_start_ <-& (call_stmt_1616_update_completed_)
      // Guard forward dependency 
      WPIPE_QUEUE_MONITOR_SIGNAL_1667_sample_start_ <-& (call_stmt_1620_update_completed_)
      ;;[WPIPE_QUEUE_MONITOR_SIGNAL_1667_Sample] 
      {
        // pipe write sample-start QUEUE_MONITOR_SIGNAL
        $T [req] $T [ack] 
      }
      ;;[WPIPE_QUEUE_MONITOR_SIGNAL_1667_Update] 
      {
        // pipe write update (complete) QUEUE_MONITOR_SIGNAL
        $T [req] $T [ack] 
      }
      WPIPE_QUEUE_MONITOR_SIGNAL_1667_sample_start_ &-> (WPIPE_QUEUE_MONITOR_SIGNAL_1667_Sample)
      WPIPE_QUEUE_MONITOR_SIGNAL_1667_sample_completed_ <-& (WPIPE_QUEUE_MONITOR_SIGNAL_1667_Sample)
      WPIPE_QUEUE_MONITOR_SIGNAL_1667_update_start_ <-& (WPIPE_QUEUE_MONITOR_SIGNAL_1667_sample_completed_)
      WPIPE_QUEUE_MONITOR_SIGNAL_1667_update_start_ &-> (WPIPE_QUEUE_MONITOR_SIGNAL_1667_Update)
      WPIPE_QUEUE_MONITOR_SIGNAL_1667_update_completed_ <-& (WPIPE_QUEUE_MONITOR_SIGNAL_1667_Update)
      // start: Forward dependencies from (((($bitcast ($uint<4>) queue_type ) && PUSHQ) && ($bitcast ($uint<8>) (total_msgs + 1 ) )) && (($bitcast ($uint<8>) next_wi ) && ($bitcast ($uint<8>) read_index ))) to transition WPIPE_QUEUE_MONITOR_SIGNAL_1667_sample_start_
      WPIPE_QUEUE_MONITOR_SIGNAL_1667_sample_start_ <-& (CONCAT_u16_u32_1682_update_completed_)
      // done: Forward dependencies from (((($bitcast ($uint<4>) queue_type ) && PUSHQ) && ($bitcast ($uint<8>) (total_msgs + 1 ) )) && (($bitcast ($uint<8>) next_wi ) && ($bitcast ($uint<8>) read_index ))) to transition WPIPE_QUEUE_MONITOR_SIGNAL_1667_sample_start_
      // end:  	$guard (~q_full) QUEUE_MONITOR_SIGNAL := (((($bitcast ($uint<4>) queue_type ) && PUSHQ) && ($bitcast ($uint<8>) (total_msgs + 1 ) )) && (($bitcast ($uint<8>) next_wi ) && ($bitcast ($uint<8>) read_index ))) $buffering 1// bits of buffering = 32. 
      // load-store dependencies..
      // memory-space  memory_space_0
      //  call_stmt_1645 store
      // pipe read/write dependencies for pipe MEMORY_TO_NIC_RESPONSE
      // read-dependencies for pipe MEMORY_TO_NIC_RESPONSE
      call_stmt_1616_sample_start_ <-& (call_stmt_1612_update_completed_)
      call_stmt_1620_sample_start_ <-& (call_stmt_1616_update_completed_)
      call_stmt_1651_sample_start_ <-& (call_stmt_1620_update_completed_)
      call_stmt_1657_sample_start_ <-& (call_stmt_1651_update_completed_)
      call_stmt_1665_sample_start_ <-& (call_stmt_1657_update_completed_)
      // write-dependencies for pipe MEMORY_TO_NIC_RESPONSE
      // signal write dependencies for MEMORY_TO_NIC_RESPONSE
      // pipe read/write dependencies for pipe NIC_DEBUG_SIGNAL
      // read-dependencies for pipe NIC_DEBUG_SIGNAL
      // write-dependencies for pipe NIC_DEBUG_SIGNAL
      // signal write dependencies for NIC_DEBUG_SIGNAL
      call_stmt_1616_sample_start_ <-& (call_stmt_1612_update_completed_)
      call_stmt_1620_sample_start_ <-& (call_stmt_1616_update_completed_)
      call_stmt_1651_sample_start_ <-& (call_stmt_1620_update_completed_)
      call_stmt_1657_sample_start_ <-& (call_stmt_1651_update_completed_)
      call_stmt_1665_sample_start_ <-& (call_stmt_1657_update_completed_)
      // pipe read/write dependencies for pipe NIC_TO_MEMORY_REQUEST
      // read-dependencies for pipe NIC_TO_MEMORY_REQUEST
      // write-dependencies for pipe NIC_TO_MEMORY_REQUEST
      call_stmt_1616_sample_start_ <-& (call_stmt_1612_update_completed_)
      call_stmt_1620_sample_start_ <-& (call_stmt_1616_update_completed_)
      call_stmt_1651_sample_start_ <-& (call_stmt_1620_update_completed_)
      call_stmt_1657_sample_start_ <-& (call_stmt_1651_update_completed_)
      call_stmt_1665_sample_start_ <-& (call_stmt_1657_update_completed_)
      // signal write dependencies for NIC_TO_MEMORY_REQUEST
      // pipe read/write dependencies for pipe QUEUE_MONITOR_SIGNAL
      // read-dependencies for pipe QUEUE_MONITOR_SIGNAL
      // write-dependencies for pipe QUEUE_MONITOR_SIGNAL
      // signal write dependencies for QUEUE_MONITOR_SIGNAL
      // pipe read/write dependencies for pipe memory_access_lock
      // read-dependencies for pipe memory_access_lock
      // write-dependencies for pipe memory_access_lock
      call_stmt_1616_sample_start_ <-& (call_stmt_1612_update_completed_)
      call_stmt_1620_sample_start_ <-& (call_stmt_1616_update_completed_)
      call_stmt_1651_sample_start_ <-& (call_stmt_1620_update_completed_)
      call_stmt_1657_sample_start_ <-& (call_stmt_1651_update_completed_)
      call_stmt_1665_sample_start_ <-& (call_stmt_1657_update_completed_)
      // signal write dependencies for memory_access_lock
    }
    ::[call_stmt_1688_to_assign_stmt_1691] 
    {
      // start: 	$guard (~lock_n) $call releaseLock (tag q_lock_address ) () 
      //  file .Aa/nic.linked.opt.aa, line 580
      $T[call_stmt_1688_sample_start_] 
      $T[call_stmt_1688_sample_completed_] 
      $T[call_stmt_1688_update_start_] 
      $T[call_stmt_1688_update_completed_] 
      // Guard expression
      // lock_n
      // start: Forward dependencies from lock_n to transition call_stmt_1688_sample_start_
      // done: Forward dependencies from lock_n to transition call_stmt_1688_sample_start_
      // Call input argument 0
      // tag
      // Call input argument 1
      // q_lock_address
      // start: Forward dependencies from tag to transition call_stmt_1688_sample_start_
      // done: Forward dependencies from tag to transition call_stmt_1688_sample_start_
      // start: Forward dependencies from q_lock_address to transition call_stmt_1688_sample_start_
      // done: Forward dependencies from q_lock_address to transition call_stmt_1688_sample_start_
      ;;[call_stmt_1688_Sample] 
      {
        $T [crr] $T [cra] 
      }
      ;;[call_stmt_1688_Update] 
      {
        $T [ccr] $T [cca] 
      }
      call_stmt_1688_sample_start_ &-> (call_stmt_1688_Sample)
      call_stmt_1688_sample_completed_ <-& (call_stmt_1688_Sample)
      call_stmt_1688_sample_completed_ &-> ($null)
      call_stmt_1688_update_start_ &-> (call_stmt_1688_Update)
      call_stmt_1688_update_completed_ <-& (call_stmt_1688_Update)
      // end: 	$guard (~lock_n) $call releaseLock (tag q_lock_address ) () 
      // start:  	status := q_full $buffering 1// bits of buffering = 1. 
      //  file .Aa/nic.linked.opt.aa, line 581
      $T[assign_stmt_1691_sample_start_] 
      $T[assign_stmt_1691_sample_completed_] 
      $T[assign_stmt_1691_update_start_] 
      $T[assign_stmt_1691_update_completed_] 
      // Source expression
      // q_full
      // Target expression
      // (as target) status
      // status
      // write to interface object
      // both source and target are implicit: use interlock 
      // Interlock 
      ;;[assign_stmt_1691_Sample] 
      {
        $T [req] $T [ack] // interlock-sample.
      }
      ;;[assign_stmt_1691_Update] 
      {
        $T [req] $T [ack] // interlock-update.
      }
      assign_stmt_1691_sample_start_ &-> (assign_stmt_1691_Sample)
      assign_stmt_1691_sample_completed_ <-& (assign_stmt_1691_Sample)
      assign_stmt_1691_sample_completed_ &-> ($null)
      assign_stmt_1691_update_start_ &-> (assign_stmt_1691_Update)
      assign_stmt_1691_update_completed_ <-& (assign_stmt_1691_Update)
      // start: Forward dependencies from q_full to transition assign_stmt_1691_sample_start_
      // done: Forward dependencies from q_full to transition assign_stmt_1691_sample_start_
      // start: WAR dependencies for status
      // done: WAR dependencies for status
      // status
      // write to interface object
      // end:  	status := q_full $buffering 1// bits of buffering = 1. 
      // load-store dependencies..
      // pipe read/write dependencies for pipe MEMORY_TO_NIC_RESPONSE
      // read-dependencies for pipe MEMORY_TO_NIC_RESPONSE
      // write-dependencies for pipe MEMORY_TO_NIC_RESPONSE
      // signal write dependencies for MEMORY_TO_NIC_RESPONSE
      // pipe read/write dependencies for pipe NIC_DEBUG_SIGNAL
      // read-dependencies for pipe NIC_DEBUG_SIGNAL
      // write-dependencies for pipe NIC_DEBUG_SIGNAL
      // signal write dependencies for NIC_DEBUG_SIGNAL
      // pipe read/write dependencies for pipe NIC_TO_MEMORY_REQUEST
      // read-dependencies for pipe NIC_TO_MEMORY_REQUEST
      // write-dependencies for pipe NIC_TO_MEMORY_REQUEST
      // signal write dependencies for NIC_TO_MEMORY_REQUEST
      // pipe read/write dependencies for pipe memory_access_lock
      // read-dependencies for pipe memory_access_lock
      // write-dependencies for pipe memory_access_lock
      // signal write dependencies for memory_access_lock
    }
  }
  // end control-path
  $DP 
  {
    // begin data-path 
    // constant-object-declarations for block %pushIntoQueue
    //  file .Aa/nic.linked.opt.aa, line 557
    // 	$call getQueuePointer (queue_type server_id ) (q_base_address ) 
    //  file .Aa/nic.linked.opt.aa, line 562
    // 	$call accessMemoryWord (tag READMEM q_base_address 28  ($bitcast ($uint<32>) _b0  ) ) (misc ) 
    //  file .Aa/nic.linked.opt.aa, line 563
    // READMEM
    $constant $W[R_READMEM_1585_wire_constant] : $int<1> := _b1// 1
    // 28 
    $constant $W[konst_1587_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000011100// 28
    // ($bitcast ($uint<32>) _b0  )
    $constant $W[type_cast_1589_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // 0 
    $constant $W[konst_1594_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // 	$guard (~lock_n) $call getQueueLockPointer (queue_type server_id ) (q_lock_address ) 
    //  file .Aa/nic.linked.opt.aa, line 565
    // 	$guard (~lock_n) $call acquireLock (tag q_lock_address ) (m_ok ) 
    //  file .Aa/nic.linked.opt.aa, line 566
    // 	$call getQueuePointers (tag q_base_address ) (write_index read_index ) 
    //  file .Aa/nic.linked.opt.aa, line 568
    // 	$call getQueueLength (tag q_base_address ) (queue_length ) 
    //  file .Aa/nic.linked.opt.aa, line 569
    // 	$call getTotalMessages (tag q_base_address ) (total_msgs ) 
    //  file .Aa/nic.linked.opt.aa, line 570
    // 1 
    $constant $W[konst_1624_wire_constant] : $int<32> := _b00000000000000000000000000000001// 1
    // ( $mux round_off 0   (write_index + 1 ) ) 
    // 0 
    $constant $W[konst_1630_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // 1 
    $constant $W[konst_1632_wire_constant] : $int<32> := _b00000000000000000000000000000001// 1
    // 	$guard (~q_full) $call getQueueBufPointer (queue_type server_id ) (q_buf_address ) 
    //  file .Aa/nic.linked.opt.aa, line 574
    // 	$guard (~q_full) $call setQueueElement (tag q_buf_address write_index q_w_data ) () 
    //  file .Aa/nic.linked.opt.aa, line 575
    // 	$guard (~q_full) $call setQueuePointers (tag q_base_address next_wi read_index ) () 
    //  file .Aa/nic.linked.opt.aa, line 576
    // 	$guard (~q_full) $call setTotalMessages (tag q_base_address (total_msgs + ($bitcast ($uint<32>) _b1  )) ) () 
    //  file .Aa/nic.linked.opt.aa, line 577
    // ($bitcast ($uint<32>) _b1  )
    $constant $W[type_cast_1663_wire_constant] : $int<32> := _b00000000000000000000000000000001// 1
    // PUSHQ
    $constant $W[R_PUSHQ_1670_wire_constant] : $int<4> := _b0010// 2
    // 1 
    $constant $W[konst_1673_wire_constant] : $int<32> := _b00000000000000000000000000000001// 1
    // 	$guard (~lock_n) $call releaseLock (tag q_lock_address ) () 
    //  file .Aa/nic.linked.opt.aa, line 580
    // 	$call getQueuePointer (queue_type server_id ) (q_base_address ) 
    //  file .Aa/nic.linked.opt.aa, line 562
    // q_base_address
    $W[q_base_address_1583] : $int<64>
    // 	$call accessMemoryWord (tag READMEM q_base_address 28  ($bitcast ($uint<32>) _b0  ) ) (misc ) 
    //  file .Aa/nic.linked.opt.aa, line 563
    // misc
    $W[misc_1591] : $int<32>
    // 	$volatile lock_n := (misc [] 0 ) $buffering 1
    //  file .Aa/nic.linked.opt.aa, line 564
    // lock_n
    $W[lock_n_1596] : $int<1>
    // 	$guard (~lock_n) $call getQueueLockPointer (queue_type server_id ) (q_lock_address ) 
    //  file .Aa/nic.linked.opt.aa, line 565
    // q_lock_address
    $W[q_lock_address_1601] : $int<64>
    // 	$guard (~lock_n) $call acquireLock (tag q_lock_address ) (m_ok ) 
    //  file .Aa/nic.linked.opt.aa, line 566
    // m_ok
    $W[m_ok_1606] : $int<1>
    // 	$call getQueuePointers (tag q_base_address ) (write_index read_index ) 
    //  file .Aa/nic.linked.opt.aa, line 568
    // write_index
    $W[write_index_1612] : $int<32>
    // read_index
    $W[read_index_1612] : $int<32>
    // 	$call getQueueLength (tag q_base_address ) (queue_length ) 
    //  file .Aa/nic.linked.opt.aa, line 569
    // queue_length
    $W[queue_length_1616] : $int<32>
    // 	$call getTotalMessages (tag q_base_address ) (total_msgs ) 
    //  file .Aa/nic.linked.opt.aa, line 570
    // total_msgs
    $W[total_msgs_1620] : $int<32>
    // 	$volatile round_off := (write_index == (queue_length - 1 )) $buffering 1
    //  file .Aa/nic.linked.opt.aa, line 571
    // (queue_length - 1 )
    $intermediate $W[SUB_u32_u32_1625_wire] : $int<32>
    // round_off
    $W[round_off_1627] : $int<1>
    // 	$volatile next_wi := ( $mux round_off 0   (write_index + 1 ) )  $buffering 1
    //  file .Aa/nic.linked.opt.aa, line 572
    // (write_index + 1 )
    $intermediate $W[ADD_u32_u32_1633_wire] : $int<32>
    // next_wi
    $W[next_wi_1635] : $int<32>
    // 	$volatile q_full := (total_msgs == queue_length) $buffering 1
    //  file .Aa/nic.linked.opt.aa, line 573
    // q_full
    $W[q_full_1640] : $int<1>
    // 	$guard (~q_full) $call getQueueBufPointer (queue_type server_id ) (q_buf_address ) 
    //  file .Aa/nic.linked.opt.aa, line 574
    // q_buf_address
    $W[q_buf_address_1645] : $int<64>
    // 	$guard (~q_full) $call setQueueElement (tag q_buf_address write_index q_w_data ) () 
    //  file .Aa/nic.linked.opt.aa, line 575
    // 	$guard (~q_full) $call setQueuePointers (tag q_base_address next_wi read_index ) () 
    //  file .Aa/nic.linked.opt.aa, line 576
    // 	$guard (~q_full) $call setTotalMessages (tag q_base_address (total_msgs + ($bitcast ($uint<32>) _b1  )) ) () 
    //  file .Aa/nic.linked.opt.aa, line 577
    // (total_msgs + ($bitcast ($uint<32>) _b1  ))
    $intermediate $W[ADD_u32_u32_1664_wire] : $int<32>
    // 	$guard (~q_full) QUEUE_MONITOR_SIGNAL := (((($bitcast ($uint<4>) queue_type ) && PUSHQ) && ($bitcast ($uint<8>) (total_msgs + 1 ) )) && (($bitcast ($uint<8>) next_wi ) && ($bitcast ($uint<8>) read_index ))) $buffering 1// bits of buffering = 32. 
    //  file .Aa/nic.linked.opt.aa, line 578
    // ($bitcast ($uint<4>) queue_type )
    $intermediate $W[type_cast_1669_wire] : $int<4>
    // (($bitcast ($uint<4>) queue_type ) && PUSHQ)
    $intermediate $W[CONCAT_u4_u8_1671_wire] : $int<8>
    // (total_msgs + 1 )
    $intermediate $W[ADD_u32_u32_1674_wire] : $int<32>
    // ($bitcast ($uint<8>) (total_msgs + 1 ) )
    $intermediate $W[type_cast_1675_wire] : $int<8>
    // ((($bitcast ($uint<4>) queue_type ) && PUSHQ) && ($bitcast ($uint<8>) (total_msgs + 1 ) ))
    $intermediate $W[CONCAT_u8_u16_1676_wire] : $int<16>
    // ($bitcast ($uint<8>) next_wi )
    $intermediate $W[type_cast_1678_wire] : $int<8>
    // ($bitcast ($uint<8>) read_index )
    $intermediate $W[type_cast_1680_wire] : $int<8>
    // (($bitcast ($uint<8>) next_wi ) && ($bitcast ($uint<8>) read_index ))
    $intermediate $W[CONCAT_u8_u16_1681_wire] : $int<16>
    // (((($bitcast ($uint<4>) queue_type ) && PUSHQ) && ($bitcast ($uint<8>) (total_msgs + 1 ) )) && (($bitcast ($uint<8>) next_wi ) && ($bitcast ($uint<8>) read_index )))
    $intermediate $W[CONCAT_u16_u32_1682_wire] : $int<32>
    // QUEUE_MONITOR_SIGNAL
    // 	$guard (~lock_n) $call releaseLock (tag q_lock_address ) () 
    //  file .Aa/nic.linked.opt.aa, line 580
    // 	status := q_full $buffering 1// bits of buffering = 1. 
    //  file .Aa/nic.linked.opt.aa, line 581
    // status
    // 	$call getQueuePointer (queue_type server_id ) (q_base_address ) 
    //  file .Aa/nic.linked.opt.aa, line 562
    $call [call_stmt_1583_call] $module getQueuePointer(queue_type server_id) (q_base_address_1583)  
    $delay call_stmt_1583_call 4
    $buffering  $in call_stmt_1583_call queue_type 1
    $buffering  $in call_stmt_1583_call server_id 1
    $buffering  $out call_stmt_1583_call q_base_address_1583 1
    // 	$call accessMemoryWord (tag READMEM q_base_address 28  ($bitcast ($uint<32>) _b0  ) ) (misc ) 
    //  file .Aa/nic.linked.opt.aa, line 563
    $call [call_stmt_1591_call] $module accessMemoryWord(tag R_READMEM_1585_wire_constant q_base_address_1583 konst_1587_wire_constant type_cast_1589_wire_constant) (misc_1591)  
    $delay call_stmt_1591_call 39
    $buffering  $in call_stmt_1591_call tag 1
    $buffering  $in call_stmt_1591_call R_READMEM_1585_wire_constant 1
    $buffering  $in call_stmt_1591_call q_base_address_1583 1
    $buffering  $in call_stmt_1591_call konst_1587_wire_constant 1
    $buffering  $in call_stmt_1591_call type_cast_1589_wire_constant 1
    $buffering  $out call_stmt_1591_call misc_1591 1
    // 	$volatile lock_n := (misc [] 0 ) $buffering 1
    //  file .Aa/nic.linked.opt.aa, line 564
    // (misc [] 0 )
    [][BITSEL_u32_u1_1595_inst] (misc_1591 konst_1594_wire_constant) (lock_n_1596)   $flowthrough 
    $delay BITSEL_u32_u1_1595_inst 0
    // 	$guard (~lock_n) $call getQueueLockPointer (queue_type server_id ) (q_lock_address ) 
    //  file .Aa/nic.linked.opt.aa, line 565
    $call [call_stmt_1601_call] $module getQueueLockPointer(queue_type server_id) (q_lock_address_1601) $guard ( ~ lock_n_1596 )  
    $delay call_stmt_1601_call 4
    $buffering  $in call_stmt_1601_call queue_type 1
    $buffering  $in call_stmt_1601_call server_id 1
    $buffering  $out call_stmt_1601_call q_lock_address_1601 1
    // 	$guard (~lock_n) $call acquireLock (tag q_lock_address ) (m_ok ) 
    //  file .Aa/nic.linked.opt.aa, line 566
    $call [call_stmt_1606_call] $module acquireLock(tag q_lock_address_1601) (m_ok_1606) $guard ( ~ lock_n_1596 )  
    $delay call_stmt_1606_call 4
    $buffering  $in call_stmt_1606_call tag 1
    $buffering  $in call_stmt_1606_call q_lock_address_1601 1
    $buffering  $out call_stmt_1606_call m_ok_1606 1
    // 	$call getQueuePointers (tag q_base_address ) (write_index read_index ) 
    //  file .Aa/nic.linked.opt.aa, line 568
    $call [call_stmt_1612_call] $module getQueuePointers(tag q_base_address_1583) (write_index_1612 read_index_1612)  
    $delay call_stmt_1612_call 4
    $buffering  $in call_stmt_1612_call tag 1
    $buffering  $in call_stmt_1612_call q_base_address_1583 1
    $buffering  $out call_stmt_1612_call write_index_1612 1
    $buffering  $out call_stmt_1612_call read_index_1612 1
    // 	$call getQueueLength (tag q_base_address ) (queue_length ) 
    //  file .Aa/nic.linked.opt.aa, line 569
    $call [call_stmt_1616_call] $module getQueueLength(tag q_base_address_1583) (queue_length_1616)  
    $delay call_stmt_1616_call 4
    $buffering  $in call_stmt_1616_call tag 1
    $buffering  $in call_stmt_1616_call q_base_address_1583 1
    $buffering  $out call_stmt_1616_call queue_length_1616 1
    // 	$call getTotalMessages (tag q_base_address ) (total_msgs ) 
    //  file .Aa/nic.linked.opt.aa, line 570
    $call [call_stmt_1620_call] $module getTotalMessages(tag q_base_address_1583) (total_msgs_1620)  
    $delay call_stmt_1620_call 4
    $buffering  $in call_stmt_1620_call tag 1
    $buffering  $in call_stmt_1620_call q_base_address_1583 1
    $buffering  $out call_stmt_1620_call total_msgs_1620 1
    // 	$volatile round_off := (write_index == (queue_length - 1 )) $buffering 1
    //  file .Aa/nic.linked.opt.aa, line 571
    // (queue_length - 1 )
    -[SUB_u32_u32_1625_inst] (queue_length_1616 konst_1624_wire_constant) (SUB_u32_u32_1625_wire)   $flowthrough 
    $delay SUB_u32_u32_1625_inst 0
    // (write_index == (queue_length - 1 ))
    ==[EQ_u32_u1_1626_inst] (write_index_1612 SUB_u32_u32_1625_wire) (round_off_1627)   $flowthrough 
    $delay EQ_u32_u1_1626_inst 0
    // 	$volatile next_wi := ( $mux round_off 0   (write_index + 1 ) )  $buffering 1
    //  file .Aa/nic.linked.opt.aa, line 572
    // (write_index + 1 )
    +[ADD_u32_u32_1633_inst] (write_index_1612 konst_1632_wire_constant) (ADD_u32_u32_1633_wire)   $flowthrough 
    $delay ADD_u32_u32_1633_inst 0
    // ( $mux round_off 0   (write_index + 1 ) ) 
    ? [MUX_1634_inst] (round_off_1627 konst_1630_wire_constant ADD_u32_u32_1633_wire) (next_wi_1635)  $flowthrough
    // 	$volatile q_full := (total_msgs == queue_length) $buffering 1
    //  file .Aa/nic.linked.opt.aa, line 573
    // (total_msgs == queue_length)
    ==[EQ_u32_u1_1639_inst] (total_msgs_1620 queue_length_1616) (q_full_1640)   $flowthrough 
    $delay EQ_u32_u1_1639_inst 0
    // 	$guard (~q_full) $call getQueueBufPointer (queue_type server_id ) (q_buf_address ) 
    //  file .Aa/nic.linked.opt.aa, line 574
    $call [call_stmt_1645_call] $module getQueueBufPointer(queue_type server_id) (q_buf_address_1645) $guard ( ~ q_full_1640 )  
    $delay call_stmt_1645_call 4
    $buffering  $in call_stmt_1645_call queue_type 1
    $buffering  $in call_stmt_1645_call server_id 1
    $buffering  $out call_stmt_1645_call q_buf_address_1645 1
    // 	$guard (~q_full) $call setQueueElement (tag q_buf_address write_index q_w_data ) () 
    //  file .Aa/nic.linked.opt.aa, line 575
    $call [call_stmt_1651_call] $module setQueueElement(tag q_buf_address_1645 write_index_1612 q_w_data) () $guard ( ~ q_full_1640 )  
    $delay call_stmt_1651_call 4
    $buffering  $in call_stmt_1651_call tag 1
    $buffering  $in call_stmt_1651_call q_buf_address_1645 1
    $buffering  $in call_stmt_1651_call write_index_1612 1
    $buffering  $in call_stmt_1651_call q_w_data 1
    // 	$guard (~q_full) $call setQueuePointers (tag q_base_address next_wi read_index ) () 
    //  file .Aa/nic.linked.opt.aa, line 576
    $call [call_stmt_1657_call] $module setQueuePointers(tag q_base_address_1583 next_wi_1635 read_index_1612) () $guard ( ~ q_full_1640 )  
    $delay call_stmt_1657_call 4
    $buffering  $in call_stmt_1657_call tag 1
    $buffering  $in call_stmt_1657_call q_base_address_1583 1
    $buffering  $in call_stmt_1657_call next_wi_1635 1
    $buffering  $in call_stmt_1657_call read_index_1612 1
    // 	$guard (~q_full) $call setTotalMessages (tag q_base_address (total_msgs + ($bitcast ($uint<32>) _b1  )) ) () 
    //  file .Aa/nic.linked.opt.aa, line 577
    // (total_msgs + ($bitcast ($uint<32>) _b1  ))
    +[ADD_u32_u32_1664_inst] (total_msgs_1620 type_cast_1663_wire_constant) (ADD_u32_u32_1664_wire) $guard ( ~ q_full_1640 )   $flowthrough 
    $delay ADD_u32_u32_1664_inst 0
    $call [call_stmt_1665_call] $module setTotalMessages(tag q_base_address_1583 ADD_u32_u32_1664_wire) () $guard ( ~ q_full_1640 )  
    $delay call_stmt_1665_call 4
    $buffering  $in call_stmt_1665_call tag 1
    $buffering  $in call_stmt_1665_call q_base_address_1583 1
    $buffering  $in call_stmt_1665_call ADD_u32_u32_1664_wire 1
    // 	$guard (~q_full) QUEUE_MONITOR_SIGNAL := (((($bitcast ($uint<4>) queue_type ) && PUSHQ) && ($bitcast ($uint<8>) (total_msgs + 1 ) )) && (($bitcast ($uint<8>) next_wi ) && ($bitcast ($uint<8>) read_index ))) $buffering 1// bits of buffering = 32. 
    //  file .Aa/nic.linked.opt.aa, line 578
    // ($bitcast ($uint<4>) queue_type )
    # := [type_cast_1669_inst] (queue_type) (type_cast_1669_wire)  $guard ( ~ q_full_1640 )  $flowthrough
    $delay type_cast_1669_inst 0
    // (($bitcast ($uint<4>) queue_type ) && PUSHQ)
    &&[CONCAT_u4_u8_1671_inst] (type_cast_1669_wire R_PUSHQ_1670_wire_constant) (CONCAT_u4_u8_1671_wire) $guard ( ~ q_full_1640 )   $flowthrough 
    $delay CONCAT_u4_u8_1671_inst 0
    // (total_msgs + 1 )
    +[ADD_u32_u32_1674_inst] (total_msgs_1620 konst_1673_wire_constant) (ADD_u32_u32_1674_wire) $guard ( ~ q_full_1640 )   $flowthrough 
    $delay ADD_u32_u32_1674_inst 0
    // ($bitcast ($uint<8>) (total_msgs + 1 ) )
    # := [type_cast_1675_inst] (ADD_u32_u32_1674_wire) (type_cast_1675_wire)  $guard ( ~ q_full_1640 )  $flowthrough
    $delay type_cast_1675_inst 0
    // ((($bitcast ($uint<4>) queue_type ) && PUSHQ) && ($bitcast ($uint<8>) (total_msgs + 1 ) ))
    &&[CONCAT_u8_u16_1676_inst] (CONCAT_u4_u8_1671_wire type_cast_1675_wire) (CONCAT_u8_u16_1676_wire) $guard ( ~ q_full_1640 )   $flowthrough 
    $delay CONCAT_u8_u16_1676_inst 0
    // ($bitcast ($uint<8>) next_wi )
    # := [type_cast_1678_inst] (next_wi_1635) (type_cast_1678_wire)  $guard ( ~ q_full_1640 )  $flowthrough
    $delay type_cast_1678_inst 0
    // ($bitcast ($uint<8>) read_index )
    # := [type_cast_1680_inst] (read_index_1612) (type_cast_1680_wire)  $guard ( ~ q_full_1640 )  $flowthrough
    $delay type_cast_1680_inst 0
    // (($bitcast ($uint<8>) next_wi ) && ($bitcast ($uint<8>) read_index ))
    &&[CONCAT_u8_u16_1681_inst] (type_cast_1678_wire type_cast_1680_wire) (CONCAT_u8_u16_1681_wire) $guard ( ~ q_full_1640 )   $flowthrough 
    $delay CONCAT_u8_u16_1681_inst 0
    // (((($bitcast ($uint<4>) queue_type ) && PUSHQ) && ($bitcast ($uint<8>) (total_msgs + 1 ) )) && (($bitcast ($uint<8>) next_wi ) && ($bitcast ($uint<8>) read_index )))
    &&[CONCAT_u16_u32_1682_inst] (CONCAT_u8_u16_1676_wire CONCAT_u8_u16_1681_wire) (CONCAT_u16_u32_1682_wire) $guard ( ~ q_full_1640 )   
    $buffering  $out CONCAT_u16_u32_1682_inst CONCAT_u16_u32_1682_wire 1
    $delay CONCAT_u16_u32_1682_inst 1
    // QUEUE_MONITOR_SIGNAL
    $ioport $out [WPIPE_QUEUE_MONITOR_SIGNAL_1667_inst]  (CONCAT_u16_u32_1682_wire) (QUEUE_MONITOR_SIGNAL) $guard ( ~ q_full_1640 ) 
    // 	$guard (~lock_n) $call releaseLock (tag q_lock_address ) () 
    //  file .Aa/nic.linked.opt.aa, line 580
    $call [call_stmt_1688_call] $module releaseLock(tag q_lock_address_1601) () $guard ( ~ lock_n_1596 )  
    $delay call_stmt_1688_call 4
    $buffering  $in call_stmt_1688_call tag 1
    $buffering  $in call_stmt_1688_call q_lock_address_1601 1
    // 	status := q_full $buffering 1// bits of buffering = 1. 
    //  file .Aa/nic.linked.opt.aa, line 581
    # := [W_status_1689_inst] (q_full_1640) (status)     
  }
  // end data-path
  // 	$call getQueuePointer (queue_type server_id ) (q_base_address ) 
  //  file .Aa/nic.linked.opt.aa, line 562
  // queue_type
  // server_id
  call_stmt_1583_call <=> (call_stmt_1583_to_call_stmt_1606/call_stmt_1583_Sample/crr call_stmt_1583_to_call_stmt_1606/call_stmt_1583_Update/ccr) (call_stmt_1583_to_call_stmt_1606/call_stmt_1583_Sample/cra call_stmt_1583_to_call_stmt_1606/call_stmt_1583_Update/cca)
  // 	$call accessMemoryWord (tag READMEM q_base_address 28  ($bitcast ($uint<32>) _b0  ) ) (misc ) 
  //  file .Aa/nic.linked.opt.aa, line 563
  // tag
  // q_base_address
  call_stmt_1591_call <=> (call_stmt_1583_to_call_stmt_1606/call_stmt_1591_Sample/crr call_stmt_1583_to_call_stmt_1606/call_stmt_1591_Update/ccr) (call_stmt_1583_to_call_stmt_1606/call_stmt_1591_Sample/cra call_stmt_1583_to_call_stmt_1606/call_stmt_1591_Update/cca)
  // 	$volatile lock_n := (misc [] 0 ) $buffering 1
  //  file .Aa/nic.linked.opt.aa, line 564
  // (misc [] 0 )
  // misc
  // 	$guard (~lock_n) $call getQueueLockPointer (queue_type server_id ) (q_lock_address ) 
  //  file .Aa/nic.linked.opt.aa, line 565
  // queue_type
  // server_id
  call_stmt_1601_call <=> (call_stmt_1583_to_call_stmt_1606/call_stmt_1601_Sample/crr call_stmt_1583_to_call_stmt_1606/call_stmt_1601_Update/ccr) (call_stmt_1583_to_call_stmt_1606/call_stmt_1601_Sample/cra call_stmt_1583_to_call_stmt_1606/call_stmt_1601_Update/cca)
  // 	$guard (~lock_n) $call acquireLock (tag q_lock_address ) (m_ok ) 
  //  file .Aa/nic.linked.opt.aa, line 566
  // tag
  // q_lock_address
  call_stmt_1606_call <=> (call_stmt_1583_to_call_stmt_1606/call_stmt_1606_Sample/crr call_stmt_1583_to_call_stmt_1606/call_stmt_1606_Update/ccr) (call_stmt_1583_to_call_stmt_1606/call_stmt_1606_Sample/cra call_stmt_1583_to_call_stmt_1606/call_stmt_1606_Update/cca)
  // 	$call getQueuePointers (tag q_base_address ) (write_index read_index ) 
  //  file .Aa/nic.linked.opt.aa, line 568
  // tag
  // q_base_address
  call_stmt_1612_call <=> (call_stmt_1612_to_assign_stmt_1683/call_stmt_1612_Sample/crr call_stmt_1612_to_assign_stmt_1683/call_stmt_1612_Update/ccr) (call_stmt_1612_to_assign_stmt_1683/call_stmt_1612_Sample/cra call_stmt_1612_to_assign_stmt_1683/call_stmt_1612_Update/cca)
  // 	$call getQueueLength (tag q_base_address ) (queue_length ) 
  //  file .Aa/nic.linked.opt.aa, line 569
  // tag
  // q_base_address
  call_stmt_1616_call <=> (call_stmt_1612_to_assign_stmt_1683/call_stmt_1616_Sample/crr call_stmt_1612_to_assign_stmt_1683/call_stmt_1616_Update/ccr) (call_stmt_1612_to_assign_stmt_1683/call_stmt_1616_Sample/cra call_stmt_1612_to_assign_stmt_1683/call_stmt_1616_Update/cca)
  // 	$call getTotalMessages (tag q_base_address ) (total_msgs ) 
  //  file .Aa/nic.linked.opt.aa, line 570
  // tag
  // q_base_address
  call_stmt_1620_call <=> (call_stmt_1612_to_assign_stmt_1683/call_stmt_1620_Sample/crr call_stmt_1612_to_assign_stmt_1683/call_stmt_1620_Update/ccr) (call_stmt_1612_to_assign_stmt_1683/call_stmt_1620_Sample/cra call_stmt_1612_to_assign_stmt_1683/call_stmt_1620_Update/cca)
  // 	$volatile round_off := (write_index == (queue_length - 1 )) $buffering 1
  //  file .Aa/nic.linked.opt.aa, line 571
  // (write_index == (queue_length - 1 ))
  // write_index
  // (queue_length - 1 )
  // queue_length
  // 	$volatile next_wi := ( $mux round_off 0   (write_index + 1 ) )  $buffering 1
  //  file .Aa/nic.linked.opt.aa, line 572
  // round_off
  // (write_index + 1 )
  // write_index
  // ( $mux round_off 0   (write_index + 1 ) ) 
  // 	$volatile q_full := (total_msgs == queue_length) $buffering 1
  //  file .Aa/nic.linked.opt.aa, line 573
  // (total_msgs == queue_length)
  // total_msgs
  // queue_length
  // 	$guard (~q_full) $call getQueueBufPointer (queue_type server_id ) (q_buf_address ) 
  //  file .Aa/nic.linked.opt.aa, line 574
  // queue_type
  // server_id
  call_stmt_1645_call <=> (call_stmt_1612_to_assign_stmt_1683/call_stmt_1645_Sample/crr call_stmt_1612_to_assign_stmt_1683/call_stmt_1645_Update/ccr) (call_stmt_1612_to_assign_stmt_1683/call_stmt_1645_Sample/cra call_stmt_1612_to_assign_stmt_1683/call_stmt_1645_Update/cca)
  // 	$guard (~q_full) $call setQueueElement (tag q_buf_address write_index q_w_data ) () 
  //  file .Aa/nic.linked.opt.aa, line 575
  // tag
  // q_buf_address
  // write_index
  // q_w_data
  call_stmt_1651_call <=> (call_stmt_1612_to_assign_stmt_1683/call_stmt_1651_Sample/crr call_stmt_1612_to_assign_stmt_1683/call_stmt_1651_Update/ccr) (call_stmt_1612_to_assign_stmt_1683/call_stmt_1651_Sample/cra call_stmt_1612_to_assign_stmt_1683/call_stmt_1651_Update/cca)
  // 	$guard (~q_full) $call setQueuePointers (tag q_base_address next_wi read_index ) () 
  //  file .Aa/nic.linked.opt.aa, line 576
  // tag
  // q_base_address
  // next_wi
  // read_index
  call_stmt_1657_call <=> (call_stmt_1612_to_assign_stmt_1683/call_stmt_1657_Sample/crr call_stmt_1612_to_assign_stmt_1683/call_stmt_1657_Update/ccr) (call_stmt_1612_to_assign_stmt_1683/call_stmt_1657_Sample/cra call_stmt_1612_to_assign_stmt_1683/call_stmt_1657_Update/cca)
  // 	$guard (~q_full) $call setTotalMessages (tag q_base_address (total_msgs + ($bitcast ($uint<32>) _b1  )) ) () 
  //  file .Aa/nic.linked.opt.aa, line 577
  // tag
  // q_base_address
  // (total_msgs + ($bitcast ($uint<32>) _b1  ))
  // total_msgs
  call_stmt_1665_call <=> (call_stmt_1612_to_assign_stmt_1683/call_stmt_1665_Sample/crr call_stmt_1612_to_assign_stmt_1683/call_stmt_1665_Update/ccr) (call_stmt_1612_to_assign_stmt_1683/call_stmt_1665_Sample/cra call_stmt_1612_to_assign_stmt_1683/call_stmt_1665_Update/cca)
  // 	$guard (~q_full) QUEUE_MONITOR_SIGNAL := (((($bitcast ($uint<4>) queue_type ) && PUSHQ) && ($bitcast ($uint<8>) (total_msgs + 1 ) )) && (($bitcast ($uint<8>) next_wi ) && ($bitcast ($uint<8>) read_index ))) $buffering 1// bits of buffering = 32. 
  //  file .Aa/nic.linked.opt.aa, line 578
  // (((($bitcast ($uint<4>) queue_type ) && PUSHQ) && ($bitcast ($uint<8>) (total_msgs + 1 ) )) && (($bitcast ($uint<8>) next_wi ) && ($bitcast ($uint<8>) read_index )))
  // ((($bitcast ($uint<4>) queue_type ) && PUSHQ) && ($bitcast ($uint<8>) (total_msgs + 1 ) ))
  // (($bitcast ($uint<4>) queue_type ) && PUSHQ)
  // queue_type
  // (total_msgs + 1 )
  // total_msgs
  // (($bitcast ($uint<8>) next_wi ) && ($bitcast ($uint<8>) read_index ))
  // next_wi
  // read_index
  CONCAT_u16_u32_1682_inst <=> (call_stmt_1612_to_assign_stmt_1683/CONCAT_u16_u32_1682_Sample/rr call_stmt_1612_to_assign_stmt_1683/CONCAT_u16_u32_1682_Update/cr) (call_stmt_1612_to_assign_stmt_1683/CONCAT_u16_u32_1682_Sample/ra call_stmt_1612_to_assign_stmt_1683/CONCAT_u16_u32_1682_Update/ca)
  // QUEUE_MONITOR_SIGNAL
  WPIPE_QUEUE_MONITOR_SIGNAL_1667_inst <=> (call_stmt_1612_to_assign_stmt_1683/WPIPE_QUEUE_MONITOR_SIGNAL_1667_Sample/req call_stmt_1612_to_assign_stmt_1683/WPIPE_QUEUE_MONITOR_SIGNAL_1667_Update/req) (call_stmt_1612_to_assign_stmt_1683/WPIPE_QUEUE_MONITOR_SIGNAL_1667_Sample/ack call_stmt_1612_to_assign_stmt_1683/WPIPE_QUEUE_MONITOR_SIGNAL_1667_Update/ack)
  // 	$guard (~lock_n) $call releaseLock (tag q_lock_address ) () 
  //  file .Aa/nic.linked.opt.aa, line 580
  // tag
  // q_lock_address
  call_stmt_1688_call <=> (call_stmt_1688_to_assign_stmt_1691/call_stmt_1688_Sample/crr call_stmt_1688_to_assign_stmt_1691/call_stmt_1688_Update/ccr) (call_stmt_1688_to_assign_stmt_1691/call_stmt_1688_Sample/cra call_stmt_1688_to_assign_stmt_1691/call_stmt_1688_Update/cca)
  // 	status := q_full $buffering 1// bits of buffering = 1. 
  //  file .Aa/nic.linked.opt.aa, line 581
  // q_full
  W_status_1689_inst <=> (call_stmt_1688_to_assign_stmt_1691/assign_stmt_1691_Sample/req call_stmt_1688_to_assign_stmt_1691/assign_stmt_1691_Update/req) (call_stmt_1688_to_assign_stmt_1691/assign_stmt_1691_Sample/ack call_stmt_1688_to_assign_stmt_1691/assign_stmt_1691_Update/ack)
}
$module [incrementRegister] 
{
  $in reg_index:$int<8>
  // can point into 
  $out incremented_value:$int<32>
  // can point into  foreign( $void )
  // pipe-declarations for block %incrementRegister
  //  file .Aa/nic.linked.opt.aa, line 583
  // there are no memory spaces local to this module.
  $CP 
  {
    // begin control-path 
    ::[call_stmt_1703_to_call_stmt_1715] 
    {
      // start: 	$call accessRegister (($bitcast ($uint<1>) _b1  ) 15  reg_index ($bitcast ($uint<32>) _b0  ) ) (rval ) 
      //  file .Aa/nic.linked.opt.aa, line 588
      $T[call_stmt_1703_sample_start_] 
      $T[call_stmt_1703_sample_completed_] 
      $T[call_stmt_1703_update_start_] 
      $T[call_stmt_1703_update_completed_] 
      // Call input argument 0
      // Call input argument 1
      // Call input argument 2
      // reg_index
      // Call input argument 3
      // start: Forward dependencies from reg_index to transition call_stmt_1703_sample_start_
      // done: Forward dependencies from reg_index to transition call_stmt_1703_sample_start_
      ;;[call_stmt_1703_Sample] 
      {
        $T [crr] $T [cra] 
      }
      ;;[call_stmt_1703_Update] 
      {
        $T [ccr] $T [cca] 
      }
      call_stmt_1703_sample_start_ &-> (call_stmt_1703_Sample)
      call_stmt_1703_sample_completed_ <-& (call_stmt_1703_Sample)
      call_stmt_1703_sample_completed_ &-> ($null)
      call_stmt_1703_update_start_ &-> (call_stmt_1703_Update)
      call_stmt_1703_update_completed_ <-& (call_stmt_1703_Update)
      // Call output argument 0
      // (as target) rval
      // start: WAR dependencies for rval
      // done: WAR dependencies for rval
      // end: 	$call accessRegister (($bitcast ($uint<1>) _b1  ) 15  reg_index ($bitcast ($uint<32>) _b0  ) ) (rval ) 
      // start: WAR dependencies for incremented_value
      // done: WAR dependencies for incremented_value
      // start:  	$volatile incremented_value := (rval + 1 ) $buffering 1
      //  file .Aa/nic.linked.opt.aa, line 589
      // volatile! 
      // Source expression
      // (rval + 1 )
      // rval
      // Target expression
      // (as target) incremented_value
      // incremented_value
      // write to interface object
      // start: WAR dependencies for incremented_value
      // done: WAR dependencies for incremented_value
      // incremented_value
      // write to interface object
      // end:  	$volatile incremented_value := (rval + 1 ) $buffering 1
      // start: 	$call accessRegister (($bitcast ($uint<1>) _b0  ) 15  reg_index incremented_value ) (rval_ignore ) 
      //  file .Aa/nic.linked.opt.aa, line 590
      $T[call_stmt_1715_sample_start_] 
      $T[call_stmt_1715_sample_completed_] 
      $T[call_stmt_1715_update_start_] 
      $T[call_stmt_1715_update_completed_] 
      // Call input argument 0
      // Call input argument 1
      // Call input argument 2
      // reg_index
      // Call input argument 3
      // incremented_value
      // start: Forward dependencies from reg_index to transition call_stmt_1715_sample_start_
      // done: Forward dependencies from reg_index to transition call_stmt_1715_sample_start_
      // start: Forward dependencies from incremented_value to transition call_stmt_1715_sample_start_
      call_stmt_1715_sample_start_ <-& (call_stmt_1703_update_completed_)
      // done: Forward dependencies from incremented_value to transition call_stmt_1715_sample_start_
      ;;[call_stmt_1715_Sample] 
      {
        $T [crr] $T [cra] 
      }
      ;;[call_stmt_1715_Update] 
      {
        $T [ccr] $T [cca] 
      }
      call_stmt_1715_sample_start_ &-> (call_stmt_1715_Sample)
      call_stmt_1715_sample_completed_ <-& (call_stmt_1715_Sample)
      call_stmt_1715_sample_completed_ &-> ($null)
      call_stmt_1715_update_start_ &-> (call_stmt_1715_Update)
      call_stmt_1715_update_completed_ <-& (call_stmt_1715_Update)
      // Call output argument 0
      // (as target) rval_ignore
      // start: WAR dependencies for rval_ignore
      // done: WAR dependencies for rval_ignore
      // end: 	$call accessRegister (($bitcast ($uint<1>) _b0  ) 15  reg_index incremented_value ) (rval_ignore ) 
      // load-store dependencies..
      // memory-space  memory_space_0
      //  call_stmt_1703 store
      //  call_stmt_1715 store
      $T [call_stmt_1703_call_stmt_1715_delay] $delay
      // call_stmt_1703(store) -> call_stmt_1715(store)
      call_stmt_1715_sample_start_ <-& (call_stmt_1703_call_stmt_1715_delay)
      call_stmt_1703_call_stmt_1715_delay <-& (call_stmt_1703_update_completed_)
    }
  }
  // end control-path
  $DP 
  {
    // begin data-path 
    // constant-object-declarations for block %incrementRegister
    //  file .Aa/nic.linked.opt.aa, line 583
    // 	$call accessRegister (($bitcast ($uint<1>) _b1  ) 15  reg_index ($bitcast ($uint<32>) _b0  ) ) (rval ) 
    //  file .Aa/nic.linked.opt.aa, line 588
    // ($bitcast ($uint<1>) _b1  )
    $constant $W[type_cast_1697_wire_constant] : $int<1> := _b1// 1
    // 15 
    $constant $W[konst_1698_wire_constant] : $int<4> := _b1111// 15
    // ($bitcast ($uint<32>) _b0  )
    $constant $W[type_cast_1701_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // 1 
    $constant $W[konst_1706_wire_constant] : $int<32> := _b00000000000000000000000000000001// 1
    // 	$call accessRegister (($bitcast ($uint<1>) _b0  ) 15  reg_index incremented_value ) (rval_ignore ) 
    //  file .Aa/nic.linked.opt.aa, line 590
    // ($bitcast ($uint<1>) _b0  )
    $constant $W[type_cast_1710_wire_constant] : $int<1> := _b0// 0
    // 15 
    $constant $W[konst_1711_wire_constant] : $int<4> := _b1111// 15
    // 	$call accessRegister (($bitcast ($uint<1>) _b1  ) 15  reg_index ($bitcast ($uint<32>) _b0  ) ) (rval ) 
    //  file .Aa/nic.linked.opt.aa, line 588
    // rval
    $W[rval_1703] : $int<32>
    // 	$volatile incremented_value := (rval + 1 ) $buffering 1
    //  file .Aa/nic.linked.opt.aa, line 589
    // incremented_value
    // 	$call accessRegister (($bitcast ($uint<1>) _b0  ) 15  reg_index incremented_value ) (rval_ignore ) 
    //  file .Aa/nic.linked.opt.aa, line 590
    // rval_ignore
    $W[rval_ignore_1715] : $int<32>
    // 	$call accessRegister (($bitcast ($uint<1>) _b1  ) 15  reg_index ($bitcast ($uint<32>) _b0  ) ) (rval ) 
    //  file .Aa/nic.linked.opt.aa, line 588
    $call [call_stmt_1703_call] $module accessRegister(type_cast_1697_wire_constant konst_1698_wire_constant reg_index type_cast_1701_wire_constant) (rval_1703)  
    $delay call_stmt_1703_call 4
    $buffering  $in call_stmt_1703_call type_cast_1697_wire_constant 1
    $buffering  $in call_stmt_1703_call konst_1698_wire_constant 1
    $buffering  $in call_stmt_1703_call reg_index 1
    $buffering  $in call_stmt_1703_call type_cast_1701_wire_constant 1
    $buffering  $out call_stmt_1703_call rval_1703 1
    // 	$volatile incremented_value := (rval + 1 ) $buffering 1
    //  file .Aa/nic.linked.opt.aa, line 589
    // (rval + 1 )
    +[ADD_u32_u32_1707_inst] (rval_1703 konst_1706_wire_constant) (incremented_value)   $flowthrough 
    $delay ADD_u32_u32_1707_inst 0
    // 	$call accessRegister (($bitcast ($uint<1>) _b0  ) 15  reg_index incremented_value ) (rval_ignore ) 
    //  file .Aa/nic.linked.opt.aa, line 590
    $call [call_stmt_1715_call] $module accessRegister(type_cast_1710_wire_constant konst_1711_wire_constant reg_index incremented_value) (rval_ignore_1715)  
    $delay call_stmt_1715_call 4
    $buffering  $in call_stmt_1715_call type_cast_1710_wire_constant 1
    $buffering  $in call_stmt_1715_call konst_1711_wire_constant 1
    $buffering  $in call_stmt_1715_call reg_index 1
    $buffering  $in call_stmt_1715_call incremented_value 1
    $buffering  $out call_stmt_1715_call rval_ignore_1715 1
  }
  // end data-path
  // 	$call accessRegister (($bitcast ($uint<1>) _b1  ) 15  reg_index ($bitcast ($uint<32>) _b0  ) ) (rval ) 
  //  file .Aa/nic.linked.opt.aa, line 588
  // reg_index
  call_stmt_1703_call <=> (call_stmt_1703_to_call_stmt_1715/call_stmt_1703_Sample/crr call_stmt_1703_to_call_stmt_1715/call_stmt_1703_Update/ccr) (call_stmt_1703_to_call_stmt_1715/call_stmt_1703_Sample/cra call_stmt_1703_to_call_stmt_1715/call_stmt_1703_Update/cca)
  // 	$volatile incremented_value := (rval + 1 ) $buffering 1
  //  file .Aa/nic.linked.opt.aa, line 589
  // (rval + 1 )
  // rval
  // 	$call accessRegister (($bitcast ($uint<1>) _b0  ) 15  reg_index incremented_value ) (rval_ignore ) 
  //  file .Aa/nic.linked.opt.aa, line 590
  // reg_index
  // incremented_value
  call_stmt_1715_call <=> (call_stmt_1703_to_call_stmt_1715/call_stmt_1715_Sample/crr call_stmt_1703_to_call_stmt_1715/call_stmt_1715_Update/ccr) (call_stmt_1703_to_call_stmt_1715/call_stmt_1715_Sample/cra call_stmt_1703_to_call_stmt_1715/call_stmt_1715_Update/cca)
  $attribute input_buffering => "1"
  $attribute output_buffering => "1"
}
$module [incrementNumberOfPacketsReceived] 
{
  // pipe-declarations for block %incrementNumberOfPacketsReceived
  //  file .Aa/nic.linked.opt.aa, line 594
  // there are no memory spaces local to this module.
  $CP 
  {
    // begin control-path 
    ::[call_stmt_1720] 
    {
      // start: 	$call incrementRegister (211  ) (ignore_val ) 
      //  file .Aa/nic.linked.opt.aa, line 599
      $T[call_stmt_1720_sample_start_] 
      $T[call_stmt_1720_sample_completed_] 
      $T[call_stmt_1720_update_start_] 
      $T[call_stmt_1720_update_completed_] 
      // Call input argument 0
      ;;[call_stmt_1720_Sample] 
      {
        $T [crr] $T [cra] 
      }
      ;;[call_stmt_1720_Update] 
      {
        $T [ccr] $T [cca] 
      }
      call_stmt_1720_sample_start_ &-> (call_stmt_1720_Sample)
      call_stmt_1720_sample_completed_ <-& (call_stmt_1720_Sample)
      call_stmt_1720_sample_completed_ &-> ($null)
      call_stmt_1720_update_start_ &-> (call_stmt_1720_Update)
      call_stmt_1720_update_completed_ <-& (call_stmt_1720_Update)
      // Call output argument 0
      // (as target) ignore_val
      // start: WAR dependencies for ignore_val
      // done: WAR dependencies for ignore_val
      // end: 	$call incrementRegister (211  ) (ignore_val ) 
      // load-store dependencies..
      // memory-space  memory_space_0
      //  call_stmt_1720 store
    }
  }
  // end control-path
  $DP 
  {
    // begin data-path 
    // constant-object-declarations for block %incrementNumberOfPacketsReceived
    //  file .Aa/nic.linked.opt.aa, line 594
    // 	$call incrementRegister (211  ) (ignore_val ) 
    //  file .Aa/nic.linked.opt.aa, line 599
    // 211 
    $constant $W[konst_1718_wire_constant] : $int<8> := _b11010011// 211
    // 	$call incrementRegister (211  ) (ignore_val ) 
    //  file .Aa/nic.linked.opt.aa, line 599
    // ignore_val
    $W[ignore_val_1720] : $int<32>
    // 	$call incrementRegister (211  ) (ignore_val ) 
    //  file .Aa/nic.linked.opt.aa, line 599
    $call [call_stmt_1720_call] $module incrementRegister(konst_1718_wire_constant) (ignore_val_1720)  
    $delay call_stmt_1720_call 4
    $buffering  $in call_stmt_1720_call konst_1718_wire_constant 1
    $buffering  $out call_stmt_1720_call ignore_val_1720 1
  }
  // end data-path
  // 	$call incrementRegister (211  ) (ignore_val ) 
  //  file .Aa/nic.linked.opt.aa, line 599
  call_stmt_1720_call <=> (call_stmt_1720/call_stmt_1720_Sample/crr call_stmt_1720/call_stmt_1720_Update/ccr) (call_stmt_1720/call_stmt_1720_Sample/cra call_stmt_1720/call_stmt_1720_Update/cca)
  $attribute input_buffering => "1"
  $attribute output_buffering => "0"
}
$operator $module [delay_time] 
{
  $in T:$int<10>
  // can point into 
  $out delay_done:$int<1> := _b1
  // can point into 
  // pipe-declarations for block %delay_time
  //  file .Aa/nic.linked.opt.aa, line 603
  // pipe-declarations for block %delay_time%loop
  //  file .Aa/nic.linked.opt.aa, line 608
  // there are no memory spaces local to this module.
  $CP 
  {
    // begin control-path 
    <>[branch_block_stmt_1725] // Branch Block  file .Aa/nic.linked.opt.aa, line 608
    {
      $P [branch_block_stmt_1725__entry__]
      branch_block_stmt_1725__entry__ <-| ($entry)
      $P [branch_block_stmt_1725__exit__]
      branch_block_stmt_1725__exit__ |-> ($exit)
      $P [do_while_stmt_1726__entry__] 
      $P [do_while_stmt_1726__exit__] 
      // do-while-statement  
      //  file .Aa/nic.linked.opt.aa, line 610
      <o> [do_while_stmt_1726]  $depth 7 $buffering 1 
      {
        $P[do_while_stmt_1726__entry__] 
        $P[do_while_stmt_1726__exit__] 
        $P[loop_back] 
        $P[condition_done] 
        $P[loop_body_done] 
        $pipeline [do_while_stmt_1726_loop_body] 
        {
          // Pipelined!
          $T[back_edge_to_loop_body] 
          $T[first_time_through_loop_body] 
          $T[loop_body_start] 
          $T[condition_evaluated] 
          $transitionmerge [entry_tmerge] (back_edge_to_loop_body first_time_through_loop_body) (loop_body_start)
          $entry <-& (loop_body_start)
          $T[aggregated_phi_sample_req] 
          $T[aggregated_phi_sample_ack] 
          $T[aggregated_phi_sample_ack_d] $delay
          aggregated_phi_sample_ack_d <-& (aggregated_phi_sample_ack)
          $T[aggregated_phi_update_req] 
          $T[aggregated_phi_update_ack] 
          // do not loop-back unless all phi's have used up their triggering tokens.
          condition_evaluated <-& (aggregated_phi_update_ack)
          aggregated_phi_sample_req o<-& (aggregated_phi_update_ack 0)
          // start:  multi-source PHI statement phi_stmt_1728
          // 			$phi R := 			  T $on   $entry 			  nR $on   $loopback 
          // type of target is $uint<10>
          $T[phi_stmt_1728_sample_start_] 
          $T[phi_stmt_1728_sample_completed_] 
          $T[phi_stmt_1728_update_start_] 
          $T[phi_stmt_1728_update_completed_] 
          $T[phi_stmt_1728_sample_start__ps] 
          phi_stmt_1728_sample_start__ps <-& (aggregated_phi_sample_req)
          $T[phi_stmt_1728_sample_completed__ps] 
          phi_stmt_1728_sample_completed__ps &-> (aggregated_phi_sample_ack)
          $T[phi_stmt_1728_update_start__ps] 
          phi_stmt_1728_update_start__ps <-& (aggregated_phi_update_req)
          $T[phi_stmt_1728_update_completed__ps] 
          phi_stmt_1728_update_completed_ <-& (phi_stmt_1728_update_completed__ps)
          aggregated_phi_sample_req <-& (phi_stmt_1728_sample_start_)
          aggregated_phi_sample_ack &-> (phi_stmt_1728_sample_completed_)
          aggregated_phi_update_req <-& (phi_stmt_1728_update_start_)
          $T[phi_stmt_1728_loopback_trigger] 
          phi_stmt_1728_loopback_trigger <-& (back_edge_to_loop_body)
          $T[phi_stmt_1728_loopback_sample_req] 
          $T[phi_stmt_1728_loopback_sample_req_ps] 
          phi_stmt_1728_loopback_sample_req <-& (phi_stmt_1728_loopback_sample_req_ps)
          phi_stmt_1728_loopback_sample_req &-> ($null)
          $T[phi_stmt_1728_entry_trigger] 
          phi_stmt_1728_entry_trigger <-& (first_time_through_loop_body)
          $T[phi_stmt_1728_entry_sample_req] 
          $T[phi_stmt_1728_entry_sample_req_ps] 
          phi_stmt_1728_entry_sample_req <-& (phi_stmt_1728_entry_sample_req_ps)
          phi_stmt_1728_entry_sample_req &-> ($null)
          phi_stmt_1728_update_start_ o<-& (phi_stmt_1728_update_completed_ 0)
          phi_stmt_1728_sample_start_ o<-& (phi_stmt_1728_sample_completed_ 1)
          $T[phi_stmt_1728_merged_reqs] 
          $T[phi_stmt_1728_phi_mux_ack] 
          $T[phi_stmt_1728_phi_mux_ack_ps] 
          phi_stmt_1728_phi_mux_ack_ps <-& (phi_stmt_1728_phi_mux_ack)
          aggregated_phi_update_ack <-& (phi_stmt_1728_update_completed_)
          $T[R_nR_1730_sample_start__ps] 
          $T[R_nR_1730_sample_completed__ps] 
          $T[R_nR_1730_update_start__ps] 
          $T[R_nR_1730_update_completed__ps] 
          // interlock for implicit-variable-ref/signal-read in Phi alternative 0
          $T[R_nR_1730_sample_start_] 
          $T[R_nR_1730_sample_completed_] 
          $T[R_nR_1730_update_start_] 
          $T[R_nR_1730_update_completed_] 
          ;;[R_nR_1730_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          R_nR_1730_sample_start_ &-> (R_nR_1730_Sample)
          R_nR_1730_sample_completed_ <-& (R_nR_1730_Sample)
          ;;[R_nR_1730_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          R_nR_1730_update_start_ &-> (R_nR_1730_Update)
          R_nR_1730_update_completed_ <-& (R_nR_1730_Update)
          // RAW reenables for nR
          // Phi start dependency for implicit/constant alternative.
          R_nR_1730_sample_start_ <-& (R_nR_1730_sample_start__ps)
          R_nR_1730_update_start_ <-& (R_nR_1730_update_start__ps)
          // Phi complete dependency.
          R_nR_1730_sample_completed__ps <-& (R_nR_1730_sample_completed_)
          R_nR_1730_update_completed__ps <-& (R_nR_1730_update_completed_)
          $T[R_T_1731_sample_start__ps] 
          $T[R_T_1731_sample_completed__ps] 
          $T[R_T_1731_update_start__ps] 
          $T[R_T_1731_update_completed__ps] 
          // interlock for implicit-variable-ref/signal-read in Phi alternative 1
          $T[R_T_1731_sample_start_] 
          $T[R_T_1731_sample_completed_] 
          $T[R_T_1731_update_start_] 
          $T[R_T_1731_update_completed_] 
          ;;[R_T_1731_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          R_T_1731_sample_start_ &-> (R_T_1731_Sample)
          R_T_1731_sample_completed_ <-& (R_T_1731_Sample)
          ;;[R_T_1731_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          R_T_1731_update_start_ &-> (R_T_1731_Update)
          R_T_1731_update_completed_ <-& (R_T_1731_Update)
          // RAW reenables for T
          // Phi start dependency for implicit/constant alternative.
          R_T_1731_sample_start_ <-& (R_T_1731_sample_start__ps)
          R_T_1731_update_start_ <-& (R_T_1731_update_start__ps)
          // Phi complete dependency.
          R_T_1731_sample_completed__ps <-& (R_T_1731_sample_completed_)
          R_T_1731_update_completed__ps <-& (R_T_1731_update_completed_)
          $phisequencer [ phi_stmt_1728_phi_seq] : 
          phi_stmt_1728_loopback_trigger R_nR_1730_sample_start__ps R_nR_1730_sample_completed__ps R_nR_1730_update_start__ps R_nR_1730_update_completed__ps phi_stmt_1728_entry_trigger R_T_1731_sample_start__ps R_T_1731_sample_completed__ps R_T_1731_update_start__ps R_T_1731_update_completed__ps :
          phi_stmt_1728_sample_start__ps phi_stmt_1728_sample_completed__ps phi_stmt_1728_update_start__ps phi_stmt_1728_update_completed__ps :
          phi_stmt_1728_loopback_sample_req_ps phi_stmt_1728_entry_sample_req_ps : 
          phi_stmt_1728_phi_mux_ack_ps
          // done: PHI Statement phi_stmt_1728
          // start: WAR dependencies for nR
          // WAR dependency: Read: nR before Write: 			$volatile nR := (R - 1 ) $buffering 1
          //  WAR  PHI-PHI dependency ignored...
          // done: WAR dependencies for nR
          // start:  			$volatile nR := (R - 1 ) $buffering 1
          //  file .Aa/nic.linked.opt.aa, line 616
          // volatile! 
          // Source expression
          // (R - 1 )
          // R
          // Target expression
          // (as target) nR
          // start: WAR dependencies for nR
          // WAR dependency: Read: nR before Write: 			$volatile nR := (R - 1 ) $buffering 1
          //  WAR  PHI-PHI dependency ignored...
          // done: WAR dependencies for nR
          // end:  			$volatile nR := (R - 1 ) $buffering 1
          // (R > 0 )
          // R
          $T [loop_body_delay_to_condition_start] $delay
          loop_body_start &-> (loop_body_delay_to_condition_start)
          loop_body_delay_to_condition_start &-> (condition_evaluated)
          // start: Forward dependencies from (R > 0 ) to transition condition_evaluated
          condition_evaluated <-& (phi_stmt_1728_update_completed_)
          // done: Forward dependencies from (R > 0 ) to transition condition_evaluated
          condition_evaluated &-> ($null)
          // load-store dependencies..
        }
        ( first_time_through_loop_body  back_edge_to_loop_body) 
        ( condition_evaluated )
        ;; [loop_exit] 
        {
          $T [ack] 
        }
        ;; [loop_taken] 
        {
          $T [ack] 
        }
        do_while_stmt_1726__entry__ <-| ($entry)
        loop_body_done <-| ( do_while_stmt_1726_loop_body ) 
        condition_done |-> (loop_exit loop_taken)
        do_while_stmt_1726__exit__ |-> ($exit)
        $bind condition_done <= do_while_stmt_1726_loop_body : condition_evaluated
        $bind do_while_stmt_1726__entry__  => do_while_stmt_1726_loop_body : first_time_through_loop_body 
        $bind loop_back  => do_while_stmt_1726_loop_body : back_edge_to_loop_body 
        $terminate (loop_exit loop_taken loop_body_done) (loop_back do_while_stmt_1726__exit__)
      }
      do_while_stmt_1726__entry__ |-> (do_while_stmt_1726)
      do_while_stmt_1726__exit__ <-| (do_while_stmt_1726)
      do_while_stmt_1726__entry__ <-| (branch_block_stmt_1725__entry__)
      do_while_stmt_1726__exit__ |-> (branch_block_stmt_1725__exit__)
    }
    ::[assign_stmt_1745] 
    {
      // start:  	delay_done := 1  $buffering 1// bits of buffering = 1. 
      //  file .Aa/nic.linked.opt.aa, line 619
      // constant! 
      // delay_done
      // write to interface object
      // end:  	delay_done := 1  $buffering 1// bits of buffering = 1. 
      // load-store dependencies..
    }
  }
  // end control-path
  $DP 
  {
    // begin data-path 
    // constant-object-declarations for block %delay_time%loop%
    //  file .Aa/nic.linked.opt.aa, line 612
    // constant-object-declarations for block %delay_time%loop
    //  file .Aa/nic.linked.opt.aa, line 608
    // constant-object-declarations for block %delay_time
    //  file .Aa/nic.linked.opt.aa, line 603
    // constant-declarations for block %delay_time%loop
    //  file .Aa/nic.linked.opt.aa, line 608
    // do-while statement  
    //  file .Aa/nic.linked.opt.aa, line 610
    // 0 
    $constant $W[konst_1740_wire_constant] : $int<10> := _b0000000000// 0
    // constant-declarations for block %delay_time%loop%
    //  file .Aa/nic.linked.opt.aa, line 612
    // constant-declarations for phi:  			$phi R := 			  T $on   $entry 			  nR $on   $loopback 
    // type of target is $uint<10>
    //  file .Aa/nic.linked.opt.aa, line 613
    // 1 
    $constant $W[konst_1735_wire_constant] : $int<10> := _b0000000001// 1
    // 	delay_done := 1  $buffering 1// bits of buffering = 1. 
    //  file .Aa/nic.linked.opt.aa, line 619
    // block %delay_time%loop
    //  file .Aa/nic.linked.opt.aa, line 608
    // do-while statement  
    //  file .Aa/nic.linked.opt.aa, line 610
    // (R > 0 )
    $intermediate $W[UGT_u10_u1_1741_wire] : $int<1>
    // merge-statement  
    //  file .Aa/nic.linked.opt.aa, line 612
    // 			$phi R := 			  T $on   $entry 			  nR $on   $loopback 
    // type of target is $uint<10>
    //  file .Aa/nic.linked.opt.aa, line 613
    $W[nR_1737_1730_buffered] : $int<10>
    $W[T_1731_buffered] : $int<10>
    // R
    $W[R_1728] : $int<10>
    // 			$volatile nR := (R - 1 ) $buffering 1
    //  file .Aa/nic.linked.opt.aa, line 616
    // nR
    $W[nR_1737] : $int<10>
    // datapath-instances for block %delay_time%loop
    //  file .Aa/nic.linked.opt.aa, line 608
    // datapath-instances for do-while  
    //  file .Aa/nic.linked.opt.aa, line 610
    // (R > 0 )
    >[UGT_u10_u1_1741_inst] (R_1728 konst_1740_wire_constant) (UGT_u10_u1_1741_wire)   $flowthrough 
    $delay UGT_u10_u1_1741_inst 0
    ==0? [do_while_stmt_1726_branch] (UGT_u10_u1_1741_wire)
    $flowthrough
    // data-path instances for merge  
    //  file .Aa/nic.linked.opt.aa, line 612
    // 			$phi R := 			  T $on   $entry 			  nR $on   $loopback 
    // type of target is $uint<10>
    //  file .Aa/nic.linked.opt.aa, line 613
    # := [nR_1737_1730_buf] (nR_1737) (nR_1737_1730_buffered)   $in_phi    $fullrate
    $buffering $out nR_1737_1730_buf nR_1737_1730_buffered  1
    # := [T_1731_buf] (T) (T_1731_buffered)   $in_phi    $fullrate
    $buffering $out T_1731_buf T_1731_buffered  1
    # $phi [phi_stmt_1728] (nR_1737_1730_buffered T_1731_buffered) ( R_1728 ) $fullrate
    // $buffering  $out phi_stmt_1728 R_1728 2
    // 			$volatile nR := (R - 1 ) $buffering 1
    //  file .Aa/nic.linked.opt.aa, line 616
    // (R - 1 )
    -[SUB_u10_u10_1736_inst] (R_1728 konst_1735_wire_constant) (nR_1737)   $flowthrough 
    $delay SUB_u10_u10_1736_inst 0
  }
  // end data-path
  // CP-DP links for do-while  do_while_stmt_1726
  //  file .Aa/nic.linked.opt.aa, line 610
  phi_stmt_1728 <=> (branch_block_stmt_1725/do_while_stmt_1726/do_while_stmt_1726_loop_body/phi_stmt_1728_loopback_sample_req branch_block_stmt_1725/do_while_stmt_1726/do_while_stmt_1726_loop_body/phi_stmt_1728_entry_sample_req) (branch_block_stmt_1725/do_while_stmt_1726/do_while_stmt_1726_loop_body/phi_stmt_1728_phi_mux_ack)
  nR_1737_1730_buf <=> (branch_block_stmt_1725/do_while_stmt_1726/do_while_stmt_1726_loop_body/R_nR_1730_Sample/req branch_block_stmt_1725/do_while_stmt_1726/do_while_stmt_1726_loop_body/R_nR_1730_Update/req) (branch_block_stmt_1725/do_while_stmt_1726/do_while_stmt_1726_loop_body/R_nR_1730_Sample/ack branch_block_stmt_1725/do_while_stmt_1726/do_while_stmt_1726_loop_body/R_nR_1730_Update/ack)
  T_1731_buf <=> (branch_block_stmt_1725/do_while_stmt_1726/do_while_stmt_1726_loop_body/R_T_1731_Sample/req branch_block_stmt_1725/do_while_stmt_1726/do_while_stmt_1726_loop_body/R_T_1731_Update/req) (branch_block_stmt_1725/do_while_stmt_1726/do_while_stmt_1726_loop_body/R_T_1731_Sample/ack branch_block_stmt_1725/do_while_stmt_1726/do_while_stmt_1726_loop_body/R_T_1731_Update/ack)
  // 			$volatile nR := (R - 1 ) $buffering 1
  //  file .Aa/nic.linked.opt.aa, line 616
  // (R - 1 )
  // R
  // (R > 0 )
  // R
  do_while_stmt_1726_branch <=> (branch_block_stmt_1725/do_while_stmt_1726/do_while_stmt_1726_loop_body/condition_evaluated) (branch_block_stmt_1725/do_while_stmt_1726/loop_exit/ack branch_block_stmt_1725/do_while_stmt_1726/loop_taken/ack)
}
$module [populateRxQueue] 
{
  $in tag:$int<8>
  // can point into 
  rx_buffer_pointer:$int<64>
  // can point into  foreign( $void )
  // pipe-declarations for block %populateRxQueue
  //  file .Aa/nic.linked.opt.aa, line 621
  // pipe-declarations for block %populateRxQueue%push_into_queue
  //  file .Aa/nic.linked.opt.aa, line 627
  // pipe-declarations for block %populateRxQueue%push_into_queue%
  //  file .Aa/nic.linked.opt.aa, line 629
  // there are no memory spaces local to this module.
  $CP 
  {
    // begin control-path 
    <>[branch_block_stmt_1752] // Branch Block  file .Aa/nic.linked.opt.aa, line 627
    {
      $P [branch_block_stmt_1752__entry__]
      branch_block_stmt_1752__entry__ <-| ($entry)
      $P [branch_block_stmt_1752__exit__]
      branch_block_stmt_1752__exit__ |-> ($exit)
      $P [merge_stmt_1753__entry__] 
      $P [merge_stmt_1753__exit__] 
      $P [call_stmt_1773_to_assign_stmt_1785__entry__] 
      $P [call_stmt_1773_to_assign_stmt_1785__exit__] 
      $P [if_stmt_1789__entry__] 
      $P [if_stmt_1789__exit__] 
      ::[call_stmt_1773_to_assign_stmt_1785] 
      {
        // start: 		$call pushIntoQueue (tag RXQUEUE q_index rx_buffer_pointer ) (push_status ) 
        //  file .Aa/nic.linked.opt.aa, line 634
        $T[call_stmt_1773_sample_start_] 
        $T[call_stmt_1773_sample_completed_] 
        $T[call_stmt_1773_update_start_] 
        $T[call_stmt_1773_update_completed_] 
        // Call input argument 0
        // tag
        // Call input argument 1
        // Call input argument 2
        // q_index
        // Call input argument 3
        // rx_buffer_pointer
        // start: Forward dependencies from tag to transition call_stmt_1773_sample_start_
        // done: Forward dependencies from tag to transition call_stmt_1773_sample_start_
        // start: Forward dependencies from q_index to transition call_stmt_1773_sample_start_
        // done: Forward dependencies from q_index to transition call_stmt_1773_sample_start_
        // start: Forward dependencies from rx_buffer_pointer to transition call_stmt_1773_sample_start_
        // done: Forward dependencies from rx_buffer_pointer to transition call_stmt_1773_sample_start_
        ;;[call_stmt_1773_Sample] 
        {
          $T [crr] $T [cra] 
        }
        ;;[call_stmt_1773_Update] 
        {
          $T [ccr] $T [cca] 
        }
        call_stmt_1773_sample_start_ &-> (call_stmt_1773_Sample)
        call_stmt_1773_sample_completed_ <-& (call_stmt_1773_Sample)
        call_stmt_1773_sample_completed_ &-> ($null)
        call_stmt_1773_update_start_ &-> (call_stmt_1773_Update)
        call_stmt_1773_update_completed_ <-& (call_stmt_1773_Update)
        // Call output argument 0
        // (as target) push_status
        // start: WAR dependencies for push_status
        // done: WAR dependencies for push_status
        // end: 		$call pushIntoQueue (tag RXQUEUE q_index rx_buffer_pointer ) (push_status ) 
        // start: 		$guard (~push_status) $call incrementNumberOfPacketsReceived () () 
        //  file .Aa/nic.linked.opt.aa, line 635
        $T[call_stmt_1775_sample_start_] 
        $T[call_stmt_1775_sample_completed_] 
        $T[call_stmt_1775_update_start_] 
        $T[call_stmt_1775_update_completed_] 
        // Guard expression
        // push_status
        // start: Forward dependencies from push_status to transition call_stmt_1775_sample_start_
        call_stmt_1775_sample_start_ <-& (call_stmt_1773_update_completed_)
        // done: Forward dependencies from push_status to transition call_stmt_1775_sample_start_
        ;;[call_stmt_1775_Sample] 
        {
          $T [crr] $T [cra] 
        }
        ;;[call_stmt_1775_Update] 
        {
          $T [ccr] $T [cca] 
        }
        call_stmt_1775_sample_start_ &-> (call_stmt_1775_Sample)
        call_stmt_1775_sample_completed_ <-& (call_stmt_1775_Sample)
        call_stmt_1775_sample_completed_ &-> ($null)
        call_stmt_1775_update_start_ &-> (call_stmt_1775_Update)
        call_stmt_1775_update_completed_ <-& (call_stmt_1775_Update)
        // end: 		$guard (~push_status) $call incrementNumberOfPacketsReceived () () 
        // start:  		n_q_index := ((q_index + 1 ) & ($bitcast ($uint<8>) (S_NUMBER_OF_SERVERS - 1 ) )) $buffering 1// bits of buffering = 8. 
        //  file .Aa/nic.linked.opt.aa, line 636
        // Source expression
        // ((q_index + 1 ) & ($bitcast ($uint<8>) (S_NUMBER_OF_SERVERS - 1 ) ))
        $T[AND_u8_u8_1784_sample_start_] 
        $T[AND_u8_u8_1784_sample_completed_] 
        $T[AND_u8_u8_1784_update_start_] 
        $T[AND_u8_u8_1784_update_completed_] 
        // (q_index + 1 )
        // q_index
        // ($bitcast ($uint<8>) (S_NUMBER_OF_SERVERS - 1 ) )
        // (S_NUMBER_OF_SERVERS - 1 )
        // S_NUMBER_OF_SERVERS
        // start: Forward dependencies from (q_index + 1 ) to transition AND_u8_u8_1784_sample_start_
        // done: Forward dependencies from (q_index + 1 ) to transition AND_u8_u8_1784_sample_start_
        // start: Forward dependencies from ($bitcast ($uint<8>) (S_NUMBER_OF_SERVERS - 1 ) ) to transition AND_u8_u8_1784_sample_start_
        // non-constant expression which depends only on signals/constants?
        // done: Forward dependencies from ($bitcast ($uint<8>) (S_NUMBER_OF_SERVERS - 1 ) ) to transition AND_u8_u8_1784_sample_start_
        ;;[AND_u8_u8_1784_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[AND_u8_u8_1784_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        AND_u8_u8_1784_sample_start_ &-> (AND_u8_u8_1784_Sample)
        AND_u8_u8_1784_sample_completed_ <-& (AND_u8_u8_1784_Sample)
        AND_u8_u8_1784_sample_completed_ &-> ($null)
        AND_u8_u8_1784_update_start_ &-> (AND_u8_u8_1784_Update)
        AND_u8_u8_1784_update_completed_ <-& (AND_u8_u8_1784_Update)
        // Target expression
        // (as target) n_q_index
        // start: WAR dependencies for n_q_index
        // done: WAR dependencies for n_q_index
        // end:  		n_q_index := ((q_index + 1 ) & ($bitcast ($uint<8>) (S_NUMBER_OF_SERVERS - 1 ) )) $buffering 1// bits of buffering = 8. 
        // load-store dependencies..
        // memory-space  memory_space_0
        //  call_stmt_1773 store
        //  call_stmt_1775 store
        $T [call_stmt_1773_call_stmt_1775_delay] $delay
        // call_stmt_1773(store) -> call_stmt_1775(store)
        call_stmt_1775_sample_start_ <-& (call_stmt_1773_call_stmt_1775_delay)
        call_stmt_1773_call_stmt_1775_delay <-& (call_stmt_1773_update_completed_)
        // pipe read/write dependencies for pipe MEMORY_TO_NIC_RESPONSE
        // read-dependencies for pipe MEMORY_TO_NIC_RESPONSE
        // write-dependencies for pipe MEMORY_TO_NIC_RESPONSE
        // signal write dependencies for MEMORY_TO_NIC_RESPONSE
        // pipe read/write dependencies for pipe NIC_DEBUG_SIGNAL
        // read-dependencies for pipe NIC_DEBUG_SIGNAL
        // write-dependencies for pipe NIC_DEBUG_SIGNAL
        // signal write dependencies for NIC_DEBUG_SIGNAL
        // pipe read/write dependencies for pipe NIC_TO_MEMORY_REQUEST
        // read-dependencies for pipe NIC_TO_MEMORY_REQUEST
        // write-dependencies for pipe NIC_TO_MEMORY_REQUEST
        // signal write dependencies for NIC_TO_MEMORY_REQUEST
        // pipe read/write dependencies for pipe QUEUE_MONITOR_SIGNAL
        // read-dependencies for pipe QUEUE_MONITOR_SIGNAL
        // write-dependencies for pipe QUEUE_MONITOR_SIGNAL
        // signal write dependencies for QUEUE_MONITOR_SIGNAL
        // pipe read/write dependencies for pipe memory_access_lock
        // read-dependencies for pipe memory_access_lock
        // write-dependencies for pipe memory_access_lock
        // signal write dependencies for memory_access_lock
      }
      call_stmt_1773_to_assign_stmt_1785__entry__ |-> (call_stmt_1773_to_assign_stmt_1785)
      call_stmt_1773_to_assign_stmt_1785__exit__ <-| (call_stmt_1773_to_assign_stmt_1785)
      // if-statement  
      //  file .Aa/nic.linked.opt.aa, line 638
      ;;[if_stmt_1789_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_1789__entry__ |-> (if_stmt_1789_dead_link)
      if_stmt_1789__exit__ <-| (if_stmt_1789_dead_link)
      ;;[if_stmt_1789_eval_test] 
      {
        // test expression evaluate and trigger branch 
        // ( ~ push_status )
        ;;[NOT_u1_u1_1791] 
        {
          // unary expression 
          // flow-through
          ;;[SplitProtocol] 
          {
            ;;[Sample] 
            {
              $T [rr] $T [ra]
            }
            ;;[Update] 
            {
              $T [cr] $T [ca]
            }
          }
        }
        $T [branch_req] 
      }
      if_stmt_1789__entry__ |-> (if_stmt_1789_eval_test)
      $P [NOT_u1_u1_1791_place]
      NOT_u1_u1_1791_place <-| (if_stmt_1789_eval_test)
      ;;[if_stmt_1789_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_1789_else_link] 
      {
        $T [else_choice_transition] 
      }
      NOT_u1_u1_1791_place |-> (if_stmt_1789_if_link if_stmt_1789_else_link)
      $P [call_stmt_1794__entry__] 
      $P [call_stmt_1794__exit__] 
      $P [if_stmt_1795__entry__] 
      $P [if_stmt_1795__exit__] 
      ::[call_stmt_1794] 
      {
        // start: 			$call delay_time (32  ) (status ) 
        //  file .Aa/nic.linked.opt.aa, line 639
        $T[call_stmt_1794_sample_start_] 
        $T[call_stmt_1794_sample_completed_] 
        $T[call_stmt_1794_update_start_] 
        $T[call_stmt_1794_update_completed_] 
        // Call input argument 0
        ;;[call_stmt_1794_Sample] 
        {
          $T [crr] $T [cra] 
        }
        ;;[call_stmt_1794_Update] 
        {
          $T [ccr] $T [cca] 
        }
        call_stmt_1794_sample_start_ &-> (call_stmt_1794_Sample)
        call_stmt_1794_sample_completed_ <-& (call_stmt_1794_Sample)
        call_stmt_1794_sample_completed_ &-> ($null)
        call_stmt_1794_update_start_ &-> (call_stmt_1794_Update)
        call_stmt_1794_update_completed_ <-& (call_stmt_1794_Update)
        // Call output argument 0
        // (as target) status
        // start: WAR dependencies for status
        // done: WAR dependencies for status
        // end: 			$call delay_time (32  ) (status ) 
        // load-store dependencies..
      }
      call_stmt_1794__entry__ |-> (call_stmt_1794)
      call_stmt_1794__exit__ <-| (call_stmt_1794)
      // if-statement  
      //  file .Aa/nic.linked.opt.aa, line 32946400
      ;;[if_stmt_1795_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_1795__entry__ |-> (if_stmt_1795_dead_link)
      if_stmt_1795__exit__ <-| (if_stmt_1795_dead_link)
      ;;[if_stmt_1795_eval_test] 
      {
        // test expression evaluate and trigger branch 
        // (status == 0 )
        ;;[EQ_u1_u1_1798] 
        {
          // binary expression 
          ||[EQ_u1_u1_1798_inputs] 
          {
          }
          // flow-through
          ;;[SplitProtocol] 
          {
            ;;[Sample] 
            {
              $T [rr] $T [ra]
            }
            ;;[Update] 
            {
              $T [cr] $T [ca]
            }
          }
        }
        $T [branch_req] 
      }
      if_stmt_1795__entry__ |-> (if_stmt_1795_eval_test)
      $P [EQ_u1_u1_1798_place]
      EQ_u1_u1_1798_place <-| (if_stmt_1795_eval_test)
      ;;[if_stmt_1795_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_1795_else_link] 
      {
        $T [else_choice_transition] 
      }
      EQ_u1_u1_1798_place |-> (if_stmt_1795_if_link if_stmt_1795_else_link)
      $P [loopback]
      loopback <-| (if_stmt_1795_if_link)
      if_stmt_1795__exit__ <-| (if_stmt_1795_else_link)
      call_stmt_1794__entry__ <-| (if_stmt_1789_if_link)
      if_stmt_1795__entry__ <-| (call_stmt_1794__exit__)
      if_stmt_1795__exit__ |-> (if_stmt_1789__exit__)
      $P [assign_stmt_1804__entry__] 
      $P [assign_stmt_1804__exit__] 
      ::[assign_stmt_1804] 
      {
        // start:  			LAST_WRITTEN_RX_QUEUE_INDEX := q_index $buffering 1// bits of buffering = 8. 
        //  file .Aa/nic.linked.opt.aa, line 644
        // Source expression
        // q_index
        // Target expression
        // (as target) LAST_WRITTEN_RX_QUEUE_INDEX
        $T[WPIPE_LAST_WRITTEN_RX_QUEUE_INDEX_1802_sample_start_] 
        $T[WPIPE_LAST_WRITTEN_RX_QUEUE_INDEX_1802_sample_completed_] 
        $T[WPIPE_LAST_WRITTEN_RX_QUEUE_INDEX_1802_update_start_] 
        $T[WPIPE_LAST_WRITTEN_RX_QUEUE_INDEX_1802_update_completed_] 
        ;;[WPIPE_LAST_WRITTEN_RX_QUEUE_INDEX_1802_Sample] 
        {
          // pipe write sample-start LAST_WRITTEN_RX_QUEUE_INDEX
          $T [req] $T [ack] 
        }
        ;;[WPIPE_LAST_WRITTEN_RX_QUEUE_INDEX_1802_Update] 
        {
          // pipe write update (complete) LAST_WRITTEN_RX_QUEUE_INDEX
          $T [req] $T [ack] 
        }
        WPIPE_LAST_WRITTEN_RX_QUEUE_INDEX_1802_sample_start_ &-> (WPIPE_LAST_WRITTEN_RX_QUEUE_INDEX_1802_Sample)
        WPIPE_LAST_WRITTEN_RX_QUEUE_INDEX_1802_sample_completed_ <-& (WPIPE_LAST_WRITTEN_RX_QUEUE_INDEX_1802_Sample)
        WPIPE_LAST_WRITTEN_RX_QUEUE_INDEX_1802_update_start_ <-& (WPIPE_LAST_WRITTEN_RX_QUEUE_INDEX_1802_sample_completed_)
        WPIPE_LAST_WRITTEN_RX_QUEUE_INDEX_1802_update_start_ &-> (WPIPE_LAST_WRITTEN_RX_QUEUE_INDEX_1802_Update)
        WPIPE_LAST_WRITTEN_RX_QUEUE_INDEX_1802_update_completed_ <-& (WPIPE_LAST_WRITTEN_RX_QUEUE_INDEX_1802_Update)
        // start: Forward dependencies from q_index to transition WPIPE_LAST_WRITTEN_RX_QUEUE_INDEX_1802_sample_start_
        // done: Forward dependencies from q_index to transition WPIPE_LAST_WRITTEN_RX_QUEUE_INDEX_1802_sample_start_
        // end:  			LAST_WRITTEN_RX_QUEUE_INDEX := q_index $buffering 1// bits of buffering = 8. 
        // load-store dependencies..
        // pipe read/write dependencies for pipe LAST_WRITTEN_RX_QUEUE_INDEX
        // read-dependencies for pipe LAST_WRITTEN_RX_QUEUE_INDEX
        // write-dependencies for pipe LAST_WRITTEN_RX_QUEUE_INDEX
        // signal write dependencies for LAST_WRITTEN_RX_QUEUE_INDEX
      }
      assign_stmt_1804__entry__ |-> (assign_stmt_1804)
      assign_stmt_1804__exit__ <-| (assign_stmt_1804)
      assign_stmt_1804__entry__ <-| (if_stmt_1789_else_link)
      assign_stmt_1804__exit__ |-> (if_stmt_1789__exit__)
      // control-path for merge  
      //  file .Aa/nic.linked.opt.aa, line 629
      ;;[merge_stmt_1753_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_1753__entry__ |-> (merge_stmt_1753_dead_link)
      merge_stmt_1753__exit__ <-| (merge_stmt_1753_dead_link)
      //---------------------   merge statement  file .Aa/nic.linked.opt.aa, line 629  --------------------------
      ||[merge_stmt_1753__entry___PhiReq] 
      {
        ;;[phi_stmt_1754] 
        {
          ||[phi_stmt_1754_sources] 
          {
            // sources for 			$phi q_index := 			  ((LAST_WRITTEN_RX_QUEUE_INDEX + 1 ) & ($bitcast ($uint<8>) (S_NUMBER_OF_SERVERS - 1 ) )) $on   $entry 			  n_q_index $on   loopback 
            // type of target is $uint<8>
            // trivial non-constant source .... interlock-buffer introduced 
            // ((LAST_WRITTEN_RX_QUEUE_INDEX + 1 ) & ($bitcast ($uint<8>) (S_NUMBER_OF_SERVERS - 1 ) ))
            ;;[AND_u8_u8_1763] 
            {
              // binary expression 
              ||[AND_u8_u8_1763_inputs] 
              {
                // (LAST_WRITTEN_RX_QUEUE_INDEX + 1 )
                ;;[ADD_u8_u8_1758] 
                {
                  // binary expression 
                  ||[ADD_u8_u8_1758_inputs] 
                  {
                    // LAST_WRITTEN_RX_QUEUE_INDEX
                    ;;[RPIPE_LAST_WRITTEN_RX_QUEUE_INDEX_1756] 
                    {
                      // pipe read
                      ;;[Sample] 
                      {
                        $T [req] $T [ack] 
                      }
                      ;;[Update] 
                      {
                        $T [req] $T [ack] 
                      }
                    }
                  }
                  // flow-through
                  ;;[SplitProtocol] 
                  {
                    ;;[Sample] 
                    {
                      $T [rr] $T [ra]
                    }
                    ;;[Update] 
                    {
                      $T [cr] $T [ca]
                    }
                  }
                }
                // ($bitcast ($uint<8>) (S_NUMBER_OF_SERVERS - 1 ) )
                ;;[type_cast_1762] 
                {
                  // type-cast expression
                  // (S_NUMBER_OF_SERVERS - 1 )
                  ;;[SUB_u32_u32_1761] 
                  {
                    // binary expression 
                    ||[SUB_u32_u32_1761_inputs] 
                    {
                      // S_NUMBER_OF_SERVERS
                      ;;[RPIPE_S_NUMBER_OF_SERVERS_1759] 
                      {
                        // pipe read
                        ;;[Sample] 
                        {
                          $T [req] $T [ack] 
                        }
                        ;;[Update] 
                        {
                          $T [req] $T [ack] 
                        }
                      }
                    }
                    // flow-through
                    ;;[SplitProtocol] 
                    {
                      ;;[Sample] 
                      {
                        $T [rr] $T [ra]
                      }
                      ;;[Update] 
                      {
                        $T [cr] $T [ca]
                      }
                    }
                  }
                  // flow-through
                  ;;[SplitProtocol] 
                  {
                    ;;[Sample] 
                    {
                      $T [rr] $T [ra]  
                    }
                    ;;[Update] 
                    {
                      $T [cr] $T [ca] 
                    }
                  }
                }
              }
              ||[SplitProtocol] 
              {
                ;;[Sample] 
                {
                  $T [rr] $T [ra]
                }
                ;;[Update] 
                {
                  $T [cr] $T [ca]
                }
              }
            }
          }
          $T [phi_stmt_1754_req] 
        }
      }
      merge_stmt_1753__entry__ |-> (merge_stmt_1753__entry___PhiReq)
      ||[loopback_PhiReq] 
      {
        ;;[phi_stmt_1754] 
        {
          ||[phi_stmt_1754_sources] 
          {
            // sources for 			$phi q_index := 			  ((LAST_WRITTEN_RX_QUEUE_INDEX + 1 ) & ($bitcast ($uint<8>) (S_NUMBER_OF_SERVERS - 1 ) )) $on   $entry 			  n_q_index $on   loopback 
            // type of target is $uint<8>
            // trivial non-constant source .... interlock-buffer introduced 
            || [Interlock] 
            {
              ;;[Sample] 
              {
                $T [req] $T [ack]
              }
              ;;[Update] 
              {
                $T [req] $T [ack]
              }
            }
          }
          $T [phi_stmt_1754_req] 
        }
      }
      loopback |-> (loopback_PhiReq)
      $P [merge_stmt_1753_PhiReqMerge] 
      merge_stmt_1753_PhiReqMerge <-| ( merge_stmt_1753__entry___PhiReq  loopback_PhiReq )
      ||[merge_stmt_1753_PhiAck] 
      {
        $T [phi_stmt_1754_ack] 
      }
      merge_stmt_1753_PhiReqMerge |-> (merge_stmt_1753_PhiAck)
      merge_stmt_1753__exit__  <-| (merge_stmt_1753_PhiAck)
      //---------------------  end of merge statement  file .Aa/nic.linked.opt.aa, line 629  --------------------------
      merge_stmt_1753__entry__ <-| (branch_block_stmt_1752__entry__)
      call_stmt_1773_to_assign_stmt_1785__entry__ <-| (merge_stmt_1753__exit__)
      if_stmt_1789__entry__ <-| (call_stmt_1773_to_assign_stmt_1785__exit__)
      if_stmt_1789__exit__ |-> (branch_block_stmt_1752__exit__)
    }
  }
  // end control-path
  $DP 
  {
    // begin data-path 
    // constant-object-declarations for block %populateRxQueue%push_into_queue%
    //  file .Aa/nic.linked.opt.aa, line 629
    // constant-object-declarations for block %populateRxQueue%push_into_queue
    //  file .Aa/nic.linked.opt.aa, line 627
    // constant-object-declarations for block %populateRxQueue
    //  file .Aa/nic.linked.opt.aa, line 621
    // constant-declarations for block %populateRxQueue%push_into_queue
    //  file .Aa/nic.linked.opt.aa, line 627
    // constant-declarations for block %populateRxQueue%push_into_queue%
    //  file .Aa/nic.linked.opt.aa, line 629
    // constant-declarations for phi:  			$phi q_index := 			  ((LAST_WRITTEN_RX_QUEUE_INDEX + 1 ) & ($bitcast ($uint<8>) (S_NUMBER_OF_SERVERS - 1 ) )) $on   $entry 			  n_q_index $on   loopback 
    // type of target is $uint<8>
    //  file .Aa/nic.linked.opt.aa, line 630
    // 1 
    $constant $W[konst_1757_wire_constant] : $int<8> := _b00000001// 1
    // 1 
    $constant $W[konst_1760_wire_constant] : $int<32> := _b00000000000000000000000000000001// 1
    // 		$call pushIntoQueue (tag RXQUEUE q_index rx_buffer_pointer ) (push_status ) 
    //  file .Aa/nic.linked.opt.aa, line 634
    // RXQUEUE
    $constant $W[R_RXQUEUE_1769_wire_constant] : $int<2> := _b10// 2
    // 		$guard (~push_status) $call incrementNumberOfPacketsReceived () () 
    //  file .Aa/nic.linked.opt.aa, line 635
    // 1 
    $constant $W[konst_1778_wire_constant] : $int<8> := _b00000001// 1
    // 1 
    $constant $W[konst_1781_wire_constant] : $int<32> := _b00000000000000000000000000000001// 1
    // if-statement  
    //  file .Aa/nic.linked.opt.aa, line 638
    // 			$call delay_time (32  ) (status ) 
    //  file .Aa/nic.linked.opt.aa, line 639
    // 32 
    $constant $W[konst_1792_wire_constant] : $int<10> := _b0000100000// 32
    // if-statement  
    //  file .Aa/nic.linked.opt.aa, line 32946400
    // 0 
    $constant $W[konst_1797_wire_constant] : $int<1> := _b0// 0
    // block %populateRxQueue%push_into_queue
    //  file .Aa/nic.linked.opt.aa, line 627
    // merge-statement  
    //  file .Aa/nic.linked.opt.aa, line 629
    // 			$phi q_index := 			  ((LAST_WRITTEN_RX_QUEUE_INDEX + 1 ) & ($bitcast ($uint<8>) (S_NUMBER_OF_SERVERS - 1 ) )) $on   $entry 			  n_q_index $on   loopback 
    // type of target is $uint<8>
    //  file .Aa/nic.linked.opt.aa, line 630
    // LAST_WRITTEN_RX_QUEUE_INDEX
    $W[RPIPE_LAST_WRITTEN_RX_QUEUE_INDEX_1756_wire] : $int<8>
    // (LAST_WRITTEN_RX_QUEUE_INDEX + 1 )
    $intermediate $W[ADD_u8_u8_1758_wire] : $int<8>
    // S_NUMBER_OF_SERVERS
    $W[RPIPE_S_NUMBER_OF_SERVERS_1759_wire] : $int<32>
    // (S_NUMBER_OF_SERVERS - 1 )
    $intermediate $W[SUB_u32_u32_1761_wire] : $int<32>
    // ($bitcast ($uint<8>) (S_NUMBER_OF_SERVERS - 1 ) )
    $intermediate $W[type_cast_1762_wire] : $int<8>
    // ((LAST_WRITTEN_RX_QUEUE_INDEX + 1 ) & ($bitcast ($uint<8>) (S_NUMBER_OF_SERVERS - 1 ) ))
    $intermediate $W[AND_u8_u8_1763_wire] : $int<8>
    $W[n_q_index_1785_1764_buffered] : $int<8>
    // q_index
    $W[q_index_1754] : $int<8>
    // 		$call pushIntoQueue (tag RXQUEUE q_index rx_buffer_pointer ) (push_status ) 
    //  file .Aa/nic.linked.opt.aa, line 634
    // push_status
    $W[push_status_1773] : $int<1>
    // 		$guard (~push_status) $call incrementNumberOfPacketsReceived () () 
    //  file .Aa/nic.linked.opt.aa, line 635
    // 		n_q_index := ((q_index + 1 ) & ($bitcast ($uint<8>) (S_NUMBER_OF_SERVERS - 1 ) )) $buffering 1// bits of buffering = 8. 
    //  file .Aa/nic.linked.opt.aa, line 636
    // (q_index + 1 )
    $intermediate $W[ADD_u8_u8_1779_wire] : $int<8>
    // S_NUMBER_OF_SERVERS
    $W[RPIPE_S_NUMBER_OF_SERVERS_1780_wire] : $int<32>
    // (S_NUMBER_OF_SERVERS - 1 )
    $intermediate $W[SUB_u32_u32_1782_wire] : $int<32>
    // ($bitcast ($uint<8>) (S_NUMBER_OF_SERVERS - 1 ) )
    $intermediate $W[type_cast_1783_wire] : $int<8>
    // n_q_index
    $W[n_q_index_1785] : $int<8>
    // if statement  
    //  file .Aa/nic.linked.opt.aa, line 638
    // ( ~ push_status )
    $intermediate $W[NOT_u1_u1_1791_wire] : $int<1>
    // 			$call delay_time (32  ) (status ) 
    //  file .Aa/nic.linked.opt.aa, line 639
    // status
    $W[status_1794] : $int<1>
    // if statement  
    //  file .Aa/nic.linked.opt.aa, line 32946400
    // (status == 0 )
    $intermediate $W[EQ_u1_u1_1798_wire] : $int<1>
    // 			LAST_WRITTEN_RX_QUEUE_INDEX := q_index $buffering 1// bits of buffering = 8. 
    //  file .Aa/nic.linked.opt.aa, line 644
    // LAST_WRITTEN_RX_QUEUE_INDEX
    // datapath-instances for block %populateRxQueue%push_into_queue
    //  file .Aa/nic.linked.opt.aa, line 627
    // data-path instances for merge  
    //  file .Aa/nic.linked.opt.aa, line 629
    // 			$phi q_index := 			  ((LAST_WRITTEN_RX_QUEUE_INDEX + 1 ) & ($bitcast ($uint<8>) (S_NUMBER_OF_SERVERS - 1 ) )) $on   $entry 			  n_q_index $on   loopback 
    // type of target is $uint<8>
    //  file .Aa/nic.linked.opt.aa, line 630
    // LAST_WRITTEN_RX_QUEUE_INDEX
    $ioport $in [RPIPE_LAST_WRITTEN_RX_QUEUE_INDEX_1756_inst] (LAST_WRITTEN_RX_QUEUE_INDEX) (RPIPE_LAST_WRITTEN_RX_QUEUE_INDEX_1756_wire) 
    $buffering $out RPIPE_LAST_WRITTEN_RX_QUEUE_INDEX_1756_inst RPIPE_LAST_WRITTEN_RX_QUEUE_INDEX_1756_wire 1
    // (LAST_WRITTEN_RX_QUEUE_INDEX + 1 )
    +[ADD_u8_u8_1758_inst] (RPIPE_LAST_WRITTEN_RX_QUEUE_INDEX_1756_wire konst_1757_wire_constant) (ADD_u8_u8_1758_wire)   $flowthrough 
    $delay ADD_u8_u8_1758_inst 0
    // S_NUMBER_OF_SERVERS
    $ioport $in [RPIPE_S_NUMBER_OF_SERVERS_1759_inst] (S_NUMBER_OF_SERVERS) (RPIPE_S_NUMBER_OF_SERVERS_1759_wire) 
    $buffering $out RPIPE_S_NUMBER_OF_SERVERS_1759_inst RPIPE_S_NUMBER_OF_SERVERS_1759_wire 1
    // (S_NUMBER_OF_SERVERS - 1 )
    -[SUB_u32_u32_1761_inst] (RPIPE_S_NUMBER_OF_SERVERS_1759_wire konst_1760_wire_constant) (SUB_u32_u32_1761_wire)   $flowthrough 
    $delay SUB_u32_u32_1761_inst 0
    // ($bitcast ($uint<8>) (S_NUMBER_OF_SERVERS - 1 ) )
    # := [type_cast_1762_inst] (SUB_u32_u32_1761_wire) (type_cast_1762_wire)   $flowthrough
    $delay type_cast_1762_inst 0
    // ((LAST_WRITTEN_RX_QUEUE_INDEX + 1 ) & ($bitcast ($uint<8>) (S_NUMBER_OF_SERVERS - 1 ) ))
    &[AND_u8_u8_1763_inst] (ADD_u8_u8_1758_wire type_cast_1762_wire) (AND_u8_u8_1763_wire)   
    $buffering  $out AND_u8_u8_1763_inst AND_u8_u8_1763_wire 1
    $delay AND_u8_u8_1763_inst 1
    # := [n_q_index_1785_1764_buf] (n_q_index_1785) (n_q_index_1785_1764_buffered)   $in_phi   
    $phi [phi_stmt_1754] (AND_u8_u8_1763_wire n_q_index_1785_1764_buffered) ( q_index_1754 ) 
    // 		$call pushIntoQueue (tag RXQUEUE q_index rx_buffer_pointer ) (push_status ) 
    //  file .Aa/nic.linked.opt.aa, line 634
    $call [call_stmt_1773_call] $module pushIntoQueue(tag R_RXQUEUE_1769_wire_constant q_index_1754 rx_buffer_pointer) (push_status_1773)  
    $delay call_stmt_1773_call 4
    $buffering  $in call_stmt_1773_call tag 1
    $buffering  $in call_stmt_1773_call R_RXQUEUE_1769_wire_constant 1
    $buffering  $in call_stmt_1773_call q_index_1754 1
    $buffering  $in call_stmt_1773_call rx_buffer_pointer 1
    $buffering  $out call_stmt_1773_call push_status_1773 1
    // 		$guard (~push_status) $call incrementNumberOfPacketsReceived () () 
    //  file .Aa/nic.linked.opt.aa, line 635
    $call [call_stmt_1775_call] $module incrementNumberOfPacketsReceived() () $guard ( ~ push_status_1773 )  
    $delay call_stmt_1775_call 4
    // 		n_q_index := ((q_index + 1 ) & ($bitcast ($uint<8>) (S_NUMBER_OF_SERVERS - 1 ) )) $buffering 1// bits of buffering = 8. 
    //  file .Aa/nic.linked.opt.aa, line 636
    // (q_index + 1 )
    +[ADD_u8_u8_1779_inst] (q_index_1754 konst_1778_wire_constant) (ADD_u8_u8_1779_wire)   $flowthrough 
    $delay ADD_u8_u8_1779_inst 0
    // S_NUMBER_OF_SERVERS
    $ioport $in [RPIPE_S_NUMBER_OF_SERVERS_1780_inst] (S_NUMBER_OF_SERVERS) (RPIPE_S_NUMBER_OF_SERVERS_1780_wire) 
    $buffering $out RPIPE_S_NUMBER_OF_SERVERS_1780_inst RPIPE_S_NUMBER_OF_SERVERS_1780_wire 1
    // (S_NUMBER_OF_SERVERS - 1 )
    -[SUB_u32_u32_1782_inst] (RPIPE_S_NUMBER_OF_SERVERS_1780_wire konst_1781_wire_constant) (SUB_u32_u32_1782_wire)   $flowthrough 
    $delay SUB_u32_u32_1782_inst 0
    // ($bitcast ($uint<8>) (S_NUMBER_OF_SERVERS - 1 ) )
    # := [type_cast_1783_inst] (SUB_u32_u32_1782_wire) (type_cast_1783_wire)   $flowthrough
    $delay type_cast_1783_inst 0
    // ((q_index + 1 ) & ($bitcast ($uint<8>) (S_NUMBER_OF_SERVERS - 1 ) ))
    &[AND_u8_u8_1784_inst] (ADD_u8_u8_1779_wire type_cast_1783_wire) (n_q_index_1785)   
    $buffering  $out AND_u8_u8_1784_inst n_q_index_1785 1
    $delay AND_u8_u8_1784_inst 1
    // datapath-instances for if  
    //  file .Aa/nic.linked.opt.aa, line 638
    // ( ~ push_status )
    ~ [NOT_u1_u1_1791_inst] (push_status_1773) (NOT_u1_u1_1791_wire)   $flowthrough
    $delay NOT_u1_u1_1791_inst 0
    ==0? [if_stmt_1789_branch] (NOT_u1_u1_1791_wire)
    // 			$call delay_time (32  ) (status ) 
    //  file .Aa/nic.linked.opt.aa, line 639
    $call [call_stmt_1794_call] $module delay_time(konst_1792_wire_constant) (status_1794)  
    $delay call_stmt_1794_call 2
    $buffering  $in call_stmt_1794_call konst_1792_wire_constant 1
    $buffering  $out call_stmt_1794_call status_1794 1
    // datapath-instances for if  
    //  file .Aa/nic.linked.opt.aa, line 32946400
    // (status == 0 )
    ==[EQ_u1_u1_1798_inst] (status_1794 konst_1797_wire_constant) (EQ_u1_u1_1798_wire)   $flowthrough 
    $delay EQ_u1_u1_1798_inst 0
    ==0? [if_stmt_1795_branch] (EQ_u1_u1_1798_wire)
    // 			LAST_WRITTEN_RX_QUEUE_INDEX := q_index $buffering 1// bits of buffering = 8. 
    //  file .Aa/nic.linked.opt.aa, line 644
    // LAST_WRITTEN_RX_QUEUE_INDEX
    $ioport $out [WPIPE_LAST_WRITTEN_RX_QUEUE_INDEX_1802_inst]  (q_index_1754) (LAST_WRITTEN_RX_QUEUE_INDEX) 
  }
  // end data-path
  // CP-DP links for merge  
  //  file .Aa/nic.linked.opt.aa, line 629
  // LAST_WRITTEN_RX_QUEUE_INDEX
  // (LAST_WRITTEN_RX_QUEUE_INDEX + 1 )
  // S_NUMBER_OF_SERVERS
  // (S_NUMBER_OF_SERVERS - 1 )
  // ((LAST_WRITTEN_RX_QUEUE_INDEX + 1 ) & ($bitcast ($uint<8>) (S_NUMBER_OF_SERVERS - 1 ) ))
  AND_u8_u8_1763_inst <=> (branch_block_stmt_1752/merge_stmt_1753__entry___PhiReq/phi_stmt_1754/phi_stmt_1754_sources/AND_u8_u8_1763/SplitProtocol/Sample/rr branch_block_stmt_1752/merge_stmt_1753__entry___PhiReq/phi_stmt_1754/phi_stmt_1754_sources/AND_u8_u8_1763/SplitProtocol/Update/cr) (branch_block_stmt_1752/merge_stmt_1753__entry___PhiReq/phi_stmt_1754/phi_stmt_1754_sources/AND_u8_u8_1763/SplitProtocol/Sample/ra branch_block_stmt_1752/merge_stmt_1753__entry___PhiReq/phi_stmt_1754/phi_stmt_1754_sources/AND_u8_u8_1763/SplitProtocol/Update/ca)
  n_q_index_1785_1764_buf <=> (branch_block_stmt_1752/loopback_PhiReq/phi_stmt_1754/phi_stmt_1754_sources/Interlock/Sample/req branch_block_stmt_1752/loopback_PhiReq/phi_stmt_1754/phi_stmt_1754_sources/Interlock/Update/req) (branch_block_stmt_1752/loopback_PhiReq/phi_stmt_1754/phi_stmt_1754_sources/Interlock/Sample/ack branch_block_stmt_1752/loopback_PhiReq/phi_stmt_1754/phi_stmt_1754_sources/Interlock/Update/ack)
  phi_stmt_1754 <=> (branch_block_stmt_1752/merge_stmt_1753__entry___PhiReq/phi_stmt_1754/phi_stmt_1754_req branch_block_stmt_1752/loopback_PhiReq/phi_stmt_1754/phi_stmt_1754_req) (branch_block_stmt_1752/merge_stmt_1753_PhiAck/phi_stmt_1754_ack)
  // 		$call pushIntoQueue (tag RXQUEUE q_index rx_buffer_pointer ) (push_status ) 
  //  file .Aa/nic.linked.opt.aa, line 634
  // tag
  // q_index
  // rx_buffer_pointer
  call_stmt_1773_call <=> (branch_block_stmt_1752/call_stmt_1773_to_assign_stmt_1785/call_stmt_1773_Sample/crr branch_block_stmt_1752/call_stmt_1773_to_assign_stmt_1785/call_stmt_1773_Update/ccr) (branch_block_stmt_1752/call_stmt_1773_to_assign_stmt_1785/call_stmt_1773_Sample/cra branch_block_stmt_1752/call_stmt_1773_to_assign_stmt_1785/call_stmt_1773_Update/cca)
  // 		$guard (~push_status) $call incrementNumberOfPacketsReceived () () 
  //  file .Aa/nic.linked.opt.aa, line 635
  call_stmt_1775_call <=> (branch_block_stmt_1752/call_stmt_1773_to_assign_stmt_1785/call_stmt_1775_Sample/crr branch_block_stmt_1752/call_stmt_1773_to_assign_stmt_1785/call_stmt_1775_Update/ccr) (branch_block_stmt_1752/call_stmt_1773_to_assign_stmt_1785/call_stmt_1775_Sample/cra branch_block_stmt_1752/call_stmt_1773_to_assign_stmt_1785/call_stmt_1775_Update/cca)
  // 		n_q_index := ((q_index + 1 ) & ($bitcast ($uint<8>) (S_NUMBER_OF_SERVERS - 1 ) )) $buffering 1// bits of buffering = 8. 
  //  file .Aa/nic.linked.opt.aa, line 636
  // ((q_index + 1 ) & ($bitcast ($uint<8>) (S_NUMBER_OF_SERVERS - 1 ) ))
  // (q_index + 1 )
  // q_index
  // (S_NUMBER_OF_SERVERS - 1 )
  // S_NUMBER_OF_SERVERS
  AND_u8_u8_1784_inst <=> (branch_block_stmt_1752/call_stmt_1773_to_assign_stmt_1785/AND_u8_u8_1784_Sample/rr branch_block_stmt_1752/call_stmt_1773_to_assign_stmt_1785/AND_u8_u8_1784_Update/cr) (branch_block_stmt_1752/call_stmt_1773_to_assign_stmt_1785/AND_u8_u8_1784_Sample/ra branch_block_stmt_1752/call_stmt_1773_to_assign_stmt_1785/AND_u8_u8_1784_Update/ca)
  // CP-DP links for if  
  //  file .Aa/nic.linked.opt.aa, line 638
  // ( ~ push_status )
  if_stmt_1789_branch <=> (branch_block_stmt_1752/if_stmt_1789_eval_test/branch_req) (branch_block_stmt_1752/if_stmt_1789_else_link/else_choice_transition branch_block_stmt_1752/if_stmt_1789_if_link/if_choice_transition)
  // 			$call delay_time (32  ) (status ) 
  //  file .Aa/nic.linked.opt.aa, line 639
  call_stmt_1794_call <=> (branch_block_stmt_1752/call_stmt_1794/call_stmt_1794_Sample/crr branch_block_stmt_1752/call_stmt_1794/call_stmt_1794_Update/ccr) (branch_block_stmt_1752/call_stmt_1794/call_stmt_1794_Sample/cra branch_block_stmt_1752/call_stmt_1794/call_stmt_1794_Update/cca)
  // CP-DP links for if  
  //  file .Aa/nic.linked.opt.aa, line 32946400
  // (status == 0 )
  if_stmt_1795_branch <=> (branch_block_stmt_1752/if_stmt_1795_eval_test/branch_req) (branch_block_stmt_1752/if_stmt_1795_else_link/else_choice_transition branch_block_stmt_1752/if_stmt_1795_if_link/if_choice_transition)
  // 			LAST_WRITTEN_RX_QUEUE_INDEX := q_index $buffering 1// bits of buffering = 8. 
  //  file .Aa/nic.linked.opt.aa, line 644
  // q_index
  // LAST_WRITTEN_RX_QUEUE_INDEX
  WPIPE_LAST_WRITTEN_RX_QUEUE_INDEX_1802_inst <=> (branch_block_stmt_1752/assign_stmt_1804/WPIPE_LAST_WRITTEN_RX_QUEUE_INDEX_1802_Sample/req branch_block_stmt_1752/assign_stmt_1804/WPIPE_LAST_WRITTEN_RX_QUEUE_INDEX_1802_Update/req) (branch_block_stmt_1752/assign_stmt_1804/WPIPE_LAST_WRITTEN_RX_QUEUE_INDEX_1802_Sample/ack branch_block_stmt_1752/assign_stmt_1804/WPIPE_LAST_WRITTEN_RX_QUEUE_INDEX_1802_Update/ack)
}
$module [ReceiveEngineDaemon] 
{
  // pipe-declarations for block %ReceiveEngineDaemon
  //  file .Aa/nic.linked.opt.aa, line 648
  // pipe-declarations for block %ReceiveEngineDaemon%main
  //  file .Aa/nic.linked.opt.aa, line 654
  // pipe-declarations for block %ReceiveEngineDaemon%main%
  //  file .Aa/nic.linked.opt.aa, line 656
  // there are no memory spaces local to this module.
  $CP 
  {
    // begin control-path 
    ::[assign_stmt_1811] 
    {
      // start:  	LAST_WRITTEN_RX_QUEUE_INDEX := 0  $buffering 1// bits of buffering = 8. 
      //  file .Aa/nic.linked.opt.aa, line 653
      // Target expression
      // (as target) LAST_WRITTEN_RX_QUEUE_INDEX
      $T[WPIPE_LAST_WRITTEN_RX_QUEUE_INDEX_1809_sample_start_] 
      $T[WPIPE_LAST_WRITTEN_RX_QUEUE_INDEX_1809_sample_completed_] 
      $T[WPIPE_LAST_WRITTEN_RX_QUEUE_INDEX_1809_update_start_] 
      $T[WPIPE_LAST_WRITTEN_RX_QUEUE_INDEX_1809_update_completed_] 
      ;;[WPIPE_LAST_WRITTEN_RX_QUEUE_INDEX_1809_Sample] 
      {
        // pipe write sample-start LAST_WRITTEN_RX_QUEUE_INDEX
        $T [req] $T [ack] 
      }
      ;;[WPIPE_LAST_WRITTEN_RX_QUEUE_INDEX_1809_Update] 
      {
        // pipe write update (complete) LAST_WRITTEN_RX_QUEUE_INDEX
        $T [req] $T [ack] 
      }
      WPIPE_LAST_WRITTEN_RX_QUEUE_INDEX_1809_sample_start_ &-> (WPIPE_LAST_WRITTEN_RX_QUEUE_INDEX_1809_Sample)
      WPIPE_LAST_WRITTEN_RX_QUEUE_INDEX_1809_sample_completed_ <-& (WPIPE_LAST_WRITTEN_RX_QUEUE_INDEX_1809_Sample)
      WPIPE_LAST_WRITTEN_RX_QUEUE_INDEX_1809_update_start_ <-& (WPIPE_LAST_WRITTEN_RX_QUEUE_INDEX_1809_sample_completed_)
      WPIPE_LAST_WRITTEN_RX_QUEUE_INDEX_1809_update_start_ &-> (WPIPE_LAST_WRITTEN_RX_QUEUE_INDEX_1809_Update)
      WPIPE_LAST_WRITTEN_RX_QUEUE_INDEX_1809_update_completed_ <-& (WPIPE_LAST_WRITTEN_RX_QUEUE_INDEX_1809_Update)
      // end:  	LAST_WRITTEN_RX_QUEUE_INDEX := 0  $buffering 1// bits of buffering = 8. 
      // load-store dependencies..
      // pipe read/write dependencies for pipe LAST_WRITTEN_RX_QUEUE_INDEX
      // read-dependencies for pipe LAST_WRITTEN_RX_QUEUE_INDEX
      // write-dependencies for pipe LAST_WRITTEN_RX_QUEUE_INDEX
      // signal write dependencies for LAST_WRITTEN_RX_QUEUE_INDEX
    }
    <>[branch_block_stmt_1812] // Branch Block  file .Aa/nic.linked.opt.aa, line 654
    {
      $P [branch_block_stmt_1812__entry__]
      branch_block_stmt_1812__entry__ <-| ($entry)
      $P [branch_block_stmt_1812__exit__]
      branch_block_stmt_1812__exit__ |-> ($exit)
      $P [merge_stmt_1813__entry__] 
      $P [merge_stmt_1813__exit__] 
      $P [if_stmt_1814__entry__] 
      $P [if_stmt_1814__exit__] 
      $P [assign_stmt_1824__entry__] 
      $P [assign_stmt_1824__exit__] 
      $P [do_while_stmt_1825__entry__] 
      $P [do_while_stmt_1825__exit__] 
      $P [disable_loopback]
      // if-statement  
      //  file .Aa/nic.linked.opt.aa, line 32902512
      ;;[if_stmt_1814_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_1814__entry__ |-> (if_stmt_1814_dead_link)
      if_stmt_1814__exit__ <-| (if_stmt_1814_dead_link)
      ;;[if_stmt_1814_eval_test] 
      {
        // test expression evaluate and trigger branch 
        // ( ~ (S_CONTROL_REGISTER [] 0 ) )
        ;;[NOT_u1_u1_1818] 
        {
          // unary expression 
          // (S_CONTROL_REGISTER [] 0 )
          ;;[BITSEL_u32_u1_1817] 
          {
            // binary expression 
            ||[BITSEL_u32_u1_1817_inputs] 
            {
              // S_CONTROL_REGISTER
              ;;[RPIPE_S_CONTROL_REGISTER_1815] 
              {
                // pipe read
                ;;[Sample] 
                {
                  $T [req] $T [ack] 
                }
                ;;[Update] 
                {
                  $T [req] $T [ack] 
                }
              }
            }
            // flow-through
            ;;[SplitProtocol] 
            {
              ;;[Sample] 
              {
                $T [rr] $T [ra]
              }
              ;;[Update] 
              {
                $T [cr] $T [ca]
              }
            }
          }
          // flow-through
          ;;[SplitProtocol] 
          {
            ;;[Sample] 
            {
              $T [rr] $T [ra]
            }
            ;;[Update] 
            {
              $T [cr] $T [ca]
            }
          }
        }
        $T [branch_req] 
      }
      if_stmt_1814__entry__ |-> (if_stmt_1814_eval_test)
      $P [NOT_u1_u1_1818_place]
      NOT_u1_u1_1818_place <-| (if_stmt_1814_eval_test)
      ;;[if_stmt_1814_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_1814_else_link] 
      {
        $T [else_choice_transition] 
      }
      NOT_u1_u1_1818_place |-> (if_stmt_1814_if_link if_stmt_1814_else_link)
      $P [not_enabled_yet_loopback]
      not_enabled_yet_loopback <-| (if_stmt_1814_if_link)
      if_stmt_1814__exit__ <-| (if_stmt_1814_else_link)
      ::[assign_stmt_1824] 
      {
        // start:  		rx_tag := ($bitcast ($uint<8>) 1  ) $buffering 1// bits of buffering = 8. 
        //  file .Aa/nic.linked.opt.aa, line 661
        // constant! 
        // end:  		rx_tag := ($bitcast ($uint<8>) 1  ) $buffering 1// bits of buffering = 8. 
        // load-store dependencies..
      }
      assign_stmt_1824__entry__ |-> (assign_stmt_1824)
      assign_stmt_1824__exit__ <-| (assign_stmt_1824)
      // do-while-statement  
      //  file .Aa/nic.linked.opt.aa, line 662
      <o> [do_while_stmt_1825]  $depth 3 $buffering 1 
      {
        $P[do_while_stmt_1825__entry__] 
        $P[do_while_stmt_1825__exit__] 
        $P[loop_back] 
        $P[condition_done] 
        $P[loop_body_done] 
        $pipeline [do_while_stmt_1825_loop_body] 
        {
          // Pipelined!
          $T[back_edge_to_loop_body] 
          $T[first_time_through_loop_body] 
          $T[loop_body_start] 
          $T[condition_evaluated] 
          $transitionmerge [entry_tmerge] (back_edge_to_loop_body first_time_through_loop_body) (loop_body_start)
          $entry <-& (loop_body_start)
          $T[aggregated_phi_sample_req] 
          $T[aggregated_phi_sample_ack] 
          $T[aggregated_phi_sample_ack_d] $delay
          aggregated_phi_sample_ack_d <-& (aggregated_phi_sample_ack)
          $T[aggregated_phi_update_req] 
          $T[aggregated_phi_update_ack] 
          // do not loop-back unless all phi's have used up their triggering tokens.
          condition_evaluated <-& (aggregated_phi_update_ack)
          aggregated_phi_sample_req o<-& (aggregated_phi_update_ack 0)
          // start:  multi-source PHI statement phi_stmt_1827
          // 			$phi init_flag := 			  ($bitcast ($uint<1>) _b1  ) $on   $entry 			  ($bitcast ($uint<1>) _b0  ) $on   $loopback 
          // type of target is $uint<1>
          $T[phi_stmt_1827_sample_start_] 
          $T[phi_stmt_1827_sample_completed_] 
          $T[phi_stmt_1827_update_start_] 
          $T[phi_stmt_1827_update_completed_] 
          $T[phi_stmt_1827_sample_start__ps] 
          phi_stmt_1827_sample_start__ps <-& (aggregated_phi_sample_req)
          $T[phi_stmt_1827_sample_completed__ps] 
          phi_stmt_1827_sample_completed__ps &-> (aggregated_phi_sample_ack)
          $T[phi_stmt_1827_update_start__ps] 
          phi_stmt_1827_update_start__ps <-& (aggregated_phi_update_req)
          $T[phi_stmt_1827_update_completed__ps] 
          phi_stmt_1827_update_completed_ <-& (phi_stmt_1827_update_completed__ps)
          aggregated_phi_sample_req <-& (phi_stmt_1827_sample_start_)
          aggregated_phi_sample_ack &-> (phi_stmt_1827_sample_completed_)
          aggregated_phi_update_req <-& (phi_stmt_1827_update_start_)
          $T[phi_stmt_1827_loopback_trigger] 
          phi_stmt_1827_loopback_trigger <-& (back_edge_to_loop_body)
          $T[phi_stmt_1827_loopback_sample_req] 
          $T[phi_stmt_1827_loopback_sample_req_ps] 
          phi_stmt_1827_loopback_sample_req <-& (phi_stmt_1827_loopback_sample_req_ps)
          phi_stmt_1827_loopback_sample_req &-> ($null)
          $T[phi_stmt_1827_entry_trigger] 
          phi_stmt_1827_entry_trigger <-& (first_time_through_loop_body)
          $T[phi_stmt_1827_entry_sample_req] 
          $T[phi_stmt_1827_entry_sample_req_ps] 
          phi_stmt_1827_entry_sample_req <-& (phi_stmt_1827_entry_sample_req_ps)
          phi_stmt_1827_entry_sample_req &-> ($null)
          phi_stmt_1827_update_start_ o<-& (phi_stmt_1827_update_completed_ 0)
          phi_stmt_1827_sample_start_ o<-& (phi_stmt_1827_sample_completed_ 1)
          $T[phi_stmt_1827_merged_reqs] 
          $T[phi_stmt_1827_phi_mux_ack] 
          $T[phi_stmt_1827_phi_mux_ack_ps] 
          phi_stmt_1827_phi_mux_ack_ps <-& (phi_stmt_1827_phi_mux_ack)
          aggregated_phi_update_ack <-& (phi_stmt_1827_update_completed_)
          $T[type_cast_1830_sample_start__ps] 
          $T[type_cast_1830_sample_completed__ps] 
          $T[type_cast_1830_update_start__ps] 
          $T[type_cast_1830_update_completed__ps] 
          // dummies for constant expression source for phi
          $T[type_cast_1830_sample_start_] 
          $T[type_cast_1830_sample_completed_] 
          type_cast_1830_sample_completed_ <-& (type_cast_1830_sample_start_)
          $T[type_cast_1830_update_start_] 
          $T [type_cast_1830_update_completed_] $delay 
          type_cast_1830_update_completed_ <-& (type_cast_1830_update_start_)
          // Phi start dependency for implicit/constant alternative.
          type_cast_1830_sample_start_ <-& (type_cast_1830_sample_start__ps)
          type_cast_1830_update_start_ <-& (type_cast_1830_update_start__ps)
          // Phi complete dependency.
          type_cast_1830_sample_completed__ps <-& (type_cast_1830_sample_completed_)
          type_cast_1830_update_completed__ps <-& (type_cast_1830_update_completed_)
          $T[type_cast_1832_sample_start__ps] 
          $T[type_cast_1832_sample_completed__ps] 
          $T[type_cast_1832_update_start__ps] 
          $T[type_cast_1832_update_completed__ps] 
          // dummies for constant expression source for phi
          $T[type_cast_1832_sample_start_] 
          $T[type_cast_1832_sample_completed_] 
          type_cast_1832_sample_completed_ <-& (type_cast_1832_sample_start_)
          $T[type_cast_1832_update_start_] 
          $T [type_cast_1832_update_completed_] $delay 
          type_cast_1832_update_completed_ <-& (type_cast_1832_update_start_)
          // Phi start dependency for implicit/constant alternative.
          type_cast_1832_sample_start_ <-& (type_cast_1832_sample_start__ps)
          type_cast_1832_update_start_ <-& (type_cast_1832_update_start__ps)
          // Phi complete dependency.
          type_cast_1832_sample_completed__ps <-& (type_cast_1832_sample_completed_)
          type_cast_1832_update_completed__ps <-& (type_cast_1832_update_completed_)
          $phisequencer [ phi_stmt_1827_phi_seq] : 
          phi_stmt_1827_loopback_trigger type_cast_1830_sample_start__ps type_cast_1830_sample_completed__ps type_cast_1830_update_start__ps type_cast_1830_update_completed__ps phi_stmt_1827_entry_trigger type_cast_1832_sample_start__ps type_cast_1832_sample_completed__ps type_cast_1832_update_start__ps type_cast_1832_update_completed__ps :
          phi_stmt_1827_sample_start__ps phi_stmt_1827_sample_completed__ps phi_stmt_1827_update_start__ps phi_stmt_1827_update_completed__ps :
          phi_stmt_1827_loopback_sample_req_ps phi_stmt_1827_entry_sample_req_ps : 
          phi_stmt_1827_phi_mux_ack_ps
          // done: PHI Statement phi_stmt_1827
          // start: 			$call popFromQueue (rx_tag FREEQUEUE 0  ) (rx_buffer_pointer status ) 
          //  file .Aa/nic.linked.opt.aa, line 667
          $T[call_stmt_1839_sample_start_] 
          $T[call_stmt_1839_sample_completed_] 
          $T[call_stmt_1839_update_start_] 
          $T[call_stmt_1839_update_completed_] 
          // Call input argument 0
          // Call input argument 1
          // Call input argument 2
          ;;[call_stmt_1839_Sample] 
          {
            $T [crr] $T [cra] 
          }
          ;;[call_stmt_1839_Update] 
          {
            $T [ccr] $T [cca] 
          }
          call_stmt_1839_sample_start_ &-> (call_stmt_1839_Sample)
          call_stmt_1839_sample_completed_ <-& (call_stmt_1839_Sample)
          call_stmt_1839_sample_completed_ &-> ($null)
          call_stmt_1839_update_start_ &-> (call_stmt_1839_Update)
          call_stmt_1839_update_completed_ <-& (call_stmt_1839_Update)
          // Call output argument 0
          // (as target) rx_buffer_pointer
          // Call output argument 1
          // (as target) status
          // self-release: 
          call_stmt_1839_sample_start_ o<-& (call_stmt_1839_sample_completed_ 1)
          $null &-> (call_stmt_1839_update_start_)
          call_stmt_1839_update_start_ o<-& (call_stmt_1839_update_completed_ 0)
          // start: WAR dependencies for rx_buffer_pointer
          // done: WAR dependencies for rx_buffer_pointer
          // start: WAR dependencies for status
          // done: WAR dependencies for status
          // end: 			$call popFromQueue (rx_tag FREEQUEUE 0  ) (rx_buffer_pointer status ) 
          // start:  			RX_ACTIVITY_LOGGER := 1  $buffering 1// bits of buffering = 8. 
          //  file .Aa/nic.linked.opt.aa, line 668
          // Target expression
          // (as target) RX_ACTIVITY_LOGGER
          $T[WPIPE_RX_ACTIVITY_LOGGER_1840_sample_start_] 
          $T[WPIPE_RX_ACTIVITY_LOGGER_1840_sample_completed_] 
          $T[WPIPE_RX_ACTIVITY_LOGGER_1840_update_start_] 
          $T[WPIPE_RX_ACTIVITY_LOGGER_1840_update_completed_] 
          ;;[WPIPE_RX_ACTIVITY_LOGGER_1840_Sample] 
          {
            // pipe write sample-start RX_ACTIVITY_LOGGER
            $T [req] $T [ack] 
          }
          ;;[WPIPE_RX_ACTIVITY_LOGGER_1840_Update] 
          {
            // pipe write update (complete) RX_ACTIVITY_LOGGER
            $T [req] $T [ack] 
          }
          WPIPE_RX_ACTIVITY_LOGGER_1840_sample_start_ &-> (WPIPE_RX_ACTIVITY_LOGGER_1840_Sample)
          WPIPE_RX_ACTIVITY_LOGGER_1840_sample_completed_ <-& (WPIPE_RX_ACTIVITY_LOGGER_1840_Sample)
          WPIPE_RX_ACTIVITY_LOGGER_1840_update_start_ <-& (WPIPE_RX_ACTIVITY_LOGGER_1840_sample_completed_)
          WPIPE_RX_ACTIVITY_LOGGER_1840_update_start_ &-> (WPIPE_RX_ACTIVITY_LOGGER_1840_Update)
          WPIPE_RX_ACTIVITY_LOGGER_1840_update_completed_ <-& (WPIPE_RX_ACTIVITY_LOGGER_1840_Update)
          WPIPE_RX_ACTIVITY_LOGGER_1840_sample_start_ o<-& (WPIPE_RX_ACTIVITY_LOGGER_1840_update_completed_ 0)
          // end:  			RX_ACTIVITY_LOGGER := 1  $buffering 1// bits of buffering = 8. 
          // Barrier in pipelined body 
          $T[barrier_stmt_1843_update_completed_] 
          barrier_stmt_1843_update_completed_ <-& (WPIPE_RX_ACTIVITY_LOGGER_1840_update_completed_)
          barrier_stmt_1843_update_completed_ <-& (call_stmt_1839_update_completed_)
          // start: 			$call accessMemoryDword (rx_tag READMEM rx_buffer_pointer ($bitcast ($uint<64>) _b0  ) ($bitcast ($uint<64>) _b0  ) ) (control_dword ) 
          //  file .Aa/nic.linked.opt.aa, line 670
          $T[call_stmt_1852_sample_start_] 
          $T[call_stmt_1852_sample_completed_] 
          $T[call_stmt_1852_update_start_] 
          $T[call_stmt_1852_update_completed_] 
          // Call input argument 0
          // Call input argument 1
          // Call input argument 2
          // rx_buffer_pointer
          // Call input argument 3
          // Call input argument 4
          // start: Forward dependencies from rx_buffer_pointer to transition call_stmt_1852_sample_start_
          call_stmt_1852_sample_start_ <-& (call_stmt_1839_update_completed_)
          // done: Forward dependencies from rx_buffer_pointer to transition call_stmt_1852_sample_start_
          // RAW reenables for rx_buffer_pointer
          call_stmt_1839_update_start_ o<-& (call_stmt_1852_sample_completed_ 0)
          ;;[call_stmt_1852_Sample] 
          {
            $T [crr] $T [cra] 
          }
          ;;[call_stmt_1852_Update] 
          {
            $T [ccr] $T [cca] 
          }
          call_stmt_1852_sample_start_ &-> (call_stmt_1852_Sample)
          call_stmt_1852_sample_completed_ <-& (call_stmt_1852_Sample)
          call_stmt_1852_sample_completed_ &-> ($null)
          call_stmt_1852_update_start_ &-> (call_stmt_1852_Update)
          call_stmt_1852_update_completed_ <-& (call_stmt_1852_Update)
          // Call output argument 0
          // (as target) control_dword
          // self-release: 
          call_stmt_1852_sample_start_ o<-& (call_stmt_1852_sample_completed_ 1)
          $null &-> (call_stmt_1852_update_start_)
          call_stmt_1852_update_start_ o<-& (call_stmt_1852_update_completed_ 0)
          // start: WAR dependencies for control_dword
          // done: WAR dependencies for control_dword
          // end: 			$call accessMemoryDword (rx_tag READMEM rx_buffer_pointer ($bitcast ($uint<64>) _b0  ) ($bitcast ($uint<64>) _b0  ) ) (control_dword ) 
          // start: WAR dependencies for max_buffer_addr_offset
          // done: WAR dependencies for max_buffer_addr_offset
          // start:  			$volatile max_buffer_addr_offset := ( $slice control_dword 63 48 )  $buffering 1
          //  file .Aa/nic.linked.opt.aa, line 671
          // volatile! 
          // Source expression
          // ( $slice control_dword 63 48 ) 
          // control_dword
          // Target expression
          // (as target) max_buffer_addr_offset
          // start: WAR dependencies for max_buffer_addr_offset
          // done: WAR dependencies for max_buffer_addr_offset
          // end:  			$volatile max_buffer_addr_offset := ( $slice control_dword 63 48 )  $buffering 1
          // start:  			status_1769_delayed_38_0 := status $buffering 38 $cut_through // bits of buffering = 38. 
          //  file .Aa/nic.linked.opt.aa, line 672
          $T[assign_stmt_1859_sample_start_] 
          $T[assign_stmt_1859_sample_completed_] 
          $T[assign_stmt_1859_update_start_] 
          $T[assign_stmt_1859_update_completed_] 
          // Source expression
          // status
          // Target expression
          // (as target) status_1769_delayed_38_0
          // both source and target are implicit: use interlock 
          // Interlock 
          ;;[assign_stmt_1859_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          ;;[assign_stmt_1859_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          assign_stmt_1859_sample_start_ &-> (assign_stmt_1859_Sample)
          assign_stmt_1859_sample_completed_ <-& (assign_stmt_1859_Sample)
          assign_stmt_1859_sample_completed_ &-> ($null)
          assign_stmt_1859_update_start_ &-> (assign_stmt_1859_Update)
          assign_stmt_1859_update_completed_ <-& (assign_stmt_1859_Update)
          // barrier dependency for statement 
          assign_stmt_1859_sample_start_ <-& (barrier_stmt_1843_update_completed_)
          // start: Forward dependencies from status to transition assign_stmt_1859_sample_start_
          assign_stmt_1859_sample_start_ <-& (call_stmt_1839_update_completed_)
          // done: Forward dependencies from status to transition assign_stmt_1859_sample_start_
          // RAW reenables for status
          call_stmt_1839_update_start_ o<-& (assign_stmt_1859_sample_completed_ 0)
          // self-release: 
          assign_stmt_1859_sample_start_ o<-& (assign_stmt_1859_sample_completed_ 1)
          $null &-> (assign_stmt_1859_update_start_)
          assign_stmt_1859_update_start_ o<-& (assign_stmt_1859_update_completed_ 0)
          // start: WAR dependencies for status_1769_delayed_38_0
          // done: WAR dependencies for status_1769_delayed_38_0
          // end:  			status_1769_delayed_38_0 := status $buffering 38 $cut_through // bits of buffering = 38. 
          // start:  			rx_buffer_pointer_1772_delayed_38_0 := rx_buffer_pointer $buffering 38 $cut_through // bits of buffering = 2432. 
          //  file .Aa/nic.linked.opt.aa, line 673
          $T[assign_stmt_1862_sample_start_] 
          $T[assign_stmt_1862_sample_completed_] 
          $T[assign_stmt_1862_update_start_] 
          $T[assign_stmt_1862_update_completed_] 
          // Source expression
          // rx_buffer_pointer
          // Target expression
          // (as target) rx_buffer_pointer_1772_delayed_38_0
          // both source and target are implicit: use interlock 
          // Interlock 
          ;;[assign_stmt_1862_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          ;;[assign_stmt_1862_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          assign_stmt_1862_sample_start_ &-> (assign_stmt_1862_Sample)
          assign_stmt_1862_sample_completed_ <-& (assign_stmt_1862_Sample)
          assign_stmt_1862_sample_completed_ &-> ($null)
          assign_stmt_1862_update_start_ &-> (assign_stmt_1862_Update)
          assign_stmt_1862_update_completed_ <-& (assign_stmt_1862_Update)
          // barrier dependency for statement 
          assign_stmt_1862_sample_start_ <-& (barrier_stmt_1843_update_completed_)
          // start: Forward dependencies from rx_buffer_pointer to transition assign_stmt_1862_sample_start_
          assign_stmt_1862_sample_start_ <-& (call_stmt_1839_update_completed_)
          // done: Forward dependencies from rx_buffer_pointer to transition assign_stmt_1862_sample_start_
          // RAW reenables for rx_buffer_pointer
          call_stmt_1839_update_start_ o<-& (assign_stmt_1862_sample_completed_ 0)
          // self-release: 
          assign_stmt_1862_sample_start_ o<-& (assign_stmt_1862_sample_completed_ 1)
          $null &-> (assign_stmt_1862_update_start_)
          assign_stmt_1862_update_start_ o<-& (assign_stmt_1862_update_completed_ 0)
          // start: WAR dependencies for rx_buffer_pointer_1772_delayed_38_0
          // done: WAR dependencies for rx_buffer_pointer_1772_delayed_38_0
          // end:  			rx_buffer_pointer_1772_delayed_38_0 := rx_buffer_pointer $buffering 38 $cut_through // bits of buffering = 2432. 
          // start: 			$guard (~status_1769_delayed_38_0) $call loadBuffer (rx_tag max_buffer_addr_offset rx_buffer_pointer_1772_delayed_38_0 ) (bad_packet_identifier ) 
          //  file .Aa/nic.linked.opt.aa, line 674
          $T[call_stmt_1868_sample_start_] 
          $T[call_stmt_1868_sample_completed_] 
          $T[call_stmt_1868_update_start_] 
          $T[call_stmt_1868_update_completed_] 
          // Guard expression
          // status_1769_delayed_38_0
          // start: Forward dependencies from status_1769_delayed_38_0 to transition call_stmt_1868_sample_start_
          call_stmt_1868_sample_start_ <-& (assign_stmt_1859_update_completed_)
          // done: Forward dependencies from status_1769_delayed_38_0 to transition call_stmt_1868_sample_start_
          // RAW reenables for status_1769_delayed_38_0
          assign_stmt_1859_update_start_ o<-& (call_stmt_1868_sample_completed_ 0)
          // Call input argument 0
          // Call input argument 1
          // max_buffer_addr_offset
          // Call input argument 2
          // rx_buffer_pointer_1772_delayed_38_0
          // start: Forward dependencies from max_buffer_addr_offset to transition call_stmt_1868_sample_start_
          call_stmt_1868_sample_start_ <-& (call_stmt_1852_update_completed_)
          // done: Forward dependencies from max_buffer_addr_offset to transition call_stmt_1868_sample_start_
          // RAW reenables for max_buffer_addr_offset
          call_stmt_1852_update_start_ o<-& (call_stmt_1868_sample_completed_ 0)
          // start: Forward dependencies from rx_buffer_pointer_1772_delayed_38_0 to transition call_stmt_1868_sample_start_
          call_stmt_1868_sample_start_ <-& (assign_stmt_1862_update_completed_)
          // done: Forward dependencies from rx_buffer_pointer_1772_delayed_38_0 to transition call_stmt_1868_sample_start_
          // RAW reenables for rx_buffer_pointer_1772_delayed_38_0
          assign_stmt_1862_update_start_ o<-& (call_stmt_1868_sample_completed_ 0)
          ;;[call_stmt_1868_Sample] 
          {
            $T [crr] $T [cra] 
          }
          ;;[call_stmt_1868_Update] 
          {
            $T [ccr] $T [cca] 
          }
          call_stmt_1868_sample_start_ &-> (call_stmt_1868_Sample)
          call_stmt_1868_sample_completed_ <-& (call_stmt_1868_Sample)
          call_stmt_1868_sample_completed_ &-> ($null)
          call_stmt_1868_update_start_ &-> (call_stmt_1868_Update)
          call_stmt_1868_update_completed_ <-& (call_stmt_1868_Update)
          // Call output argument 0
          // (as target) bad_packet_identifier
          // self-release: 
          call_stmt_1868_sample_start_ o<-& (call_stmt_1868_sample_completed_ 1)
          $null &-> (call_stmt_1868_update_start_)
          call_stmt_1868_update_start_ o<-& (call_stmt_1868_update_completed_ 0)
          // start: WAR dependencies for bad_packet_identifier
          // done: WAR dependencies for bad_packet_identifier
          // end: 			$guard (~status_1769_delayed_38_0) $call loadBuffer (rx_tag max_buffer_addr_offset rx_buffer_pointer_1772_delayed_38_0 ) (bad_packet_identifier ) 
          // Barrier in pipelined body 
          $T[barrier_stmt_1869_update_completed_] 
          barrier_stmt_1869_update_completed_ <-& (call_stmt_1868_update_completed_)
          barrier_stmt_1869_update_completed_ <-& (assign_stmt_1862_update_completed_)
          barrier_stmt_1869_update_completed_ <-& (assign_stmt_1859_update_completed_)
          barrier_stmt_1869_update_completed_ <-& (call_stmt_1852_update_completed_)
          // start:  			RX_ACTIVITY_LOGGER := 2  $buffering 1// bits of buffering = 8. 
          //  file .Aa/nic.linked.opt.aa, line 676
          // Target expression
          // (as target) RX_ACTIVITY_LOGGER
          $T[WPIPE_RX_ACTIVITY_LOGGER_1870_sample_start_] 
          $T[WPIPE_RX_ACTIVITY_LOGGER_1870_sample_completed_] 
          $T[WPIPE_RX_ACTIVITY_LOGGER_1870_update_start_] 
          $T[WPIPE_RX_ACTIVITY_LOGGER_1870_update_completed_] 
          // barrier 
          WPIPE_RX_ACTIVITY_LOGGER_1870_sample_start_ <-& (barrier_stmt_1869_update_completed_)
          ;;[WPIPE_RX_ACTIVITY_LOGGER_1870_Sample] 
          {
            // pipe write sample-start RX_ACTIVITY_LOGGER
            $T [req] $T [ack] 
          }
          ;;[WPIPE_RX_ACTIVITY_LOGGER_1870_Update] 
          {
            // pipe write update (complete) RX_ACTIVITY_LOGGER
            $T [req] $T [ack] 
          }
          WPIPE_RX_ACTIVITY_LOGGER_1870_sample_start_ &-> (WPIPE_RX_ACTIVITY_LOGGER_1870_Sample)
          WPIPE_RX_ACTIVITY_LOGGER_1870_sample_completed_ <-& (WPIPE_RX_ACTIVITY_LOGGER_1870_Sample)
          WPIPE_RX_ACTIVITY_LOGGER_1870_update_start_ <-& (WPIPE_RX_ACTIVITY_LOGGER_1870_sample_completed_)
          WPIPE_RX_ACTIVITY_LOGGER_1870_update_start_ &-> (WPIPE_RX_ACTIVITY_LOGGER_1870_Update)
          WPIPE_RX_ACTIVITY_LOGGER_1870_update_completed_ <-& (WPIPE_RX_ACTIVITY_LOGGER_1870_Update)
          WPIPE_RX_ACTIVITY_LOGGER_1870_sample_start_ o<-& (WPIPE_RX_ACTIVITY_LOGGER_1870_update_completed_ 0)
          // end:  			RX_ACTIVITY_LOGGER := 2  $buffering 1// bits of buffering = 8. 
          // start:  			NOT_u1_u1_1781_1781_delayed_39_0 := ( ~ status ) $buffering 39 $cut_through // bits of buffering = 39. 
          //  file .Aa/nic.linked.opt.aa, line 677
          // Source expression
          // ( ~ status )
          $T[NOT_u1_u1_1875_sample_start_] 
          $T[NOT_u1_u1_1875_sample_completed_] 
          $T[NOT_u1_u1_1875_update_start_] 
          $T[NOT_u1_u1_1875_update_completed_] 
          // barrier 
          NOT_u1_u1_1875_sample_start_ <-& (barrier_stmt_1869_update_completed_)
          // status
          // start: Forward dependencies from status to transition NOT_u1_u1_1875_sample_start_
          NOT_u1_u1_1875_sample_start_ <-& (call_stmt_1839_update_completed_)
          // done: Forward dependencies from status to transition NOT_u1_u1_1875_sample_start_
          ;;[NOT_u1_u1_1875_Sample] 
          {
            // unary expression 
            $T [rr] $T [ra] // (split) unary operation
          }
          ;;[NOT_u1_u1_1875_Update] 
          {
            // unary expression 
            $T [cr] $T [ca] //(split) unary operation
          }
          NOT_u1_u1_1875_sample_start_ &-> (NOT_u1_u1_1875_Sample)
          NOT_u1_u1_1875_sample_completed_ <-& (NOT_u1_u1_1875_Sample)
          NOT_u1_u1_1875_sample_completed_ &-> ($null)
          NOT_u1_u1_1875_update_start_ &-> (NOT_u1_u1_1875_Update)
          NOT_u1_u1_1875_update_completed_ <-& (NOT_u1_u1_1875_Update)
          // RAW reenables for status
          call_stmt_1839_update_start_ o<-& (NOT_u1_u1_1875_sample_completed_ 0)
          // self-release: 
          NOT_u1_u1_1875_sample_start_ o<-& (NOT_u1_u1_1875_sample_completed_ 1)
          $null &-> (NOT_u1_u1_1875_update_start_)
          NOT_u1_u1_1875_update_start_ o<-& (NOT_u1_u1_1875_update_completed_ 0)
          // Target expression
          // (as target) NOT_u1_u1_1781_1781_delayed_39_0
          // start: WAR dependencies for NOT_u1_u1_1781_1781_delayed_39_0
          // done: WAR dependencies for NOT_u1_u1_1781_1781_delayed_39_0
          // end:  			NOT_u1_u1_1781_1781_delayed_39_0 := ( ~ status ) $buffering 39 $cut_through // bits of buffering = 39. 
          // start: WAR dependencies for ok_flag
          // done: WAR dependencies for ok_flag
          // start:  			$volatile ok_flag := (NOT_u1_u1_1781_1781_delayed_39_0 & ( ~ bad_packet_identifier )) $buffering 1
          //  file .Aa/nic.linked.opt.aa, line 678
          // volatile! 
          // Source expression
          // (NOT_u1_u1_1781_1781_delayed_39_0 & ( ~ bad_packet_identifier ))
          // NOT_u1_u1_1781_1781_delayed_39_0
          // ( ~ bad_packet_identifier )
          // bad_packet_identifier
          // Target expression
          // (as target) ok_flag
          // start: WAR dependencies for ok_flag
          // done: WAR dependencies for ok_flag
          // end:  			$volatile ok_flag := (NOT_u1_u1_1781_1781_delayed_39_0 & ( ~ bad_packet_identifier )) $buffering 1
          // start:  			NOT_u1_u1_1788_1788_delayed_39_0 := ( ~ status ) $buffering 39 $cut_through // bits of buffering = 39. 
          //  file .Aa/nic.linked.opt.aa, line 679
          // Source expression
          // ( ~ status )
          $T[NOT_u1_u1_1885_sample_start_] 
          $T[NOT_u1_u1_1885_sample_completed_] 
          $T[NOT_u1_u1_1885_update_start_] 
          $T[NOT_u1_u1_1885_update_completed_] 
          // barrier 
          NOT_u1_u1_1885_sample_start_ <-& (barrier_stmt_1869_update_completed_)
          // status
          // start: Forward dependencies from status to transition NOT_u1_u1_1885_sample_start_
          NOT_u1_u1_1885_sample_start_ <-& (call_stmt_1839_update_completed_)
          // done: Forward dependencies from status to transition NOT_u1_u1_1885_sample_start_
          ;;[NOT_u1_u1_1885_Sample] 
          {
            // unary expression 
            $T [rr] $T [ra] // (split) unary operation
          }
          ;;[NOT_u1_u1_1885_Update] 
          {
            // unary expression 
            $T [cr] $T [ca] //(split) unary operation
          }
          NOT_u1_u1_1885_sample_start_ &-> (NOT_u1_u1_1885_Sample)
          NOT_u1_u1_1885_sample_completed_ <-& (NOT_u1_u1_1885_Sample)
          NOT_u1_u1_1885_sample_completed_ &-> ($null)
          NOT_u1_u1_1885_update_start_ &-> (NOT_u1_u1_1885_Update)
          NOT_u1_u1_1885_update_completed_ <-& (NOT_u1_u1_1885_Update)
          // RAW reenables for status
          call_stmt_1839_update_start_ o<-& (NOT_u1_u1_1885_sample_completed_ 0)
          // self-release: 
          NOT_u1_u1_1885_sample_start_ o<-& (NOT_u1_u1_1885_sample_completed_ 1)
          $null &-> (NOT_u1_u1_1885_update_start_)
          NOT_u1_u1_1885_update_start_ o<-& (NOT_u1_u1_1885_update_completed_ 0)
          // Target expression
          // (as target) NOT_u1_u1_1788_1788_delayed_39_0
          // start: WAR dependencies for NOT_u1_u1_1788_1788_delayed_39_0
          // done: WAR dependencies for NOT_u1_u1_1788_1788_delayed_39_0
          // end:  			NOT_u1_u1_1788_1788_delayed_39_0 := ( ~ status ) $buffering 39 $cut_through // bits of buffering = 39. 
          // start: WAR dependencies for free_flag
          // done: WAR dependencies for free_flag
          // start:  			$volatile free_flag := (NOT_u1_u1_1788_1788_delayed_39_0 & bad_packet_identifier) $buffering 1
          //  file .Aa/nic.linked.opt.aa, line 680
          // volatile! 
          // Source expression
          // (NOT_u1_u1_1788_1788_delayed_39_0 & bad_packet_identifier)
          // NOT_u1_u1_1788_1788_delayed_39_0
          // bad_packet_identifier
          // Target expression
          // (as target) free_flag
          // start: WAR dependencies for free_flag
          // done: WAR dependencies for free_flag
          // end:  			$volatile free_flag := (NOT_u1_u1_1788_1788_delayed_39_0 & bad_packet_identifier) $buffering 1
          // start:  			ADD_u32_u32_1800_1800_delayed_43_0 := (pkt_cnt + ($bitcast ($uint<32>) _b1  )) $buffering 43 $cut_through // bits of buffering = 1376. 
          //  file .Aa/nic.linked.opt.aa, line 681
          // Source expression
          // (pkt_cnt + ($bitcast ($uint<32>) _b1  ))
          $T[ADD_u32_u32_1896_sample_start_] 
          $T[ADD_u32_u32_1896_sample_completed_] 
          $T[ADD_u32_u32_1896_update_start_] 
          $T[ADD_u32_u32_1896_update_completed_] 
          // barrier 
          ADD_u32_u32_1896_sample_start_ <-& (barrier_stmt_1869_update_completed_)
          // pkt_cnt
          // start: Forward dependencies from pkt_cnt to transition ADD_u32_u32_1896_sample_start_
          // done: Forward dependencies from pkt_cnt to transition ADD_u32_u32_1896_sample_start_
          ;;[ADD_u32_u32_1896_Sample] 
          {
            // binary expression 
            $T [rr] $T [ra]  // (split) binary operation 
          }
          ;;[ADD_u32_u32_1896_Update] 
          {
            // binary expression 
            $T [cr] $T [ca] // (split) binary operation 
          }
          ADD_u32_u32_1896_sample_start_ &-> (ADD_u32_u32_1896_Sample)
          ADD_u32_u32_1896_sample_completed_ <-& (ADD_u32_u32_1896_Sample)
          ADD_u32_u32_1896_sample_completed_ &-> ($null)
          ADD_u32_u32_1896_update_start_ &-> (ADD_u32_u32_1896_Update)
          ADD_u32_u32_1896_update_completed_ <-& (ADD_u32_u32_1896_Update)
          // RAW reenables for pkt_cnt
          // self-release: 
          ADD_u32_u32_1896_sample_start_ o<-& (ADD_u32_u32_1896_sample_completed_ 1)
          $null &-> (ADD_u32_u32_1896_update_start_)
          ADD_u32_u32_1896_update_start_ o<-& (ADD_u32_u32_1896_update_completed_ 0)
          // Target expression
          // (as target) ADD_u32_u32_1800_1800_delayed_43_0
          // start: WAR dependencies for ADD_u32_u32_1800_1800_delayed_43_0
          // done: WAR dependencies for ADD_u32_u32_1800_1800_delayed_43_0
          // end:  			ADD_u32_u32_1800_1800_delayed_43_0 := (pkt_cnt + ($bitcast ($uint<32>) _b1  )) $buffering 43 $cut_through // bits of buffering = 1376. 
          // start:  			init_flag_1793_delayed_42_0 := init_flag $buffering 42 $cut_through // bits of buffering = 42. 
          //  file .Aa/nic.linked.opt.aa, line 682
          $T[assign_stmt_1900_sample_start_] 
          $T[assign_stmt_1900_sample_completed_] 
          $T[assign_stmt_1900_update_start_] 
          $T[assign_stmt_1900_update_completed_] 
          // Source expression
          // init_flag
          // Target expression
          // (as target) init_flag_1793_delayed_42_0
          // both source and target are implicit: use interlock 
          // Interlock 
          ;;[assign_stmt_1900_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          ;;[assign_stmt_1900_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          assign_stmt_1900_sample_start_ &-> (assign_stmt_1900_Sample)
          assign_stmt_1900_sample_completed_ <-& (assign_stmt_1900_Sample)
          assign_stmt_1900_sample_completed_ &-> ($null)
          assign_stmt_1900_update_start_ &-> (assign_stmt_1900_Update)
          assign_stmt_1900_update_completed_ <-& (assign_stmt_1900_Update)
          // barrier dependency for statement 
          assign_stmt_1900_sample_start_ <-& (barrier_stmt_1869_update_completed_)
          // start: Forward dependencies from init_flag to transition assign_stmt_1900_sample_start_
          assign_stmt_1900_sample_start_ <-& (phi_stmt_1827_update_completed_)
          // done: Forward dependencies from init_flag to transition assign_stmt_1900_sample_start_
          // RAW reenables for init_flag
          phi_stmt_1827_update_start_ o<-& (assign_stmt_1900_sample_completed_ 0)
          // self-release: 
          assign_stmt_1900_sample_start_ o<-& (assign_stmt_1900_sample_completed_ 1)
          $null &-> (assign_stmt_1900_update_start_)
          assign_stmt_1900_update_start_ o<-& (assign_stmt_1900_update_completed_ 0)
          // start: WAR dependencies for init_flag_1793_delayed_42_0
          // done: WAR dependencies for init_flag_1793_delayed_42_0
          // end:  			init_flag_1793_delayed_42_0 := init_flag $buffering 42 $cut_through // bits of buffering = 42. 
          // start:  			pkt_cnt := ( $mux init_flag_1793_delayed_42_0 ($bitcast ($uint<32>) _b1  )  ( $mux ok_flag ADD_u32_u32_1800_1800_delayed_43_0  pkt_cnt )  )  $buffering 2// bits of buffering = 64. 
          //  file .Aa/nic.linked.opt.aa, line 683
          // Source expression
          // ( $mux init_flag_1793_delayed_42_0 ($bitcast ($uint<32>) _b1  )  ( $mux ok_flag ADD_u32_u32_1800_1800_delayed_43_0  pkt_cnt )  ) 
          $T[MUX_1909_sample_start_] 
          $T[MUX_1909_sample_completed_] 
          $T[MUX_1909_update_start_] 
          $T[MUX_1909_update_completed_] 
          // barrier 
          MUX_1909_sample_start_ <-& (barrier_stmt_1869_update_completed_)
          // init_flag_1793_delayed_42_0
          // ( $mux ok_flag ADD_u32_u32_1800_1800_delayed_43_0  pkt_cnt ) 
          // ok_flag
          // ADD_u32_u32_1800_1800_delayed_43_0
          // pkt_cnt
          // start: Forward dependencies from init_flag_1793_delayed_42_0 to transition MUX_1909_sample_start_
          MUX_1909_sample_start_ <-& (assign_stmt_1900_update_completed_)
          // done: Forward dependencies from init_flag_1793_delayed_42_0 to transition MUX_1909_sample_start_
          // start: Forward dependencies from ( $mux ok_flag ADD_u32_u32_1800_1800_delayed_43_0  pkt_cnt )  to transition MUX_1909_sample_start_
          MUX_1909_sample_start_ <-& (ADD_u32_u32_1896_update_completed_)
          MUX_1909_sample_start_ <-& (NOT_u1_u1_1875_update_completed_)
          MUX_1909_sample_start_ <-& (call_stmt_1868_update_completed_)
          // done: Forward dependencies from ( $mux ok_flag ADD_u32_u32_1800_1800_delayed_43_0  pkt_cnt )  to transition MUX_1909_sample_start_
          ;;[MUX_1909_start] 
          {
            // ternary expression: 
            $T [req] $T [ack] // sample req/ack
          }
          ;;[MUX_1909_complete] 
          {
            // ternary expression: 
            $T [req] $T [ack] // update req/ack
          }
          MUX_1909_sample_start_ &-> (MUX_1909_start)
          MUX_1909_sample_completed_ <-& (MUX_1909_start)
          MUX_1909_sample_completed_ &-> ($null)
          MUX_1909_update_start_ &-> (MUX_1909_complete)
          MUX_1909_update_completed_ <-& (MUX_1909_complete)
          // RAW reenables for init_flag_1793_delayed_42_0
          assign_stmt_1900_update_start_ o<-& (MUX_1909_sample_completed_ 0)
          // RAW reenables for ( $mux ok_flag ADD_u32_u32_1800_1800_delayed_43_0  pkt_cnt ) 
          ADD_u32_u32_1896_update_start_ o<-& (MUX_1909_sample_completed_ 0)
          NOT_u1_u1_1875_update_start_ o<-& (MUX_1909_sample_completed_ 0)
          call_stmt_1868_update_start_ o<-& (MUX_1909_sample_completed_ 0)
          // self-release: 
          MUX_1909_sample_start_ o<-& (MUX_1909_sample_completed_ 1)
          $null &-> (MUX_1909_update_start_)
          MUX_1909_update_start_ o<-& (MUX_1909_update_completed_ 0)
          // Target expression
          // (as target) pkt_cnt
          // start: WAR dependencies for pkt_cnt
          // WAR dependency: Read: pkt_cnt before Write: 			pkt_cnt := ( $mux init_flag_1793_delayed_42_0 ($bitcast ($uint<32>) _b1  )  ( $mux ok_flag ADD_u32_u32_1800_1800_delayed_43_0  pkt_cnt )  )  $buffering 2// bits of buffering = 64. 
          // WAR dependency: Read: pkt_cnt before Write: 			pkt_cnt := ( $mux init_flag_1793_delayed_42_0 ($bitcast ($uint<32>) _b1  )  ( $mux ok_flag ADD_u32_u32_1800_1800_delayed_43_0  pkt_cnt )  )  $buffering 2// bits of buffering = 64. 
          MUX_1909_update_start_ <-& (MUX_1909_sample_completed_)
          // WAR dependency: release  Read: pkt_cnt with Write: 			pkt_cnt := ( $mux init_flag_1793_delayed_42_0 ($bitcast ($uint<32>) _b1  )  ( $mux ok_flag ADD_u32_u32_1800_1800_delayed_43_0  pkt_cnt )  )  $buffering 2// bits of buffering = 64. 
          MUX_1909_sample_start_ o<-& (MUX_1909_update_completed_ 0)
          MUX_1909_update_start_ <-& (ADD_u32_u32_1896_sample_completed_)
          // WAR dependency: release  Read: pkt_cnt with Write: 			pkt_cnt := ( $mux init_flag_1793_delayed_42_0 ($bitcast ($uint<32>) _b1  )  ( $mux ok_flag ADD_u32_u32_1800_1800_delayed_43_0  pkt_cnt )  )  $buffering 2// bits of buffering = 64. 
          ADD_u32_u32_1896_sample_start_ o<-& (MUX_1909_update_completed_ 0)
          // done: WAR dependencies for pkt_cnt
          // end:  			pkt_cnt := ( $mux init_flag_1793_delayed_42_0 ($bitcast ($uint<32>) _b1  )  ( $mux ok_flag ADD_u32_u32_1800_1800_delayed_43_0  pkt_cnt )  )  $buffering 2// bits of buffering = 64. 
          // start:  			ok_flag_1805_delayed_1_0 := ok_flag $buffering 1 $cut_through // bits of buffering = 1. 
          //  file .Aa/nic.linked.opt.aa, line 684
          $T[assign_stmt_1913_sample_start_] 
          $T[assign_stmt_1913_sample_completed_] 
          $T[assign_stmt_1913_update_start_] 
          $T[assign_stmt_1913_update_completed_] 
          // Source expression
          // ok_flag
          // Target expression
          // (as target) ok_flag_1805_delayed_1_0
          // both source and target are implicit: use interlock 
          // Interlock 
          ;;[assign_stmt_1913_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          ;;[assign_stmt_1913_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          assign_stmt_1913_sample_start_ &-> (assign_stmt_1913_Sample)
          assign_stmt_1913_sample_completed_ <-& (assign_stmt_1913_Sample)
          assign_stmt_1913_sample_completed_ &-> ($null)
          assign_stmt_1913_update_start_ &-> (assign_stmt_1913_Update)
          assign_stmt_1913_update_completed_ <-& (assign_stmt_1913_Update)
          // barrier dependency for statement 
          assign_stmt_1913_sample_start_ <-& (barrier_stmt_1869_update_completed_)
          // start: Forward dependencies from ok_flag to transition assign_stmt_1913_sample_start_
          assign_stmt_1913_sample_start_ <-& (NOT_u1_u1_1875_update_completed_)
          assign_stmt_1913_sample_start_ <-& (call_stmt_1868_update_completed_)
          // done: Forward dependencies from ok_flag to transition assign_stmt_1913_sample_start_
          // RAW reenables for ok_flag
          NOT_u1_u1_1875_update_start_ o<-& (assign_stmt_1913_sample_completed_ 0)
          call_stmt_1868_update_start_ o<-& (assign_stmt_1913_sample_completed_ 0)
          // self-release: 
          assign_stmt_1913_sample_start_ o<-& (assign_stmt_1913_sample_completed_ 1)
          $null &-> (assign_stmt_1913_update_start_)
          assign_stmt_1913_update_start_ o<-& (assign_stmt_1913_update_completed_ 0)
          // start: WAR dependencies for ok_flag_1805_delayed_1_0
          // done: WAR dependencies for ok_flag_1805_delayed_1_0
          // end:  			ok_flag_1805_delayed_1_0 := ok_flag $buffering 1 $cut_through // bits of buffering = 1. 
          // start: 			$guard (ok_flag_1805_delayed_1_0) $call accessRegister (($bitcast ($uint<1>) _b0  ) ( ~ ($bitcast ($uint<4>) _b0  ) ) 3  pkt_cnt ) (ignore_resp1 ) 
          //  file .Aa/nic.linked.opt.aa, line 685
          $T[call_stmt_1923_sample_start_] 
          $T[call_stmt_1923_sample_completed_] 
          $T[call_stmt_1923_update_start_] 
          $T[call_stmt_1923_update_completed_] 
          // Guard expression
          // ok_flag_1805_delayed_1_0
          // start: Forward dependencies from ok_flag_1805_delayed_1_0 to transition call_stmt_1923_sample_start_
          call_stmt_1923_sample_start_ <-& (assign_stmt_1913_update_completed_)
          // done: Forward dependencies from ok_flag_1805_delayed_1_0 to transition call_stmt_1923_sample_start_
          // RAW reenables for ok_flag_1805_delayed_1_0
          assign_stmt_1913_update_start_ o<-& (call_stmt_1923_sample_completed_ 0)
          // Call input argument 0
          // Call input argument 1
          // Call input argument 2
          // Call input argument 3
          // pkt_cnt
          // start: Forward dependencies from pkt_cnt to transition call_stmt_1923_sample_start_
          call_stmt_1923_sample_start_ <-& (MUX_1909_update_completed_)
          // done: Forward dependencies from pkt_cnt to transition call_stmt_1923_sample_start_
          // RAW reenables for pkt_cnt
          MUX_1909_update_start_ o<-& (call_stmt_1923_sample_completed_ 0)
          ;;[call_stmt_1923_Sample] 
          {
            $T [crr] $T [cra] 
          }
          ;;[call_stmt_1923_Update] 
          {
            $T [ccr] $T [cca] 
          }
          call_stmt_1923_sample_start_ &-> (call_stmt_1923_Sample)
          call_stmt_1923_sample_completed_ <-& (call_stmt_1923_Sample)
          call_stmt_1923_sample_completed_ &-> ($null)
          call_stmt_1923_update_start_ &-> (call_stmt_1923_Update)
          call_stmt_1923_update_completed_ <-& (call_stmt_1923_Update)
          // Call output argument 0
          // (as target) ignore_resp1
          // self-release: 
          call_stmt_1923_sample_start_ o<-& (call_stmt_1923_sample_completed_ 1)
          $null &-> (call_stmt_1923_update_start_)
          call_stmt_1923_update_start_ o<-& (call_stmt_1923_update_completed_ 0)
          // start: WAR dependencies for ignore_resp1
          // done: WAR dependencies for ignore_resp1
          // end: 			$guard (ok_flag_1805_delayed_1_0) $call accessRegister (($bitcast ($uint<1>) _b0  ) ( ~ ($bitcast ($uint<4>) _b0  ) ) 3  pkt_cnt ) (ignore_resp1 ) 
          // start: WAR dependencies for cond
          // done: WAR dependencies for cond
          // start:  			$volatile cond := (ok_flag == 1 ) $buffering 1
          //  file .Aa/nic.linked.opt.aa, line 686
          // volatile! 
          // Source expression
          // (ok_flag == 1 )
          // ok_flag
          // Target expression
          // (as target) cond
          // start: WAR dependencies for cond
          // done: WAR dependencies for cond
          // end:  			$volatile cond := (ok_flag == 1 ) $buffering 1
          // start:  			rx_buffer_pointer_1826_delayed_39_0 := rx_buffer_pointer $buffering 39 $cut_through // bits of buffering = 2496. 
          //  file .Aa/nic.linked.opt.aa, line 689
          $T[assign_stmt_1935_sample_start_] 
          $T[assign_stmt_1935_sample_completed_] 
          $T[assign_stmt_1935_update_start_] 
          $T[assign_stmt_1935_update_completed_] 
          // Source expression
          // rx_buffer_pointer
          // Target expression
          // (as target) rx_buffer_pointer_1826_delayed_39_0
          // both source and target are implicit: use interlock 
          // Interlock 
          ;;[assign_stmt_1935_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          ;;[assign_stmt_1935_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          assign_stmt_1935_sample_start_ &-> (assign_stmt_1935_Sample)
          assign_stmt_1935_sample_completed_ <-& (assign_stmt_1935_Sample)
          assign_stmt_1935_sample_completed_ &-> ($null)
          assign_stmt_1935_update_start_ &-> (assign_stmt_1935_Update)
          assign_stmt_1935_update_completed_ <-& (assign_stmt_1935_Update)
          // barrier dependency for statement 
          assign_stmt_1935_sample_start_ <-& (barrier_stmt_1869_update_completed_)
          // start: Forward dependencies from rx_buffer_pointer to transition assign_stmt_1935_sample_start_
          assign_stmt_1935_sample_start_ <-& (call_stmt_1839_update_completed_)
          // done: Forward dependencies from rx_buffer_pointer to transition assign_stmt_1935_sample_start_
          // RAW reenables for rx_buffer_pointer
          call_stmt_1839_update_start_ o<-& (assign_stmt_1935_sample_completed_ 0)
          // self-release: 
          assign_stmt_1935_sample_start_ o<-& (assign_stmt_1935_sample_completed_ 1)
          $null &-> (assign_stmt_1935_update_start_)
          assign_stmt_1935_update_start_ o<-& (assign_stmt_1935_update_completed_ 0)
          // start: WAR dependencies for rx_buffer_pointer_1826_delayed_39_0
          // done: WAR dependencies for rx_buffer_pointer_1826_delayed_39_0
          // end:  			rx_buffer_pointer_1826_delayed_39_0 := rx_buffer_pointer $buffering 39 $cut_through // bits of buffering = 2496. 
          // start: 			$guard (ok_flag) $call populateRxQueue (rx_tag rx_buffer_pointer_1826_delayed_39_0 ) () 
          //  file .Aa/nic.linked.opt.aa, line 690
          $T[call_stmt_1939_sample_start_] 
          $T[call_stmt_1939_sample_completed_] 
          $T[call_stmt_1939_update_start_] 
          $T[call_stmt_1939_update_completed_] 
          // Guard expression
          // ok_flag
          // start: Forward dependencies from ok_flag to transition call_stmt_1939_sample_start_
          call_stmt_1939_sample_start_ <-& (NOT_u1_u1_1875_update_completed_)
          call_stmt_1939_sample_start_ <-& (call_stmt_1868_update_completed_)
          // done: Forward dependencies from ok_flag to transition call_stmt_1939_sample_start_
          // RAW reenables for ok_flag
          NOT_u1_u1_1875_update_start_ o<-& (call_stmt_1939_sample_completed_ 0)
          call_stmt_1868_update_start_ o<-& (call_stmt_1939_sample_completed_ 0)
          // Call input argument 0
          // Call input argument 1
          // rx_buffer_pointer_1826_delayed_39_0
          // start: Forward dependencies from rx_buffer_pointer_1826_delayed_39_0 to transition call_stmt_1939_sample_start_
          call_stmt_1939_sample_start_ <-& (assign_stmt_1935_update_completed_)
          // done: Forward dependencies from rx_buffer_pointer_1826_delayed_39_0 to transition call_stmt_1939_sample_start_
          // RAW reenables for rx_buffer_pointer_1826_delayed_39_0
          assign_stmt_1935_update_start_ o<-& (call_stmt_1939_sample_completed_ 0)
          ;;[call_stmt_1939_Sample] 
          {
            $T [crr] $T [cra] 
          }
          ;;[call_stmt_1939_Update] 
          {
            $T [ccr] $T [cca] 
          }
          call_stmt_1939_sample_start_ &-> (call_stmt_1939_Sample)
          call_stmt_1939_sample_completed_ <-& (call_stmt_1939_Sample)
          call_stmt_1939_sample_completed_ &-> ($null)
          call_stmt_1939_update_start_ &-> (call_stmt_1939_Update)
          call_stmt_1939_update_completed_ <-& (call_stmt_1939_Update)
          // self-release: 
          call_stmt_1939_sample_start_ o<-& (call_stmt_1939_sample_completed_ 1)
          $null &-> (call_stmt_1939_update_start_)
          call_stmt_1939_update_start_ o<-& (call_stmt_1939_update_completed_ 0)
          // end: 			$guard (ok_flag) $call populateRxQueue (rx_tag rx_buffer_pointer_1826_delayed_39_0 ) () 
          // Barrier in pipelined body 
          $T[barrier_stmt_1940_update_completed_] 
          barrier_stmt_1940_update_completed_ <-& (call_stmt_1939_update_completed_)
          barrier_stmt_1940_update_completed_ <-& (assign_stmt_1935_update_completed_)
          barrier_stmt_1940_update_completed_ <-& (call_stmt_1923_update_completed_)
          barrier_stmt_1940_update_completed_ <-& (assign_stmt_1913_update_completed_)
          barrier_stmt_1940_update_completed_ <-& (MUX_1909_update_completed_)
          barrier_stmt_1940_update_completed_ <-& (assign_stmt_1900_update_completed_)
          barrier_stmt_1940_update_completed_ <-& (ADD_u32_u32_1896_update_completed_)
          barrier_stmt_1940_update_completed_ <-& (NOT_u1_u1_1885_update_completed_)
          barrier_stmt_1940_update_completed_ <-& (NOT_u1_u1_1875_update_completed_)
          barrier_stmt_1940_update_completed_ <-& (WPIPE_RX_ACTIVITY_LOGGER_1870_update_completed_)
          // start:  			RX_ACTIVITY_LOGGER := 3  $buffering 1// bits of buffering = 8. 
          //  file .Aa/nic.linked.opt.aa, line 692
          // Target expression
          // (as target) RX_ACTIVITY_LOGGER
          $T[WPIPE_RX_ACTIVITY_LOGGER_1941_sample_start_] 
          $T[WPIPE_RX_ACTIVITY_LOGGER_1941_sample_completed_] 
          $T[WPIPE_RX_ACTIVITY_LOGGER_1941_update_start_] 
          $T[WPIPE_RX_ACTIVITY_LOGGER_1941_update_completed_] 
          // barrier 
          WPIPE_RX_ACTIVITY_LOGGER_1941_sample_start_ <-& (barrier_stmt_1940_update_completed_)
          ;;[WPIPE_RX_ACTIVITY_LOGGER_1941_Sample] 
          {
            // pipe write sample-start RX_ACTIVITY_LOGGER
            $T [req] $T [ack] 
          }
          ;;[WPIPE_RX_ACTIVITY_LOGGER_1941_Update] 
          {
            // pipe write update (complete) RX_ACTIVITY_LOGGER
            $T [req] $T [ack] 
          }
          WPIPE_RX_ACTIVITY_LOGGER_1941_sample_start_ &-> (WPIPE_RX_ACTIVITY_LOGGER_1941_Sample)
          WPIPE_RX_ACTIVITY_LOGGER_1941_sample_completed_ <-& (WPIPE_RX_ACTIVITY_LOGGER_1941_Sample)
          WPIPE_RX_ACTIVITY_LOGGER_1941_update_start_ <-& (WPIPE_RX_ACTIVITY_LOGGER_1941_sample_completed_)
          WPIPE_RX_ACTIVITY_LOGGER_1941_update_start_ &-> (WPIPE_RX_ACTIVITY_LOGGER_1941_Update)
          WPIPE_RX_ACTIVITY_LOGGER_1941_update_completed_ <-& (WPIPE_RX_ACTIVITY_LOGGER_1941_Update)
          WPIPE_RX_ACTIVITY_LOGGER_1941_sample_start_ o<-& (WPIPE_RX_ACTIVITY_LOGGER_1941_update_completed_ 0)
          // end:  			RX_ACTIVITY_LOGGER := 3  $buffering 1// bits of buffering = 8. 
          // start:  			rx_buffer_pointer_1838_delayed_39_0 := rx_buffer_pointer $buffering 39 $cut_through // bits of buffering = 2496. 
          //  file .Aa/nic.linked.opt.aa, line 694
          $T[assign_stmt_1948_sample_start_] 
          $T[assign_stmt_1948_sample_completed_] 
          $T[assign_stmt_1948_update_start_] 
          $T[assign_stmt_1948_update_completed_] 
          // Source expression
          // rx_buffer_pointer
          // Target expression
          // (as target) rx_buffer_pointer_1838_delayed_39_0
          // both source and target are implicit: use interlock 
          // Interlock 
          ;;[assign_stmt_1948_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          ;;[assign_stmt_1948_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          assign_stmt_1948_sample_start_ &-> (assign_stmt_1948_Sample)
          assign_stmt_1948_sample_completed_ <-& (assign_stmt_1948_Sample)
          assign_stmt_1948_sample_completed_ &-> ($null)
          assign_stmt_1948_update_start_ &-> (assign_stmt_1948_Update)
          assign_stmt_1948_update_completed_ <-& (assign_stmt_1948_Update)
          // barrier dependency for statement 
          assign_stmt_1948_sample_start_ <-& (barrier_stmt_1940_update_completed_)
          // start: Forward dependencies from rx_buffer_pointer to transition assign_stmt_1948_sample_start_
          assign_stmt_1948_sample_start_ <-& (call_stmt_1839_update_completed_)
          // done: Forward dependencies from rx_buffer_pointer to transition assign_stmt_1948_sample_start_
          // RAW reenables for rx_buffer_pointer
          call_stmt_1839_update_start_ o<-& (assign_stmt_1948_sample_completed_ 0)
          // self-release: 
          assign_stmt_1948_sample_start_ o<-& (assign_stmt_1948_sample_completed_ 1)
          $null &-> (assign_stmt_1948_update_start_)
          assign_stmt_1948_update_start_ o<-& (assign_stmt_1948_update_completed_ 0)
          // start: WAR dependencies for rx_buffer_pointer_1838_delayed_39_0
          // done: WAR dependencies for rx_buffer_pointer_1838_delayed_39_0
          // end:  			rx_buffer_pointer_1838_delayed_39_0 := rx_buffer_pointer $buffering 39 $cut_through // bits of buffering = 2496. 
          // start: 			$guard (free_flag) $call pushIntoQueue (rx_tag FREEQUEUE 0  rx_buffer_pointer_1838_delayed_39_0 ) (push_status ) 
          //  file .Aa/nic.linked.opt.aa, line 695
          $T[call_stmt_1955_sample_start_] 
          $T[call_stmt_1955_sample_completed_] 
          $T[call_stmt_1955_update_start_] 
          $T[call_stmt_1955_update_completed_] 
          // Guard expression
          // free_flag
          // start: Forward dependencies from free_flag to transition call_stmt_1955_sample_start_
          call_stmt_1955_sample_start_ <-& (NOT_u1_u1_1885_update_completed_)
          call_stmt_1955_sample_start_ <-& (call_stmt_1868_update_completed_)
          // done: Forward dependencies from free_flag to transition call_stmt_1955_sample_start_
          // RAW reenables for free_flag
          NOT_u1_u1_1885_update_start_ o<-& (call_stmt_1955_sample_completed_ 0)
          call_stmt_1868_update_start_ o<-& (call_stmt_1955_sample_completed_ 0)
          // Call input argument 0
          // Call input argument 1
          // Call input argument 2
          // Call input argument 3
          // rx_buffer_pointer_1838_delayed_39_0
          // start: Forward dependencies from rx_buffer_pointer_1838_delayed_39_0 to transition call_stmt_1955_sample_start_
          call_stmt_1955_sample_start_ <-& (assign_stmt_1948_update_completed_)
          // done: Forward dependencies from rx_buffer_pointer_1838_delayed_39_0 to transition call_stmt_1955_sample_start_
          // RAW reenables for rx_buffer_pointer_1838_delayed_39_0
          assign_stmt_1948_update_start_ o<-& (call_stmt_1955_sample_completed_ 0)
          ;;[call_stmt_1955_Sample] 
          {
            $T [crr] $T [cra] 
          }
          ;;[call_stmt_1955_Update] 
          {
            $T [ccr] $T [cca] 
          }
          call_stmt_1955_sample_start_ &-> (call_stmt_1955_Sample)
          call_stmt_1955_sample_completed_ <-& (call_stmt_1955_Sample)
          call_stmt_1955_sample_completed_ &-> ($null)
          call_stmt_1955_update_start_ &-> (call_stmt_1955_Update)
          call_stmt_1955_update_completed_ <-& (call_stmt_1955_Update)
          // Call output argument 0
          // (as target) push_status
          // self-release: 
          call_stmt_1955_sample_start_ o<-& (call_stmt_1955_sample_completed_ 1)
          $null &-> (call_stmt_1955_update_start_)
          call_stmt_1955_update_start_ o<-& (call_stmt_1955_update_completed_ 0)
          // start: WAR dependencies for push_status
          // done: WAR dependencies for push_status
          // end: 			$guard (free_flag) $call pushIntoQueue (rx_tag FREEQUEUE 0  rx_buffer_pointer_1838_delayed_39_0 ) (push_status ) 
          // Barrier in pipelined body 
          $T[barrier_stmt_1956_update_completed_] 
          barrier_stmt_1956_update_completed_ <-& (call_stmt_1955_update_completed_)
          barrier_stmt_1956_update_completed_ <-& (assign_stmt_1948_update_completed_)
          barrier_stmt_1956_update_completed_ <-& (WPIPE_RX_ACTIVITY_LOGGER_1941_update_completed_)
          // start:  			RX_ACTIVITY_LOGGER := 4  $buffering 1// bits of buffering = 8. 
          //  file .Aa/nic.linked.opt.aa, line 697
          // Target expression
          // (as target) RX_ACTIVITY_LOGGER
          $T[WPIPE_RX_ACTIVITY_LOGGER_1957_sample_start_] 
          $T[WPIPE_RX_ACTIVITY_LOGGER_1957_sample_completed_] 
          $T[WPIPE_RX_ACTIVITY_LOGGER_1957_update_start_] 
          $T[WPIPE_RX_ACTIVITY_LOGGER_1957_update_completed_] 
          // barrier 
          WPIPE_RX_ACTIVITY_LOGGER_1957_sample_start_ <-& (barrier_stmt_1956_update_completed_)
          ;;[WPIPE_RX_ACTIVITY_LOGGER_1957_Sample] 
          {
            // pipe write sample-start RX_ACTIVITY_LOGGER
            $T [req] $T [ack] 
          }
          ;;[WPIPE_RX_ACTIVITY_LOGGER_1957_Update] 
          {
            // pipe write update (complete) RX_ACTIVITY_LOGGER
            $T [req] $T [ack] 
          }
          WPIPE_RX_ACTIVITY_LOGGER_1957_sample_start_ &-> (WPIPE_RX_ACTIVITY_LOGGER_1957_Sample)
          WPIPE_RX_ACTIVITY_LOGGER_1957_sample_completed_ <-& (WPIPE_RX_ACTIVITY_LOGGER_1957_Sample)
          WPIPE_RX_ACTIVITY_LOGGER_1957_update_start_ <-& (WPIPE_RX_ACTIVITY_LOGGER_1957_sample_completed_)
          WPIPE_RX_ACTIVITY_LOGGER_1957_update_start_ &-> (WPIPE_RX_ACTIVITY_LOGGER_1957_Update)
          WPIPE_RX_ACTIVITY_LOGGER_1957_update_completed_ <-& (WPIPE_RX_ACTIVITY_LOGGER_1957_Update)
          WPIPE_RX_ACTIVITY_LOGGER_1957_sample_start_ o<-& (WPIPE_RX_ACTIVITY_LOGGER_1957_update_completed_ 0)
          // end:  			RX_ACTIVITY_LOGGER := 4  $buffering 1// bits of buffering = 8. 
          // (S_CONTROL_REGISTER [] 0 )
          // S_CONTROL_REGISTER
          $T [loop_body_delay_to_condition_start] $delay
          loop_body_start &-> (loop_body_delay_to_condition_start)
          loop_body_delay_to_condition_start &-> (condition_evaluated)
          // start: Forward dependencies from (S_CONTROL_REGISTER [] 0 ) to transition condition_evaluated
          // non-constant expression which depends only on signals/constants?
          // done: Forward dependencies from (S_CONTROL_REGISTER [] 0 ) to transition condition_evaluated
          condition_evaluated &-> ($null)
          // load-store dependencies..
          // memory-space  memory_space_0
          //  call_stmt_1839 store
          //  call_stmt_1923 store
          $T [call_stmt_1839_call_stmt_1923_delay] $delay
          // call_stmt_1839(store) -> call_stmt_1923(store)
          call_stmt_1923_sample_start_ <-& (call_stmt_1839_call_stmt_1923_delay)
          call_stmt_1839_call_stmt_1923_delay <-& (call_stmt_1839_update_completed_)
          //  call_stmt_1939 store
          $T [call_stmt_1923_call_stmt_1939_delay] $delay
          // call_stmt_1923(store) -> call_stmt_1939(store)
          call_stmt_1939_sample_start_ <-& (call_stmt_1923_call_stmt_1939_delay)
          call_stmt_1923_call_stmt_1939_delay <-& (call_stmt_1923_update_completed_)
          //  call_stmt_1955 store
          $T [call_stmt_1939_call_stmt_1955_delay] $delay
          // call_stmt_1939(store) -> call_stmt_1955(store)
          call_stmt_1955_sample_start_ <-& (call_stmt_1939_call_stmt_1955_delay)
          call_stmt_1939_call_stmt_1955_delay <-& (call_stmt_1939_update_completed_)
          // reenable across ring for memory space memory_space_0
          $T[ring_reenable_memory_space_0] 
          ring_reenable_memory_space_0 <-& (call_stmt_1955_update_completed_)
          call_stmt_1839_sample_start_ o<-& (ring_reenable_memory_space_0 1)
          // pipe read/write dependencies for pipe LAST_WRITTEN_RX_QUEUE_INDEX
          // read-dependencies for pipe LAST_WRITTEN_RX_QUEUE_INDEX
          // write-dependencies for pipe LAST_WRITTEN_RX_QUEUE_INDEX
          // signal write dependencies for LAST_WRITTEN_RX_QUEUE_INDEX
          // pipe read/write dependencies for pipe MEMORY_TO_NIC_RESPONSE
          // read-dependencies for pipe MEMORY_TO_NIC_RESPONSE
          call_stmt_1852_sample_start_ <-& (call_stmt_1839_update_completed_)
          call_stmt_1868_sample_start_ <-& (call_stmt_1852_update_completed_)
          call_stmt_1939_sample_start_ <-& (call_stmt_1868_update_completed_)
          call_stmt_1955_sample_start_ <-& (call_stmt_1939_update_completed_)
          // ring dependency in pipeline.
          // function call expression/statement ...
          call_stmt_1839_sample_start_ o<-& (call_stmt_1955_update_completed_ 0)
          // write-dependencies for pipe MEMORY_TO_NIC_RESPONSE
          // signal write dependencies for MEMORY_TO_NIC_RESPONSE
          // pipe read/write dependencies for pipe NIC_DEBUG_SIGNAL
          // read-dependencies for pipe NIC_DEBUG_SIGNAL
          // write-dependencies for pipe NIC_DEBUG_SIGNAL
          // signal write dependencies for NIC_DEBUG_SIGNAL
          call_stmt_1852_sample_start_ <-& (call_stmt_1839_update_completed_)
          call_stmt_1868_sample_start_ <-& (call_stmt_1852_update_completed_)
          call_stmt_1939_sample_start_ <-& (call_stmt_1868_update_completed_)
          call_stmt_1955_sample_start_ <-& (call_stmt_1939_update_completed_)
          // ring dependency in pipeline.
          call_stmt_1839_sample_start_ o<-& (call_stmt_1955_update_completed_ 0)
          // pipe read/write dependencies for pipe S_NUMBER_OF_SERVERS
          // read-dependencies for pipe S_NUMBER_OF_SERVERS
          // write-dependencies for pipe S_NUMBER_OF_SERVERS
          // signal write dependencies for S_NUMBER_OF_SERVERS
          // pipe read/write dependencies for pipe NIC_TO_MEMORY_REQUEST
          // read-dependencies for pipe NIC_TO_MEMORY_REQUEST
          // write-dependencies for pipe NIC_TO_MEMORY_REQUEST
          call_stmt_1852_sample_start_ <-& (call_stmt_1839_update_completed_)
          call_stmt_1868_sample_start_ <-& (call_stmt_1852_update_completed_)
          call_stmt_1939_sample_start_ <-& (call_stmt_1868_update_completed_)
          call_stmt_1955_sample_start_ <-& (call_stmt_1939_update_completed_)
          // ring dependency in pipeline.
          call_stmt_1839_sample_start_ o<-& (call_stmt_1955_update_completed_ 0)
          // signal write dependencies for NIC_TO_MEMORY_REQUEST
          // pipe read/write dependencies for pipe QUEUE_MONITOR_SIGNAL
          // read-dependencies for pipe QUEUE_MONITOR_SIGNAL
          // write-dependencies for pipe QUEUE_MONITOR_SIGNAL
          // signal write dependencies for QUEUE_MONITOR_SIGNAL
          call_stmt_1939_sample_start_ <-& (call_stmt_1839_update_completed_)
          call_stmt_1955_sample_start_ <-& (call_stmt_1939_update_completed_)
          // ring dependency in pipeline.
          call_stmt_1839_sample_start_ o<-& (call_stmt_1955_update_completed_ 0)
          // pipe read/write dependencies for pipe RX_ACTIVITY_LOGGER
          // read-dependencies for pipe RX_ACTIVITY_LOGGER
          // write-dependencies for pipe RX_ACTIVITY_LOGGER
          WPIPE_RX_ACTIVITY_LOGGER_1870_sample_start_ <-& (WPIPE_RX_ACTIVITY_LOGGER_1840_update_completed_)
          WPIPE_RX_ACTIVITY_LOGGER_1941_sample_start_ <-& (WPIPE_RX_ACTIVITY_LOGGER_1870_update_completed_)
          WPIPE_RX_ACTIVITY_LOGGER_1957_sample_start_ <-& (WPIPE_RX_ACTIVITY_LOGGER_1941_update_completed_)
          // ring dependency in pipeline.
          WPIPE_RX_ACTIVITY_LOGGER_1840_sample_start_ o<-& (WPIPE_RX_ACTIVITY_LOGGER_1957_update_completed_ 0)
          // signal write dependencies for RX_ACTIVITY_LOGGER
          // pipe read/write dependencies for pipe memory_access_lock
          // read-dependencies for pipe memory_access_lock
          // write-dependencies for pipe memory_access_lock
          call_stmt_1852_sample_start_ <-& (call_stmt_1839_update_completed_)
          call_stmt_1868_sample_start_ <-& (call_stmt_1852_update_completed_)
          call_stmt_1939_sample_start_ <-& (call_stmt_1868_update_completed_)
          call_stmt_1955_sample_start_ <-& (call_stmt_1939_update_completed_)
          // ring dependency in pipeline.
          call_stmt_1839_sample_start_ o<-& (call_stmt_1955_update_completed_ 0)
          // signal write dependencies for memory_access_lock
          // pipe read/write dependencies for pipe nic_rx_to_header
          // read-dependencies for pipe nic_rx_to_header
          // write-dependencies for pipe nic_rx_to_header
          // signal write dependencies for nic_rx_to_header
          // pipe read/write dependencies for pipe nic_rx_to_packet
          // read-dependencies for pipe nic_rx_to_packet
          // write-dependencies for pipe nic_rx_to_packet
          // signal write dependencies for nic_rx_to_packet
        }
        ( first_time_through_loop_body  back_edge_to_loop_body) 
        ( condition_evaluated )
        ;; [loop_exit] 
        {
          $T [ack] 
        }
        ;; [loop_taken] 
        {
          $T [ack] 
        }
        do_while_stmt_1825__entry__ <-| ($entry)
        loop_body_done <-| ( do_while_stmt_1825_loop_body ) 
        condition_done |-> (loop_exit loop_taken)
        do_while_stmt_1825__exit__ |-> ($exit)
        $bind condition_done <= do_while_stmt_1825_loop_body : condition_evaluated
        $bind do_while_stmt_1825__entry__  => do_while_stmt_1825_loop_body : first_time_through_loop_body 
        $bind loop_back  => do_while_stmt_1825_loop_body : back_edge_to_loop_body 
        $terminate (loop_exit loop_taken loop_body_done) (loop_back do_while_stmt_1825__exit__)
      }
      do_while_stmt_1825__entry__ |-> (do_while_stmt_1825)
      do_while_stmt_1825__exit__ <-| (do_while_stmt_1825)
      // control-path for merge  
      //  file .Aa/nic.linked.opt.aa, line 656
      ;;[merge_stmt_1813_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_1813__entry__ |-> (merge_stmt_1813_dead_link)
      merge_stmt_1813__exit__ <-| (merge_stmt_1813_dead_link)
      //---------------------   merge statement  file .Aa/nic.linked.opt.aa, line 656  --------------------------
      ||[merge_stmt_1813__entry___PhiReq] 
      {
        // no phi statements in merge..
      }
      merge_stmt_1813__entry__ |-> (merge_stmt_1813__entry___PhiReq)
      ||[disable_loopback_PhiReq] 
      {
        // no phi statements in merge..
      }
      disable_loopback |-> (disable_loopback_PhiReq)
      ||[not_enabled_yet_loopback_PhiReq] 
      {
        // no phi statements in merge..
      }
      not_enabled_yet_loopback |-> (not_enabled_yet_loopback_PhiReq)
      $P [merge_stmt_1813_PhiReqMerge] 
      merge_stmt_1813_PhiReqMerge <-| ( merge_stmt_1813__entry___PhiReq  disable_loopback_PhiReq  not_enabled_yet_loopback_PhiReq )
      ||[merge_stmt_1813_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_1813_PhiReqMerge |-> (merge_stmt_1813_PhiAck)
      merge_stmt_1813__exit__  <-| (merge_stmt_1813_PhiAck)
      //---------------------  end of merge statement  file .Aa/nic.linked.opt.aa, line 656  --------------------------
      merge_stmt_1813__entry__ <-| (branch_block_stmt_1812__entry__)
      if_stmt_1814__entry__ <-| (merge_stmt_1813__exit__)
      assign_stmt_1824__entry__ <-| (if_stmt_1814__exit__)
      do_while_stmt_1825__entry__ <-| (assign_stmt_1824__exit__)
      disable_loopback <-| (do_while_stmt_1825__exit__)
    }
  }
  // end control-path
  $DP 
  {
    // begin data-path 
    // constant-object-declarations for block %ReceiveEngineDaemon%main%
    //  file .Aa/nic.linked.opt.aa, line 656
    // constant-object-declarations for block %ReceiveEngineDaemon%main%
    //  file .Aa/nic.linked.opt.aa, line 663
    // constant-object-declarations for block %ReceiveEngineDaemon%main
    //  file .Aa/nic.linked.opt.aa, line 654
    // constant-object-declarations for block %ReceiveEngineDaemon
    //  file .Aa/nic.linked.opt.aa, line 648
    // 0 
    $constant $W[konst_1810_wire_constant] : $int<8> := _b00000000// 0
    // constant-declarations for block %ReceiveEngineDaemon%main
    //  file .Aa/nic.linked.opt.aa, line 654
    // constant-declarations for block %ReceiveEngineDaemon%main%
    //  file .Aa/nic.linked.opt.aa, line 656
    // if-statement  
    //  file .Aa/nic.linked.opt.aa, line 32902512
    // 0 
    $constant $W[konst_1816_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // 		rx_tag := ($bitcast ($uint<8>) 1  ) $buffering 1// bits of buffering = 8. 
    //  file .Aa/nic.linked.opt.aa, line 661
    $constant $W[rx_tag_1824] : $int<8> := _b00000001 // 1
    // do-while statement  
    //  file .Aa/nic.linked.opt.aa, line 662
    // 0 
    $constant $W[konst_1963_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // constant-declarations for block %ReceiveEngineDaemon%main%
    //  file .Aa/nic.linked.opt.aa, line 663
    // constant-declarations for phi:  			$phi init_flag := 			  ($bitcast ($uint<1>) _b1  ) $on   $entry 			  ($bitcast ($uint<1>) _b0  ) $on   $loopback 
    // type of target is $uint<1>
    //  file .Aa/nic.linked.opt.aa, line 664
    // ($bitcast ($uint<1>) _b0  )
    $constant $W[type_cast_1830_wire_constant] : $int<1> := _b0// 0
    // ($bitcast ($uint<1>) _b1  )
    $constant $W[type_cast_1832_wire_constant] : $int<1> := _b1// 1
    // 			$call popFromQueue (rx_tag FREEQUEUE 0  ) (rx_buffer_pointer status ) 
    //  file .Aa/nic.linked.opt.aa, line 667
    // FREEQUEUE
    $constant $W[R_FREEQUEUE_1835_wire_constant] : $int<2> := _b00// 0
    // 0 
    $constant $W[konst_1836_wire_constant] : $int<8> := _b00000000// 0
    // 1 
    $constant $W[konst_1841_wire_constant] : $int<8> := _b00000001// 1
    // 			$call accessMemoryDword (rx_tag READMEM rx_buffer_pointer ($bitcast ($uint<64>) _b0  ) ($bitcast ($uint<64>) _b0  ) ) (control_dword ) 
    //  file .Aa/nic.linked.opt.aa, line 670
    // READMEM
    $constant $W[R_READMEM_1845_wire_constant] : $int<1> := _b1// 1
    // ($bitcast ($uint<64>) _b0  )
    $constant $W[type_cast_1848_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000000000// 0
    // ($bitcast ($uint<64>) _b0  )
    $constant $W[type_cast_1850_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000000000// 0
    // 			$guard (~status_1769_delayed_38_0) $call loadBuffer (rx_tag max_buffer_addr_offset rx_buffer_pointer_1772_delayed_38_0 ) (bad_packet_identifier ) 
    //  file .Aa/nic.linked.opt.aa, line 674
    // 2 
    $constant $W[konst_1871_wire_constant] : $int<8> := _b00000010// 2
    // ($bitcast ($uint<32>) _b1  )
    $constant $W[type_cast_1895_wire_constant] : $int<32> := _b00000000000000000000000000000001// 1
    // ( $mux init_flag_1793_delayed_42_0 ($bitcast ($uint<32>) _b1  )  ( $mux ok_flag ADD_u32_u32_1800_1800_delayed_43_0  pkt_cnt )  ) 
    // ($bitcast ($uint<32>) _b1  )
    $constant $W[type_cast_1904_wire_constant] : $int<32> := _b00000000000000000000000000000001// 1
    // ( $mux ok_flag ADD_u32_u32_1800_1800_delayed_43_0  pkt_cnt ) 
    // 			$guard (ok_flag_1805_delayed_1_0) $call accessRegister (($bitcast ($uint<1>) _b0  ) ( ~ ($bitcast ($uint<4>) _b0  ) ) 3  pkt_cnt ) (ignore_resp1 ) 
    //  file .Aa/nic.linked.opt.aa, line 685
    // ($bitcast ($uint<1>) _b0  )
    $constant $W[type_cast_1916_wire_constant] : $int<1> := _b0// 0
    // ( ~ ($bitcast ($uint<4>) _b0  ) )
    $constant $W[NOT_u4_u4_1919_wire_constant] : $int<4> := _b1111// -1
    // 3 
    $constant $W[konst_1920_wire_constant] : $int<8> := _b00000011// 3
    // 1 
    $constant $W[konst_1926_wire_constant] : $int<1> := _b1// 1
    // 			$guard (ok_flag) $call populateRxQueue (rx_tag rx_buffer_pointer_1826_delayed_39_0 ) () 
    //  file .Aa/nic.linked.opt.aa, line 690
    // 3 
    $constant $W[konst_1942_wire_constant] : $int<8> := _b00000011// 3
    // 			$guard (free_flag) $call pushIntoQueue (rx_tag FREEQUEUE 0  rx_buffer_pointer_1838_delayed_39_0 ) (push_status ) 
    //  file .Aa/nic.linked.opt.aa, line 695
    // FREEQUEUE
    $constant $W[R_FREEQUEUE_1951_wire_constant] : $int<2> := _b00// 0
    // 0 
    $constant $W[konst_1952_wire_constant] : $int<8> := _b00000000// 0
    // 4 
    $constant $W[konst_1958_wire_constant] : $int<8> := _b00000100// 4
    // 	LAST_WRITTEN_RX_QUEUE_INDEX := 0  $buffering 1// bits of buffering = 8. 
    //  file .Aa/nic.linked.opt.aa, line 653
    // LAST_WRITTEN_RX_QUEUE_INDEX
    // block %ReceiveEngineDaemon%main
    //  file .Aa/nic.linked.opt.aa, line 654
    // if statement  
    //  file .Aa/nic.linked.opt.aa, line 32902512
    // S_CONTROL_REGISTER
    $W[RPIPE_S_CONTROL_REGISTER_1815_wire] : $int<32>
    // (S_CONTROL_REGISTER [] 0 )
    $intermediate $W[BITSEL_u32_u1_1817_wire] : $int<1>
    // ( ~ (S_CONTROL_REGISTER [] 0 ) )
    $intermediate $W[NOT_u1_u1_1818_wire] : $int<1>
    // do-while statement  
    //  file .Aa/nic.linked.opt.aa, line 662
    // S_CONTROL_REGISTER
    $W[RPIPE_S_CONTROL_REGISTER_1962_wire] : $int<32>
    // (S_CONTROL_REGISTER [] 0 )
    $intermediate $W[BITSEL_u32_u1_1964_wire] : $int<1>
    // merge-statement  
    //  file .Aa/nic.linked.opt.aa, line 663
    // 			$phi init_flag := 			  ($bitcast ($uint<1>) _b1  ) $on   $entry 			  ($bitcast ($uint<1>) _b0  ) $on   $loopback 
    // type of target is $uint<1>
    //  file .Aa/nic.linked.opt.aa, line 664
    // init_flag
    $W[init_flag_1827] : $int<1>
    // 			$call popFromQueue (rx_tag FREEQUEUE 0  ) (rx_buffer_pointer status ) 
    //  file .Aa/nic.linked.opt.aa, line 667
    // rx_buffer_pointer
    $W[rx_buffer_pointer_1839] : $int<64>
    // status
    $W[status_1839] : $int<1>
    // 			RX_ACTIVITY_LOGGER := 1  $buffering 1// bits of buffering = 8. 
    //  file .Aa/nic.linked.opt.aa, line 668
    // RX_ACTIVITY_LOGGER
    // 			$call accessMemoryDword (rx_tag READMEM rx_buffer_pointer ($bitcast ($uint<64>) _b0  ) ($bitcast ($uint<64>) _b0  ) ) (control_dword ) 
    //  file .Aa/nic.linked.opt.aa, line 670
    // control_dword
    $W[control_dword_1852] : $int<64>
    // 			$volatile max_buffer_addr_offset := ( $slice control_dword 63 48 )  $buffering 1
    //  file .Aa/nic.linked.opt.aa, line 671
    // max_buffer_addr_offset
    $W[max_buffer_addr_offset_1856] : $int<16>
    // 			status_1769_delayed_38_0 := status $buffering 38 $cut_through // bits of buffering = 38. 
    //  file .Aa/nic.linked.opt.aa, line 672
    // status_1769_delayed_38_0
    $W[status_1769_delayed_38_0_1859] : $int<1>
    // 			rx_buffer_pointer_1772_delayed_38_0 := rx_buffer_pointer $buffering 38 $cut_through // bits of buffering = 2432. 
    //  file .Aa/nic.linked.opt.aa, line 673
    // rx_buffer_pointer_1772_delayed_38_0
    $W[rx_buffer_pointer_1772_delayed_38_0_1862] : $int<64>
    // 			$guard (~status_1769_delayed_38_0) $call loadBuffer (rx_tag max_buffer_addr_offset rx_buffer_pointer_1772_delayed_38_0 ) (bad_packet_identifier ) 
    //  file .Aa/nic.linked.opt.aa, line 674
    // bad_packet_identifier
    $W[bad_packet_identifier_1868] : $int<1>
    // 			RX_ACTIVITY_LOGGER := 2  $buffering 1// bits of buffering = 8. 
    //  file .Aa/nic.linked.opt.aa, line 676
    // RX_ACTIVITY_LOGGER
    // 			NOT_u1_u1_1781_1781_delayed_39_0 := ( ~ status ) $buffering 39 $cut_through // bits of buffering = 39. 
    //  file .Aa/nic.linked.opt.aa, line 677
    // NOT_u1_u1_1781_1781_delayed_39_0
    $W[NOT_u1_u1_1781_1781_delayed_39_0_1876] : $int<1>
    // 			$volatile ok_flag := (NOT_u1_u1_1781_1781_delayed_39_0 & ( ~ bad_packet_identifier )) $buffering 1
    //  file .Aa/nic.linked.opt.aa, line 678
    // ( ~ bad_packet_identifier )
    $intermediate $W[NOT_u1_u1_1880_wire] : $int<1>
    // ok_flag
    $W[ok_flag_1882] : $int<1>
    // 			NOT_u1_u1_1788_1788_delayed_39_0 := ( ~ status ) $buffering 39 $cut_through // bits of buffering = 39. 
    //  file .Aa/nic.linked.opt.aa, line 679
    // NOT_u1_u1_1788_1788_delayed_39_0
    $W[NOT_u1_u1_1788_1788_delayed_39_0_1886] : $int<1>
    // 			$volatile free_flag := (NOT_u1_u1_1788_1788_delayed_39_0 & bad_packet_identifier) $buffering 1
    //  file .Aa/nic.linked.opt.aa, line 680
    // free_flag
    $W[free_flag_1891] : $int<1>
    // 			ADD_u32_u32_1800_1800_delayed_43_0 := (pkt_cnt + ($bitcast ($uint<32>) _b1  )) $buffering 43 $cut_through // bits of buffering = 1376. 
    //  file .Aa/nic.linked.opt.aa, line 681
    // ADD_u32_u32_1800_1800_delayed_43_0
    $W[ADD_u32_u32_1800_1800_delayed_43_0_1897] : $int<32>
    // 			init_flag_1793_delayed_42_0 := init_flag $buffering 42 $cut_through // bits of buffering = 42. 
    //  file .Aa/nic.linked.opt.aa, line 682
    // init_flag_1793_delayed_42_0
    $W[init_flag_1793_delayed_42_0_1900] : $int<1>
    // 			pkt_cnt := ( $mux init_flag_1793_delayed_42_0 ($bitcast ($uint<32>) _b1  )  ( $mux ok_flag ADD_u32_u32_1800_1800_delayed_43_0  pkt_cnt )  )  $buffering 2// bits of buffering = 64. 
    //  file .Aa/nic.linked.opt.aa, line 683
    // ( $mux ok_flag ADD_u32_u32_1800_1800_delayed_43_0  pkt_cnt ) 
    $intermediate $W[MUX_1908_wire] : $int<32>
    // pkt_cnt
    $W[pkt_cnt_1910] : $int<32>
    // 			ok_flag_1805_delayed_1_0 := ok_flag $buffering 1 $cut_through // bits of buffering = 1. 
    //  file .Aa/nic.linked.opt.aa, line 684
    // ok_flag_1805_delayed_1_0
    $W[ok_flag_1805_delayed_1_0_1913] : $int<1>
    // 			$guard (ok_flag_1805_delayed_1_0) $call accessRegister (($bitcast ($uint<1>) _b0  ) ( ~ ($bitcast ($uint<4>) _b0  ) ) 3  pkt_cnt ) (ignore_resp1 ) 
    //  file .Aa/nic.linked.opt.aa, line 685
    // ignore_resp1
    $W[ignore_resp1_1923] : $int<32>
    // 			$volatile cond := (ok_flag == 1 ) $buffering 1
    //  file .Aa/nic.linked.opt.aa, line 686
    // cond
    $W[cond_1928] : $int<1>
    // 			rx_buffer_pointer_1826_delayed_39_0 := rx_buffer_pointer $buffering 39 $cut_through // bits of buffering = 2496. 
    //  file .Aa/nic.linked.opt.aa, line 689
    // rx_buffer_pointer_1826_delayed_39_0
    $W[rx_buffer_pointer_1826_delayed_39_0_1935] : $int<64>
    // 			$guard (ok_flag) $call populateRxQueue (rx_tag rx_buffer_pointer_1826_delayed_39_0 ) () 
    //  file .Aa/nic.linked.opt.aa, line 690
    // 			RX_ACTIVITY_LOGGER := 3  $buffering 1// bits of buffering = 8. 
    //  file .Aa/nic.linked.opt.aa, line 692
    // RX_ACTIVITY_LOGGER
    // 			rx_buffer_pointer_1838_delayed_39_0 := rx_buffer_pointer $buffering 39 $cut_through // bits of buffering = 2496. 
    //  file .Aa/nic.linked.opt.aa, line 694
    // rx_buffer_pointer_1838_delayed_39_0
    $W[rx_buffer_pointer_1838_delayed_39_0_1948] : $int<64>
    // 			$guard (free_flag) $call pushIntoQueue (rx_tag FREEQUEUE 0  rx_buffer_pointer_1838_delayed_39_0 ) (push_status ) 
    //  file .Aa/nic.linked.opt.aa, line 695
    // push_status
    $W[push_status_1955] : $int<1>
    // 			RX_ACTIVITY_LOGGER := 4  $buffering 1// bits of buffering = 8. 
    //  file .Aa/nic.linked.opt.aa, line 697
    // RX_ACTIVITY_LOGGER
    // 	LAST_WRITTEN_RX_QUEUE_INDEX := 0  $buffering 1// bits of buffering = 8. 
    //  file .Aa/nic.linked.opt.aa, line 653
    // LAST_WRITTEN_RX_QUEUE_INDEX
    $ioport $out [WPIPE_LAST_WRITTEN_RX_QUEUE_INDEX_1809_inst]  (konst_1810_wire_constant) (LAST_WRITTEN_RX_QUEUE_INDEX) 
    // datapath-instances for block %ReceiveEngineDaemon%main
    //  file .Aa/nic.linked.opt.aa, line 654
    // datapath-instances for if  
    //  file .Aa/nic.linked.opt.aa, line 32902512
    // S_CONTROL_REGISTER
    $ioport $in [RPIPE_S_CONTROL_REGISTER_1815_inst] (S_CONTROL_REGISTER) (RPIPE_S_CONTROL_REGISTER_1815_wire) 
    $buffering $out RPIPE_S_CONTROL_REGISTER_1815_inst RPIPE_S_CONTROL_REGISTER_1815_wire 1
    // (S_CONTROL_REGISTER [] 0 )
    [][BITSEL_u32_u1_1817_inst] (RPIPE_S_CONTROL_REGISTER_1815_wire konst_1816_wire_constant) (BITSEL_u32_u1_1817_wire)   $flowthrough 
    $delay BITSEL_u32_u1_1817_inst 0
    // ( ~ (S_CONTROL_REGISTER [] 0 ) )
    ~ [NOT_u1_u1_1818_inst] (BITSEL_u32_u1_1817_wire) (NOT_u1_u1_1818_wire)   $flowthrough
    $delay NOT_u1_u1_1818_inst 0
    ==0? [if_stmt_1814_branch] (NOT_u1_u1_1818_wire)
    // datapath-instances for do-while  
    //  file .Aa/nic.linked.opt.aa, line 662
    // S_CONTROL_REGISTER
    $ioport $in [RPIPE_S_CONTROL_REGISTER_1962_inst] (S_CONTROL_REGISTER) (RPIPE_S_CONTROL_REGISTER_1962_wire) 
    $buffering $out RPIPE_S_CONTROL_REGISTER_1962_inst RPIPE_S_CONTROL_REGISTER_1962_wire 1
    // (S_CONTROL_REGISTER [] 0 )
    [][BITSEL_u32_u1_1964_inst] (RPIPE_S_CONTROL_REGISTER_1962_wire konst_1963_wire_constant) (BITSEL_u32_u1_1964_wire)   $flowthrough 
    $delay BITSEL_u32_u1_1964_inst 0
    ==0? [do_while_stmt_1825_branch] (BITSEL_u32_u1_1964_wire)
    $flowthrough
    // data-path instances for merge  
    //  file .Aa/nic.linked.opt.aa, line 663
    // 			$phi init_flag := 			  ($bitcast ($uint<1>) _b1  ) $on   $entry 			  ($bitcast ($uint<1>) _b0  ) $on   $loopback 
    // type of target is $uint<1>
    //  file .Aa/nic.linked.opt.aa, line 664
    # $phi [phi_stmt_1827] (type_cast_1830_wire_constant type_cast_1832_wire_constant) ( init_flag_1827 ) 
    // $buffering  $out phi_stmt_1827 init_flag_1827 2
    // 			$call popFromQueue (rx_tag FREEQUEUE 0  ) (rx_buffer_pointer status ) 
    //  file .Aa/nic.linked.opt.aa, line 667
    $call [call_stmt_1839_call] $module popFromQueue(rx_tag_1824 R_FREEQUEUE_1835_wire_constant konst_1836_wire_constant) (rx_buffer_pointer_1839 status_1839)  
    $delay call_stmt_1839_call 4
    $buffering  $in call_stmt_1839_call rx_tag_1824 1
    $buffering  $in call_stmt_1839_call R_FREEQUEUE_1835_wire_constant 1
    $buffering  $in call_stmt_1839_call konst_1836_wire_constant 1
    $buffering  $out call_stmt_1839_call rx_buffer_pointer_1839 1
    $buffering  $out call_stmt_1839_call status_1839 1
    // 			RX_ACTIVITY_LOGGER := 1  $buffering 1// bits of buffering = 8. 
    //  file .Aa/nic.linked.opt.aa, line 668
    // RX_ACTIVITY_LOGGER
    $ioport $out [WPIPE_RX_ACTIVITY_LOGGER_1840_inst]  (konst_1841_wire_constant) (RX_ACTIVITY_LOGGER) 
    // 			$call accessMemoryDword (rx_tag READMEM rx_buffer_pointer ($bitcast ($uint<64>) _b0  ) ($bitcast ($uint<64>) _b0  ) ) (control_dword ) 
    //  file .Aa/nic.linked.opt.aa, line 670
    $call [call_stmt_1852_call] $module accessMemoryDword(rx_tag_1824 R_READMEM_1845_wire_constant rx_buffer_pointer_1839 type_cast_1848_wire_constant type_cast_1850_wire_constant) (control_dword_1852)  
    $delay call_stmt_1852_call 38
    $buffering  $in call_stmt_1852_call rx_tag_1824 1
    $buffering  $in call_stmt_1852_call R_READMEM_1845_wire_constant 1
    $buffering  $in call_stmt_1852_call rx_buffer_pointer_1839 1
    $buffering  $in call_stmt_1852_call type_cast_1848_wire_constant 1
    $buffering  $in call_stmt_1852_call type_cast_1850_wire_constant 1
    $buffering  $out call_stmt_1852_call control_dword_1852 1
    // 			$volatile max_buffer_addr_offset := ( $slice control_dword 63 48 )  $buffering 1
    //  file .Aa/nic.linked.opt.aa, line 671
    // ( $slice control_dword 63 48 ) 
    [:] [slice_1855_inst] (control_dword_1852 63 48) (max_buffer_addr_offset_1856)  $flowthrough
    $delay slice_1855_inst 0
    // 			status_1769_delayed_38_0 := status $buffering 38 $cut_through // bits of buffering = 38. 
    //  file .Aa/nic.linked.opt.aa, line 672
    # := [W_status_1769_delayed_38_0_1857_inst] (status_1839) (status_1769_delayed_38_0_1859)  $cut_through    
    $buffering  $out W_status_1769_delayed_38_0_1857_inst status_1769_delayed_38_0_1859 38
    // 			rx_buffer_pointer_1772_delayed_38_0 := rx_buffer_pointer $buffering 38 $cut_through // bits of buffering = 2432. 
    //  file .Aa/nic.linked.opt.aa, line 673
    # := [W_rx_buffer_pointer_1772_delayed_38_0_1860_inst] (rx_buffer_pointer_1839) (rx_buffer_pointer_1772_delayed_38_0_1862)  $cut_through    
    $buffering  $out W_rx_buffer_pointer_1772_delayed_38_0_1860_inst rx_buffer_pointer_1772_delayed_38_0_1862 38
    // 			$guard (~status_1769_delayed_38_0) $call loadBuffer (rx_tag max_buffer_addr_offset rx_buffer_pointer_1772_delayed_38_0 ) (bad_packet_identifier ) 
    //  file .Aa/nic.linked.opt.aa, line 674
    $call [call_stmt_1868_call] $module loadBuffer(rx_tag_1824 max_buffer_addr_offset_1856 rx_buffer_pointer_1772_delayed_38_0_1862) (bad_packet_identifier_1868) $guard ( ~ status_1769_delayed_38_0_1859 )  
    $delay call_stmt_1868_call 1
    $buffering  $in call_stmt_1868_call rx_tag_1824 1
    $buffering  $in call_stmt_1868_call max_buffer_addr_offset_1856 1
    $buffering  $in call_stmt_1868_call rx_buffer_pointer_1772_delayed_38_0_1862 1
    $buffering  $out call_stmt_1868_call bad_packet_identifier_1868 1
    // 			RX_ACTIVITY_LOGGER := 2  $buffering 1// bits of buffering = 8. 
    //  file .Aa/nic.linked.opt.aa, line 676
    // RX_ACTIVITY_LOGGER
    $ioport $out [WPIPE_RX_ACTIVITY_LOGGER_1870_inst]  (konst_1871_wire_constant) (RX_ACTIVITY_LOGGER) 
    // 			NOT_u1_u1_1781_1781_delayed_39_0 := ( ~ status ) $buffering 39 $cut_through // bits of buffering = 39. 
    //  file .Aa/nic.linked.opt.aa, line 677
    // ( ~ status )
    ~ [NOT_u1_u1_1875_inst] (status_1839) (NOT_u1_u1_1781_1781_delayed_39_0_1876)  
    $buffering  $out NOT_u1_u1_1875_inst NOT_u1_u1_1781_1781_delayed_39_0_1876 39
    $delay NOT_u1_u1_1875_inst 1
    // 			$volatile ok_flag := (NOT_u1_u1_1781_1781_delayed_39_0 & ( ~ bad_packet_identifier )) $buffering 1
    //  file .Aa/nic.linked.opt.aa, line 678
    // ( ~ bad_packet_identifier )
    ~ [NOT_u1_u1_1880_inst] (bad_packet_identifier_1868) (NOT_u1_u1_1880_wire)   $flowthrough
    $delay NOT_u1_u1_1880_inst 0
    // (NOT_u1_u1_1781_1781_delayed_39_0 & ( ~ bad_packet_identifier ))
    &[AND_u1_u1_1881_inst] (NOT_u1_u1_1781_1781_delayed_39_0_1876 NOT_u1_u1_1880_wire) (ok_flag_1882)   $flowthrough 
    $delay AND_u1_u1_1881_inst 0
    // 			NOT_u1_u1_1788_1788_delayed_39_0 := ( ~ status ) $buffering 39 $cut_through // bits of buffering = 39. 
    //  file .Aa/nic.linked.opt.aa, line 679
    // ( ~ status )
    ~ [NOT_u1_u1_1885_inst] (status_1839) (NOT_u1_u1_1788_1788_delayed_39_0_1886)  
    $buffering  $out NOT_u1_u1_1885_inst NOT_u1_u1_1788_1788_delayed_39_0_1886 39
    $delay NOT_u1_u1_1885_inst 1
    // 			$volatile free_flag := (NOT_u1_u1_1788_1788_delayed_39_0 & bad_packet_identifier) $buffering 1
    //  file .Aa/nic.linked.opt.aa, line 680
    // (NOT_u1_u1_1788_1788_delayed_39_0 & bad_packet_identifier)
    &[AND_u1_u1_1890_inst] (NOT_u1_u1_1788_1788_delayed_39_0_1886 bad_packet_identifier_1868) (free_flag_1891)   $flowthrough 
    $delay AND_u1_u1_1890_inst 0
    // 			ADD_u32_u32_1800_1800_delayed_43_0 := (pkt_cnt + ($bitcast ($uint<32>) _b1  )) $buffering 43 $cut_through // bits of buffering = 1376. 
    //  file .Aa/nic.linked.opt.aa, line 681
    // (pkt_cnt + ($bitcast ($uint<32>) _b1  ))
    +[ADD_u32_u32_1896_inst] (pkt_cnt_1910 type_cast_1895_wire_constant) (ADD_u32_u32_1800_1800_delayed_43_0_1897)   
    $buffering  $out ADD_u32_u32_1896_inst ADD_u32_u32_1800_1800_delayed_43_0_1897 43
    $delay ADD_u32_u32_1896_inst 1
    // 			init_flag_1793_delayed_42_0 := init_flag $buffering 42 $cut_through // bits of buffering = 42. 
    //  file .Aa/nic.linked.opt.aa, line 682
    # := [W_init_flag_1793_delayed_42_0_1898_inst] (init_flag_1827) (init_flag_1793_delayed_42_0_1900)  $cut_through    
    $buffering  $out W_init_flag_1793_delayed_42_0_1898_inst init_flag_1793_delayed_42_0_1900 42
    // 			pkt_cnt := ( $mux init_flag_1793_delayed_42_0 ($bitcast ($uint<32>) _b1  )  ( $mux ok_flag ADD_u32_u32_1800_1800_delayed_43_0  pkt_cnt )  )  $buffering 2// bits of buffering = 64. 
    //  file .Aa/nic.linked.opt.aa, line 683
    // ( $mux ok_flag ADD_u32_u32_1800_1800_delayed_43_0  pkt_cnt ) 
    ? [MUX_1908_inst] (ok_flag_1882 ADD_u32_u32_1800_1800_delayed_43_0_1897 pkt_cnt_1910) (MUX_1908_wire)  $flowthrough
    // ( $mux init_flag_1793_delayed_42_0 ($bitcast ($uint<32>) _b1  )  ( $mux ok_flag ADD_u32_u32_1800_1800_delayed_43_0  pkt_cnt )  ) 
    ? [MUX_1909_inst] (init_flag_1793_delayed_42_0_1900 type_cast_1904_wire_constant MUX_1908_wire) (pkt_cnt_1910) 
    $buffering  $out MUX_1909_inst pkt_cnt_1910 2
    // 			ok_flag_1805_delayed_1_0 := ok_flag $buffering 1 $cut_through // bits of buffering = 1. 
    //  file .Aa/nic.linked.opt.aa, line 684
    # := [W_ok_flag_1805_delayed_1_0_1911_inst] (ok_flag_1882) (ok_flag_1805_delayed_1_0_1913)  $cut_through    
    // 			$guard (ok_flag_1805_delayed_1_0) $call accessRegister (($bitcast ($uint<1>) _b0  ) ( ~ ($bitcast ($uint<4>) _b0  ) ) 3  pkt_cnt ) (ignore_resp1 ) 
    //  file .Aa/nic.linked.opt.aa, line 685
    $call [call_stmt_1923_call] $module accessRegister(type_cast_1916_wire_constant NOT_u4_u4_1919_wire_constant konst_1920_wire_constant pkt_cnt_1910) (ignore_resp1_1923) $guard ( ok_flag_1805_delayed_1_0_1913 )  
    $delay call_stmt_1923_call 4
    $buffering  $in call_stmt_1923_call type_cast_1916_wire_constant 1
    $buffering  $in call_stmt_1923_call NOT_u4_u4_1919_wire_constant 1
    $buffering  $in call_stmt_1923_call konst_1920_wire_constant 1
    $buffering  $in call_stmt_1923_call pkt_cnt_1910 1
    $buffering  $out call_stmt_1923_call ignore_resp1_1923 1
    // 			$volatile cond := (ok_flag == 1 ) $buffering 1
    //  file .Aa/nic.linked.opt.aa, line 686
    // (ok_flag == 1 )
    ==[EQ_u1_u1_1927_inst] (ok_flag_1882 konst_1926_wire_constant) (cond_1928)   $flowthrough 
    $delay EQ_u1_u1_1927_inst 0
    // 			rx_buffer_pointer_1826_delayed_39_0 := rx_buffer_pointer $buffering 39 $cut_through // bits of buffering = 2496. 
    //  file .Aa/nic.linked.opt.aa, line 689
    # := [W_rx_buffer_pointer_1826_delayed_39_0_1933_inst] (rx_buffer_pointer_1839) (rx_buffer_pointer_1826_delayed_39_0_1935)  $cut_through    
    $buffering  $out W_rx_buffer_pointer_1826_delayed_39_0_1933_inst rx_buffer_pointer_1826_delayed_39_0_1935 39
    // 			$guard (ok_flag) $call populateRxQueue (rx_tag rx_buffer_pointer_1826_delayed_39_0 ) () 
    //  file .Aa/nic.linked.opt.aa, line 690
    $call [call_stmt_1939_call] $module populateRxQueue(rx_tag_1824 rx_buffer_pointer_1826_delayed_39_0_1935) () $guard ( ok_flag_1882 )  
    $delay call_stmt_1939_call 4
    $buffering  $in call_stmt_1939_call rx_tag_1824 1
    $buffering  $in call_stmt_1939_call rx_buffer_pointer_1826_delayed_39_0_1935 1
    // 			RX_ACTIVITY_LOGGER := 3  $buffering 1// bits of buffering = 8. 
    //  file .Aa/nic.linked.opt.aa, line 692
    // RX_ACTIVITY_LOGGER
    $ioport $out [WPIPE_RX_ACTIVITY_LOGGER_1941_inst]  (konst_1942_wire_constant) (RX_ACTIVITY_LOGGER) 
    // 			rx_buffer_pointer_1838_delayed_39_0 := rx_buffer_pointer $buffering 39 $cut_through // bits of buffering = 2496. 
    //  file .Aa/nic.linked.opt.aa, line 694
    # := [W_rx_buffer_pointer_1838_delayed_39_0_1946_inst] (rx_buffer_pointer_1839) (rx_buffer_pointer_1838_delayed_39_0_1948)  $cut_through    
    $buffering  $out W_rx_buffer_pointer_1838_delayed_39_0_1946_inst rx_buffer_pointer_1838_delayed_39_0_1948 39
    // 			$guard (free_flag) $call pushIntoQueue (rx_tag FREEQUEUE 0  rx_buffer_pointer_1838_delayed_39_0 ) (push_status ) 
    //  file .Aa/nic.linked.opt.aa, line 695
    $call [call_stmt_1955_call] $module pushIntoQueue(rx_tag_1824 R_FREEQUEUE_1951_wire_constant konst_1952_wire_constant rx_buffer_pointer_1838_delayed_39_0_1948) (push_status_1955) $guard ( free_flag_1891 )  
    $delay call_stmt_1955_call 4
    $buffering  $in call_stmt_1955_call rx_tag_1824 1
    $buffering  $in call_stmt_1955_call R_FREEQUEUE_1951_wire_constant 1
    $buffering  $in call_stmt_1955_call konst_1952_wire_constant 1
    $buffering  $in call_stmt_1955_call rx_buffer_pointer_1838_delayed_39_0_1948 1
    $buffering  $out call_stmt_1955_call push_status_1955 1
    // 			RX_ACTIVITY_LOGGER := 4  $buffering 1// bits of buffering = 8. 
    //  file .Aa/nic.linked.opt.aa, line 697
    // RX_ACTIVITY_LOGGER
    $ioport $out [WPIPE_RX_ACTIVITY_LOGGER_1957_inst]  (konst_1958_wire_constant) (RX_ACTIVITY_LOGGER) 
  }
  // end data-path
  // 	LAST_WRITTEN_RX_QUEUE_INDEX := 0  $buffering 1// bits of buffering = 8. 
  //  file .Aa/nic.linked.opt.aa, line 653
  // LAST_WRITTEN_RX_QUEUE_INDEX
  WPIPE_LAST_WRITTEN_RX_QUEUE_INDEX_1809_inst <=> (assign_stmt_1811/WPIPE_LAST_WRITTEN_RX_QUEUE_INDEX_1809_Sample/req assign_stmt_1811/WPIPE_LAST_WRITTEN_RX_QUEUE_INDEX_1809_Update/req) (assign_stmt_1811/WPIPE_LAST_WRITTEN_RX_QUEUE_INDEX_1809_Sample/ack assign_stmt_1811/WPIPE_LAST_WRITTEN_RX_QUEUE_INDEX_1809_Update/ack)
  // CP-DP links for merge  
  //  file .Aa/nic.linked.opt.aa, line 656
  // CP-DP links for if  
  //  file .Aa/nic.linked.opt.aa, line 32902512
  // S_CONTROL_REGISTER
  // (S_CONTROL_REGISTER [] 0 )
  // ( ~ (S_CONTROL_REGISTER [] 0 ) )
  if_stmt_1814_branch <=> (branch_block_stmt_1812/if_stmt_1814_eval_test/branch_req) (branch_block_stmt_1812/if_stmt_1814_else_link/else_choice_transition branch_block_stmt_1812/if_stmt_1814_if_link/if_choice_transition)
  // CP-DP links for do-while  do_while_stmt_1825
  //  file .Aa/nic.linked.opt.aa, line 662
  phi_stmt_1827 <=> (branch_block_stmt_1812/do_while_stmt_1825/do_while_stmt_1825_loop_body/phi_stmt_1827_loopback_sample_req branch_block_stmt_1812/do_while_stmt_1825/do_while_stmt_1825_loop_body/phi_stmt_1827_entry_sample_req) (branch_block_stmt_1812/do_while_stmt_1825/do_while_stmt_1825_loop_body/phi_stmt_1827_phi_mux_ack)
  // 			$call popFromQueue (rx_tag FREEQUEUE 0  ) (rx_buffer_pointer status ) 
  //  file .Aa/nic.linked.opt.aa, line 667
  call_stmt_1839_call <=> (branch_block_stmt_1812/do_while_stmt_1825/do_while_stmt_1825_loop_body/call_stmt_1839_Sample/crr branch_block_stmt_1812/do_while_stmt_1825/do_while_stmt_1825_loop_body/call_stmt_1839_Update/ccr) (branch_block_stmt_1812/do_while_stmt_1825/do_while_stmt_1825_loop_body/call_stmt_1839_Sample/cra branch_block_stmt_1812/do_while_stmt_1825/do_while_stmt_1825_loop_body/call_stmt_1839_Update/cca)
  // 			RX_ACTIVITY_LOGGER := 1  $buffering 1// bits of buffering = 8. 
  //  file .Aa/nic.linked.opt.aa, line 668
  // RX_ACTIVITY_LOGGER
  WPIPE_RX_ACTIVITY_LOGGER_1840_inst <=> (branch_block_stmt_1812/do_while_stmt_1825/do_while_stmt_1825_loop_body/WPIPE_RX_ACTIVITY_LOGGER_1840_Sample/req branch_block_stmt_1812/do_while_stmt_1825/do_while_stmt_1825_loop_body/WPIPE_RX_ACTIVITY_LOGGER_1840_Update/req) (branch_block_stmt_1812/do_while_stmt_1825/do_while_stmt_1825_loop_body/WPIPE_RX_ACTIVITY_LOGGER_1840_Sample/ack branch_block_stmt_1812/do_while_stmt_1825/do_while_stmt_1825_loop_body/WPIPE_RX_ACTIVITY_LOGGER_1840_Update/ack)
  // 			$call accessMemoryDword (rx_tag READMEM rx_buffer_pointer ($bitcast ($uint<64>) _b0  ) ($bitcast ($uint<64>) _b0  ) ) (control_dword ) 
  //  file .Aa/nic.linked.opt.aa, line 670
  // rx_buffer_pointer
  call_stmt_1852_call <=> (branch_block_stmt_1812/do_while_stmt_1825/do_while_stmt_1825_loop_body/call_stmt_1852_Sample/crr branch_block_stmt_1812/do_while_stmt_1825/do_while_stmt_1825_loop_body/call_stmt_1852_Update/ccr) (branch_block_stmt_1812/do_while_stmt_1825/do_while_stmt_1825_loop_body/call_stmt_1852_Sample/cra branch_block_stmt_1812/do_while_stmt_1825/do_while_stmt_1825_loop_body/call_stmt_1852_Update/cca)
  // 			$volatile max_buffer_addr_offset := ( $slice control_dword 63 48 )  $buffering 1
  //  file .Aa/nic.linked.opt.aa, line 671
  // control_dword
  // 			status_1769_delayed_38_0 := status $buffering 38 $cut_through // bits of buffering = 38. 
  //  file .Aa/nic.linked.opt.aa, line 672
  // status
  W_status_1769_delayed_38_0_1857_inst <=> (branch_block_stmt_1812/do_while_stmt_1825/do_while_stmt_1825_loop_body/assign_stmt_1859_Sample/req branch_block_stmt_1812/do_while_stmt_1825/do_while_stmt_1825_loop_body/assign_stmt_1859_Update/req) (branch_block_stmt_1812/do_while_stmt_1825/do_while_stmt_1825_loop_body/assign_stmt_1859_Sample/ack branch_block_stmt_1812/do_while_stmt_1825/do_while_stmt_1825_loop_body/assign_stmt_1859_Update/ack)
  // 			rx_buffer_pointer_1772_delayed_38_0 := rx_buffer_pointer $buffering 38 $cut_through // bits of buffering = 2432. 
  //  file .Aa/nic.linked.opt.aa, line 673
  // rx_buffer_pointer
  W_rx_buffer_pointer_1772_delayed_38_0_1860_inst <=> (branch_block_stmt_1812/do_while_stmt_1825/do_while_stmt_1825_loop_body/assign_stmt_1862_Sample/req branch_block_stmt_1812/do_while_stmt_1825/do_while_stmt_1825_loop_body/assign_stmt_1862_Update/req) (branch_block_stmt_1812/do_while_stmt_1825/do_while_stmt_1825_loop_body/assign_stmt_1862_Sample/ack branch_block_stmt_1812/do_while_stmt_1825/do_while_stmt_1825_loop_body/assign_stmt_1862_Update/ack)
  // 			$guard (~status_1769_delayed_38_0) $call loadBuffer (rx_tag max_buffer_addr_offset rx_buffer_pointer_1772_delayed_38_0 ) (bad_packet_identifier ) 
  //  file .Aa/nic.linked.opt.aa, line 674
  // max_buffer_addr_offset
  // rx_buffer_pointer_1772_delayed_38_0
  call_stmt_1868_call <=> (branch_block_stmt_1812/do_while_stmt_1825/do_while_stmt_1825_loop_body/call_stmt_1868_Sample/crr branch_block_stmt_1812/do_while_stmt_1825/do_while_stmt_1825_loop_body/call_stmt_1868_Update/ccr) (branch_block_stmt_1812/do_while_stmt_1825/do_while_stmt_1825_loop_body/call_stmt_1868_Sample/cra branch_block_stmt_1812/do_while_stmt_1825/do_while_stmt_1825_loop_body/call_stmt_1868_Update/cca)
  // 			RX_ACTIVITY_LOGGER := 2  $buffering 1// bits of buffering = 8. 
  //  file .Aa/nic.linked.opt.aa, line 676
  // RX_ACTIVITY_LOGGER
  WPIPE_RX_ACTIVITY_LOGGER_1870_inst <=> (branch_block_stmt_1812/do_while_stmt_1825/do_while_stmt_1825_loop_body/WPIPE_RX_ACTIVITY_LOGGER_1870_Sample/req branch_block_stmt_1812/do_while_stmt_1825/do_while_stmt_1825_loop_body/WPIPE_RX_ACTIVITY_LOGGER_1870_Update/req) (branch_block_stmt_1812/do_while_stmt_1825/do_while_stmt_1825_loop_body/WPIPE_RX_ACTIVITY_LOGGER_1870_Sample/ack branch_block_stmt_1812/do_while_stmt_1825/do_while_stmt_1825_loop_body/WPIPE_RX_ACTIVITY_LOGGER_1870_Update/ack)
  // 			NOT_u1_u1_1781_1781_delayed_39_0 := ( ~ status ) $buffering 39 $cut_through // bits of buffering = 39. 
  //  file .Aa/nic.linked.opt.aa, line 677
  // status
  // ( ~ status )
  NOT_u1_u1_1875_inst <=> (branch_block_stmt_1812/do_while_stmt_1825/do_while_stmt_1825_loop_body/NOT_u1_u1_1875_Sample/rr branch_block_stmt_1812/do_while_stmt_1825/do_while_stmt_1825_loop_body/NOT_u1_u1_1875_Update/cr) (branch_block_stmt_1812/do_while_stmt_1825/do_while_stmt_1825_loop_body/NOT_u1_u1_1875_Sample/ra branch_block_stmt_1812/do_while_stmt_1825/do_while_stmt_1825_loop_body/NOT_u1_u1_1875_Update/ca)
  // 			$volatile ok_flag := (NOT_u1_u1_1781_1781_delayed_39_0 & ( ~ bad_packet_identifier )) $buffering 1
  //  file .Aa/nic.linked.opt.aa, line 678
  // (NOT_u1_u1_1781_1781_delayed_39_0 & ( ~ bad_packet_identifier ))
  // NOT_u1_u1_1781_1781_delayed_39_0
  // bad_packet_identifier
  // 			NOT_u1_u1_1788_1788_delayed_39_0 := ( ~ status ) $buffering 39 $cut_through // bits of buffering = 39. 
  //  file .Aa/nic.linked.opt.aa, line 679
  // status
  // ( ~ status )
  NOT_u1_u1_1885_inst <=> (branch_block_stmt_1812/do_while_stmt_1825/do_while_stmt_1825_loop_body/NOT_u1_u1_1885_Sample/rr branch_block_stmt_1812/do_while_stmt_1825/do_while_stmt_1825_loop_body/NOT_u1_u1_1885_Update/cr) (branch_block_stmt_1812/do_while_stmt_1825/do_while_stmt_1825_loop_body/NOT_u1_u1_1885_Sample/ra branch_block_stmt_1812/do_while_stmt_1825/do_while_stmt_1825_loop_body/NOT_u1_u1_1885_Update/ca)
  // 			$volatile free_flag := (NOT_u1_u1_1788_1788_delayed_39_0 & bad_packet_identifier) $buffering 1
  //  file .Aa/nic.linked.opt.aa, line 680
  // (NOT_u1_u1_1788_1788_delayed_39_0 & bad_packet_identifier)
  // NOT_u1_u1_1788_1788_delayed_39_0
  // bad_packet_identifier
  // 			ADD_u32_u32_1800_1800_delayed_43_0 := (pkt_cnt + ($bitcast ($uint<32>) _b1  )) $buffering 43 $cut_through // bits of buffering = 1376. 
  //  file .Aa/nic.linked.opt.aa, line 681
  // (pkt_cnt + ($bitcast ($uint<32>) _b1  ))
  // pkt_cnt
  ADD_u32_u32_1896_inst <=> (branch_block_stmt_1812/do_while_stmt_1825/do_while_stmt_1825_loop_body/ADD_u32_u32_1896_Sample/rr branch_block_stmt_1812/do_while_stmt_1825/do_while_stmt_1825_loop_body/ADD_u32_u32_1896_Update/cr) (branch_block_stmt_1812/do_while_stmt_1825/do_while_stmt_1825_loop_body/ADD_u32_u32_1896_Sample/ra branch_block_stmt_1812/do_while_stmt_1825/do_while_stmt_1825_loop_body/ADD_u32_u32_1896_Update/ca)
  // 			init_flag_1793_delayed_42_0 := init_flag $buffering 42 $cut_through // bits of buffering = 42. 
  //  file .Aa/nic.linked.opt.aa, line 682
  // init_flag
  W_init_flag_1793_delayed_42_0_1898_inst <=> (branch_block_stmt_1812/do_while_stmt_1825/do_while_stmt_1825_loop_body/assign_stmt_1900_Sample/req branch_block_stmt_1812/do_while_stmt_1825/do_while_stmt_1825_loop_body/assign_stmt_1900_Update/req) (branch_block_stmt_1812/do_while_stmt_1825/do_while_stmt_1825_loop_body/assign_stmt_1900_Sample/ack branch_block_stmt_1812/do_while_stmt_1825/do_while_stmt_1825_loop_body/assign_stmt_1900_Update/ack)
  // 			pkt_cnt := ( $mux init_flag_1793_delayed_42_0 ($bitcast ($uint<32>) _b1  )  ( $mux ok_flag ADD_u32_u32_1800_1800_delayed_43_0  pkt_cnt )  )  $buffering 2// bits of buffering = 64. 
  //  file .Aa/nic.linked.opt.aa, line 683
  // init_flag_1793_delayed_42_0
  // ok_flag
  // ADD_u32_u32_1800_1800_delayed_43_0
  // pkt_cnt
  // ( $mux ok_flag ADD_u32_u32_1800_1800_delayed_43_0  pkt_cnt ) 
  // ( $mux init_flag_1793_delayed_42_0 ($bitcast ($uint<32>) _b1  )  ( $mux ok_flag ADD_u32_u32_1800_1800_delayed_43_0  pkt_cnt )  ) 
  MUX_1909_inst <=> (branch_block_stmt_1812/do_while_stmt_1825/do_while_stmt_1825_loop_body/MUX_1909_start/req branch_block_stmt_1812/do_while_stmt_1825/do_while_stmt_1825_loop_body/MUX_1909_complete/req) (branch_block_stmt_1812/do_while_stmt_1825/do_while_stmt_1825_loop_body/MUX_1909_start/ack branch_block_stmt_1812/do_while_stmt_1825/do_while_stmt_1825_loop_body/MUX_1909_complete/ack)
  // 			ok_flag_1805_delayed_1_0 := ok_flag $buffering 1 $cut_through // bits of buffering = 1. 
  //  file .Aa/nic.linked.opt.aa, line 684
  // ok_flag
  W_ok_flag_1805_delayed_1_0_1911_inst <=> (branch_block_stmt_1812/do_while_stmt_1825/do_while_stmt_1825_loop_body/assign_stmt_1913_Sample/req branch_block_stmt_1812/do_while_stmt_1825/do_while_stmt_1825_loop_body/assign_stmt_1913_Update/req) (branch_block_stmt_1812/do_while_stmt_1825/do_while_stmt_1825_loop_body/assign_stmt_1913_Sample/ack branch_block_stmt_1812/do_while_stmt_1825/do_while_stmt_1825_loop_body/assign_stmt_1913_Update/ack)
  // 			$guard (ok_flag_1805_delayed_1_0) $call accessRegister (($bitcast ($uint<1>) _b0  ) ( ~ ($bitcast ($uint<4>) _b0  ) ) 3  pkt_cnt ) (ignore_resp1 ) 
  //  file .Aa/nic.linked.opt.aa, line 685
  // pkt_cnt
  call_stmt_1923_call <=> (branch_block_stmt_1812/do_while_stmt_1825/do_while_stmt_1825_loop_body/call_stmt_1923_Sample/crr branch_block_stmt_1812/do_while_stmt_1825/do_while_stmt_1825_loop_body/call_stmt_1923_Update/ccr) (branch_block_stmt_1812/do_while_stmt_1825/do_while_stmt_1825_loop_body/call_stmt_1923_Sample/cra branch_block_stmt_1812/do_while_stmt_1825/do_while_stmt_1825_loop_body/call_stmt_1923_Update/cca)
  // 			$volatile cond := (ok_flag == 1 ) $buffering 1
  //  file .Aa/nic.linked.opt.aa, line 686
  // (ok_flag == 1 )
  // ok_flag
  // 			rx_buffer_pointer_1826_delayed_39_0 := rx_buffer_pointer $buffering 39 $cut_through // bits of buffering = 2496. 
  //  file .Aa/nic.linked.opt.aa, line 689
  // rx_buffer_pointer
  W_rx_buffer_pointer_1826_delayed_39_0_1933_inst <=> (branch_block_stmt_1812/do_while_stmt_1825/do_while_stmt_1825_loop_body/assign_stmt_1935_Sample/req branch_block_stmt_1812/do_while_stmt_1825/do_while_stmt_1825_loop_body/assign_stmt_1935_Update/req) (branch_block_stmt_1812/do_while_stmt_1825/do_while_stmt_1825_loop_body/assign_stmt_1935_Sample/ack branch_block_stmt_1812/do_while_stmt_1825/do_while_stmt_1825_loop_body/assign_stmt_1935_Update/ack)
  // 			$guard (ok_flag) $call populateRxQueue (rx_tag rx_buffer_pointer_1826_delayed_39_0 ) () 
  //  file .Aa/nic.linked.opt.aa, line 690
  // rx_buffer_pointer_1826_delayed_39_0
  call_stmt_1939_call <=> (branch_block_stmt_1812/do_while_stmt_1825/do_while_stmt_1825_loop_body/call_stmt_1939_Sample/crr branch_block_stmt_1812/do_while_stmt_1825/do_while_stmt_1825_loop_body/call_stmt_1939_Update/ccr) (branch_block_stmt_1812/do_while_stmt_1825/do_while_stmt_1825_loop_body/call_stmt_1939_Sample/cra branch_block_stmt_1812/do_while_stmt_1825/do_while_stmt_1825_loop_body/call_stmt_1939_Update/cca)
  // 			RX_ACTIVITY_LOGGER := 3  $buffering 1// bits of buffering = 8. 
  //  file .Aa/nic.linked.opt.aa, line 692
  // RX_ACTIVITY_LOGGER
  WPIPE_RX_ACTIVITY_LOGGER_1941_inst <=> (branch_block_stmt_1812/do_while_stmt_1825/do_while_stmt_1825_loop_body/WPIPE_RX_ACTIVITY_LOGGER_1941_Sample/req branch_block_stmt_1812/do_while_stmt_1825/do_while_stmt_1825_loop_body/WPIPE_RX_ACTIVITY_LOGGER_1941_Update/req) (branch_block_stmt_1812/do_while_stmt_1825/do_while_stmt_1825_loop_body/WPIPE_RX_ACTIVITY_LOGGER_1941_Sample/ack branch_block_stmt_1812/do_while_stmt_1825/do_while_stmt_1825_loop_body/WPIPE_RX_ACTIVITY_LOGGER_1941_Update/ack)
  // 			rx_buffer_pointer_1838_delayed_39_0 := rx_buffer_pointer $buffering 39 $cut_through // bits of buffering = 2496. 
  //  file .Aa/nic.linked.opt.aa, line 694
  // rx_buffer_pointer
  W_rx_buffer_pointer_1838_delayed_39_0_1946_inst <=> (branch_block_stmt_1812/do_while_stmt_1825/do_while_stmt_1825_loop_body/assign_stmt_1948_Sample/req branch_block_stmt_1812/do_while_stmt_1825/do_while_stmt_1825_loop_body/assign_stmt_1948_Update/req) (branch_block_stmt_1812/do_while_stmt_1825/do_while_stmt_1825_loop_body/assign_stmt_1948_Sample/ack branch_block_stmt_1812/do_while_stmt_1825/do_while_stmt_1825_loop_body/assign_stmt_1948_Update/ack)
  // 			$guard (free_flag) $call pushIntoQueue (rx_tag FREEQUEUE 0  rx_buffer_pointer_1838_delayed_39_0 ) (push_status ) 
  //  file .Aa/nic.linked.opt.aa, line 695
  // rx_buffer_pointer_1838_delayed_39_0
  call_stmt_1955_call <=> (branch_block_stmt_1812/do_while_stmt_1825/do_while_stmt_1825_loop_body/call_stmt_1955_Sample/crr branch_block_stmt_1812/do_while_stmt_1825/do_while_stmt_1825_loop_body/call_stmt_1955_Update/ccr) (branch_block_stmt_1812/do_while_stmt_1825/do_while_stmt_1825_loop_body/call_stmt_1955_Sample/cra branch_block_stmt_1812/do_while_stmt_1825/do_while_stmt_1825_loop_body/call_stmt_1955_Update/cca)
  // 			RX_ACTIVITY_LOGGER := 4  $buffering 1// bits of buffering = 8. 
  //  file .Aa/nic.linked.opt.aa, line 697
  // RX_ACTIVITY_LOGGER
  WPIPE_RX_ACTIVITY_LOGGER_1957_inst <=> (branch_block_stmt_1812/do_while_stmt_1825/do_while_stmt_1825_loop_body/WPIPE_RX_ACTIVITY_LOGGER_1957_Sample/req branch_block_stmt_1812/do_while_stmt_1825/do_while_stmt_1825_loop_body/WPIPE_RX_ACTIVITY_LOGGER_1957_Update/req) (branch_block_stmt_1812/do_while_stmt_1825/do_while_stmt_1825_loop_body/WPIPE_RX_ACTIVITY_LOGGER_1957_Sample/ack branch_block_stmt_1812/do_while_stmt_1825/do_while_stmt_1825_loop_body/WPIPE_RX_ACTIVITY_LOGGER_1957_Update/ack)
  // (S_CONTROL_REGISTER [] 0 )
  // S_CONTROL_REGISTER
  do_while_stmt_1825_branch <=> (branch_block_stmt_1812/do_while_stmt_1825/do_while_stmt_1825_loop_body/condition_evaluated) (branch_block_stmt_1812/do_while_stmt_1825/loop_exit/ack branch_block_stmt_1812/do_while_stmt_1825/loop_taken/ack)
}
$module [accessQueueMsgSizeInBytes] 
{
  $in tag:$int<8>
  // can point into  foreign( $void )
  rwbar:$int<1>
  // can point into  foreign( $void )
  qptr:$int<64>
  // can point into  foreign( $void )
  wdata:$int<32>
  // can point into  foreign( $void )
  $out rdata:$int<32>
  // can point into  foreign( $void )
  // pipe-declarations for block %accessQueueMsgSizeInBytes
  //  file .Aa/nic.linked.opt.aa, line 703
  // there are no memory spaces local to this module.
  $CP 
  {
    // begin control-path 
    ::[call_stmt_1980] 
    {
      // start: 	$call accessMemoryWord (tag rwbar qptr 16  wdata ) (rdata ) 
      //  file .Aa/nic.linked.opt.aa, line 708
      $T[call_stmt_1980_sample_start_] 
      $T[call_stmt_1980_sample_completed_] 
      $T[call_stmt_1980_update_start_] 
      $T[call_stmt_1980_update_completed_] 
      // Call input argument 0
      // tag
      // Call input argument 1
      // rwbar
      // Call input argument 2
      // qptr
      // Call input argument 3
      // Call input argument 4
      // wdata
      // start: Forward dependencies from tag to transition call_stmt_1980_sample_start_
      // done: Forward dependencies from tag to transition call_stmt_1980_sample_start_
      // start: Forward dependencies from rwbar to transition call_stmt_1980_sample_start_
      // done: Forward dependencies from rwbar to transition call_stmt_1980_sample_start_
      // start: Forward dependencies from qptr to transition call_stmt_1980_sample_start_
      // done: Forward dependencies from qptr to transition call_stmt_1980_sample_start_
      // start: Forward dependencies from wdata to transition call_stmt_1980_sample_start_
      // done: Forward dependencies from wdata to transition call_stmt_1980_sample_start_
      ;;[call_stmt_1980_Sample] 
      {
        $T [crr] $T [cra] 
      }
      ;;[call_stmt_1980_Update] 
      {
        $T [ccr] $T [cca] 
      }
      call_stmt_1980_sample_start_ &-> (call_stmt_1980_Sample)
      call_stmt_1980_sample_completed_ <-& (call_stmt_1980_Sample)
      call_stmt_1980_sample_completed_ &-> ($null)
      call_stmt_1980_update_start_ &-> (call_stmt_1980_Update)
      call_stmt_1980_update_completed_ <-& (call_stmt_1980_Update)
      // Call output argument 0
      // (as target) rdata
      // rdata
      // write to interface object
      // rdata
      // write to interface object
      // start: WAR dependencies for rdata
      // done: WAR dependencies for rdata
      // end: 	$call accessMemoryWord (tag rwbar qptr 16  wdata ) (rdata ) 
      // load-store dependencies..
      // pipe read/write dependencies for pipe MEMORY_TO_NIC_RESPONSE
      // read-dependencies for pipe MEMORY_TO_NIC_RESPONSE
      // write-dependencies for pipe MEMORY_TO_NIC_RESPONSE
      // signal write dependencies for MEMORY_TO_NIC_RESPONSE
      // pipe read/write dependencies for pipe NIC_DEBUG_SIGNAL
      // read-dependencies for pipe NIC_DEBUG_SIGNAL
      // write-dependencies for pipe NIC_DEBUG_SIGNAL
      // signal write dependencies for NIC_DEBUG_SIGNAL
      // pipe read/write dependencies for pipe NIC_TO_MEMORY_REQUEST
      // read-dependencies for pipe NIC_TO_MEMORY_REQUEST
      // write-dependencies for pipe NIC_TO_MEMORY_REQUEST
      // signal write dependencies for NIC_TO_MEMORY_REQUEST
      // pipe read/write dependencies for pipe memory_access_lock
      // read-dependencies for pipe memory_access_lock
      // write-dependencies for pipe memory_access_lock
      // signal write dependencies for memory_access_lock
    }
  }
  // end control-path
  $DP 
  {
    // begin data-path 
    // constant-object-declarations for block %accessQueueMsgSizeInBytes
    //  file .Aa/nic.linked.opt.aa, line 703
    // 	$call accessMemoryWord (tag rwbar qptr 16  wdata ) (rdata ) 
    //  file .Aa/nic.linked.opt.aa, line 708
    // 16 
    $constant $W[konst_1977_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000010000// 16
    // 	$call accessMemoryWord (tag rwbar qptr 16  wdata ) (rdata ) 
    //  file .Aa/nic.linked.opt.aa, line 708
    // rdata
    // 	$call accessMemoryWord (tag rwbar qptr 16  wdata ) (rdata ) 
    //  file .Aa/nic.linked.opt.aa, line 708
    $call [call_stmt_1980_call] $module accessMemoryWord(tag rwbar qptr konst_1977_wire_constant wdata) (rdata)  
    $delay call_stmt_1980_call 39
    $buffering  $in call_stmt_1980_call tag 1
    $buffering  $in call_stmt_1980_call rwbar 1
    $buffering  $in call_stmt_1980_call qptr 1
    $buffering  $in call_stmt_1980_call konst_1977_wire_constant 1
    $buffering  $in call_stmt_1980_call wdata 1
    $buffering  $out call_stmt_1980_call rdata 1
  }
  // end data-path
  // 	$call accessMemoryWord (tag rwbar qptr 16  wdata ) (rdata ) 
  //  file .Aa/nic.linked.opt.aa, line 708
  // tag
  // rwbar
  // qptr
  // wdata
  call_stmt_1980_call <=> (call_stmt_1980/call_stmt_1980_Sample/crr call_stmt_1980/call_stmt_1980_Update/ccr) (call_stmt_1980/call_stmt_1980_Sample/cra call_stmt_1980/call_stmt_1980_Update/cca)
  $attribute input_buffering => "0"
  $attribute output_buffering => "0"
}
$module [setGlobalSignals] 
{
  // pipe-declarations for block %setGlobalSignals
  //  file .Aa/nic.linked.opt.aa, line 712
  // there are no memory spaces local to this module.
  $CP 
  {
    // begin control-path 
    ::[call_stmt_1988_to_assign_stmt_1991] 
    {
      // start: 	$call accessRegister (READMEM _hF  1  0  ) (n_servers ) 
      //  file .Aa/nic.linked.opt.aa, line 717
      $T[call_stmt_1988_sample_start_] 
      $T[call_stmt_1988_sample_completed_] 
      $T[call_stmt_1988_update_start_] 
      $T[call_stmt_1988_update_completed_] 
      // Call input argument 0
      // Call input argument 1
      // Call input argument 2
      // Call input argument 3
      ;;[call_stmt_1988_Sample] 
      {
        $T [crr] $T [cra] 
      }
      ;;[call_stmt_1988_Update] 
      {
        $T [ccr] $T [cca] 
      }
      call_stmt_1988_sample_start_ &-> (call_stmt_1988_Sample)
      call_stmt_1988_sample_completed_ <-& (call_stmt_1988_Sample)
      call_stmt_1988_sample_completed_ &-> ($null)
      call_stmt_1988_update_start_ &-> (call_stmt_1988_Update)
      call_stmt_1988_update_completed_ <-& (call_stmt_1988_Update)
      // Call output argument 0
      // (as target) n_servers
      // start: WAR dependencies for n_servers
      // done: WAR dependencies for n_servers
      // end: 	$call accessRegister (READMEM _hF  1  0  ) (n_servers ) 
      // start:  	S_NUMBER_OF_SERVERS := n_servers $buffering 1// bits of buffering = 32. 
      //  file .Aa/nic.linked.opt.aa, line 718
      // Source expression
      // n_servers
      // Target expression
      // (as target) S_NUMBER_OF_SERVERS
      $T[WPIPE_S_NUMBER_OF_SERVERS_1989_sample_start_] 
      $T[WPIPE_S_NUMBER_OF_SERVERS_1989_sample_completed_] 
      $T[WPIPE_S_NUMBER_OF_SERVERS_1989_update_start_] 
      $T[WPIPE_S_NUMBER_OF_SERVERS_1989_update_completed_] 
      ;;[WPIPE_S_NUMBER_OF_SERVERS_1989_Sample] 
      {
        // pipe write sample-start S_NUMBER_OF_SERVERS
        $T [req] $T [ack] 
      }
      ;;[WPIPE_S_NUMBER_OF_SERVERS_1989_Update] 
      {
        // pipe write update (complete) S_NUMBER_OF_SERVERS
        $T [req] $T [ack] 
      }
      WPIPE_S_NUMBER_OF_SERVERS_1989_sample_start_ &-> (WPIPE_S_NUMBER_OF_SERVERS_1989_Sample)
      WPIPE_S_NUMBER_OF_SERVERS_1989_sample_completed_ <-& (WPIPE_S_NUMBER_OF_SERVERS_1989_Sample)
      WPIPE_S_NUMBER_OF_SERVERS_1989_update_start_ <-& (WPIPE_S_NUMBER_OF_SERVERS_1989_sample_completed_)
      WPIPE_S_NUMBER_OF_SERVERS_1989_update_start_ &-> (WPIPE_S_NUMBER_OF_SERVERS_1989_Update)
      WPIPE_S_NUMBER_OF_SERVERS_1989_update_completed_ <-& (WPIPE_S_NUMBER_OF_SERVERS_1989_Update)
      // start: Forward dependencies from n_servers to transition WPIPE_S_NUMBER_OF_SERVERS_1989_sample_start_
      WPIPE_S_NUMBER_OF_SERVERS_1989_sample_start_ <-& (call_stmt_1988_update_completed_)
      // done: Forward dependencies from n_servers to transition WPIPE_S_NUMBER_OF_SERVERS_1989_sample_start_
      // end:  	S_NUMBER_OF_SERVERS := n_servers $buffering 1// bits of buffering = 32. 
      // load-store dependencies..
      // memory-space  memory_space_0
      //  call_stmt_1988 store
      // pipe read/write dependencies for pipe S_NUMBER_OF_SERVERS
      // read-dependencies for pipe S_NUMBER_OF_SERVERS
      // write-dependencies for pipe S_NUMBER_OF_SERVERS
      // signal write dependencies for S_NUMBER_OF_SERVERS
    }
    ::[call_stmt_1998_to_assign_stmt_2011] 
    {
      // start: 	$call accessRegister (READMEM _hF  0  0  ) (ctrl_reg ) 
      //  file .Aa/nic.linked.opt.aa, line 720
      $T[call_stmt_1998_sample_start_] 
      $T[call_stmt_1998_sample_completed_] 
      $T[call_stmt_1998_update_start_] 
      $T[call_stmt_1998_update_completed_] 
      // Call input argument 0
      // Call input argument 1
      // Call input argument 2
      // Call input argument 3
      ;;[call_stmt_1998_Sample] 
      {
        $T [crr] $T [cra] 
      }
      ;;[call_stmt_1998_Update] 
      {
        $T [ccr] $T [cca] 
      }
      call_stmt_1998_sample_start_ &-> (call_stmt_1998_Sample)
      call_stmt_1998_sample_completed_ <-& (call_stmt_1998_Sample)
      call_stmt_1998_sample_completed_ &-> ($null)
      call_stmt_1998_update_start_ &-> (call_stmt_1998_Update)
      call_stmt_1998_update_completed_ <-& (call_stmt_1998_Update)
      // Call output argument 0
      // (as target) ctrl_reg
      // start: WAR dependencies for ctrl_reg
      // done: WAR dependencies for ctrl_reg
      // end: 	$call accessRegister (READMEM _hF  0  0  ) (ctrl_reg ) 
      // start:  	S_CONTROL_REGISTER := ctrl_reg $buffering 1// bits of buffering = 32. 
      //  file .Aa/nic.linked.opt.aa, line 721
      // Source expression
      // ctrl_reg
      // Target expression
      // (as target) S_CONTROL_REGISTER
      $T[WPIPE_S_CONTROL_REGISTER_1999_sample_start_] 
      $T[WPIPE_S_CONTROL_REGISTER_1999_sample_completed_] 
      $T[WPIPE_S_CONTROL_REGISTER_1999_update_start_] 
      $T[WPIPE_S_CONTROL_REGISTER_1999_update_completed_] 
      ;;[WPIPE_S_CONTROL_REGISTER_1999_Sample] 
      {
        // pipe write sample-start S_CONTROL_REGISTER
        $T [req] $T [ack] 
      }
      ;;[WPIPE_S_CONTROL_REGISTER_1999_Update] 
      {
        // pipe write update (complete) S_CONTROL_REGISTER
        $T [req] $T [ack] 
      }
      WPIPE_S_CONTROL_REGISTER_1999_sample_start_ &-> (WPIPE_S_CONTROL_REGISTER_1999_Sample)
      WPIPE_S_CONTROL_REGISTER_1999_sample_completed_ <-& (WPIPE_S_CONTROL_REGISTER_1999_Sample)
      WPIPE_S_CONTROL_REGISTER_1999_update_start_ <-& (WPIPE_S_CONTROL_REGISTER_1999_sample_completed_)
      WPIPE_S_CONTROL_REGISTER_1999_update_start_ &-> (WPIPE_S_CONTROL_REGISTER_1999_Update)
      WPIPE_S_CONTROL_REGISTER_1999_update_completed_ <-& (WPIPE_S_CONTROL_REGISTER_1999_Update)
      // start: Forward dependencies from ctrl_reg to transition WPIPE_S_CONTROL_REGISTER_1999_sample_start_
      WPIPE_S_CONTROL_REGISTER_1999_sample_start_ <-& (call_stmt_1998_update_completed_)
      // done: Forward dependencies from ctrl_reg to transition WPIPE_S_CONTROL_REGISTER_1999_sample_start_
      // end:  	S_CONTROL_REGISTER := ctrl_reg $buffering 1// bits of buffering = 32. 
      // start:  	MAC_ENABLE := (ctrl_reg [] 1 ) $buffering 1// bits of buffering = 1. 
      //  file .Aa/nic.linked.opt.aa, line 722
      // Source expression
      // (ctrl_reg [] 1 )
      $T[BITSEL_u32_u1_2005_sample_start_] 
      $T[BITSEL_u32_u1_2005_sample_completed_] 
      $T[BITSEL_u32_u1_2005_update_start_] 
      $T[BITSEL_u32_u1_2005_update_completed_] 
      // ctrl_reg
      // start: Forward dependencies from ctrl_reg to transition BITSEL_u32_u1_2005_sample_start_
      BITSEL_u32_u1_2005_sample_start_ <-& (call_stmt_1998_update_completed_)
      // done: Forward dependencies from ctrl_reg to transition BITSEL_u32_u1_2005_sample_start_
      ;;[BITSEL_u32_u1_2005_Sample] 
      {
        // binary expression 
        $T [rr] $T [ra]  // (split) binary operation 
      }
      ;;[BITSEL_u32_u1_2005_Update] 
      {
        // binary expression 
        $T [cr] $T [ca] // (split) binary operation 
      }
      BITSEL_u32_u1_2005_sample_start_ &-> (BITSEL_u32_u1_2005_Sample)
      BITSEL_u32_u1_2005_sample_completed_ <-& (BITSEL_u32_u1_2005_Sample)
      BITSEL_u32_u1_2005_sample_completed_ &-> ($null)
      BITSEL_u32_u1_2005_update_start_ &-> (BITSEL_u32_u1_2005_Update)
      BITSEL_u32_u1_2005_update_completed_ <-& (BITSEL_u32_u1_2005_Update)
      // Target expression
      // (as target) MAC_ENABLE
      $T[WPIPE_MAC_ENABLE_2002_sample_start_] 
      $T[WPIPE_MAC_ENABLE_2002_sample_completed_] 
      $T[WPIPE_MAC_ENABLE_2002_update_start_] 
      $T[WPIPE_MAC_ENABLE_2002_update_completed_] 
      ;;[WPIPE_MAC_ENABLE_2002_Sample] 
      {
        // pipe write sample-start MAC_ENABLE
        $T [req] $T [ack] 
      }
      ;;[WPIPE_MAC_ENABLE_2002_Update] 
      {
        // pipe write update (complete) MAC_ENABLE
        $T [req] $T [ack] 
      }
      WPIPE_MAC_ENABLE_2002_sample_start_ &-> (WPIPE_MAC_ENABLE_2002_Sample)
      WPIPE_MAC_ENABLE_2002_sample_completed_ <-& (WPIPE_MAC_ENABLE_2002_Sample)
      WPIPE_MAC_ENABLE_2002_update_start_ <-& (WPIPE_MAC_ENABLE_2002_sample_completed_)
      WPIPE_MAC_ENABLE_2002_update_start_ &-> (WPIPE_MAC_ENABLE_2002_Update)
      WPIPE_MAC_ENABLE_2002_update_completed_ <-& (WPIPE_MAC_ENABLE_2002_Update)
      // start: Forward dependencies from (ctrl_reg [] 1 ) to transition WPIPE_MAC_ENABLE_2002_sample_start_
      WPIPE_MAC_ENABLE_2002_sample_start_ <-& (BITSEL_u32_u1_2005_update_completed_)
      // done: Forward dependencies from (ctrl_reg [] 1 ) to transition WPIPE_MAC_ENABLE_2002_sample_start_
      // end:  	MAC_ENABLE := (ctrl_reg [] 1 ) $buffering 1// bits of buffering = 1. 
      // start:  	NIC_INTR_ENABLE := (ctrl_reg [] 2 ) $buffering 1// bits of buffering = 1. 
      //  file .Aa/nic.linked.opt.aa, line 723
      // Source expression
      // (ctrl_reg [] 2 )
      $T[BITSEL_u32_u1_2010_sample_start_] 
      $T[BITSEL_u32_u1_2010_sample_completed_] 
      $T[BITSEL_u32_u1_2010_update_start_] 
      $T[BITSEL_u32_u1_2010_update_completed_] 
      // ctrl_reg
      // start: Forward dependencies from ctrl_reg to transition BITSEL_u32_u1_2010_sample_start_
      BITSEL_u32_u1_2010_sample_start_ <-& (call_stmt_1998_update_completed_)
      // done: Forward dependencies from ctrl_reg to transition BITSEL_u32_u1_2010_sample_start_
      ;;[BITSEL_u32_u1_2010_Sample] 
      {
        // binary expression 
        $T [rr] $T [ra]  // (split) binary operation 
      }
      ;;[BITSEL_u32_u1_2010_Update] 
      {
        // binary expression 
        $T [cr] $T [ca] // (split) binary operation 
      }
      BITSEL_u32_u1_2010_sample_start_ &-> (BITSEL_u32_u1_2010_Sample)
      BITSEL_u32_u1_2010_sample_completed_ <-& (BITSEL_u32_u1_2010_Sample)
      BITSEL_u32_u1_2010_sample_completed_ &-> ($null)
      BITSEL_u32_u1_2010_update_start_ &-> (BITSEL_u32_u1_2010_Update)
      BITSEL_u32_u1_2010_update_completed_ <-& (BITSEL_u32_u1_2010_Update)
      // Target expression
      // (as target) NIC_INTR_ENABLE
      $T[WPIPE_NIC_INTR_ENABLE_2007_sample_start_] 
      $T[WPIPE_NIC_INTR_ENABLE_2007_sample_completed_] 
      $T[WPIPE_NIC_INTR_ENABLE_2007_update_start_] 
      $T[WPIPE_NIC_INTR_ENABLE_2007_update_completed_] 
      ;;[WPIPE_NIC_INTR_ENABLE_2007_Sample] 
      {
        // pipe write sample-start NIC_INTR_ENABLE
        $T [req] $T [ack] 
      }
      ;;[WPIPE_NIC_INTR_ENABLE_2007_Update] 
      {
        // pipe write update (complete) NIC_INTR_ENABLE
        $T [req] $T [ack] 
      }
      WPIPE_NIC_INTR_ENABLE_2007_sample_start_ &-> (WPIPE_NIC_INTR_ENABLE_2007_Sample)
      WPIPE_NIC_INTR_ENABLE_2007_sample_completed_ <-& (WPIPE_NIC_INTR_ENABLE_2007_Sample)
      WPIPE_NIC_INTR_ENABLE_2007_update_start_ <-& (WPIPE_NIC_INTR_ENABLE_2007_sample_completed_)
      WPIPE_NIC_INTR_ENABLE_2007_update_start_ &-> (WPIPE_NIC_INTR_ENABLE_2007_Update)
      WPIPE_NIC_INTR_ENABLE_2007_update_completed_ <-& (WPIPE_NIC_INTR_ENABLE_2007_Update)
      // start: Forward dependencies from (ctrl_reg [] 2 ) to transition WPIPE_NIC_INTR_ENABLE_2007_sample_start_
      WPIPE_NIC_INTR_ENABLE_2007_sample_start_ <-& (BITSEL_u32_u1_2010_update_completed_)
      // done: Forward dependencies from (ctrl_reg [] 2 ) to transition WPIPE_NIC_INTR_ENABLE_2007_sample_start_
      // end:  	NIC_INTR_ENABLE := (ctrl_reg [] 2 ) $buffering 1// bits of buffering = 1. 
      // load-store dependencies..
      // memory-space  memory_space_0
      //  call_stmt_1998 store
      // pipe read/write dependencies for pipe MAC_ENABLE
      // read-dependencies for pipe MAC_ENABLE
      // write-dependencies for pipe MAC_ENABLE
      // signal write dependencies for MAC_ENABLE
      // pipe read/write dependencies for pipe NIC_INTR_ENABLE
      // read-dependencies for pipe NIC_INTR_ENABLE
      // write-dependencies for pipe NIC_INTR_ENABLE
      // signal write dependencies for NIC_INTR_ENABLE
      // pipe read/write dependencies for pipe S_CONTROL_REGISTER
      // read-dependencies for pipe S_CONTROL_REGISTER
      // write-dependencies for pipe S_CONTROL_REGISTER
      // signal write dependencies for S_CONTROL_REGISTER
    }
    ::[assign_stmt_2017] 
    {
      // start:  	NIC_INTR := (NIC_INTR_ENABLE & NIC_INTR_INTERNAL) $buffering 1// bits of buffering = 1. 
      //  file .Aa/nic.linked.opt.aa, line 725
      // Source expression
      // (NIC_INTR_ENABLE & NIC_INTR_INTERNAL)
      $T[AND_u1_u1_2016_sample_start_] 
      $T[AND_u1_u1_2016_sample_completed_] 
      $T[AND_u1_u1_2016_update_start_] 
      $T[AND_u1_u1_2016_update_completed_] 
      // NIC_INTR_ENABLE
      // NIC_INTR_INTERNAL
      // start: Forward dependencies from NIC_INTR_ENABLE to transition AND_u1_u1_2016_sample_start_
      // special case... expr is signal read, which does not involve control..
      // start: Forward dependencies from NIC_INTR_INTERNAL to transition AND_u1_u1_2016_sample_start_
      // special case... expr is signal read, which does not involve control..
      ;;[AND_u1_u1_2016_Sample] 
      {
        // binary expression 
        $T [rr] $T [ra]  // (split) binary operation 
      }
      ;;[AND_u1_u1_2016_Update] 
      {
        // binary expression 
        $T [cr] $T [ca] // (split) binary operation 
      }
      AND_u1_u1_2016_sample_start_ &-> (AND_u1_u1_2016_Sample)
      AND_u1_u1_2016_sample_completed_ <-& (AND_u1_u1_2016_Sample)
      AND_u1_u1_2016_sample_completed_ &-> ($null)
      AND_u1_u1_2016_update_start_ &-> (AND_u1_u1_2016_Update)
      AND_u1_u1_2016_update_completed_ <-& (AND_u1_u1_2016_Update)
      // Target expression
      // (as target) NIC_INTR
      $T[WPIPE_NIC_INTR_2013_sample_start_] 
      $T[WPIPE_NIC_INTR_2013_sample_completed_] 
      $T[WPIPE_NIC_INTR_2013_update_start_] 
      $T[WPIPE_NIC_INTR_2013_update_completed_] 
      ;;[WPIPE_NIC_INTR_2013_Sample] 
      {
        // pipe write sample-start NIC_INTR
        $T [req] $T [ack] 
      }
      ;;[WPIPE_NIC_INTR_2013_Update] 
      {
        // pipe write update (complete) NIC_INTR
        $T [req] $T [ack] 
      }
      WPIPE_NIC_INTR_2013_sample_start_ &-> (WPIPE_NIC_INTR_2013_Sample)
      WPIPE_NIC_INTR_2013_sample_completed_ <-& (WPIPE_NIC_INTR_2013_Sample)
      WPIPE_NIC_INTR_2013_update_start_ <-& (WPIPE_NIC_INTR_2013_sample_completed_)
      WPIPE_NIC_INTR_2013_update_start_ &-> (WPIPE_NIC_INTR_2013_Update)
      WPIPE_NIC_INTR_2013_update_completed_ <-& (WPIPE_NIC_INTR_2013_Update)
      // start: Forward dependencies from (NIC_INTR_ENABLE & NIC_INTR_INTERNAL) to transition WPIPE_NIC_INTR_2013_sample_start_
      WPIPE_NIC_INTR_2013_sample_start_ <-& (AND_u1_u1_2016_update_completed_)
      // done: Forward dependencies from (NIC_INTR_ENABLE & NIC_INTR_INTERNAL) to transition WPIPE_NIC_INTR_2013_sample_start_
      // end:  	NIC_INTR := (NIC_INTR_ENABLE & NIC_INTR_INTERNAL) $buffering 1// bits of buffering = 1. 
      // load-store dependencies..
      // pipe read/write dependencies for pipe NIC_INTR
      // read-dependencies for pipe NIC_INTR
      // write-dependencies for pipe NIC_INTR
      // signal write dependencies for NIC_INTR
    }
  }
  // end control-path
  $DP 
  {
    // begin data-path 
    // constant-object-declarations for block %setGlobalSignals
    //  file .Aa/nic.linked.opt.aa, line 712
    // 	$call accessRegister (READMEM _hF  1  0  ) (n_servers ) 
    //  file .Aa/nic.linked.opt.aa, line 717
    // READMEM
    $constant $W[R_READMEM_1983_wire_constant] : $int<1> := _b1// 1
    // _hF 
    $constant $W[konst_1984_wire_constant] : $int<4> := _b1111// 15
    // 1 
    $constant $W[konst_1985_wire_constant] : $int<8> := _b00000001// 1
    // 0 
    $constant $W[konst_1986_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // 	$call accessRegister (READMEM _hF  0  0  ) (ctrl_reg ) 
    //  file .Aa/nic.linked.opt.aa, line 720
    // READMEM
    $constant $W[R_READMEM_1993_wire_constant] : $int<1> := _b1// 1
    // _hF 
    $constant $W[konst_1994_wire_constant] : $int<4> := _b1111// 15
    // 0 
    $constant $W[konst_1995_wire_constant] : $int<8> := _b00000000// 0
    // 0 
    $constant $W[konst_1996_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // 1 
    $constant $W[konst_2004_wire_constant] : $int<32> := _b00000000000000000000000000000001// 1
    // 2 
    $constant $W[konst_2009_wire_constant] : $int<32> := _b00000000000000000000000000000010// 2
    // 	$call accessRegister (READMEM _hF  1  0  ) (n_servers ) 
    //  file .Aa/nic.linked.opt.aa, line 717
    // n_servers
    $W[n_servers_1988] : $int<32>
    // 	S_NUMBER_OF_SERVERS := n_servers $buffering 1// bits of buffering = 32. 
    //  file .Aa/nic.linked.opt.aa, line 718
    // S_NUMBER_OF_SERVERS
    // 	$call accessRegister (READMEM _hF  0  0  ) (ctrl_reg ) 
    //  file .Aa/nic.linked.opt.aa, line 720
    // ctrl_reg
    $W[ctrl_reg_1998] : $int<32>
    // 	S_CONTROL_REGISTER := ctrl_reg $buffering 1// bits of buffering = 32. 
    //  file .Aa/nic.linked.opt.aa, line 721
    // S_CONTROL_REGISTER
    // 	MAC_ENABLE := (ctrl_reg [] 1 ) $buffering 1// bits of buffering = 1. 
    //  file .Aa/nic.linked.opt.aa, line 722
    // (ctrl_reg [] 1 )
    $intermediate $W[BITSEL_u32_u1_2005_wire] : $int<1>
    // MAC_ENABLE
    // 	NIC_INTR_ENABLE := (ctrl_reg [] 2 ) $buffering 1// bits of buffering = 1. 
    //  file .Aa/nic.linked.opt.aa, line 723
    // (ctrl_reg [] 2 )
    $intermediate $W[BITSEL_u32_u1_2010_wire] : $int<1>
    // NIC_INTR_ENABLE
    // 	NIC_INTR := (NIC_INTR_ENABLE & NIC_INTR_INTERNAL) $buffering 1// bits of buffering = 1. 
    //  file .Aa/nic.linked.opt.aa, line 725
    // NIC_INTR_ENABLE
    $W[RPIPE_NIC_INTR_ENABLE_2014_wire] : $int<1>
    // NIC_INTR_INTERNAL
    $W[RPIPE_NIC_INTR_INTERNAL_2015_wire] : $int<1>
    // (NIC_INTR_ENABLE & NIC_INTR_INTERNAL)
    $intermediate $W[AND_u1_u1_2016_wire] : $int<1>
    // NIC_INTR
    // 	$call accessRegister (READMEM _hF  1  0  ) (n_servers ) 
    //  file .Aa/nic.linked.opt.aa, line 717
    $call [call_stmt_1988_call] $module accessRegister(R_READMEM_1983_wire_constant konst_1984_wire_constant konst_1985_wire_constant konst_1986_wire_constant) (n_servers_1988)  
    $delay call_stmt_1988_call 4
    $buffering  $in call_stmt_1988_call R_READMEM_1983_wire_constant 1
    $buffering  $in call_stmt_1988_call konst_1984_wire_constant 1
    $buffering  $in call_stmt_1988_call konst_1985_wire_constant 1
    $buffering  $in call_stmt_1988_call konst_1986_wire_constant 1
    $buffering  $out call_stmt_1988_call n_servers_1988 1
    // 	S_NUMBER_OF_SERVERS := n_servers $buffering 1// bits of buffering = 32. 
    //  file .Aa/nic.linked.opt.aa, line 718
    // S_NUMBER_OF_SERVERS
    $ioport $out [WPIPE_S_NUMBER_OF_SERVERS_1989_inst]  (n_servers_1988) (S_NUMBER_OF_SERVERS) 
    // 	$call accessRegister (READMEM _hF  0  0  ) (ctrl_reg ) 
    //  file .Aa/nic.linked.opt.aa, line 720
    $call [call_stmt_1998_call] $module accessRegister(R_READMEM_1993_wire_constant konst_1994_wire_constant konst_1995_wire_constant konst_1996_wire_constant) (ctrl_reg_1998)  
    $delay call_stmt_1998_call 4
    $buffering  $in call_stmt_1998_call R_READMEM_1993_wire_constant 1
    $buffering  $in call_stmt_1998_call konst_1994_wire_constant 1
    $buffering  $in call_stmt_1998_call konst_1995_wire_constant 1
    $buffering  $in call_stmt_1998_call konst_1996_wire_constant 1
    $buffering  $out call_stmt_1998_call ctrl_reg_1998 1
    // 	S_CONTROL_REGISTER := ctrl_reg $buffering 1// bits of buffering = 32. 
    //  file .Aa/nic.linked.opt.aa, line 721
    // S_CONTROL_REGISTER
    $ioport $out [WPIPE_S_CONTROL_REGISTER_1999_inst]  (ctrl_reg_1998) (S_CONTROL_REGISTER) 
    // 	MAC_ENABLE := (ctrl_reg [] 1 ) $buffering 1// bits of buffering = 1. 
    //  file .Aa/nic.linked.opt.aa, line 722
    // (ctrl_reg [] 1 )
    [][BITSEL_u32_u1_2005_inst] (ctrl_reg_1998 konst_2004_wire_constant) (BITSEL_u32_u1_2005_wire)   
    $buffering  $out BITSEL_u32_u1_2005_inst BITSEL_u32_u1_2005_wire 1
    $delay BITSEL_u32_u1_2005_inst 1
    // MAC_ENABLE
    $ioport $out [WPIPE_MAC_ENABLE_2002_inst]  (BITSEL_u32_u1_2005_wire) (MAC_ENABLE) 
    // 	NIC_INTR_ENABLE := (ctrl_reg [] 2 ) $buffering 1// bits of buffering = 1. 
    //  file .Aa/nic.linked.opt.aa, line 723
    // (ctrl_reg [] 2 )
    [][BITSEL_u32_u1_2010_inst] (ctrl_reg_1998 konst_2009_wire_constant) (BITSEL_u32_u1_2010_wire)   
    $buffering  $out BITSEL_u32_u1_2010_inst BITSEL_u32_u1_2010_wire 1
    $delay BITSEL_u32_u1_2010_inst 1
    // NIC_INTR_ENABLE
    $ioport $out [WPIPE_NIC_INTR_ENABLE_2007_inst]  (BITSEL_u32_u1_2010_wire) (NIC_INTR_ENABLE) 
    // 	NIC_INTR := (NIC_INTR_ENABLE & NIC_INTR_INTERNAL) $buffering 1// bits of buffering = 1. 
    //  file .Aa/nic.linked.opt.aa, line 725
    // NIC_INTR_ENABLE
    $ioport $in [RPIPE_NIC_INTR_ENABLE_2014_inst] (NIC_INTR_ENABLE) (RPIPE_NIC_INTR_ENABLE_2014_wire) 
    $buffering $out RPIPE_NIC_INTR_ENABLE_2014_inst RPIPE_NIC_INTR_ENABLE_2014_wire 1
    // NIC_INTR_INTERNAL
    $ioport $in [RPIPE_NIC_INTR_INTERNAL_2015_inst] (NIC_INTR_INTERNAL) (RPIPE_NIC_INTR_INTERNAL_2015_wire) 
    $buffering $out RPIPE_NIC_INTR_INTERNAL_2015_inst RPIPE_NIC_INTR_INTERNAL_2015_wire 1
    // (NIC_INTR_ENABLE & NIC_INTR_INTERNAL)
    &[AND_u1_u1_2016_inst] (RPIPE_NIC_INTR_ENABLE_2014_wire RPIPE_NIC_INTR_INTERNAL_2015_wire) (AND_u1_u1_2016_wire)   
    $buffering  $out AND_u1_u1_2016_inst AND_u1_u1_2016_wire 1
    $delay AND_u1_u1_2016_inst 1
    // NIC_INTR
    $ioport $out [WPIPE_NIC_INTR_2013_inst]  (AND_u1_u1_2016_wire) (NIC_INTR) 
  }
  // end data-path
  // 	$call accessRegister (READMEM _hF  1  0  ) (n_servers ) 
  //  file .Aa/nic.linked.opt.aa, line 717
  call_stmt_1988_call <=> (call_stmt_1988_to_assign_stmt_1991/call_stmt_1988_Sample/crr call_stmt_1988_to_assign_stmt_1991/call_stmt_1988_Update/ccr) (call_stmt_1988_to_assign_stmt_1991/call_stmt_1988_Sample/cra call_stmt_1988_to_assign_stmt_1991/call_stmt_1988_Update/cca)
  // 	S_NUMBER_OF_SERVERS := n_servers $buffering 1// bits of buffering = 32. 
  //  file .Aa/nic.linked.opt.aa, line 718
  // n_servers
  // S_NUMBER_OF_SERVERS
  WPIPE_S_NUMBER_OF_SERVERS_1989_inst <=> (call_stmt_1988_to_assign_stmt_1991/WPIPE_S_NUMBER_OF_SERVERS_1989_Sample/req call_stmt_1988_to_assign_stmt_1991/WPIPE_S_NUMBER_OF_SERVERS_1989_Update/req) (call_stmt_1988_to_assign_stmt_1991/WPIPE_S_NUMBER_OF_SERVERS_1989_Sample/ack call_stmt_1988_to_assign_stmt_1991/WPIPE_S_NUMBER_OF_SERVERS_1989_Update/ack)
  // 	$call accessRegister (READMEM _hF  0  0  ) (ctrl_reg ) 
  //  file .Aa/nic.linked.opt.aa, line 720
  call_stmt_1998_call <=> (call_stmt_1998_to_assign_stmt_2011/call_stmt_1998_Sample/crr call_stmt_1998_to_assign_stmt_2011/call_stmt_1998_Update/ccr) (call_stmt_1998_to_assign_stmt_2011/call_stmt_1998_Sample/cra call_stmt_1998_to_assign_stmt_2011/call_stmt_1998_Update/cca)
  // 	S_CONTROL_REGISTER := ctrl_reg $buffering 1// bits of buffering = 32. 
  //  file .Aa/nic.linked.opt.aa, line 721
  // ctrl_reg
  // S_CONTROL_REGISTER
  WPIPE_S_CONTROL_REGISTER_1999_inst <=> (call_stmt_1998_to_assign_stmt_2011/WPIPE_S_CONTROL_REGISTER_1999_Sample/req call_stmt_1998_to_assign_stmt_2011/WPIPE_S_CONTROL_REGISTER_1999_Update/req) (call_stmt_1998_to_assign_stmt_2011/WPIPE_S_CONTROL_REGISTER_1999_Sample/ack call_stmt_1998_to_assign_stmt_2011/WPIPE_S_CONTROL_REGISTER_1999_Update/ack)
  // 	MAC_ENABLE := (ctrl_reg [] 1 ) $buffering 1// bits of buffering = 1. 
  //  file .Aa/nic.linked.opt.aa, line 722
  // (ctrl_reg [] 1 )
  // ctrl_reg
  BITSEL_u32_u1_2005_inst <=> (call_stmt_1998_to_assign_stmt_2011/BITSEL_u32_u1_2005_Sample/rr call_stmt_1998_to_assign_stmt_2011/BITSEL_u32_u1_2005_Update/cr) (call_stmt_1998_to_assign_stmt_2011/BITSEL_u32_u1_2005_Sample/ra call_stmt_1998_to_assign_stmt_2011/BITSEL_u32_u1_2005_Update/ca)
  // MAC_ENABLE
  WPIPE_MAC_ENABLE_2002_inst <=> (call_stmt_1998_to_assign_stmt_2011/WPIPE_MAC_ENABLE_2002_Sample/req call_stmt_1998_to_assign_stmt_2011/WPIPE_MAC_ENABLE_2002_Update/req) (call_stmt_1998_to_assign_stmt_2011/WPIPE_MAC_ENABLE_2002_Sample/ack call_stmt_1998_to_assign_stmt_2011/WPIPE_MAC_ENABLE_2002_Update/ack)
  // 	NIC_INTR_ENABLE := (ctrl_reg [] 2 ) $buffering 1// bits of buffering = 1. 
  //  file .Aa/nic.linked.opt.aa, line 723
  // (ctrl_reg [] 2 )
  // ctrl_reg
  BITSEL_u32_u1_2010_inst <=> (call_stmt_1998_to_assign_stmt_2011/BITSEL_u32_u1_2010_Sample/rr call_stmt_1998_to_assign_stmt_2011/BITSEL_u32_u1_2010_Update/cr) (call_stmt_1998_to_assign_stmt_2011/BITSEL_u32_u1_2010_Sample/ra call_stmt_1998_to_assign_stmt_2011/BITSEL_u32_u1_2010_Update/ca)
  // NIC_INTR_ENABLE
  WPIPE_NIC_INTR_ENABLE_2007_inst <=> (call_stmt_1998_to_assign_stmt_2011/WPIPE_NIC_INTR_ENABLE_2007_Sample/req call_stmt_1998_to_assign_stmt_2011/WPIPE_NIC_INTR_ENABLE_2007_Update/req) (call_stmt_1998_to_assign_stmt_2011/WPIPE_NIC_INTR_ENABLE_2007_Sample/ack call_stmt_1998_to_assign_stmt_2011/WPIPE_NIC_INTR_ENABLE_2007_Update/ack)
  // 	NIC_INTR := (NIC_INTR_ENABLE & NIC_INTR_INTERNAL) $buffering 1// bits of buffering = 1. 
  //  file .Aa/nic.linked.opt.aa, line 725
  // (NIC_INTR_ENABLE & NIC_INTR_INTERNAL)
  // NIC_INTR_ENABLE
  // NIC_INTR_INTERNAL
  AND_u1_u1_2016_inst <=> (assign_stmt_2017/AND_u1_u1_2016_Sample/rr assign_stmt_2017/AND_u1_u1_2016_Update/cr) (assign_stmt_2017/AND_u1_u1_2016_Sample/ra assign_stmt_2017/AND_u1_u1_2016_Update/ca)
  // NIC_INTR
  WPIPE_NIC_INTR_2013_inst <=> (assign_stmt_2017/WPIPE_NIC_INTR_2013_Sample/req assign_stmt_2017/WPIPE_NIC_INTR_2013_Update/req) (assign_stmt_2017/WPIPE_NIC_INTR_2013_Sample/ack assign_stmt_2017/WPIPE_NIC_INTR_2013_Update/ack)
  $attribute input_buffering => "0"
  $attribute output_buffering => "0"
}
$module [controlDaemon] 
{
  // pipe-declarations for block %controlDaemon
  //  file .Aa/nic.linked.opt.aa, line 729
  // pipe-declarations for block %controlDaemon%loop
  //  file .Aa/nic.linked.opt.aa, line 743
  // there are no memory spaces local to this module.
  $CP 
  {
    // begin control-path 
    ::[assign_stmt_2022_to_assign_stmt_2046] 
    {
      // start:  	memory_access_lock := 1  $buffering 1// bits of buffering = 1. 
      //  file .Aa/nic.linked.opt.aa, line 734
      // Target expression
      // (as target) memory_access_lock
      $T[WPIPE_memory_access_lock_2020_sample_start_] 
      $T[WPIPE_memory_access_lock_2020_sample_completed_] 
      $T[WPIPE_memory_access_lock_2020_update_start_] 
      $T[WPIPE_memory_access_lock_2020_update_completed_] 
      ;;[WPIPE_memory_access_lock_2020_Sample] 
      {
        // pipe write sample-start memory_access_lock
        $T [req] $T [ack] 
      }
      ;;[WPIPE_memory_access_lock_2020_Update] 
      {
        // pipe write update (complete) memory_access_lock
        $T [req] $T [ack] 
      }
      WPIPE_memory_access_lock_2020_sample_start_ &-> (WPIPE_memory_access_lock_2020_Sample)
      WPIPE_memory_access_lock_2020_sample_completed_ <-& (WPIPE_memory_access_lock_2020_Sample)
      WPIPE_memory_access_lock_2020_update_start_ <-& (WPIPE_memory_access_lock_2020_sample_completed_)
      WPIPE_memory_access_lock_2020_update_start_ &-> (WPIPE_memory_access_lock_2020_Update)
      WPIPE_memory_access_lock_2020_update_completed_ <-& (WPIPE_memory_access_lock_2020_Update)
      // end:  	memory_access_lock := 1  $buffering 1// bits of buffering = 1. 
      // start: 	$call accessRegister (0  0  0  0  ) (ign ) 
      //  file .Aa/nic.linked.opt.aa, line 735
      $T[call_stmt_2028_sample_start_] 
      $T[call_stmt_2028_sample_completed_] 
      $T[call_stmt_2028_update_start_] 
      $T[call_stmt_2028_update_completed_] 
      // Call input argument 0
      // Call input argument 1
      // Call input argument 2
      // Call input argument 3
      ;;[call_stmt_2028_Sample] 
      {
        $T [crr] $T [cra] 
      }
      ;;[call_stmt_2028_Update] 
      {
        $T [ccr] $T [cca] 
      }
      call_stmt_2028_sample_start_ &-> (call_stmt_2028_Sample)
      call_stmt_2028_sample_completed_ <-& (call_stmt_2028_Sample)
      call_stmt_2028_sample_completed_ &-> ($null)
      call_stmt_2028_update_start_ &-> (call_stmt_2028_Update)
      call_stmt_2028_update_completed_ <-& (call_stmt_2028_Update)
      // Call output argument 0
      // (as target) ign
      // start: WAR dependencies for ign
      // done: WAR dependencies for ign
      // end: 	$call accessRegister (0  0  0  0  ) (ign ) 
      // start:  	MAC_ENABLE := 0  $buffering 1// bits of buffering = 1. 
      //  file .Aa/nic.linked.opt.aa, line 736
      // Target expression
      // (as target) MAC_ENABLE
      $T[WPIPE_MAC_ENABLE_2029_sample_start_] 
      $T[WPIPE_MAC_ENABLE_2029_sample_completed_] 
      $T[WPIPE_MAC_ENABLE_2029_update_start_] 
      $T[WPIPE_MAC_ENABLE_2029_update_completed_] 
      ;;[WPIPE_MAC_ENABLE_2029_Sample] 
      {
        // pipe write sample-start MAC_ENABLE
        $T [req] $T [ack] 
      }
      ;;[WPIPE_MAC_ENABLE_2029_Update] 
      {
        // pipe write update (complete) MAC_ENABLE
        $T [req] $T [ack] 
      }
      WPIPE_MAC_ENABLE_2029_sample_start_ &-> (WPIPE_MAC_ENABLE_2029_Sample)
      WPIPE_MAC_ENABLE_2029_sample_completed_ <-& (WPIPE_MAC_ENABLE_2029_Sample)
      WPIPE_MAC_ENABLE_2029_update_start_ <-& (WPIPE_MAC_ENABLE_2029_sample_completed_)
      WPIPE_MAC_ENABLE_2029_update_start_ &-> (WPIPE_MAC_ENABLE_2029_Update)
      WPIPE_MAC_ENABLE_2029_update_completed_ <-& (WPIPE_MAC_ENABLE_2029_Update)
      // end:  	MAC_ENABLE := 0  $buffering 1// bits of buffering = 1. 
      // start:  	NIC_INTR := 0  $buffering 1// bits of buffering = 1. 
      //  file .Aa/nic.linked.opt.aa, line 737
      // Target expression
      // (as target) NIC_INTR
      $T[WPIPE_NIC_INTR_2032_sample_start_] 
      $T[WPIPE_NIC_INTR_2032_sample_completed_] 
      $T[WPIPE_NIC_INTR_2032_update_start_] 
      $T[WPIPE_NIC_INTR_2032_update_completed_] 
      ;;[WPIPE_NIC_INTR_2032_Sample] 
      {
        // pipe write sample-start NIC_INTR
        $T [req] $T [ack] 
      }
      ;;[WPIPE_NIC_INTR_2032_Update] 
      {
        // pipe write update (complete) NIC_INTR
        $T [req] $T [ack] 
      }
      WPIPE_NIC_INTR_2032_sample_start_ &-> (WPIPE_NIC_INTR_2032_Sample)
      WPIPE_NIC_INTR_2032_sample_completed_ <-& (WPIPE_NIC_INTR_2032_Sample)
      WPIPE_NIC_INTR_2032_update_start_ <-& (WPIPE_NIC_INTR_2032_sample_completed_)
      WPIPE_NIC_INTR_2032_update_start_ &-> (WPIPE_NIC_INTR_2032_Update)
      WPIPE_NIC_INTR_2032_update_completed_ <-& (WPIPE_NIC_INTR_2032_Update)
      // end:  	NIC_INTR := 0  $buffering 1// bits of buffering = 1. 
      // start:  	NIC_INTR_ENABLE := 0  $buffering 1// bits of buffering = 1. 
      //  file .Aa/nic.linked.opt.aa, line 738
      // Target expression
      // (as target) NIC_INTR_ENABLE
      $T[WPIPE_NIC_INTR_ENABLE_2035_sample_start_] 
      $T[WPIPE_NIC_INTR_ENABLE_2035_sample_completed_] 
      $T[WPIPE_NIC_INTR_ENABLE_2035_update_start_] 
      $T[WPIPE_NIC_INTR_ENABLE_2035_update_completed_] 
      ;;[WPIPE_NIC_INTR_ENABLE_2035_Sample] 
      {
        // pipe write sample-start NIC_INTR_ENABLE
        $T [req] $T [ack] 
      }
      ;;[WPIPE_NIC_INTR_ENABLE_2035_Update] 
      {
        // pipe write update (complete) NIC_INTR_ENABLE
        $T [req] $T [ack] 
      }
      WPIPE_NIC_INTR_ENABLE_2035_sample_start_ &-> (WPIPE_NIC_INTR_ENABLE_2035_Sample)
      WPIPE_NIC_INTR_ENABLE_2035_sample_completed_ <-& (WPIPE_NIC_INTR_ENABLE_2035_Sample)
      WPIPE_NIC_INTR_ENABLE_2035_update_start_ <-& (WPIPE_NIC_INTR_ENABLE_2035_sample_completed_)
      WPIPE_NIC_INTR_ENABLE_2035_update_start_ &-> (WPIPE_NIC_INTR_ENABLE_2035_Update)
      WPIPE_NIC_INTR_ENABLE_2035_update_completed_ <-& (WPIPE_NIC_INTR_ENABLE_2035_Update)
      // end:  	NIC_INTR_ENABLE := 0  $buffering 1// bits of buffering = 1. 
      // start:  	NIC_INTR_INTERNAL := 0  $buffering 1// bits of buffering = 1. 
      //  file .Aa/nic.linked.opt.aa, line 739
      // Target expression
      // (as target) NIC_INTR_INTERNAL
      $T[WPIPE_NIC_INTR_INTERNAL_2038_sample_start_] 
      $T[WPIPE_NIC_INTR_INTERNAL_2038_sample_completed_] 
      $T[WPIPE_NIC_INTR_INTERNAL_2038_update_start_] 
      $T[WPIPE_NIC_INTR_INTERNAL_2038_update_completed_] 
      ;;[WPIPE_NIC_INTR_INTERNAL_2038_Sample] 
      {
        // pipe write sample-start NIC_INTR_INTERNAL
        $T [req] $T [ack] 
      }
      ;;[WPIPE_NIC_INTR_INTERNAL_2038_Update] 
      {
        // pipe write update (complete) NIC_INTR_INTERNAL
        $T [req] $T [ack] 
      }
      WPIPE_NIC_INTR_INTERNAL_2038_sample_start_ &-> (WPIPE_NIC_INTR_INTERNAL_2038_Sample)
      WPIPE_NIC_INTR_INTERNAL_2038_sample_completed_ <-& (WPIPE_NIC_INTR_INTERNAL_2038_Sample)
      WPIPE_NIC_INTR_INTERNAL_2038_update_start_ <-& (WPIPE_NIC_INTR_INTERNAL_2038_sample_completed_)
      WPIPE_NIC_INTR_INTERNAL_2038_update_start_ &-> (WPIPE_NIC_INTR_INTERNAL_2038_Update)
      WPIPE_NIC_INTR_INTERNAL_2038_update_completed_ <-& (WPIPE_NIC_INTR_INTERNAL_2038_Update)
      // end:  	NIC_INTR_INTERNAL := 0  $buffering 1// bits of buffering = 1. 
      // start:  	S_CONTROL_REGISTER := 0  $buffering 1// bits of buffering = 32. 
      //  file .Aa/nic.linked.opt.aa, line 740
      // Target expression
      // (as target) S_CONTROL_REGISTER
      $T[WPIPE_S_CONTROL_REGISTER_2041_sample_start_] 
      $T[WPIPE_S_CONTROL_REGISTER_2041_sample_completed_] 
      $T[WPIPE_S_CONTROL_REGISTER_2041_update_start_] 
      $T[WPIPE_S_CONTROL_REGISTER_2041_update_completed_] 
      ;;[WPIPE_S_CONTROL_REGISTER_2041_Sample] 
      {
        // pipe write sample-start S_CONTROL_REGISTER
        $T [req] $T [ack] 
      }
      ;;[WPIPE_S_CONTROL_REGISTER_2041_Update] 
      {
        // pipe write update (complete) S_CONTROL_REGISTER
        $T [req] $T [ack] 
      }
      WPIPE_S_CONTROL_REGISTER_2041_sample_start_ &-> (WPIPE_S_CONTROL_REGISTER_2041_Sample)
      WPIPE_S_CONTROL_REGISTER_2041_sample_completed_ <-& (WPIPE_S_CONTROL_REGISTER_2041_Sample)
      WPIPE_S_CONTROL_REGISTER_2041_update_start_ <-& (WPIPE_S_CONTROL_REGISTER_2041_sample_completed_)
      WPIPE_S_CONTROL_REGISTER_2041_update_start_ &-> (WPIPE_S_CONTROL_REGISTER_2041_Update)
      WPIPE_S_CONTROL_REGISTER_2041_update_completed_ <-& (WPIPE_S_CONTROL_REGISTER_2041_Update)
      // end:  	S_CONTROL_REGISTER := 0  $buffering 1// bits of buffering = 32. 
      // start:  	S_NUMBER_OF_SERVERS := 0  $buffering 1// bits of buffering = 32. 
      //  file .Aa/nic.linked.opt.aa, line 741
      // Target expression
      // (as target) S_NUMBER_OF_SERVERS
      $T[WPIPE_S_NUMBER_OF_SERVERS_2044_sample_start_] 
      $T[WPIPE_S_NUMBER_OF_SERVERS_2044_sample_completed_] 
      $T[WPIPE_S_NUMBER_OF_SERVERS_2044_update_start_] 
      $T[WPIPE_S_NUMBER_OF_SERVERS_2044_update_completed_] 
      ;;[WPIPE_S_NUMBER_OF_SERVERS_2044_Sample] 
      {
        // pipe write sample-start S_NUMBER_OF_SERVERS
        $T [req] $T [ack] 
      }
      ;;[WPIPE_S_NUMBER_OF_SERVERS_2044_Update] 
      {
        // pipe write update (complete) S_NUMBER_OF_SERVERS
        $T [req] $T [ack] 
      }
      WPIPE_S_NUMBER_OF_SERVERS_2044_sample_start_ &-> (WPIPE_S_NUMBER_OF_SERVERS_2044_Sample)
      WPIPE_S_NUMBER_OF_SERVERS_2044_sample_completed_ <-& (WPIPE_S_NUMBER_OF_SERVERS_2044_Sample)
      WPIPE_S_NUMBER_OF_SERVERS_2044_update_start_ <-& (WPIPE_S_NUMBER_OF_SERVERS_2044_sample_completed_)
      WPIPE_S_NUMBER_OF_SERVERS_2044_update_start_ &-> (WPIPE_S_NUMBER_OF_SERVERS_2044_Update)
      WPIPE_S_NUMBER_OF_SERVERS_2044_update_completed_ <-& (WPIPE_S_NUMBER_OF_SERVERS_2044_Update)
      // end:  	S_NUMBER_OF_SERVERS := 0  $buffering 1// bits of buffering = 32. 
      // load-store dependencies..
      // memory-space  memory_space_0
      //  call_stmt_2028 store
      // pipe read/write dependencies for pipe MAC_ENABLE
      // read-dependencies for pipe MAC_ENABLE
      // write-dependencies for pipe MAC_ENABLE
      // signal write dependencies for MAC_ENABLE
      // pipe read/write dependencies for pipe NIC_INTR
      // read-dependencies for pipe NIC_INTR
      // write-dependencies for pipe NIC_INTR
      // signal write dependencies for NIC_INTR
      // pipe read/write dependencies for pipe NIC_INTR_ENABLE
      // read-dependencies for pipe NIC_INTR_ENABLE
      // write-dependencies for pipe NIC_INTR_ENABLE
      // signal write dependencies for NIC_INTR_ENABLE
      // pipe read/write dependencies for pipe NIC_INTR_INTERNAL
      // read-dependencies for pipe NIC_INTR_INTERNAL
      // write-dependencies for pipe NIC_INTR_INTERNAL
      // signal write dependencies for NIC_INTR_INTERNAL
      // pipe read/write dependencies for pipe S_NUMBER_OF_SERVERS
      // read-dependencies for pipe S_NUMBER_OF_SERVERS
      // write-dependencies for pipe S_NUMBER_OF_SERVERS
      // signal write dependencies for S_NUMBER_OF_SERVERS
      // pipe read/write dependencies for pipe S_CONTROL_REGISTER
      // read-dependencies for pipe S_CONTROL_REGISTER
      // write-dependencies for pipe S_CONTROL_REGISTER
      // signal write dependencies for S_CONTROL_REGISTER
      // pipe read/write dependencies for pipe memory_access_lock
      // read-dependencies for pipe memory_access_lock
      // write-dependencies for pipe memory_access_lock
      // signal write dependencies for memory_access_lock
    }
    <>[branch_block_stmt_2048] // Branch Block  file .Aa/nic.linked.opt.aa, line 743
    {
      $P [branch_block_stmt_2048__entry__]
      branch_block_stmt_2048__entry__ <-| ($entry)
      $P [branch_block_stmt_2048__exit__]
      branch_block_stmt_2048__exit__ |-> ($exit)
      $P [do_while_stmt_2049__entry__] 
      $P [do_while_stmt_2049__exit__] 
      // do-while-statement  
      //  file .Aa/nic.linked.opt.aa, line 745
      <o> [do_while_stmt_2049]  $depth 3 $buffering 1 
      {
        $P[do_while_stmt_2049__entry__] 
        $P[do_while_stmt_2049__exit__] 
        $P[loop_back] 
        $P[condition_done] 
        $P[loop_body_done] 
        $pipeline [do_while_stmt_2049_loop_body] 
        {
          // Pipelined!
          $T[back_edge_to_loop_body] 
          $T[first_time_through_loop_body] 
          $T[loop_body_start] 
          $T[condition_evaluated] 
          $transitionmerge [entry_tmerge] (back_edge_to_loop_body first_time_through_loop_body) (loop_body_start)
          $entry <-& (loop_body_start)
          // start:  			req := AFB_NIC_REQUEST $buffering 1// bits of buffering = 74. 
          //  file .Aa/nic.linked.opt.aa, line 749
          // Source expression
          // AFB_NIC_REQUEST
          $T[RPIPE_AFB_NIC_REQUEST_2052_sample_start_] 
          $T[RPIPE_AFB_NIC_REQUEST_2052_sample_completed_] 
          $T[RPIPE_AFB_NIC_REQUEST_2052_update_start_] 
          $T[RPIPE_AFB_NIC_REQUEST_2052_update_completed_] 
          ;;[RPIPE_AFB_NIC_REQUEST_2052_Sample] 
          {
            // pipe read sample
            $T [rr] $T [ra] 
          }
          ;;[RPIPE_AFB_NIC_REQUEST_2052_Update] 
          {
            // pipe read update
            $T [cr] $T [ca] 
          }
          RPIPE_AFB_NIC_REQUEST_2052_sample_start_ &-> (RPIPE_AFB_NIC_REQUEST_2052_Sample)
          RPIPE_AFB_NIC_REQUEST_2052_sample_completed_ <-& (RPIPE_AFB_NIC_REQUEST_2052_Sample)
          RPIPE_AFB_NIC_REQUEST_2052_update_start_ <-& (RPIPE_AFB_NIC_REQUEST_2052_sample_completed_)
          RPIPE_AFB_NIC_REQUEST_2052_update_start_ &-> (RPIPE_AFB_NIC_REQUEST_2052_Update)
          RPIPE_AFB_NIC_REQUEST_2052_update_completed_ <-& (RPIPE_AFB_NIC_REQUEST_2052_Update)
          RPIPE_AFB_NIC_REQUEST_2052_sample_start_ o<-& (RPIPE_AFB_NIC_REQUEST_2052_update_completed_ 0)
          // Target expression
          // (as target) req
          // start: WAR dependencies for req
          // done: WAR dependencies for req
          // end:  			req := AFB_NIC_REQUEST $buffering 1// bits of buffering = 74. 
          // start: WAR dependencies for lock
          // done: WAR dependencies for lock
          // start:  			$volatile lock := ( $slice req 73 73 )  $buffering 1
          //  file .Aa/nic.linked.opt.aa, line 751
          // volatile! 
          // Source expression
          // ( $slice req 73 73 ) 
          // req
          // Target expression
          // (as target) lock
          // start: WAR dependencies for lock
          // done: WAR dependencies for lock
          // end:  			$volatile lock := ( $slice req 73 73 )  $buffering 1
          // start: WAR dependencies for rwbar
          // done: WAR dependencies for rwbar
          // start:  			$volatile rwbar := ( $slice req 72 72 )  $buffering 1
          //  file .Aa/nic.linked.opt.aa, line 752
          // volatile! 
          // Source expression
          // ( $slice req 72 72 ) 
          // req
          // Target expression
          // (as target) rwbar
          // start: WAR dependencies for rwbar
          // done: WAR dependencies for rwbar
          // end:  			$volatile rwbar := ( $slice req 72 72 )  $buffering 1
          // start: WAR dependencies for bmask
          // done: WAR dependencies for bmask
          // start:  			$volatile bmask := ( $slice req 71 68 )  $buffering 1
          //  file .Aa/nic.linked.opt.aa, line 753
          // volatile! 
          // Source expression
          // ( $slice req 71 68 ) 
          // req
          // Target expression
          // (as target) bmask
          // start: WAR dependencies for bmask
          // done: WAR dependencies for bmask
          // end:  			$volatile bmask := ( $slice req 71 68 )  $buffering 1
          // start: WAR dependencies for addr
          // done: WAR dependencies for addr
          // start:  			$volatile addr := ( $slice req 67 32 )  $buffering 1
          //  file .Aa/nic.linked.opt.aa, line 754
          // volatile! 
          // Source expression
          // ( $slice req 67 32 ) 
          // req
          // Target expression
          // (as target) addr
          // start: WAR dependencies for addr
          // done: WAR dependencies for addr
          // end:  			$volatile addr := ( $slice req 67 32 )  $buffering 1
          // start: WAR dependencies for wdata
          // done: WAR dependencies for wdata
          // start:  			$volatile wdata := ( $slice req 31 0 )  $buffering 1
          //  file .Aa/nic.linked.opt.aa, line 755
          // volatile! 
          // Source expression
          // ( $slice req 31 0 ) 
          // req
          // Target expression
          // (as target) wdata
          // start: WAR dependencies for wdata
          // done: WAR dependencies for wdata
          // end:  			$volatile wdata := ( $slice req 31 0 )  $buffering 1
          // start: WAR dependencies for index
          // done: WAR dependencies for index
          // start:  			$volatile index := ( $slice addr 9 2 )  $buffering 1
          //  file .Aa/nic.linked.opt.aa, line 757
          // volatile! 
          // Source expression
          // ( $slice addr 9 2 ) 
          // addr
          // Target expression
          // (as target) index
          // start: WAR dependencies for index
          // done: WAR dependencies for index
          // end:  			$volatile index := ( $slice addr 9 2 )  $buffering 1
          // start: 			$call accessRegister (rwbar bmask index wdata ) (rdata ) 
          //  file .Aa/nic.linked.opt.aa, line 758
          $T[call_stmt_2091_sample_start_] 
          $T[call_stmt_2091_sample_completed_] 
          $T[call_stmt_2091_update_start_] 
          $T[call_stmt_2091_update_completed_] 
          // Call input argument 0
          // rwbar
          // Call input argument 1
          // bmask
          // Call input argument 2
          // index
          // Call input argument 3
          // wdata
          // start: Forward dependencies from rwbar to transition call_stmt_2091_sample_start_
          call_stmt_2091_sample_start_ <-& (RPIPE_AFB_NIC_REQUEST_2052_update_completed_)
          // done: Forward dependencies from rwbar to transition call_stmt_2091_sample_start_
          // RAW reenables for rwbar
          RPIPE_AFB_NIC_REQUEST_2052_update_start_ o<-& (call_stmt_2091_sample_completed_ 0)
          // start: Forward dependencies from bmask to transition call_stmt_2091_sample_start_
          call_stmt_2091_sample_start_ <-& (RPIPE_AFB_NIC_REQUEST_2052_update_completed_)
          // done: Forward dependencies from bmask to transition call_stmt_2091_sample_start_
          // RAW reenables for bmask
          RPIPE_AFB_NIC_REQUEST_2052_update_start_ o<-& (call_stmt_2091_sample_completed_ 0)
          // start: Forward dependencies from index to transition call_stmt_2091_sample_start_
          call_stmt_2091_sample_start_ <-& (RPIPE_AFB_NIC_REQUEST_2052_update_completed_)
          // done: Forward dependencies from index to transition call_stmt_2091_sample_start_
          // RAW reenables for index
          RPIPE_AFB_NIC_REQUEST_2052_update_start_ o<-& (call_stmt_2091_sample_completed_ 0)
          // start: Forward dependencies from wdata to transition call_stmt_2091_sample_start_
          call_stmt_2091_sample_start_ <-& (RPIPE_AFB_NIC_REQUEST_2052_update_completed_)
          // done: Forward dependencies from wdata to transition call_stmt_2091_sample_start_
          // RAW reenables for wdata
          RPIPE_AFB_NIC_REQUEST_2052_update_start_ o<-& (call_stmt_2091_sample_completed_ 0)
          ;;[call_stmt_2091_Sample] 
          {
            $T [crr] $T [cra] 
          }
          ;;[call_stmt_2091_Update] 
          {
            $T [ccr] $T [cca] 
          }
          call_stmt_2091_sample_start_ &-> (call_stmt_2091_Sample)
          call_stmt_2091_sample_completed_ <-& (call_stmt_2091_Sample)
          call_stmt_2091_sample_completed_ &-> ($null)
          call_stmt_2091_update_start_ &-> (call_stmt_2091_Update)
          call_stmt_2091_update_completed_ <-& (call_stmt_2091_Update)
          // Call output argument 0
          // (as target) rdata
          // self-release: 
          call_stmt_2091_sample_start_ o<-& (call_stmt_2091_sample_completed_ 1)
          $null &-> (call_stmt_2091_update_start_)
          call_stmt_2091_update_start_ o<-& (call_stmt_2091_update_completed_ 0)
          // start: WAR dependencies for rdata
          // done: WAR dependencies for rdata
          // end: 			$call accessRegister (rwbar bmask index wdata ) (rdata ) 
          // Barrier in pipelined body 
          $T[barrier_stmt_2092_update_completed_] 
          barrier_stmt_2092_update_completed_ <-& (call_stmt_2091_update_completed_)
          barrier_stmt_2092_update_completed_ <-& (RPIPE_AFB_NIC_REQUEST_2052_update_completed_)
          // start: WAR dependencies for update_control_register
          // done: WAR dependencies for update_control_register
          // start:  			$volatile update_control_register := (( ~ rwbar ) & (index == 0 )) $buffering 1
          //  file .Aa/nic.linked.opt.aa, line 760
          // volatile! 
          // Source expression
          // (( ~ rwbar ) & (index == 0 ))
          // ( ~ rwbar )
          // rwbar
          // (index == 0 )
          // index
          // Target expression
          // (as target) update_control_register
          // start: WAR dependencies for update_control_register
          // done: WAR dependencies for update_control_register
          // end:  			$volatile update_control_register := (( ~ rwbar ) & (index == 0 )) $buffering 1
          // start: WAR dependencies for set_globals
          // done: WAR dependencies for set_globals
          // start:  			$volatile set_globals := (update_control_register & (wdata [] 0 )) $buffering 1
          //  file .Aa/nic.linked.opt.aa, line 761
          // volatile! 
          // Source expression
          // (update_control_register & (wdata [] 0 ))
          // update_control_register
          // (wdata [] 0 )
          // wdata
          // Target expression
          // (as target) set_globals
          // start: WAR dependencies for set_globals
          // done: WAR dependencies for set_globals
          // end:  			$volatile set_globals := (update_control_register & (wdata [] 0 )) $buffering 1
          // start: 			$guard (set_globals) $call setGlobalSignals () () 
          //  file .Aa/nic.linked.opt.aa, line 762
          $T[call_stmt_2109_sample_start_] 
          $T[call_stmt_2109_sample_completed_] 
          $T[call_stmt_2109_update_start_] 
          $T[call_stmt_2109_update_completed_] 
          // Guard expression
          // set_globals
          // start: Forward dependencies from set_globals to transition call_stmt_2109_sample_start_
          call_stmt_2109_sample_start_ <-& (RPIPE_AFB_NIC_REQUEST_2052_update_completed_)
          // done: Forward dependencies from set_globals to transition call_stmt_2109_sample_start_
          // RAW reenables for set_globals
          RPIPE_AFB_NIC_REQUEST_2052_update_start_ o<-& (call_stmt_2109_sample_completed_ 0)
          ;;[call_stmt_2109_Sample] 
          {
            $T [crr] $T [cra] 
          }
          ;;[call_stmt_2109_Update] 
          {
            $T [ccr] $T [cca] 
          }
          call_stmt_2109_sample_start_ &-> (call_stmt_2109_Sample)
          call_stmt_2109_sample_completed_ <-& (call_stmt_2109_Sample)
          call_stmt_2109_sample_completed_ &-> ($null)
          call_stmt_2109_update_start_ &-> (call_stmt_2109_Update)
          call_stmt_2109_update_completed_ <-& (call_stmt_2109_Update)
          // self-release: 
          call_stmt_2109_sample_start_ o<-& (call_stmt_2109_sample_completed_ 1)
          $null &-> (call_stmt_2109_update_start_)
          call_stmt_2109_update_start_ o<-& (call_stmt_2109_update_completed_ 0)
          // end: 			$guard (set_globals) $call setGlobalSignals () () 
          // start: WAR dependencies for resp
          // done: WAR dependencies for resp
          // start:  			$volatile resp := (($bitcast ($uint<1>) _b0  ) && rdata) $buffering 1
          //  file .Aa/nic.linked.opt.aa, line 763
          // volatile! 
          // Source expression
          // (($bitcast ($uint<1>) _b0  ) && rdata)
          // rdata
          // Target expression
          // (as target) resp
          // start: WAR dependencies for resp
          // done: WAR dependencies for resp
          // end:  			$volatile resp := (($bitcast ($uint<1>) _b0  ) && rdata) $buffering 1
          // start:  			AFB_NIC_RESPONSE := resp $buffering 1// bits of buffering = 33. 
          //  file .Aa/nic.linked.opt.aa, line 764
          // Source expression
          // resp
          // Target expression
          // (as target) AFB_NIC_RESPONSE
          $T[WPIPE_AFB_NIC_RESPONSE_2116_sample_start_] 
          $T[WPIPE_AFB_NIC_RESPONSE_2116_sample_completed_] 
          $T[WPIPE_AFB_NIC_RESPONSE_2116_update_start_] 
          $T[WPIPE_AFB_NIC_RESPONSE_2116_update_completed_] 
          // barrier 
          WPIPE_AFB_NIC_RESPONSE_2116_sample_start_ <-& (barrier_stmt_2092_update_completed_)
          ;;[WPIPE_AFB_NIC_RESPONSE_2116_Sample] 
          {
            // pipe write sample-start AFB_NIC_RESPONSE
            $T [req] $T [ack] 
          }
          ;;[WPIPE_AFB_NIC_RESPONSE_2116_Update] 
          {
            // pipe write update (complete) AFB_NIC_RESPONSE
            $T [req] $T [ack] 
          }
          WPIPE_AFB_NIC_RESPONSE_2116_sample_start_ &-> (WPIPE_AFB_NIC_RESPONSE_2116_Sample)
          WPIPE_AFB_NIC_RESPONSE_2116_sample_completed_ <-& (WPIPE_AFB_NIC_RESPONSE_2116_Sample)
          WPIPE_AFB_NIC_RESPONSE_2116_update_start_ <-& (WPIPE_AFB_NIC_RESPONSE_2116_sample_completed_)
          WPIPE_AFB_NIC_RESPONSE_2116_update_start_ &-> (WPIPE_AFB_NIC_RESPONSE_2116_Update)
          WPIPE_AFB_NIC_RESPONSE_2116_update_completed_ <-& (WPIPE_AFB_NIC_RESPONSE_2116_Update)
          WPIPE_AFB_NIC_RESPONSE_2116_sample_start_ o<-& (WPIPE_AFB_NIC_RESPONSE_2116_update_completed_ 0)
          // start: Forward dependencies from resp to transition WPIPE_AFB_NIC_RESPONSE_2116_sample_start_
          WPIPE_AFB_NIC_RESPONSE_2116_sample_start_ <-& (call_stmt_2091_update_completed_)
          // done: Forward dependencies from resp to transition WPIPE_AFB_NIC_RESPONSE_2116_sample_start_
          // RAW reenables for resp
          call_stmt_2091_update_start_ o<-& (WPIPE_AFB_NIC_RESPONSE_2116_sample_completed_ 0)
          // end:  			AFB_NIC_RESPONSE := resp $buffering 1// bits of buffering = 33. 
          $T [loop_body_delay_to_condition_start] $delay
          loop_body_start &-> (loop_body_delay_to_condition_start)
          loop_body_delay_to_condition_start &-> (condition_evaluated)
          condition_evaluated &-> ($null)
          // load-store dependencies..
          // memory-space  memory_space_0
          //  call_stmt_2091 store
          //  call_stmt_2109 store
          $T [call_stmt_2091_call_stmt_2109_delay] $delay
          // call_stmt_2091(store) -> call_stmt_2109(store)
          call_stmt_2109_sample_start_ <-& (call_stmt_2091_call_stmt_2109_delay)
          call_stmt_2091_call_stmt_2109_delay <-& (call_stmt_2091_update_completed_)
          // reenable across ring for memory space memory_space_0
          $T[ring_reenable_memory_space_0] 
          ring_reenable_memory_space_0 <-& (call_stmt_2109_update_completed_)
          call_stmt_2091_sample_start_ o<-& (ring_reenable_memory_space_0 1)
          // pipe read/write dependencies for pipe AFB_NIC_REQUEST
          // read-dependencies for pipe AFB_NIC_REQUEST
          // write-dependencies for pipe AFB_NIC_REQUEST
          // signal write dependencies for AFB_NIC_REQUEST
          // pipe read/write dependencies for pipe AFB_NIC_RESPONSE
          // read-dependencies for pipe AFB_NIC_RESPONSE
          // write-dependencies for pipe AFB_NIC_RESPONSE
          // signal write dependencies for AFB_NIC_RESPONSE
          // pipe read/write dependencies for pipe MAC_ENABLE
          // read-dependencies for pipe MAC_ENABLE
          // write-dependencies for pipe MAC_ENABLE
          // signal write dependencies for MAC_ENABLE
          // pipe read/write dependencies for pipe NIC_INTR
          // read-dependencies for pipe NIC_INTR
          // write-dependencies for pipe NIC_INTR
          // signal write dependencies for NIC_INTR
          // pipe read/write dependencies for pipe NIC_INTR_ENABLE
          // read-dependencies for pipe NIC_INTR_ENABLE
          // write-dependencies for pipe NIC_INTR_ENABLE
          // signal write dependencies for NIC_INTR_ENABLE
          // pipe read/write dependencies for pipe NIC_INTR_INTERNAL
          // read-dependencies for pipe NIC_INTR_INTERNAL
          // write-dependencies for pipe NIC_INTR_INTERNAL
          // signal write dependencies for NIC_INTR_INTERNAL
          // pipe read/write dependencies for pipe S_NUMBER_OF_SERVERS
          // read-dependencies for pipe S_NUMBER_OF_SERVERS
          // write-dependencies for pipe S_NUMBER_OF_SERVERS
          // signal write dependencies for S_NUMBER_OF_SERVERS
          // pipe read/write dependencies for pipe S_CONTROL_REGISTER
          // read-dependencies for pipe S_CONTROL_REGISTER
          // write-dependencies for pipe S_CONTROL_REGISTER
          // signal write dependencies for S_CONTROL_REGISTER
        }
        ( first_time_through_loop_body  back_edge_to_loop_body) 
        ( condition_evaluated )
        ;; [loop_exit] 
        {
          $T [ack] 
        }
        ;; [loop_taken] 
        {
          $T [ack] 
        }
        do_while_stmt_2049__entry__ <-| ($entry)
        loop_body_done <-| ( do_while_stmt_2049_loop_body ) 
        condition_done |-> (loop_exit loop_taken)
        do_while_stmt_2049__exit__ |-> ($exit)
        $bind condition_done <= do_while_stmt_2049_loop_body : condition_evaluated
        $bind do_while_stmt_2049__entry__  => do_while_stmt_2049_loop_body : first_time_through_loop_body 
        $bind loop_back  => do_while_stmt_2049_loop_body : back_edge_to_loop_body 
        $terminate (loop_exit loop_taken loop_body_done) (loop_back do_while_stmt_2049__exit__)
      }
      do_while_stmt_2049__entry__ |-> (do_while_stmt_2049)
      do_while_stmt_2049__exit__ <-| (do_while_stmt_2049)
      do_while_stmt_2049__entry__ <-| (branch_block_stmt_2048__entry__)
      do_while_stmt_2049__exit__ |-> (branch_block_stmt_2048__exit__)
    }
    ::[assign_stmt_2124] 
    {
      // start:  	ignq := QUEUE_MONITOR_SIGNAL $buffering 1 $keep // bits of buffering = 32. 
      //  file .Aa/nic.linked.opt.aa, line 767
      $T[assign_stmt_2124_sample_start_] 
      $T[assign_stmt_2124_sample_completed_] 
      $T[assign_stmt_2124_update_start_] 
      $T[assign_stmt_2124_update_completed_] 
      // Source expression
      // QUEUE_MONITOR_SIGNAL
      // Target expression
      // (as target) ignq
      // both source and target are implicit: use interlock 
      // Interlock 
      ;;[assign_stmt_2124_Sample] 
      {
        $T [req] $T [ack] // interlock-sample.
      }
      ;;[assign_stmt_2124_Update] 
      {
        $T [req] $T [ack] // interlock-update.
      }
      assign_stmt_2124_sample_start_ &-> (assign_stmt_2124_Sample)
      assign_stmt_2124_sample_completed_ <-& (assign_stmt_2124_Sample)
      assign_stmt_2124_sample_completed_ &-> ($null)
      assign_stmt_2124_update_start_ &-> (assign_stmt_2124_Update)
      assign_stmt_2124_update_completed_ <-& (assign_stmt_2124_Update)
      // start: Forward dependencies from QUEUE_MONITOR_SIGNAL to transition assign_stmt_2124_sample_start_
      // special case... expr is signal read, which does not involve control..
      // start: WAR dependencies for ignq
      // done: WAR dependencies for ignq
      // end:  	ignq := QUEUE_MONITOR_SIGNAL $buffering 1 $keep // bits of buffering = 32. 
      // load-store dependencies..
    }
  }
  // end control-path
  $DP 
  {
    // begin data-path 
    // constant-object-declarations for block %controlDaemon%loop%
    //  file .Aa/nic.linked.opt.aa, line 747
    // constant-object-declarations for block %controlDaemon%loop
    //  file .Aa/nic.linked.opt.aa, line 743
    // constant-object-declarations for block %controlDaemon
    //  file .Aa/nic.linked.opt.aa, line 729
    // 1 
    $constant $W[konst_2021_wire_constant] : $int<1> := _b1// 1
    // 	$call accessRegister (0  0  0  0  ) (ign ) 
    //  file .Aa/nic.linked.opt.aa, line 735
    // 0 
    $constant $W[konst_2023_wire_constant] : $int<1> := _b0// 0
    // 0 
    $constant $W[konst_2024_wire_constant] : $int<4> := _b0000// 0
    // 0 
    $constant $W[konst_2025_wire_constant] : $int<8> := _b00000000// 0
    // 0 
    $constant $W[konst_2026_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // 0 
    $constant $W[konst_2030_wire_constant] : $int<1> := _b0// 0
    // 0 
    $constant $W[konst_2033_wire_constant] : $int<1> := _b0// 0
    // 0 
    $constant $W[konst_2036_wire_constant] : $int<1> := _b0// 0
    // 0 
    $constant $W[konst_2039_wire_constant] : $int<1> := _b0// 0
    // 0 
    $constant $W[konst_2042_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // 0 
    $constant $W[konst_2045_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // constant-declarations for block %controlDaemon%loop
    //  file .Aa/nic.linked.opt.aa, line 743
    // do-while statement  
    //  file .Aa/nic.linked.opt.aa, line 745
    // 1 
    $constant $W[konst_2120_wire_constant] : $int<1> := _b1// 1
    // constant-declarations for block %controlDaemon%loop%
    //  file .Aa/nic.linked.opt.aa, line 747
    // 			$call accessRegister (rwbar bmask index wdata ) (rdata ) 
    //  file .Aa/nic.linked.opt.aa, line 758
    // 0 
    $constant $W[konst_2097_wire_constant] : $int<8> := _b00000000// 0
    // 0 
    $constant $W[konst_2104_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // 			$guard (set_globals) $call setGlobalSignals () () 
    //  file .Aa/nic.linked.opt.aa, line 762
    // ($bitcast ($uint<1>) _b0  )
    $constant $W[type_cast_2112_wire_constant] : $int<1> := _b0// 0
    // 	memory_access_lock := 1  $buffering 1// bits of buffering = 1. 
    //  file .Aa/nic.linked.opt.aa, line 734
    // memory_access_lock
    // 	$call accessRegister (0  0  0  0  ) (ign ) 
    //  file .Aa/nic.linked.opt.aa, line 735
    // ign
    $W[ign_2028] : $int<32>
    // 	MAC_ENABLE := 0  $buffering 1// bits of buffering = 1. 
    //  file .Aa/nic.linked.opt.aa, line 736
    // MAC_ENABLE
    // 	NIC_INTR := 0  $buffering 1// bits of buffering = 1. 
    //  file .Aa/nic.linked.opt.aa, line 737
    // NIC_INTR
    // 	NIC_INTR_ENABLE := 0  $buffering 1// bits of buffering = 1. 
    //  file .Aa/nic.linked.opt.aa, line 738
    // NIC_INTR_ENABLE
    // 	NIC_INTR_INTERNAL := 0  $buffering 1// bits of buffering = 1. 
    //  file .Aa/nic.linked.opt.aa, line 739
    // NIC_INTR_INTERNAL
    // 	S_CONTROL_REGISTER := 0  $buffering 1// bits of buffering = 32. 
    //  file .Aa/nic.linked.opt.aa, line 740
    // S_CONTROL_REGISTER
    // 	S_NUMBER_OF_SERVERS := 0  $buffering 1// bits of buffering = 32. 
    //  file .Aa/nic.linked.opt.aa, line 741
    // S_NUMBER_OF_SERVERS
    // block %controlDaemon%loop
    //  file .Aa/nic.linked.opt.aa, line 743
    // do-while statement  
    //  file .Aa/nic.linked.opt.aa, line 745
    // 			req := AFB_NIC_REQUEST $buffering 1// bits of buffering = 74. 
    //  file .Aa/nic.linked.opt.aa, line 749
    // req
    $W[req_2053] : $int<74>
    // 			$volatile lock := ( $slice req 73 73 )  $buffering 1
    //  file .Aa/nic.linked.opt.aa, line 751
    // lock
    $W[lock_2059] : $int<1>
    // 			$volatile rwbar := ( $slice req 72 72 )  $buffering 1
    //  file .Aa/nic.linked.opt.aa, line 752
    // rwbar
    $W[rwbar_2063] : $int<1>
    // 			$volatile bmask := ( $slice req 71 68 )  $buffering 1
    //  file .Aa/nic.linked.opt.aa, line 753
    // bmask
    $W[bmask_2067] : $int<4>
    // 			$volatile addr := ( $slice req 67 32 )  $buffering 1
    //  file .Aa/nic.linked.opt.aa, line 754
    // addr
    $W[addr_2071] : $int<36>
    // 			$volatile wdata := ( $slice req 31 0 )  $buffering 1
    //  file .Aa/nic.linked.opt.aa, line 755
    // wdata
    $W[wdata_2075] : $int<32>
    // 			$volatile index := ( $slice addr 9 2 )  $buffering 1
    //  file .Aa/nic.linked.opt.aa, line 757
    // index
    $W[index_2085] : $int<8>
    // 			$call accessRegister (rwbar bmask index wdata ) (rdata ) 
    //  file .Aa/nic.linked.opt.aa, line 758
    // rdata
    $W[rdata_2091] : $int<32>
    // 			$volatile update_control_register := (( ~ rwbar ) & (index == 0 )) $buffering 1
    //  file .Aa/nic.linked.opt.aa, line 760
    // ( ~ rwbar )
    $intermediate $W[NOT_u1_u1_2095_wire] : $int<1>
    // (index == 0 )
    $intermediate $W[EQ_u8_u1_2098_wire] : $int<1>
    // update_control_register
    $W[update_control_register_2100] : $int<1>
    // 			$volatile set_globals := (update_control_register & (wdata [] 0 )) $buffering 1
    //  file .Aa/nic.linked.opt.aa, line 761
    // (wdata [] 0 )
    $intermediate $W[BITSEL_u32_u1_2105_wire] : $int<1>
    // set_globals
    $W[set_globals_2107] : $int<1>
    // 			$guard (set_globals) $call setGlobalSignals () () 
    //  file .Aa/nic.linked.opt.aa, line 762
    // 			$volatile resp := (($bitcast ($uint<1>) _b0  ) && rdata) $buffering 1
    //  file .Aa/nic.linked.opt.aa, line 763
    // resp
    $W[resp_2115] : $int<33>
    // 			AFB_NIC_RESPONSE := resp $buffering 1// bits of buffering = 33. 
    //  file .Aa/nic.linked.opt.aa, line 764
    // AFB_NIC_RESPONSE
    // 	ignq := QUEUE_MONITOR_SIGNAL $buffering 1 $keep // bits of buffering = 32. 
    //  file .Aa/nic.linked.opt.aa, line 767
    // QUEUE_MONITOR_SIGNAL
    $W[RPIPE_QUEUE_MONITOR_SIGNAL_2123_wire] : $int<32>
    // ignq
    $W[ignq_2124] : $int<32>
    // 	memory_access_lock := 1  $buffering 1// bits of buffering = 1. 
    //  file .Aa/nic.linked.opt.aa, line 734
    // memory_access_lock
    $ioport $out [WPIPE_memory_access_lock_2020_inst]  (konst_2021_wire_constant) (memory_access_lock) 
    // 	$call accessRegister (0  0  0  0  ) (ign ) 
    //  file .Aa/nic.linked.opt.aa, line 735
    $call [call_stmt_2028_call] $module accessRegister(konst_2023_wire_constant konst_2024_wire_constant konst_2025_wire_constant konst_2026_wire_constant) (ign_2028)  
    $delay call_stmt_2028_call 4
    $buffering  $in call_stmt_2028_call konst_2023_wire_constant 1
    $buffering  $in call_stmt_2028_call konst_2024_wire_constant 1
    $buffering  $in call_stmt_2028_call konst_2025_wire_constant 1
    $buffering  $in call_stmt_2028_call konst_2026_wire_constant 1
    $buffering  $out call_stmt_2028_call ign_2028 1
    // 	MAC_ENABLE := 0  $buffering 1// bits of buffering = 1. 
    //  file .Aa/nic.linked.opt.aa, line 736
    // MAC_ENABLE
    $ioport $out [WPIPE_MAC_ENABLE_2029_inst]  (konst_2030_wire_constant) (MAC_ENABLE) 
    // 	NIC_INTR := 0  $buffering 1// bits of buffering = 1. 
    //  file .Aa/nic.linked.opt.aa, line 737
    // NIC_INTR
    $ioport $out [WPIPE_NIC_INTR_2032_inst]  (konst_2033_wire_constant) (NIC_INTR) 
    // 	NIC_INTR_ENABLE := 0  $buffering 1// bits of buffering = 1. 
    //  file .Aa/nic.linked.opt.aa, line 738
    // NIC_INTR_ENABLE
    $ioport $out [WPIPE_NIC_INTR_ENABLE_2035_inst]  (konst_2036_wire_constant) (NIC_INTR_ENABLE) 
    // 	NIC_INTR_INTERNAL := 0  $buffering 1// bits of buffering = 1. 
    //  file .Aa/nic.linked.opt.aa, line 739
    // NIC_INTR_INTERNAL
    $ioport $out [WPIPE_NIC_INTR_INTERNAL_2038_inst]  (konst_2039_wire_constant) (NIC_INTR_INTERNAL) 
    // 	S_CONTROL_REGISTER := 0  $buffering 1// bits of buffering = 32. 
    //  file .Aa/nic.linked.opt.aa, line 740
    // S_CONTROL_REGISTER
    $ioport $out [WPIPE_S_CONTROL_REGISTER_2041_inst]  (konst_2042_wire_constant) (S_CONTROL_REGISTER) 
    // 	S_NUMBER_OF_SERVERS := 0  $buffering 1// bits of buffering = 32. 
    //  file .Aa/nic.linked.opt.aa, line 741
    // S_NUMBER_OF_SERVERS
    $ioport $out [WPIPE_S_NUMBER_OF_SERVERS_2044_inst]  (konst_2045_wire_constant) (S_NUMBER_OF_SERVERS) 
    // datapath-instances for block %controlDaemon%loop
    //  file .Aa/nic.linked.opt.aa, line 743
    // datapath-instances for do-while  
    //  file .Aa/nic.linked.opt.aa, line 745
    ==0? [do_while_stmt_2049_branch] (konst_2120_wire_constant)
    $flowthrough
    // 			req := AFB_NIC_REQUEST $buffering 1// bits of buffering = 74. 
    //  file .Aa/nic.linked.opt.aa, line 749
    // AFB_NIC_REQUEST
    $ioport $in [RPIPE_AFB_NIC_REQUEST_2052_inst] (AFB_NIC_REQUEST) (req_2053)  $fullrate 
    $buffering $out RPIPE_AFB_NIC_REQUEST_2052_inst req_2053 1
    // 			$volatile lock := ( $slice req 73 73 )  $buffering 1
    //  file .Aa/nic.linked.opt.aa, line 751
    // ( $slice req 73 73 ) 
    [:] [slice_2058_inst] (req_2053 73 73) (lock_2059)  $flowthrough
    $delay slice_2058_inst 0
    // 			$volatile rwbar := ( $slice req 72 72 )  $buffering 1
    //  file .Aa/nic.linked.opt.aa, line 752
    // ( $slice req 72 72 ) 
    [:] [slice_2062_inst] (req_2053 72 72) (rwbar_2063)  $flowthrough
    $delay slice_2062_inst 0
    // 			$volatile bmask := ( $slice req 71 68 )  $buffering 1
    //  file .Aa/nic.linked.opt.aa, line 753
    // ( $slice req 71 68 ) 
    [:] [slice_2066_inst] (req_2053 71 68) (bmask_2067)  $flowthrough
    $delay slice_2066_inst 0
    // 			$volatile addr := ( $slice req 67 32 )  $buffering 1
    //  file .Aa/nic.linked.opt.aa, line 754
    // ( $slice req 67 32 ) 
    [:] [slice_2070_inst] (req_2053 67 32) (addr_2071)  $flowthrough
    $delay slice_2070_inst 0
    // 			$volatile wdata := ( $slice req 31 0 )  $buffering 1
    //  file .Aa/nic.linked.opt.aa, line 755
    // ( $slice req 31 0 ) 
    [:] [slice_2074_inst] (req_2053 31 0) (wdata_2075)  $flowthrough
    $delay slice_2074_inst 0
    // 			$volatile index := ( $slice addr 9 2 )  $buffering 1
    //  file .Aa/nic.linked.opt.aa, line 757
    // ( $slice addr 9 2 ) 
    [:] [slice_2084_inst] (addr_2071 9 2) (index_2085)  $flowthrough
    $delay slice_2084_inst 0
    // 			$call accessRegister (rwbar bmask index wdata ) (rdata ) 
    //  file .Aa/nic.linked.opt.aa, line 758
    $call [call_stmt_2091_call] $module accessRegister(rwbar_2063 bmask_2067 index_2085 wdata_2075) (rdata_2091)   $fullrate
    $delay call_stmt_2091_call 4
    $buffering  $in call_stmt_2091_call rwbar_2063 1
    $buffering  $in call_stmt_2091_call bmask_2067 1
    $buffering  $in call_stmt_2091_call index_2085 1
    $buffering  $in call_stmt_2091_call wdata_2075 1
    $buffering  $out call_stmt_2091_call rdata_2091 1
    // 			$volatile update_control_register := (( ~ rwbar ) & (index == 0 )) $buffering 1
    //  file .Aa/nic.linked.opt.aa, line 760
    // ( ~ rwbar )
    ~ [NOT_u1_u1_2095_inst] (rwbar_2063) (NOT_u1_u1_2095_wire)   $flowthrough
    $delay NOT_u1_u1_2095_inst 0
    // (index == 0 )
    ==[EQ_u8_u1_2098_inst] (index_2085 konst_2097_wire_constant) (EQ_u8_u1_2098_wire)   $flowthrough 
    $delay EQ_u8_u1_2098_inst 0
    // (( ~ rwbar ) & (index == 0 ))
    &[AND_u1_u1_2099_inst] (NOT_u1_u1_2095_wire EQ_u8_u1_2098_wire) (update_control_register_2100)   $flowthrough 
    $delay AND_u1_u1_2099_inst 0
    // 			$volatile set_globals := (update_control_register & (wdata [] 0 )) $buffering 1
    //  file .Aa/nic.linked.opt.aa, line 761
    // (wdata [] 0 )
    [][BITSEL_u32_u1_2105_inst] (wdata_2075 konst_2104_wire_constant) (BITSEL_u32_u1_2105_wire)   $flowthrough 
    $delay BITSEL_u32_u1_2105_inst 0
    // (update_control_register & (wdata [] 0 ))
    &[AND_u1_u1_2106_inst] (update_control_register_2100 BITSEL_u32_u1_2105_wire) (set_globals_2107)   $flowthrough 
    $delay AND_u1_u1_2106_inst 0
    // 			$guard (set_globals) $call setGlobalSignals () () 
    //  file .Aa/nic.linked.opt.aa, line 762
    $call [call_stmt_2109_call] $module setGlobalSignals() () $guard ( set_globals_2107 )   $fullrate
    $delay call_stmt_2109_call 4
    // 			$volatile resp := (($bitcast ($uint<1>) _b0  ) && rdata) $buffering 1
    //  file .Aa/nic.linked.opt.aa, line 763
    // (($bitcast ($uint<1>) _b0  ) && rdata)
    &&[CONCAT_u1_u33_2114_inst] (type_cast_2112_wire_constant rdata_2091) (resp_2115)   $flowthrough 
    $delay CONCAT_u1_u33_2114_inst 0
    // 			AFB_NIC_RESPONSE := resp $buffering 1// bits of buffering = 33. 
    //  file .Aa/nic.linked.opt.aa, line 764
    // AFB_NIC_RESPONSE
    $ioport $out [WPIPE_AFB_NIC_RESPONSE_2116_inst]  (resp_2115) (AFB_NIC_RESPONSE)  $fullrate 
    // 	ignq := QUEUE_MONITOR_SIGNAL $buffering 1 $keep // bits of buffering = 32. 
    //  file .Aa/nic.linked.opt.aa, line 767
    # := [W_ignq_2122_inst] (RPIPE_QUEUE_MONITOR_SIGNAL_2123_wire) (ignq_2124)     
    // QUEUE_MONITOR_SIGNAL
    $ioport $in [RPIPE_QUEUE_MONITOR_SIGNAL_2123_inst] (QUEUE_MONITOR_SIGNAL) (RPIPE_QUEUE_MONITOR_SIGNAL_2123_wire) 
    $buffering $out RPIPE_QUEUE_MONITOR_SIGNAL_2123_inst RPIPE_QUEUE_MONITOR_SIGNAL_2123_wire 1
  }
  // end data-path
  // 	memory_access_lock := 1  $buffering 1// bits of buffering = 1. 
  //  file .Aa/nic.linked.opt.aa, line 734
  // memory_access_lock
  WPIPE_memory_access_lock_2020_inst <=> (assign_stmt_2022_to_assign_stmt_2046/WPIPE_memory_access_lock_2020_Sample/req assign_stmt_2022_to_assign_stmt_2046/WPIPE_memory_access_lock_2020_Update/req) (assign_stmt_2022_to_assign_stmt_2046/WPIPE_memory_access_lock_2020_Sample/ack assign_stmt_2022_to_assign_stmt_2046/WPIPE_memory_access_lock_2020_Update/ack)
  // 	$call accessRegister (0  0  0  0  ) (ign ) 
  //  file .Aa/nic.linked.opt.aa, line 735
  call_stmt_2028_call <=> (assign_stmt_2022_to_assign_stmt_2046/call_stmt_2028_Sample/crr assign_stmt_2022_to_assign_stmt_2046/call_stmt_2028_Update/ccr) (assign_stmt_2022_to_assign_stmt_2046/call_stmt_2028_Sample/cra assign_stmt_2022_to_assign_stmt_2046/call_stmt_2028_Update/cca)
  // 	MAC_ENABLE := 0  $buffering 1// bits of buffering = 1. 
  //  file .Aa/nic.linked.opt.aa, line 736
  // MAC_ENABLE
  WPIPE_MAC_ENABLE_2029_inst <=> (assign_stmt_2022_to_assign_stmt_2046/WPIPE_MAC_ENABLE_2029_Sample/req assign_stmt_2022_to_assign_stmt_2046/WPIPE_MAC_ENABLE_2029_Update/req) (assign_stmt_2022_to_assign_stmt_2046/WPIPE_MAC_ENABLE_2029_Sample/ack assign_stmt_2022_to_assign_stmt_2046/WPIPE_MAC_ENABLE_2029_Update/ack)
  // 	NIC_INTR := 0  $buffering 1// bits of buffering = 1. 
  //  file .Aa/nic.linked.opt.aa, line 737
  // NIC_INTR
  WPIPE_NIC_INTR_2032_inst <=> (assign_stmt_2022_to_assign_stmt_2046/WPIPE_NIC_INTR_2032_Sample/req assign_stmt_2022_to_assign_stmt_2046/WPIPE_NIC_INTR_2032_Update/req) (assign_stmt_2022_to_assign_stmt_2046/WPIPE_NIC_INTR_2032_Sample/ack assign_stmt_2022_to_assign_stmt_2046/WPIPE_NIC_INTR_2032_Update/ack)
  // 	NIC_INTR_ENABLE := 0  $buffering 1// bits of buffering = 1. 
  //  file .Aa/nic.linked.opt.aa, line 738
  // NIC_INTR_ENABLE
  WPIPE_NIC_INTR_ENABLE_2035_inst <=> (assign_stmt_2022_to_assign_stmt_2046/WPIPE_NIC_INTR_ENABLE_2035_Sample/req assign_stmt_2022_to_assign_stmt_2046/WPIPE_NIC_INTR_ENABLE_2035_Update/req) (assign_stmt_2022_to_assign_stmt_2046/WPIPE_NIC_INTR_ENABLE_2035_Sample/ack assign_stmt_2022_to_assign_stmt_2046/WPIPE_NIC_INTR_ENABLE_2035_Update/ack)
  // 	NIC_INTR_INTERNAL := 0  $buffering 1// bits of buffering = 1. 
  //  file .Aa/nic.linked.opt.aa, line 739
  // NIC_INTR_INTERNAL
  WPIPE_NIC_INTR_INTERNAL_2038_inst <=> (assign_stmt_2022_to_assign_stmt_2046/WPIPE_NIC_INTR_INTERNAL_2038_Sample/req assign_stmt_2022_to_assign_stmt_2046/WPIPE_NIC_INTR_INTERNAL_2038_Update/req) (assign_stmt_2022_to_assign_stmt_2046/WPIPE_NIC_INTR_INTERNAL_2038_Sample/ack assign_stmt_2022_to_assign_stmt_2046/WPIPE_NIC_INTR_INTERNAL_2038_Update/ack)
  // 	S_CONTROL_REGISTER := 0  $buffering 1// bits of buffering = 32. 
  //  file .Aa/nic.linked.opt.aa, line 740
  // S_CONTROL_REGISTER
  WPIPE_S_CONTROL_REGISTER_2041_inst <=> (assign_stmt_2022_to_assign_stmt_2046/WPIPE_S_CONTROL_REGISTER_2041_Sample/req assign_stmt_2022_to_assign_stmt_2046/WPIPE_S_CONTROL_REGISTER_2041_Update/req) (assign_stmt_2022_to_assign_stmt_2046/WPIPE_S_CONTROL_REGISTER_2041_Sample/ack assign_stmt_2022_to_assign_stmt_2046/WPIPE_S_CONTROL_REGISTER_2041_Update/ack)
  // 	S_NUMBER_OF_SERVERS := 0  $buffering 1// bits of buffering = 32. 
  //  file .Aa/nic.linked.opt.aa, line 741
  // S_NUMBER_OF_SERVERS
  WPIPE_S_NUMBER_OF_SERVERS_2044_inst <=> (assign_stmt_2022_to_assign_stmt_2046/WPIPE_S_NUMBER_OF_SERVERS_2044_Sample/req assign_stmt_2022_to_assign_stmt_2046/WPIPE_S_NUMBER_OF_SERVERS_2044_Update/req) (assign_stmt_2022_to_assign_stmt_2046/WPIPE_S_NUMBER_OF_SERVERS_2044_Sample/ack assign_stmt_2022_to_assign_stmt_2046/WPIPE_S_NUMBER_OF_SERVERS_2044_Update/ack)
  // CP-DP links for do-while  do_while_stmt_2049
  //  file .Aa/nic.linked.opt.aa, line 745
  // 			req := AFB_NIC_REQUEST $buffering 1// bits of buffering = 74. 
  //  file .Aa/nic.linked.opt.aa, line 749
  // AFB_NIC_REQUEST
  RPIPE_AFB_NIC_REQUEST_2052_inst <=> (branch_block_stmt_2048/do_while_stmt_2049/do_while_stmt_2049_loop_body/RPIPE_AFB_NIC_REQUEST_2052_Sample/rr branch_block_stmt_2048/do_while_stmt_2049/do_while_stmt_2049_loop_body/RPIPE_AFB_NIC_REQUEST_2052_Update/cr) (branch_block_stmt_2048/do_while_stmt_2049/do_while_stmt_2049_loop_body/RPIPE_AFB_NIC_REQUEST_2052_Sample/ra branch_block_stmt_2048/do_while_stmt_2049/do_while_stmt_2049_loop_body/RPIPE_AFB_NIC_REQUEST_2052_Update/ca)
  // 			$volatile lock := ( $slice req 73 73 )  $buffering 1
  //  file .Aa/nic.linked.opt.aa, line 751
  // req
  // 			$volatile rwbar := ( $slice req 72 72 )  $buffering 1
  //  file .Aa/nic.linked.opt.aa, line 752
  // req
  // 			$volatile bmask := ( $slice req 71 68 )  $buffering 1
  //  file .Aa/nic.linked.opt.aa, line 753
  // req
  // 			$volatile addr := ( $slice req 67 32 )  $buffering 1
  //  file .Aa/nic.linked.opt.aa, line 754
  // req
  // 			$volatile wdata := ( $slice req 31 0 )  $buffering 1
  //  file .Aa/nic.linked.opt.aa, line 755
  // req
  // 			$volatile index := ( $slice addr 9 2 )  $buffering 1
  //  file .Aa/nic.linked.opt.aa, line 757
  // addr
  // 			$call accessRegister (rwbar bmask index wdata ) (rdata ) 
  //  file .Aa/nic.linked.opt.aa, line 758
  // rwbar
  // bmask
  // index
  // wdata
  call_stmt_2091_call <=> (branch_block_stmt_2048/do_while_stmt_2049/do_while_stmt_2049_loop_body/call_stmt_2091_Sample/crr branch_block_stmt_2048/do_while_stmt_2049/do_while_stmt_2049_loop_body/call_stmt_2091_Update/ccr) (branch_block_stmt_2048/do_while_stmt_2049/do_while_stmt_2049_loop_body/call_stmt_2091_Sample/cra branch_block_stmt_2048/do_while_stmt_2049/do_while_stmt_2049_loop_body/call_stmt_2091_Update/cca)
  // 			$volatile update_control_register := (( ~ rwbar ) & (index == 0 )) $buffering 1
  //  file .Aa/nic.linked.opt.aa, line 760
  // (( ~ rwbar ) & (index == 0 ))
  // rwbar
  // (index == 0 )
  // index
  // 			$volatile set_globals := (update_control_register & (wdata [] 0 )) $buffering 1
  //  file .Aa/nic.linked.opt.aa, line 761
  // (update_control_register & (wdata [] 0 ))
  // update_control_register
  // (wdata [] 0 )
  // wdata
  // 			$guard (set_globals) $call setGlobalSignals () () 
  //  file .Aa/nic.linked.opt.aa, line 762
  call_stmt_2109_call <=> (branch_block_stmt_2048/do_while_stmt_2049/do_while_stmt_2049_loop_body/call_stmt_2109_Sample/crr branch_block_stmt_2048/do_while_stmt_2049/do_while_stmt_2049_loop_body/call_stmt_2109_Update/ccr) (branch_block_stmt_2048/do_while_stmt_2049/do_while_stmt_2049_loop_body/call_stmt_2109_Sample/cra branch_block_stmt_2048/do_while_stmt_2049/do_while_stmt_2049_loop_body/call_stmt_2109_Update/cca)
  // 			$volatile resp := (($bitcast ($uint<1>) _b0  ) && rdata) $buffering 1
  //  file .Aa/nic.linked.opt.aa, line 763
  // (($bitcast ($uint<1>) _b0  ) && rdata)
  // rdata
  // 			AFB_NIC_RESPONSE := resp $buffering 1// bits of buffering = 33. 
  //  file .Aa/nic.linked.opt.aa, line 764
  // resp
  // AFB_NIC_RESPONSE
  WPIPE_AFB_NIC_RESPONSE_2116_inst <=> (branch_block_stmt_2048/do_while_stmt_2049/do_while_stmt_2049_loop_body/WPIPE_AFB_NIC_RESPONSE_2116_Sample/req branch_block_stmt_2048/do_while_stmt_2049/do_while_stmt_2049_loop_body/WPIPE_AFB_NIC_RESPONSE_2116_Update/req) (branch_block_stmt_2048/do_while_stmt_2049/do_while_stmt_2049_loop_body/WPIPE_AFB_NIC_RESPONSE_2116_Sample/ack branch_block_stmt_2048/do_while_stmt_2049/do_while_stmt_2049_loop_body/WPIPE_AFB_NIC_RESPONSE_2116_Update/ack)
  do_while_stmt_2049_branch <=> (branch_block_stmt_2048/do_while_stmt_2049/do_while_stmt_2049_loop_body/condition_evaluated) (branch_block_stmt_2048/do_while_stmt_2049/loop_exit/ack branch_block_stmt_2048/do_while_stmt_2049/loop_taken/ack)
  // 	ignq := QUEUE_MONITOR_SIGNAL $buffering 1 $keep // bits of buffering = 32. 
  //  file .Aa/nic.linked.opt.aa, line 767
  // QUEUE_MONITOR_SIGNAL
  W_ignq_2122_inst <=> (assign_stmt_2124/assign_stmt_2124_Sample/req assign_stmt_2124/assign_stmt_2124_Update/req) (assign_stmt_2124/assign_stmt_2124_Sample/ack assign_stmt_2124/assign_stmt_2124_Update/ack)
}
$pipeline $depth 7 $buffering 1 $module [getTxPacketPointerFromServer] 
{
  $in tag:$int<8>
  // can point into 
  server_index:$int<8>
  // can point into  foreign( $void )
  $out pkt_pointer:$int<64>
  // can point into  foreign( $void )
  status:$int<1>
  // can point into  foreign( $void )
  // pipe-declarations for block %getTxPacketPointerFromServer
  //  file .Aa/nic.linked.opt.aa, line 769
  // there are no memory spaces local to this module.
  $CP 
  {
    // begin control-path 
    // pipelined module
    :|:[call_stmt_2136] 
    {
      $T [tag_update_enable] 
      $scc_arc tag_update_enable => $entry
      $T [tag_update_enable_out] 
      tag_update_enable &-> (tag_update_enable_out)
      $null &-> (tag_update_enable)
      $T [server_index_update_enable] 
      $scc_arc server_index_update_enable => $entry
      $T [server_index_update_enable_out] 
      server_index_update_enable &-> (server_index_update_enable_out)
      $null &-> (server_index_update_enable)
      $T [pkt_pointer_update_enable] 
      $T [pkt_pointer_update_enable_in] 
      $null &-> (pkt_pointer_update_enable)
      $null <-& (pkt_pointer_update_enable_in) 
      $null &-> (pkt_pointer_update_enable)
      $scc_arc $exit => pkt_pointer_update_enable
      pkt_pointer_update_enable <-& (pkt_pointer_update_enable_in) 
      $T [status_update_enable] 
      $T [status_update_enable_in] 
      $null &-> (status_update_enable)
      $null <-& (status_update_enable_in) 
      $null &-> (status_update_enable)
      $scc_arc $exit => status_update_enable
      status_update_enable <-& (status_update_enable_in) 
      // start: 	$call popFromQueue (tag TXQUEUE server_index ) (pkt_pointer status ) 
      //  file .Aa/nic.linked.opt.aa, line 774
      $T[call_stmt_2136_sample_start_] 
      $T[call_stmt_2136_sample_completed_] 
      $T[call_stmt_2136_update_start_] 
      $T[call_stmt_2136_update_completed_] 
      // Call input argument 0
      // tag
      // Call input argument 1
      // Call input argument 2
      // server_index
      // start: Forward dependencies from tag to transition call_stmt_2136_sample_start_
      call_stmt_2136_sample_start_ <-& ($entry)
      // done: Forward dependencies from tag to transition call_stmt_2136_sample_start_
      // RAW reenables for tag
      tag_update_enable o<-& (call_stmt_2136_sample_completed_ 0)
      // start: Forward dependencies from server_index to transition call_stmt_2136_sample_start_
      call_stmt_2136_sample_start_ <-& ($entry)
      // done: Forward dependencies from server_index to transition call_stmt_2136_sample_start_
      // RAW reenables for server_index
      server_index_update_enable o<-& (call_stmt_2136_sample_completed_ 0)
      ;;[call_stmt_2136_Sample] 
      {
        $T [crr] $T [cra] 
      }
      ;;[call_stmt_2136_Update] 
      {
        $T [ccr] $T [cca] 
      }
      call_stmt_2136_sample_start_ &-> (call_stmt_2136_Sample)
      call_stmt_2136_sample_completed_ <-& (call_stmt_2136_Sample)
      call_stmt_2136_sample_completed_ &-> ($null)
      call_stmt_2136_update_start_ &-> (call_stmt_2136_Update)
      call_stmt_2136_update_completed_ <-& (call_stmt_2136_Update)
      // Call output argument 0
      // (as target) pkt_pointer
      // pkt_pointer
      // write to interface object
      // pkt_pointer
      // write to interface object
      call_stmt_2136_update_start_ <-& (pkt_pointer_update_enable)
      // Call output argument 1
      // (as target) status
      // status
      // write to interface object
      // status
      // write to interface object
      call_stmt_2136_update_start_ <-& (status_update_enable)
      // self-release: 
      call_stmt_2136_sample_start_ o<-& (call_stmt_2136_sample_completed_ 1)
      $null &-> (call_stmt_2136_update_start_)
      call_stmt_2136_update_start_ o<-& (call_stmt_2136_update_completed_ 0)
      // start: WAR dependencies for pkt_pointer
      // done: WAR dependencies for pkt_pointer
      // start: WAR dependencies for status
      // done: WAR dependencies for status
      // end: 	$call popFromQueue (tag TXQUEUE server_index ) (pkt_pointer status ) 
      // load-store dependencies..
      // memory-space  memory_space_0
      //  call_stmt_2136 store
      // reenable across ring for memory space memory_space_0
      // leading and trailing sets are the same... no ring dependency
      // pipe read/write dependencies for pipe MEMORY_TO_NIC_RESPONSE
      // read-dependencies for pipe MEMORY_TO_NIC_RESPONSE
      // write-dependencies for pipe MEMORY_TO_NIC_RESPONSE
      // signal write dependencies for MEMORY_TO_NIC_RESPONSE
      // pipe read/write dependencies for pipe NIC_DEBUG_SIGNAL
      // read-dependencies for pipe NIC_DEBUG_SIGNAL
      // write-dependencies for pipe NIC_DEBUG_SIGNAL
      // signal write dependencies for NIC_DEBUG_SIGNAL
      // pipe read/write dependencies for pipe NIC_TO_MEMORY_REQUEST
      // read-dependencies for pipe NIC_TO_MEMORY_REQUEST
      // write-dependencies for pipe NIC_TO_MEMORY_REQUEST
      // signal write dependencies for NIC_TO_MEMORY_REQUEST
      // pipe read/write dependencies for pipe QUEUE_MONITOR_SIGNAL
      // read-dependencies for pipe QUEUE_MONITOR_SIGNAL
      // write-dependencies for pipe QUEUE_MONITOR_SIGNAL
      // signal write dependencies for QUEUE_MONITOR_SIGNAL
      // pipe read/write dependencies for pipe memory_access_lock
      // read-dependencies for pipe memory_access_lock
      // write-dependencies for pipe memory_access_lock
      // signal write dependencies for memory_access_lock
    }
    ( pkt_pointer_update_enable_in status_update_enable_in)
    ( tag_update_enable_out server_index_update_enable_out)
    $P [tag_update_enable] 
    $P [server_index_update_enable] 
    $P [pkt_pointer_update_enable] 
    $P [status_update_enable] 
    $bind tag_update_enable <= call_stmt_2136 : tag_update_enable_out
    $bind server_index_update_enable <= call_stmt_2136 : server_index_update_enable_out
    $bind pkt_pointer_update_enable => call_stmt_2136 : pkt_pointer_update_enable_in
    $bind status_update_enable => call_stmt_2136 : status_update_enable_in
  }
  // end control-path
  $DP 
  {
    // begin data-path 
    // constant-object-declarations for block %getTxPacketPointerFromServer
    //  file .Aa/nic.linked.opt.aa, line 769
    // 	$call popFromQueue (tag TXQUEUE server_index ) (pkt_pointer status ) 
    //  file .Aa/nic.linked.opt.aa, line 774
    // TXQUEUE
    $constant $W[R_TXQUEUE_2132_wire_constant] : $int<2> := _b01// 1
    // 	$call popFromQueue (tag TXQUEUE server_index ) (pkt_pointer status ) 
    //  file .Aa/nic.linked.opt.aa, line 774
    // pkt_pointer
    // status
    // 	$call popFromQueue (tag TXQUEUE server_index ) (pkt_pointer status ) 
    //  file .Aa/nic.linked.opt.aa, line 774
    $call [call_stmt_2136_call] $module popFromQueue(tag R_TXQUEUE_2132_wire_constant server_index) (pkt_pointer status)  
    $delay call_stmt_2136_call 4
    $buffering  $in call_stmt_2136_call tag 1
    $buffering  $in call_stmt_2136_call R_TXQUEUE_2132_wire_constant 1
    $buffering  $in call_stmt_2136_call server_index 1
    $buffering  $out call_stmt_2136_call pkt_pointer 1
    $buffering  $out call_stmt_2136_call status 1
  }
  // end data-path
  // 	$call popFromQueue (tag TXQUEUE server_index ) (pkt_pointer status ) 
  //  file .Aa/nic.linked.opt.aa, line 774
  // tag
  // server_index
  call_stmt_2136_call <=> (call_stmt_2136/call_stmt_2136_Sample/crr call_stmt_2136/call_stmt_2136_Update/ccr) (call_stmt_2136/call_stmt_2136_Sample/cra call_stmt_2136/call_stmt_2136_Update/cca)
  $attribute delay => "6"
  $attribute input_buffering => "0"
}
$module [global_storage_initializer_] 
{
  // pipe-declarations for block %global_storage_initializer_
  //  file .Aa/nic.linked.opt.aa, line 778
  // there are no memory spaces local to this module.
  $CP 
  {
    // begin control-path 
  }
  // end control-path
  $DP 
  {
    // begin data-path 
    // constant-object-declarations for block %global_storage_initializer_
    //  file .Aa/nic.linked.opt.aa, line 778
  }
  // end data-path
}
$module [incrementNumberOfPacketsTransmitted] 
{
  // pipe-declarations for block %incrementNumberOfPacketsTransmitted
  //  file .Aa/nic.linked.opt.aa, line 785
  // there are no memory spaces local to this module.
  $CP 
  {
    // begin control-path 
    ::[call_stmt_2144] 
    {
      // start: 	$call incrementRegister (210  ) (ignore_val ) 
      //  file .Aa/nic.linked.opt.aa, line 790
      $T[call_stmt_2144_sample_start_] 
      $T[call_stmt_2144_sample_completed_] 
      $T[call_stmt_2144_update_start_] 
      $T[call_stmt_2144_update_completed_] 
      // Call input argument 0
      ;;[call_stmt_2144_Sample] 
      {
        $T [crr] $T [cra] 
      }
      ;;[call_stmt_2144_Update] 
      {
        $T [ccr] $T [cca] 
      }
      call_stmt_2144_sample_start_ &-> (call_stmt_2144_Sample)
      call_stmt_2144_sample_completed_ <-& (call_stmt_2144_Sample)
      call_stmt_2144_sample_completed_ &-> ($null)
      call_stmt_2144_update_start_ &-> (call_stmt_2144_Update)
      call_stmt_2144_update_completed_ <-& (call_stmt_2144_Update)
      // Call output argument 0
      // (as target) ignore_val
      // start: WAR dependencies for ignore_val
      // done: WAR dependencies for ignore_val
      // end: 	$call incrementRegister (210  ) (ignore_val ) 
      // load-store dependencies..
      // memory-space  memory_space_0
      //  call_stmt_2144 store
    }
  }
  // end control-path
  $DP 
  {
    // begin data-path 
    // constant-object-declarations for block %incrementNumberOfPacketsTransmitted
    //  file .Aa/nic.linked.opt.aa, line 785
    // 	$call incrementRegister (210  ) (ignore_val ) 
    //  file .Aa/nic.linked.opt.aa, line 790
    // 210 
    $constant $W[konst_2142_wire_constant] : $int<8> := _b11010010// 210
    // 	$call incrementRegister (210  ) (ignore_val ) 
    //  file .Aa/nic.linked.opt.aa, line 790
    // ignore_val
    $W[ignore_val_2144] : $int<32>
    // 	$call incrementRegister (210  ) (ignore_val ) 
    //  file .Aa/nic.linked.opt.aa, line 790
    $call [call_stmt_2144_call] $module incrementRegister(konst_2142_wire_constant) (ignore_val_2144)  
    $delay call_stmt_2144_call 4
    $buffering  $in call_stmt_2144_call konst_2142_wire_constant 1
    $buffering  $out call_stmt_2144_call ignore_val_2144 1
  }
  // end data-path
  // 	$call incrementRegister (210  ) (ignore_val ) 
  //  file .Aa/nic.linked.opt.aa, line 790
  call_stmt_2144_call <=> (call_stmt_2144/call_stmt_2144_Sample/crr call_stmt_2144/call_stmt_2144_Update/ccr) (call_stmt_2144/call_stmt_2144_Sample/cra call_stmt_2144/call_stmt_2144_Update/cca)
  $attribute input_buffering => "1"
  $attribute output_buffering => "0"
}
$volatile $module [nextLSTATE] 
{
  $in RX:$int<73>
  // can point into 
  LSTATE:$int<2>
  // can point into 
  $out nLSTATE:$int<2>
  // can point into 
  // pipe-declarations for block %nextLSTATE
  //  file .Aa/nic.linked.opt.aa, line 794
  // there are no memory spaces local to this module.
  $CP 
  {
    // begin control-path 
    // Volatile! CP is left blank 
  }
  // end control-path
  $DP 
  {
    // begin data-path 
    // constant-object-declarations for block %nextLSTATE
    //  file .Aa/nic.linked.opt.aa, line 794
    // 1 
    $constant $W[konst_2156_wire_constant] : $int<1> := _b1// 1
    // 1 
    $constant $W[konst_2161_wire_constant] : $int<1> := _b1// 1
    // S2
    $constant $W[R_S2_2164_wire_constant] : $int<2> := _b10// 2
    // ( $mux (LSTATE == S0) S1  _b0  ) 
    // S0
    $constant $W[R_S0_2170_wire_constant] : $int<2> := _b00// 0
    // S1
    $constant $W[R_S1_2172_wire_constant] : $int<2> := _b01// 1
    // _b0 
    $constant $W[konst_2173_wire_constant] : $int<2> := _b00// 0
    // ( $mux ((LSTATE == S3) | (go_to_s0 == 1 )) S0  _b0  ) 
    // S3
    $constant $W[R_S3_2176_wire_constant] : $int<2> := _b11// 3
    // 1 
    $constant $W[konst_2179_wire_constant] : $int<1> := _b1// 1
    // S0
    $constant $W[R_S0_2182_wire_constant] : $int<2> := _b00// 0
    // _b0 
    $constant $W[konst_2183_wire_constant] : $int<2> := _b00// 0
    // ( $mux (LSTATE == S1) S2  _b0  ) 
    // S1
    $constant $W[R_S1_2187_wire_constant] : $int<2> := _b01// 1
    // S2
    $constant $W[R_S2_2189_wire_constant] : $int<2> := _b10// 2
    // _b0 
    $constant $W[konst_2190_wire_constant] : $int<2> := _b00// 0
    // ( $mux ((LSTATE == S2) & ( ~ last_word )) S2  _b0  ) 
    // S2
    $constant $W[R_S2_2194_wire_constant] : $int<2> := _b10// 2
    // S2
    $constant $W[R_S2_2199_wire_constant] : $int<2> := _b10// 2
    // _b0 
    $constant $W[konst_2200_wire_constant] : $int<2> := _b00// 0
    // ( $mux ((LSTATE == S2) & last_word) S0  _b0  ) 
    // S2
    $constant $W[R_S2_2203_wire_constant] : $int<2> := _b10// 2
    // S0
    $constant $W[R_S0_2207_wire_constant] : $int<2> := _b00// 0
    // _b0 
    $constant $W[konst_2208_wire_constant] : $int<2> := _b00// 0
    // 	$volatile tlast := ( $slice RX 72 72 )  $buffering 1
    //  file .Aa/nic.linked.opt.aa, line 799
    // tlast
    $W[tlast_2153] : $int<1>
    // 	$volatile last_word := (tlast == 1 ) $buffering 1
    //  file .Aa/nic.linked.opt.aa, line 800
    // last_word
    $W[last_word_2158] : $int<1>
    // 	$volatile go_to_s0 := ((last_word == 1 ) & (LSTATE != S2)) $buffering 1
    //  file .Aa/nic.linked.opt.aa, line 801
    // (last_word == 1 )
    $intermediate $W[EQ_u1_u1_2162_wire] : $int<1>
    // (LSTATE != S2)
    $intermediate $W[NEQ_u2_u1_2165_wire] : $int<1>
    // go_to_s0
    $W[go_to_s0_2167] : $int<1>
    // 	nLSTATE := (((( $mux (LSTATE == S0) S1  _b0  )  | ( $mux ((LSTATE == S3) | (go_to_s0 == 1 )) S0  _b0  ) ) | ( $mux (LSTATE == S1) S2  _b0  ) ) | (( $mux ((LSTATE == S2) & ( ~ last_word )) S2  _b0  )  | ( $mux ((LSTATE == S2) & last_word) S0  _b0  ) )) $buffering 1
    //  file .Aa/nic.linked.opt.aa, line 802
    // (LSTATE == S0)
    $intermediate $W[EQ_u2_u1_2171_wire] : $int<1>
    // ( $mux (LSTATE == S0) S1  _b0  ) 
    $intermediate $W[MUX_2174_wire] : $int<2>
    // (LSTATE == S3)
    $intermediate $W[EQ_u2_u1_2177_wire] : $int<1>
    // (go_to_s0 == 1 )
    $intermediate $W[EQ_u1_u1_2180_wire] : $int<1>
    // ((LSTATE == S3) | (go_to_s0 == 1 ))
    $intermediate $W[OR_u1_u1_2181_wire] : $int<1>
    // ( $mux ((LSTATE == S3) | (go_to_s0 == 1 )) S0  _b0  ) 
    $intermediate $W[MUX_2184_wire] : $int<2>
    // (( $mux (LSTATE == S0) S1  _b0  )  | ( $mux ((LSTATE == S3) | (go_to_s0 == 1 )) S0  _b0  ) )
    $intermediate $W[OR_u2_u2_2185_wire] : $int<2>
    // (LSTATE == S1)
    $intermediate $W[EQ_u2_u1_2188_wire] : $int<1>
    // ( $mux (LSTATE == S1) S2  _b0  ) 
    $intermediate $W[MUX_2191_wire] : $int<2>
    // ((( $mux (LSTATE == S0) S1  _b0  )  | ( $mux ((LSTATE == S3) | (go_to_s0 == 1 )) S0  _b0  ) ) | ( $mux (LSTATE == S1) S2  _b0  ) )
    $intermediate $W[OR_u2_u2_2192_wire] : $int<2>
    // (LSTATE == S2)
    $intermediate $W[EQ_u2_u1_2195_wire] : $int<1>
    // ( ~ last_word )
    $intermediate $W[NOT_u1_u1_2197_wire] : $int<1>
    // ((LSTATE == S2) & ( ~ last_word ))
    $intermediate $W[AND_u1_u1_2198_wire] : $int<1>
    // ( $mux ((LSTATE == S2) & ( ~ last_word )) S2  _b0  ) 
    $intermediate $W[MUX_2201_wire] : $int<2>
    // (LSTATE == S2)
    $intermediate $W[EQ_u2_u1_2204_wire] : $int<1>
    // ((LSTATE == S2) & last_word)
    $intermediate $W[AND_u1_u1_2206_wire] : $int<1>
    // ( $mux ((LSTATE == S2) & last_word) S0  _b0  ) 
    $intermediate $W[MUX_2209_wire] : $int<2>
    // (( $mux ((LSTATE == S2) & ( ~ last_word )) S2  _b0  )  | ( $mux ((LSTATE == S2) & last_word) S0  _b0  ) )
    $intermediate $W[OR_u2_u2_2210_wire] : $int<2>
    // nLSTATE
    // 	$volatile tlast := ( $slice RX 72 72 )  $buffering 1
    //  file .Aa/nic.linked.opt.aa, line 799
    // ( $slice RX 72 72 ) 
    [:] [slice_2152_inst] (RX 72 72) (tlast_2153)  $flowthrough
    $delay slice_2152_inst 0
    // 	$volatile last_word := (tlast == 1 ) $buffering 1
    //  file .Aa/nic.linked.opt.aa, line 800
    // (tlast == 1 )
    ==[EQ_u1_u1_2157_inst] (tlast_2153 konst_2156_wire_constant) (last_word_2158)   $flowthrough 
    $delay EQ_u1_u1_2157_inst 0
    // 	$volatile go_to_s0 := ((last_word == 1 ) & (LSTATE != S2)) $buffering 1
    //  file .Aa/nic.linked.opt.aa, line 801
    // (last_word == 1 )
    ==[EQ_u1_u1_2162_inst] (last_word_2158 konst_2161_wire_constant) (EQ_u1_u1_2162_wire)   $flowthrough 
    $delay EQ_u1_u1_2162_inst 0
    // (LSTATE != S2)
    !=[NEQ_u2_u1_2165_inst] (LSTATE R_S2_2164_wire_constant) (NEQ_u2_u1_2165_wire)   $flowthrough 
    $delay NEQ_u2_u1_2165_inst 0
    // ((last_word == 1 ) & (LSTATE != S2))
    &[AND_u1_u1_2166_inst] (EQ_u1_u1_2162_wire NEQ_u2_u1_2165_wire) (go_to_s0_2167)   $flowthrough 
    $delay AND_u1_u1_2166_inst 0
    // 	nLSTATE := (((( $mux (LSTATE == S0) S1  _b0  )  | ( $mux ((LSTATE == S3) | (go_to_s0 == 1 )) S0  _b0  ) ) | ( $mux (LSTATE == S1) S2  _b0  ) ) | (( $mux ((LSTATE == S2) & ( ~ last_word )) S2  _b0  )  | ( $mux ((LSTATE == S2) & last_word) S0  _b0  ) )) $buffering 1
    //  file .Aa/nic.linked.opt.aa, line 802
    // (LSTATE == S0)
    ==[EQ_u2_u1_2171_inst] (LSTATE R_S0_2170_wire_constant) (EQ_u2_u1_2171_wire)   $flowthrough 
    $delay EQ_u2_u1_2171_inst 0
    // ( $mux (LSTATE == S0) S1  _b0  ) 
    ? [MUX_2174_inst] (EQ_u2_u1_2171_wire R_S1_2172_wire_constant konst_2173_wire_constant) (MUX_2174_wire)  $flowthrough
    // (LSTATE == S3)
    ==[EQ_u2_u1_2177_inst] (LSTATE R_S3_2176_wire_constant) (EQ_u2_u1_2177_wire)   $flowthrough 
    $delay EQ_u2_u1_2177_inst 0
    // (go_to_s0 == 1 )
    ==[EQ_u1_u1_2180_inst] (go_to_s0_2167 konst_2179_wire_constant) (EQ_u1_u1_2180_wire)   $flowthrough 
    $delay EQ_u1_u1_2180_inst 0
    // ((LSTATE == S3) | (go_to_s0 == 1 ))
    |[OR_u1_u1_2181_inst] (EQ_u2_u1_2177_wire EQ_u1_u1_2180_wire) (OR_u1_u1_2181_wire)   $flowthrough 
    $delay OR_u1_u1_2181_inst 0
    // ( $mux ((LSTATE == S3) | (go_to_s0 == 1 )) S0  _b0  ) 
    ? [MUX_2184_inst] (OR_u1_u1_2181_wire R_S0_2182_wire_constant konst_2183_wire_constant) (MUX_2184_wire)  $flowthrough
    // (( $mux (LSTATE == S0) S1  _b0  )  | ( $mux ((LSTATE == S3) | (go_to_s0 == 1 )) S0  _b0  ) )
    |[OR_u2_u2_2185_inst] (MUX_2174_wire MUX_2184_wire) (OR_u2_u2_2185_wire)   $flowthrough 
    $delay OR_u2_u2_2185_inst 0
    // (LSTATE == S1)
    ==[EQ_u2_u1_2188_inst] (LSTATE R_S1_2187_wire_constant) (EQ_u2_u1_2188_wire)   $flowthrough 
    $delay EQ_u2_u1_2188_inst 0
    // ( $mux (LSTATE == S1) S2  _b0  ) 
    ? [MUX_2191_inst] (EQ_u2_u1_2188_wire R_S2_2189_wire_constant konst_2190_wire_constant) (MUX_2191_wire)  $flowthrough
    // ((( $mux (LSTATE == S0) S1  _b0  )  | ( $mux ((LSTATE == S3) | (go_to_s0 == 1 )) S0  _b0  ) ) | ( $mux (LSTATE == S1) S2  _b0  ) )
    |[OR_u2_u2_2192_inst] (OR_u2_u2_2185_wire MUX_2191_wire) (OR_u2_u2_2192_wire)   $flowthrough 
    $delay OR_u2_u2_2192_inst 0
    // (LSTATE == S2)
    ==[EQ_u2_u1_2195_inst] (LSTATE R_S2_2194_wire_constant) (EQ_u2_u1_2195_wire)   $flowthrough 
    $delay EQ_u2_u1_2195_inst 0
    // ( ~ last_word )
    ~ [NOT_u1_u1_2197_inst] (last_word_2158) (NOT_u1_u1_2197_wire)   $flowthrough
    $delay NOT_u1_u1_2197_inst 0
    // ((LSTATE == S2) & ( ~ last_word ))
    &[AND_u1_u1_2198_inst] (EQ_u2_u1_2195_wire NOT_u1_u1_2197_wire) (AND_u1_u1_2198_wire)   $flowthrough 
    $delay AND_u1_u1_2198_inst 0
    // ( $mux ((LSTATE == S2) & ( ~ last_word )) S2  _b0  ) 
    ? [MUX_2201_inst] (AND_u1_u1_2198_wire R_S2_2199_wire_constant konst_2200_wire_constant) (MUX_2201_wire)  $flowthrough
    // (LSTATE == S2)
    ==[EQ_u2_u1_2204_inst] (LSTATE R_S2_2203_wire_constant) (EQ_u2_u1_2204_wire)   $flowthrough 
    $delay EQ_u2_u1_2204_inst 0
    // ((LSTATE == S2) & last_word)
    &[AND_u1_u1_2206_inst] (EQ_u2_u1_2204_wire last_word_2158) (AND_u1_u1_2206_wire)   $flowthrough 
    $delay AND_u1_u1_2206_inst 0
    // ( $mux ((LSTATE == S2) & last_word) S0  _b0  ) 
    ? [MUX_2209_inst] (AND_u1_u1_2206_wire R_S0_2207_wire_constant konst_2208_wire_constant) (MUX_2209_wire)  $flowthrough
    // (( $mux ((LSTATE == S2) & ( ~ last_word )) S2  _b0  )  | ( $mux ((LSTATE == S2) & last_word) S0  _b0  ) )
    |[OR_u2_u2_2210_inst] (MUX_2201_wire MUX_2209_wire) (OR_u2_u2_2210_wire)   $flowthrough 
    $delay OR_u2_u2_2210_inst 0
    // (((( $mux (LSTATE == S0) S1  _b0  )  | ( $mux ((LSTATE == S3) | (go_to_s0 == 1 )) S0  _b0  ) ) | ( $mux (LSTATE == S1) S2  _b0  ) ) | (( $mux ((LSTATE == S2) & ( ~ last_word )) S2  _b0  )  | ( $mux ((LSTATE == S2) & last_word) S0  _b0  ) ))
    |[OR_u2_u2_2211_inst] (OR_u2_u2_2192_wire OR_u2_u2_2210_wire) (nLSTATE)   
    $buffering  $out OR_u2_u2_2211_inst nLSTATE 1
    $delay OR_u2_u2_2211_inst 1
  }
  // end data-path
  // Volatile module.. no links.
}
$module [nicRxFromMacDaemon] 
{
  // pipe-declarations for block %nicRxFromMacDaemon
  //  file .Aa/nic.linked.opt.aa, line 804
  // pipe-declarations for block %nicRxFromMacDaemon%loop
  //  file .Aa/nic.linked.opt.aa, line 809
  // pipe-declarations for block %nicRxFromMacDaemon%loop%
  //  file .Aa/nic.linked.opt.aa, line 812
  // there are no memory spaces local to this module.
  $CP 
  {
    // begin control-path 
    <>[branch_block_stmt_2215] // Branch Block  file .Aa/nic.linked.opt.aa, line 809
    {
      $P [branch_block_stmt_2215__entry__]
      branch_block_stmt_2215__entry__ <-| ($entry)
      $P [branch_block_stmt_2215__exit__]
      branch_block_stmt_2215__exit__ |-> ($exit)
      $P [merge_stmt_2217__entry__] 
      $P [merge_stmt_2217__exit__] 
      $P [call_stmt_2227__entry__] 
      $P [call_stmt_2227__exit__] 
      $P [if_stmt_2228__entry__] 
      $P [if_stmt_2228__exit__] 
      $P [call_stmt_2245__entry__] 
      $P [call_stmt_2245__exit__] 
      $P [do_while_stmt_2246__entry__] 
      $P [do_while_stmt_2246__exit__] 
      $P [disable_loopback]
      ::[call_stmt_2227] 
      {
        // start: 		$call accessRegister (($bitcast ($uint<1>) _b0  ) ( ~ ($bitcast ($uint<4>) _b0  ) ) 22  ($bitcast ($uint<32>) _b0  ) ) (ignore_resp0 ) 
        //  file .Aa/nic.linked.opt.aa, line 814
        $T[call_stmt_2227_sample_start_] 
        $T[call_stmt_2227_sample_completed_] 
        $T[call_stmt_2227_update_start_] 
        $T[call_stmt_2227_update_completed_] 
        // Call input argument 0
        // Call input argument 1
        // Call input argument 2
        // Call input argument 3
        ;;[call_stmt_2227_Sample] 
        {
          $T [crr] $T [cra] 
        }
        ;;[call_stmt_2227_Update] 
        {
          $T [ccr] $T [cca] 
        }
        call_stmt_2227_sample_start_ &-> (call_stmt_2227_Sample)
        call_stmt_2227_sample_completed_ <-& (call_stmt_2227_Sample)
        call_stmt_2227_sample_completed_ &-> ($null)
        call_stmt_2227_update_start_ &-> (call_stmt_2227_Update)
        call_stmt_2227_update_completed_ <-& (call_stmt_2227_Update)
        // Call output argument 0
        // (as target) ignore_resp0
        // start: WAR dependencies for ignore_resp0
        // done: WAR dependencies for ignore_resp0
        // end: 		$call accessRegister (($bitcast ($uint<1>) _b0  ) ( ~ ($bitcast ($uint<4>) _b0  ) ) 22  ($bitcast ($uint<32>) _b0  ) ) (ignore_resp0 ) 
        // load-store dependencies..
        // memory-space  memory_space_0
        //  call_stmt_2227 store
      }
      call_stmt_2227__entry__ |-> (call_stmt_2227)
      call_stmt_2227__exit__ <-| (call_stmt_2227)
      // if-statement  
      //  file .Aa/nic.linked.opt.aa, line 0
      ;;[if_stmt_2228_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_2228__entry__ |-> (if_stmt_2228_dead_link)
      if_stmt_2228__exit__ <-| (if_stmt_2228_dead_link)
      ;;[if_stmt_2228_eval_test] 
      {
        // test expression evaluate and trigger branch 
        // ( ~ (S_CONTROL_REGISTER [] 0 ) )
        ;;[NOT_u1_u1_2232] 
        {
          // unary expression 
          // (S_CONTROL_REGISTER [] 0 )
          ;;[BITSEL_u32_u1_2231] 
          {
            // binary expression 
            ||[BITSEL_u32_u1_2231_inputs] 
            {
              // S_CONTROL_REGISTER
              ;;[RPIPE_S_CONTROL_REGISTER_2229] 
              {
                // pipe read
                ;;[Sample] 
                {
                  $T [req] $T [ack] 
                }
                ;;[Update] 
                {
                  $T [req] $T [ack] 
                }
              }
            }
            // flow-through
            ;;[SplitProtocol] 
            {
              ;;[Sample] 
              {
                $T [rr] $T [ra]
              }
              ;;[Update] 
              {
                $T [cr] $T [ca]
              }
            }
          }
          // flow-through
          ;;[SplitProtocol] 
          {
            ;;[Sample] 
            {
              $T [rr] $T [ra]
            }
            ;;[Update] 
            {
              $T [cr] $T [ca]
            }
          }
        }
        $T [branch_req] 
      }
      if_stmt_2228__entry__ |-> (if_stmt_2228_eval_test)
      $P [NOT_u1_u1_2232_place]
      NOT_u1_u1_2232_place <-| (if_stmt_2228_eval_test)
      ;;[if_stmt_2228_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_2228_else_link] 
      {
        $T [else_choice_transition] 
      }
      NOT_u1_u1_2232_place |-> (if_stmt_2228_if_link if_stmt_2228_else_link)
      $P [not_enabled_yet_loopback]
      not_enabled_yet_loopback <-| (if_stmt_2228_if_link)
      if_stmt_2228__exit__ <-| (if_stmt_2228_else_link)
      ::[call_stmt_2245] 
      {
        // start: 		$call accessRegister (($bitcast ($uint<1>) _b0  ) ( ~ ($bitcast ($uint<4>) _b0  ) ) 212  ($bitcast ($uint<32>) _b1  ) ) (ignore_resp1 ) 
        //  file .Aa/nic.linked.opt.aa, line 819
        $T[call_stmt_2245_sample_start_] 
        $T[call_stmt_2245_sample_completed_] 
        $T[call_stmt_2245_update_start_] 
        $T[call_stmt_2245_update_completed_] 
        // Call input argument 0
        // Call input argument 1
        // Call input argument 2
        // Call input argument 3
        ;;[call_stmt_2245_Sample] 
        {
          $T [crr] $T [cra] 
        }
        ;;[call_stmt_2245_Update] 
        {
          $T [ccr] $T [cca] 
        }
        call_stmt_2245_sample_start_ &-> (call_stmt_2245_Sample)
        call_stmt_2245_sample_completed_ <-& (call_stmt_2245_Sample)
        call_stmt_2245_sample_completed_ &-> ($null)
        call_stmt_2245_update_start_ &-> (call_stmt_2245_Update)
        call_stmt_2245_update_completed_ <-& (call_stmt_2245_Update)
        // Call output argument 0
        // (as target) ignore_resp1
        // start: WAR dependencies for ignore_resp1
        // done: WAR dependencies for ignore_resp1
        // end: 		$call accessRegister (($bitcast ($uint<1>) _b0  ) ( ~ ($bitcast ($uint<4>) _b0  ) ) 212  ($bitcast ($uint<32>) _b1  ) ) (ignore_resp1 ) 
        // load-store dependencies..
        // memory-space  memory_space_0
        //  call_stmt_2245 store
      }
      call_stmt_2245__entry__ |-> (call_stmt_2245)
      call_stmt_2245__exit__ <-| (call_stmt_2245)
      // do-while-statement  
      //  file .Aa/nic.linked.opt.aa, line 820
      <o> [do_while_stmt_2246]  $depth 7 $buffering 1 
      {
        $P[do_while_stmt_2246__entry__] 
        $P[do_while_stmt_2246__exit__] 
        $P[loop_back] 
        $P[condition_done] 
        $P[loop_body_done] 
        $pipeline [do_while_stmt_2246_loop_body] 
        {
          // Pipelined!
          $T[back_edge_to_loop_body] 
          $T[first_time_through_loop_body] 
          $T[loop_body_start] 
          $T[condition_evaluated] 
          $transitionmerge [entry_tmerge] (back_edge_to_loop_body first_time_through_loop_body) (loop_body_start)
          $entry <-& (loop_body_start)
          $T[aggregated_phi_sample_req] 
          $T[aggregated_phi_sample_ack] 
          $T[aggregated_phi_sample_ack_d] $delay
          aggregated_phi_sample_ack_d <-& (aggregated_phi_sample_ack)
          $T[aggregated_phi_update_req] 
          $T[aggregated_phi_update_ack] 
          // do not loop-back unless all phi's have used up their triggering tokens.
          condition_evaluated <-& (aggregated_phi_update_ack)
          aggregated_phi_sample_req o<-& (aggregated_phi_update_ack 0)
          // start:  multi-source PHI statement phi_stmt_2248
          // 			$phi LSTATE := 			  nLSTATE $on   $loopback 			  S0 $on   $entry 
          // type of target is $uint<2>
          $T[phi_stmt_2248_sample_start_] 
          $T[phi_stmt_2248_sample_completed_] 
          $T[phi_stmt_2248_update_start_] 
          $T[phi_stmt_2248_update_completed_] 
          $T[phi_stmt_2248_sample_start__ps] 
          phi_stmt_2248_sample_start__ps <-& (aggregated_phi_sample_req)
          $T[phi_stmt_2248_sample_completed__ps] 
          phi_stmt_2248_sample_completed__ps &-> (aggregated_phi_sample_ack)
          $T[phi_stmt_2248_update_start__ps] 
          phi_stmt_2248_update_start__ps <-& (aggregated_phi_update_req)
          $T[phi_stmt_2248_update_completed__ps] 
          phi_stmt_2248_update_completed_ <-& (phi_stmt_2248_update_completed__ps)
          aggregated_phi_sample_req <-& (phi_stmt_2248_sample_start_)
          aggregated_phi_sample_ack &-> (phi_stmt_2248_sample_completed_)
          aggregated_phi_update_req <-& (phi_stmt_2248_update_start_)
          $T[phi_stmt_2248_loopback_trigger] 
          phi_stmt_2248_loopback_trigger <-& (back_edge_to_loop_body)
          $T[phi_stmt_2248_loopback_sample_req] 
          $T[phi_stmt_2248_loopback_sample_req_ps] 
          phi_stmt_2248_loopback_sample_req <-& (phi_stmt_2248_loopback_sample_req_ps)
          phi_stmt_2248_loopback_sample_req &-> ($null)
          $T[phi_stmt_2248_entry_trigger] 
          phi_stmt_2248_entry_trigger <-& (first_time_through_loop_body)
          $T[phi_stmt_2248_entry_sample_req] 
          $T[phi_stmt_2248_entry_sample_req_ps] 
          phi_stmt_2248_entry_sample_req <-& (phi_stmt_2248_entry_sample_req_ps)
          phi_stmt_2248_entry_sample_req &-> ($null)
          phi_stmt_2248_update_start_ o<-& (phi_stmt_2248_update_completed_ 0)
          phi_stmt_2248_sample_start_ o<-& (phi_stmt_2248_sample_completed_ 1)
          $T[phi_stmt_2248_merged_reqs] 
          $T[phi_stmt_2248_phi_mux_ack] 
          $T[phi_stmt_2248_phi_mux_ack_ps] 
          phi_stmt_2248_phi_mux_ack_ps <-& (phi_stmt_2248_phi_mux_ack)
          aggregated_phi_update_ack <-& (phi_stmt_2248_update_completed_)
          $T[R_nLSTATE_2250_sample_start__ps] 
          $T[R_nLSTATE_2250_sample_completed__ps] 
          $T[R_nLSTATE_2250_update_start__ps] 
          $T[R_nLSTATE_2250_update_completed__ps] 
          // interlock for implicit-variable-ref/signal-read in Phi alternative 0
          $T[R_nLSTATE_2250_sample_start_] 
          $T[R_nLSTATE_2250_sample_completed_] 
          $T[R_nLSTATE_2250_update_start_] 
          $T[R_nLSTATE_2250_update_completed_] 
          ;;[R_nLSTATE_2250_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          R_nLSTATE_2250_sample_start_ &-> (R_nLSTATE_2250_Sample)
          R_nLSTATE_2250_sample_completed_ <-& (R_nLSTATE_2250_Sample)
          ;;[R_nLSTATE_2250_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          R_nLSTATE_2250_update_start_ &-> (R_nLSTATE_2250_Update)
          R_nLSTATE_2250_update_completed_ <-& (R_nLSTATE_2250_Update)
          // RAW reenables for nLSTATE
          // Phi start dependency for implicit/constant alternative.
          R_nLSTATE_2250_sample_start_ <-& (R_nLSTATE_2250_sample_start__ps)
          R_nLSTATE_2250_update_start_ <-& (R_nLSTATE_2250_update_start__ps)
          // Phi complete dependency.
          R_nLSTATE_2250_sample_completed__ps <-& (R_nLSTATE_2250_sample_completed_)
          R_nLSTATE_2250_update_completed__ps <-& (R_nLSTATE_2250_update_completed_)
          $T[R_S0_2251_sample_start__ps] 
          $T[R_S0_2251_sample_completed__ps] 
          $T[R_S0_2251_update_start__ps] 
          $T[R_S0_2251_update_completed__ps] 
          // dummies for constant expression source for phi
          $T[R_S0_2251_sample_start_] 
          $T[R_S0_2251_sample_completed_] 
          R_S0_2251_sample_completed_ <-& (R_S0_2251_sample_start_)
          $T[R_S0_2251_update_start_] 
          $T [R_S0_2251_update_completed_] $delay 
          R_S0_2251_update_completed_ <-& (R_S0_2251_update_start_)
          // Phi start dependency for implicit/constant alternative.
          R_S0_2251_sample_start_ <-& (R_S0_2251_sample_start__ps)
          R_S0_2251_update_start_ <-& (R_S0_2251_update_start__ps)
          // Phi complete dependency.
          R_S0_2251_sample_completed__ps <-& (R_S0_2251_sample_completed_)
          R_S0_2251_update_completed__ps <-& (R_S0_2251_update_completed_)
          $phisequencer [ phi_stmt_2248_phi_seq] : 
          phi_stmt_2248_loopback_trigger R_nLSTATE_2250_sample_start__ps R_nLSTATE_2250_sample_completed__ps R_nLSTATE_2250_update_start__ps R_nLSTATE_2250_update_completed__ps phi_stmt_2248_entry_trigger R_S0_2251_sample_start__ps R_S0_2251_sample_completed__ps R_S0_2251_update_start__ps R_S0_2251_update_completed__ps :
          phi_stmt_2248_sample_start__ps phi_stmt_2248_sample_completed__ps phi_stmt_2248_update_start__ps phi_stmt_2248_update_completed__ps :
          phi_stmt_2248_loopback_sample_req_ps phi_stmt_2248_entry_sample_req_ps : 
          phi_stmt_2248_phi_mux_ack_ps
          // done: PHI Statement phi_stmt_2248
          // start:  single source PHI statement phi_stmt_2252
          // 			$phi RX := 			  mac_to_nic_data $on   $entry ,   $loopback 
          // type of target is $uint<73>
          $T[phi_stmt_2252_sample_start_] 
          $T[phi_stmt_2252_sample_completed_] 
          $T[phi_stmt_2252_update_start_] 
          $T[phi_stmt_2252_update_completed_] 
          aggregated_phi_sample_req <-& (phi_stmt_2252_sample_start_)
          aggregated_phi_sample_ack &-> (phi_stmt_2252_sample_completed_)
          aggregated_phi_update_req <-& (phi_stmt_2252_update_start_)
          // non-implicit source expression in single-source phi
          // mac_to_nic_data
          $T[RPIPE_mac_to_nic_data_2254_sample_start_] 
          $T[RPIPE_mac_to_nic_data_2254_sample_completed_] 
          $T[RPIPE_mac_to_nic_data_2254_update_start_] 
          $T[RPIPE_mac_to_nic_data_2254_update_completed_] 
          ;;[RPIPE_mac_to_nic_data_2254_Sample] 
          {
            // pipe read sample
            $T [rr] $T [ra] 
          }
          ;;[RPIPE_mac_to_nic_data_2254_Update] 
          {
            // pipe read update
            $T [cr] $T [ca] 
          }
          RPIPE_mac_to_nic_data_2254_sample_start_ &-> (RPIPE_mac_to_nic_data_2254_Sample)
          RPIPE_mac_to_nic_data_2254_sample_completed_ <-& (RPIPE_mac_to_nic_data_2254_Sample)
          RPIPE_mac_to_nic_data_2254_update_start_ <-& (RPIPE_mac_to_nic_data_2254_sample_completed_)
          RPIPE_mac_to_nic_data_2254_update_start_ &-> (RPIPE_mac_to_nic_data_2254_Update)
          RPIPE_mac_to_nic_data_2254_update_completed_ <-& (RPIPE_mac_to_nic_data_2254_Update)
          RPIPE_mac_to_nic_data_2254_sample_start_ o<-& (RPIPE_mac_to_nic_data_2254_update_completed_ 0)
          // RAW reenables for mac_to_nic_data
          // producer  and  consumer are both determined by PHI statements.
          aggregated_phi_sample_req &-> (RPIPE_mac_to_nic_data_2254_sample_start_)
          aggregated_phi_sample_ack <-& (RPIPE_mac_to_nic_data_2254_sample_completed_)
          aggregated_phi_update_req &-> (RPIPE_mac_to_nic_data_2254_update_start_)
          phi_stmt_2252_update_completed_ <-& (RPIPE_mac_to_nic_data_2254_update_completed_)
          aggregated_phi_update_ack <-& (phi_stmt_2252_update_completed_)
          // done: PHI Statement phi_stmt_2252
          // start:  multi-source PHI statement phi_stmt_2255
          // 			$phi pkt_cnt := 			  ($bitcast ($uint<32>) _b0  ) $on   $entry 			  npkt_cnt $on   $loopback 
          // type of target is $uint<32>
          $T[phi_stmt_2255_sample_start_] 
          $T[phi_stmt_2255_sample_completed_] 
          $T[phi_stmt_2255_update_start_] 
          $T[phi_stmt_2255_update_completed_] 
          $T[phi_stmt_2255_sample_start__ps] 
          phi_stmt_2255_sample_start__ps <-& (aggregated_phi_sample_req)
          $T[phi_stmt_2255_sample_completed__ps] 
          phi_stmt_2255_sample_completed__ps &-> (aggregated_phi_sample_ack)
          $T[phi_stmt_2255_update_start__ps] 
          phi_stmt_2255_update_start__ps <-& (aggregated_phi_update_req)
          $T[phi_stmt_2255_update_completed__ps] 
          phi_stmt_2255_update_completed_ <-& (phi_stmt_2255_update_completed__ps)
          aggregated_phi_sample_req <-& (phi_stmt_2255_sample_start_)
          aggregated_phi_sample_ack &-> (phi_stmt_2255_sample_completed_)
          aggregated_phi_update_req <-& (phi_stmt_2255_update_start_)
          $T[phi_stmt_2255_loopback_trigger] 
          phi_stmt_2255_loopback_trigger <-& (back_edge_to_loop_body)
          $T[phi_stmt_2255_loopback_sample_req] 
          $T[phi_stmt_2255_loopback_sample_req_ps] 
          phi_stmt_2255_loopback_sample_req <-& (phi_stmt_2255_loopback_sample_req_ps)
          phi_stmt_2255_loopback_sample_req &-> ($null)
          $T[phi_stmt_2255_entry_trigger] 
          phi_stmt_2255_entry_trigger <-& (first_time_through_loop_body)
          $T[phi_stmt_2255_entry_sample_req] 
          $T[phi_stmt_2255_entry_sample_req_ps] 
          phi_stmt_2255_entry_sample_req <-& (phi_stmt_2255_entry_sample_req_ps)
          phi_stmt_2255_entry_sample_req &-> ($null)
          phi_stmt_2255_update_start_ o<-& (phi_stmt_2255_update_completed_ 0)
          phi_stmt_2255_sample_start_ o<-& (phi_stmt_2255_sample_completed_ 1)
          $T[phi_stmt_2255_merged_reqs] 
          $T[phi_stmt_2255_phi_mux_ack] 
          $T[phi_stmt_2255_phi_mux_ack_ps] 
          phi_stmt_2255_phi_mux_ack_ps <-& (phi_stmt_2255_phi_mux_ack)
          aggregated_phi_update_ack <-& (phi_stmt_2255_update_completed_)
          $T[type_cast_2258_sample_start__ps] 
          $T[type_cast_2258_sample_completed__ps] 
          $T[type_cast_2258_update_start__ps] 
          $T[type_cast_2258_update_completed__ps] 
          // dummies for constant expression source for phi
          $T[type_cast_2258_sample_start_] 
          $T[type_cast_2258_sample_completed_] 
          type_cast_2258_sample_completed_ <-& (type_cast_2258_sample_start_)
          $T[type_cast_2258_update_start_] 
          $T [type_cast_2258_update_completed_] $delay 
          type_cast_2258_update_completed_ <-& (type_cast_2258_update_start_)
          // Phi start dependency for implicit/constant alternative.
          type_cast_2258_sample_start_ <-& (type_cast_2258_sample_start__ps)
          type_cast_2258_update_start_ <-& (type_cast_2258_update_start__ps)
          // Phi complete dependency.
          type_cast_2258_sample_completed__ps <-& (type_cast_2258_sample_completed_)
          type_cast_2258_update_completed__ps <-& (type_cast_2258_update_completed_)
          $T[R_npkt_cnt_2259_sample_start__ps] 
          $T[R_npkt_cnt_2259_sample_completed__ps] 
          $T[R_npkt_cnt_2259_update_start__ps] 
          $T[R_npkt_cnt_2259_update_completed__ps] 
          // interlock for implicit-variable-ref/signal-read in Phi alternative 1
          $T[R_npkt_cnt_2259_sample_start_] 
          $T[R_npkt_cnt_2259_sample_completed_] 
          $T[R_npkt_cnt_2259_update_start_] 
          $T[R_npkt_cnt_2259_update_completed_] 
          ;;[R_npkt_cnt_2259_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          R_npkt_cnt_2259_sample_start_ &-> (R_npkt_cnt_2259_Sample)
          R_npkt_cnt_2259_sample_completed_ <-& (R_npkt_cnt_2259_Sample)
          ;;[R_npkt_cnt_2259_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          R_npkt_cnt_2259_update_start_ &-> (R_npkt_cnt_2259_Update)
          R_npkt_cnt_2259_update_completed_ <-& (R_npkt_cnt_2259_Update)
          // RAW reenables for npkt_cnt
          // producer  and  consumer are both determined by PHI statements.
          // producer  and  consumer are both determined by PHI statements.
          // Phi start dependency for implicit/constant alternative.
          R_npkt_cnt_2259_sample_start_ <-& (R_npkt_cnt_2259_sample_start__ps)
          R_npkt_cnt_2259_update_start_ <-& (R_npkt_cnt_2259_update_start__ps)
          // Phi complete dependency.
          R_npkt_cnt_2259_sample_completed__ps <-& (R_npkt_cnt_2259_sample_completed_)
          R_npkt_cnt_2259_update_completed__ps <-& (R_npkt_cnt_2259_update_completed_)
          $phisequencer [ phi_stmt_2255_phi_seq] : 
          phi_stmt_2255_entry_trigger type_cast_2258_sample_start__ps type_cast_2258_sample_completed__ps type_cast_2258_update_start__ps type_cast_2258_update_completed__ps phi_stmt_2255_loopback_trigger R_npkt_cnt_2259_sample_start__ps R_npkt_cnt_2259_sample_completed__ps R_npkt_cnt_2259_update_start__ps R_npkt_cnt_2259_update_completed__ps :
          phi_stmt_2255_sample_start__ps phi_stmt_2255_sample_completed__ps phi_stmt_2255_update_start__ps phi_stmt_2255_update_completed__ps :
          phi_stmt_2255_entry_sample_req_ps phi_stmt_2255_loopback_sample_req_ps : 
          phi_stmt_2255_phi_mux_ack_ps
          // done: PHI Statement phi_stmt_2255
          // start: WAR dependencies for nLSTATE
          // WAR dependency: Read: nLSTATE before Write:  $volatile 			$call nextLSTATE (RX LSTATE ) (nLSTATE ) 
          //  WAR  PHI-PHI dependency ignored...
          //  WAR  PHI-PHI dependency ignored...
          // done: WAR dependencies for nLSTATE
          // start:  $volatile 			$call nextLSTATE (RX LSTATE ) (nLSTATE ) 
          //  file .Aa/nic.linked.opt.aa, line 831
          // volatile! 
          // Call input argument 0
          // RX
          // Call input argument 1
          // LSTATE
          // Call output argument 0
          // (as target) nLSTATE
          // start: WAR dependencies for nLSTATE
          // WAR dependency: Read: nLSTATE before Write:  $volatile 			$call nextLSTATE (RX LSTATE ) (nLSTATE ) 
          //  WAR  PHI-PHI dependency ignored...
          //  WAR  PHI-PHI dependency ignored...
          // done: WAR dependencies for nLSTATE
          // end:  $volatile 			$call nextLSTATE (RX LSTATE ) (nLSTATE ) 
          // start: WAR dependencies for write_to_header
          // done: WAR dependencies for write_to_header
          // start:  			$volatile write_to_header := ((LSTATE == S0) | (LSTATE == S1)) $buffering 1
          //  file .Aa/nic.linked.opt.aa, line 832
          // volatile! 
          // Source expression
          // ((LSTATE == S0) | (LSTATE == S1))
          // (LSTATE == S0)
          // LSTATE
          // (LSTATE == S1)
          // LSTATE
          // Target expression
          // (as target) write_to_header
          // start: WAR dependencies for write_to_header
          // done: WAR dependencies for write_to_header
          // end:  			$volatile write_to_header := ((LSTATE == S0) | (LSTATE == S1)) $buffering 1
          // start:  			$guard (write_to_header) nic_rx_to_header := ( $mux (LSTATE == S1) (( $slice RX 72 8 )  && HEADER_TKEEP)  RX )  $buffering 1// bits of buffering = 73. 
          //  file .Aa/nic.linked.opt.aa, line 833
          // Guard expression 
          // write_to_header
          // Source expression
          // ( $mux (LSTATE == S1) (( $slice RX 72 8 )  && HEADER_TKEEP)  RX ) 
          $T[MUX_2287_sample_start_] 
          $T[MUX_2287_sample_completed_] 
          $T[MUX_2287_update_start_] 
          $T[MUX_2287_update_completed_] 
          // Guard dependency for expression MUX_2287 with guard R_write_to_header_2277
          MUX_2287_sample_start_ <-& (phi_stmt_2248_update_completed_)
          // RAW reenables for write_to_header
          phi_stmt_2248_update_start_ o<-& (MUX_2287_sample_completed_ 0)
          // (LSTATE == S1)
          // LSTATE
          // (( $slice RX 72 8 )  && HEADER_TKEEP)
          // ( $slice RX 72 8 ) 
          // RX
          // RX
          // start: Forward dependencies from (LSTATE == S1) to transition MUX_2287_sample_start_
          MUX_2287_sample_start_ <-& (phi_stmt_2248_update_completed_)
          // done: Forward dependencies from (LSTATE == S1) to transition MUX_2287_sample_start_
          // start: Forward dependencies from (( $slice RX 72 8 )  && HEADER_TKEEP) to transition MUX_2287_sample_start_
          MUX_2287_sample_start_ <-& (phi_stmt_2252_update_completed_)
          // done: Forward dependencies from (( $slice RX 72 8 )  && HEADER_TKEEP) to transition MUX_2287_sample_start_
          // start: Forward dependencies from RX to transition MUX_2287_sample_start_
          MUX_2287_sample_start_ <-& (phi_stmt_2252_update_completed_)
          // done: Forward dependencies from RX to transition MUX_2287_sample_start_
          ;;[MUX_2287_start] 
          {
            // ternary expression: 
            $T [req] $T [ack] // sample req/ack
          }
          ;;[MUX_2287_complete] 
          {
            // ternary expression: 
            $T [req] $T [ack] // update req/ack
          }
          MUX_2287_sample_start_ &-> (MUX_2287_start)
          MUX_2287_sample_completed_ <-& (MUX_2287_start)
          MUX_2287_sample_completed_ &-> ($null)
          MUX_2287_update_start_ &-> (MUX_2287_complete)
          MUX_2287_update_completed_ <-& (MUX_2287_complete)
          // RAW reenables for (LSTATE == S1)
          phi_stmt_2248_update_start_ o<-& (MUX_2287_sample_completed_ 0)
          // RAW reenables for (( $slice RX 72 8 )  && HEADER_TKEEP)
          phi_stmt_2252_update_start_ o<-& (MUX_2287_sample_completed_ 0)
          // RAW reenables for RX
          phi_stmt_2252_update_start_ o<-& (MUX_2287_sample_completed_ 0)
          // self-release: 
          MUX_2287_sample_start_ o<-& (MUX_2287_sample_completed_ 1)
          $null &-> (MUX_2287_update_start_)
          MUX_2287_update_start_ o<-& (MUX_2287_update_completed_ 0)
          // Target expression
          // (as target) nic_rx_to_header
          $T[WPIPE_nic_rx_to_header_2278_sample_start_] 
          $T[WPIPE_nic_rx_to_header_2278_sample_completed_] 
          $T[WPIPE_nic_rx_to_header_2278_update_start_] 
          $T[WPIPE_nic_rx_to_header_2278_update_completed_] 
          // Guard dependency for expression WPIPE_nic_rx_to_header_2278 with guard R_write_to_header_2277
          // Guard forward dependency 
          WPIPE_nic_rx_to_header_2278_sample_start_ <-& (phi_stmt_2248_update_completed_)
          // RAW reenables for write_to_header
          phi_stmt_2248_update_start_ o<-& (WPIPE_nic_rx_to_header_2278_sample_completed_ 0)
          ;;[WPIPE_nic_rx_to_header_2278_Sample] 
          {
            // pipe write sample-start nic_rx_to_header
            $T [req] $T [ack] 
          }
          ;;[WPIPE_nic_rx_to_header_2278_Update] 
          {
            // pipe write update (complete) nic_rx_to_header
            $T [req] $T [ack] 
          }
          WPIPE_nic_rx_to_header_2278_sample_start_ &-> (WPIPE_nic_rx_to_header_2278_Sample)
          WPIPE_nic_rx_to_header_2278_sample_completed_ <-& (WPIPE_nic_rx_to_header_2278_Sample)
          WPIPE_nic_rx_to_header_2278_update_start_ <-& (WPIPE_nic_rx_to_header_2278_sample_completed_)
          WPIPE_nic_rx_to_header_2278_update_start_ &-> (WPIPE_nic_rx_to_header_2278_Update)
          WPIPE_nic_rx_to_header_2278_update_completed_ <-& (WPIPE_nic_rx_to_header_2278_Update)
          WPIPE_nic_rx_to_header_2278_sample_start_ o<-& (WPIPE_nic_rx_to_header_2278_update_completed_ 0)
          // start: Forward dependencies from ( $mux (LSTATE == S1) (( $slice RX 72 8 )  && HEADER_TKEEP)  RX )  to transition WPIPE_nic_rx_to_header_2278_sample_start_
          WPIPE_nic_rx_to_header_2278_sample_start_ <-& (MUX_2287_update_completed_)
          // done: Forward dependencies from ( $mux (LSTATE == S1) (( $slice RX 72 8 )  && HEADER_TKEEP)  RX )  to transition WPIPE_nic_rx_to_header_2278_sample_start_
          // RAW reenables for ( $mux (LSTATE == S1) (( $slice RX 72 8 )  && HEADER_TKEEP)  RX ) 
          MUX_2287_update_start_ o<-& (WPIPE_nic_rx_to_header_2278_sample_completed_ 0)
          // end:  			$guard (write_to_header) nic_rx_to_header := ( $mux (LSTATE == S1) (( $slice RX 72 8 )  && HEADER_TKEEP)  RX )  $buffering 1// bits of buffering = 73. 
          // start:  			nic_rx_to_packet := RX $buffering 1// bits of buffering = 73. 
          //  file .Aa/nic.linked.opt.aa, line 834
          // Source expression
          // RX
          // Target expression
          // (as target) nic_rx_to_packet
          $T[WPIPE_nic_rx_to_packet_2289_sample_start_] 
          $T[WPIPE_nic_rx_to_packet_2289_sample_completed_] 
          $T[WPIPE_nic_rx_to_packet_2289_update_start_] 
          $T[WPIPE_nic_rx_to_packet_2289_update_completed_] 
          ;;[WPIPE_nic_rx_to_packet_2289_Sample] 
          {
            // pipe write sample-start nic_rx_to_packet
            $T [req] $T [ack] 
          }
          ;;[WPIPE_nic_rx_to_packet_2289_Update] 
          {
            // pipe write update (complete) nic_rx_to_packet
            $T [req] $T [ack] 
          }
          WPIPE_nic_rx_to_packet_2289_sample_start_ &-> (WPIPE_nic_rx_to_packet_2289_Sample)
          WPIPE_nic_rx_to_packet_2289_sample_completed_ <-& (WPIPE_nic_rx_to_packet_2289_Sample)
          WPIPE_nic_rx_to_packet_2289_update_start_ <-& (WPIPE_nic_rx_to_packet_2289_sample_completed_)
          WPIPE_nic_rx_to_packet_2289_update_start_ &-> (WPIPE_nic_rx_to_packet_2289_Update)
          WPIPE_nic_rx_to_packet_2289_update_completed_ <-& (WPIPE_nic_rx_to_packet_2289_Update)
          WPIPE_nic_rx_to_packet_2289_sample_start_ o<-& (WPIPE_nic_rx_to_packet_2289_update_completed_ 0)
          // start: Forward dependencies from RX to transition WPIPE_nic_rx_to_packet_2289_sample_start_
          WPIPE_nic_rx_to_packet_2289_sample_start_ <-& (phi_stmt_2252_update_completed_)
          // done: Forward dependencies from RX to transition WPIPE_nic_rx_to_packet_2289_sample_start_
          // RAW reenables for RX
          phi_stmt_2252_update_start_ o<-& (WPIPE_nic_rx_to_packet_2289_sample_completed_ 0)
          // end:  			nic_rx_to_packet := RX $buffering 1// bits of buffering = 73. 
          // start: WAR dependencies for pkt_complete
          // done: WAR dependencies for pkt_complete
          // start:  			$volatile pkt_complete := (nLSTATE == S0) $buffering 1
          //  file .Aa/nic.linked.opt.aa, line 835
          // volatile! 
          // Source expression
          // (nLSTATE == S0)
          // nLSTATE
          // Target expression
          // (as target) pkt_complete
          // start: WAR dependencies for pkt_complete
          // done: WAR dependencies for pkt_complete
          // end:  			$volatile pkt_complete := (nLSTATE == S0) $buffering 1
          // start: WAR dependencies for npkt_cnt
          // WAR dependency: Read: npkt_cnt before Write: 			$volatile npkt_cnt := ( $mux pkt_complete (pkt_cnt + ($bitcast ($uint<32>) _b1  ))  pkt_cnt )  $buffering 1
          //  WAR  PHI-PHI dependency ignored...
          //  WAR  PHI-PHI dependency ignored...
          //  WAR  PHI-PHI dependency ignored...
          // done: WAR dependencies for npkt_cnt
          // start:  			$volatile npkt_cnt := ( $mux pkt_complete (pkt_cnt + ($bitcast ($uint<32>) _b1  ))  pkt_cnt )  $buffering 1
          //  file .Aa/nic.linked.opt.aa, line 836
          // volatile! 
          // Source expression
          // ( $mux pkt_complete (pkt_cnt + ($bitcast ($uint<32>) _b1  ))  pkt_cnt ) 
          // pkt_complete
          // (pkt_cnt + ($bitcast ($uint<32>) _b1  ))
          // pkt_cnt
          // pkt_cnt
          // Target expression
          // (as target) npkt_cnt
          // start: WAR dependencies for npkt_cnt
          // WAR dependency: Read: npkt_cnt before Write: 			$volatile npkt_cnt := ( $mux pkt_complete (pkt_cnt + ($bitcast ($uint<32>) _b1  ))  pkt_cnt )  $buffering 1
          //  WAR  PHI-PHI dependency ignored...
          //  WAR  PHI-PHI dependency ignored...
          //  WAR  PHI-PHI dependency ignored...
          // done: WAR dependencies for npkt_cnt
          // end:  			$volatile npkt_cnt := ( $mux pkt_complete (pkt_cnt + ($bitcast ($uint<32>) _b1  ))  pkt_cnt )  $buffering 1
          // start: 			$guard (pkt_complete) $call accessRegister (($bitcast ($uint<1>) _b0  ) ( ~ ($bitcast ($uint<4>) _b0  ) ) 23  pkt_cnt ) (ignore_resp2 ) 
          //  file .Aa/nic.linked.opt.aa, line 837
          $T[call_stmt_2315_sample_start_] 
          $T[call_stmt_2315_sample_completed_] 
          $T[call_stmt_2315_update_start_] 
          $T[call_stmt_2315_update_completed_] 
          // Guard expression
          // pkt_complete
          // start: Forward dependencies from pkt_complete to transition call_stmt_2315_sample_start_
          call_stmt_2315_sample_start_ <-& (phi_stmt_2248_update_completed_)
          call_stmt_2315_sample_start_ <-& (phi_stmt_2252_update_completed_)
          // done: Forward dependencies from pkt_complete to transition call_stmt_2315_sample_start_
          // RAW reenables for pkt_complete
          phi_stmt_2248_update_start_ o<-& (call_stmt_2315_sample_completed_ 0)
          phi_stmt_2252_update_start_ o<-& (call_stmt_2315_sample_completed_ 0)
          // Call input argument 0
          // Call input argument 1
          // Call input argument 2
          // Call input argument 3
          // pkt_cnt
          // start: Forward dependencies from pkt_cnt to transition call_stmt_2315_sample_start_
          call_stmt_2315_sample_start_ <-& (phi_stmt_2255_update_completed_)
          // done: Forward dependencies from pkt_cnt to transition call_stmt_2315_sample_start_
          // RAW reenables for pkt_cnt
          phi_stmt_2255_update_start_ o<-& (call_stmt_2315_sample_completed_ 0)
          ;;[call_stmt_2315_Sample] 
          {
            $T [crr] $T [cra] 
          }
          ;;[call_stmt_2315_Update] 
          {
            $T [ccr] $T [cca] 
          }
          call_stmt_2315_sample_start_ &-> (call_stmt_2315_Sample)
          call_stmt_2315_sample_completed_ <-& (call_stmt_2315_Sample)
          call_stmt_2315_sample_completed_ &-> ($null)
          call_stmt_2315_update_start_ &-> (call_stmt_2315_Update)
          call_stmt_2315_update_completed_ <-& (call_stmt_2315_Update)
          // Call output argument 0
          // (as target) ignore_resp2
          // self-release: 
          call_stmt_2315_sample_start_ o<-& (call_stmt_2315_sample_completed_ 1)
          $null &-> (call_stmt_2315_update_start_)
          call_stmt_2315_update_start_ o<-& (call_stmt_2315_update_completed_ 0)
          // start: WAR dependencies for ignore_resp2
          // done: WAR dependencies for ignore_resp2
          // end: 			$guard (pkt_complete) $call accessRegister (($bitcast ($uint<1>) _b0  ) ( ~ ($bitcast ($uint<4>) _b0  ) ) 23  pkt_cnt ) (ignore_resp2 ) 
          // (S_CONTROL_REGISTER [] 0 )
          // S_CONTROL_REGISTER
          $T [loop_body_delay_to_condition_start] $delay
          loop_body_start &-> (loop_body_delay_to_condition_start)
          loop_body_delay_to_condition_start &-> (condition_evaluated)
          // start: Forward dependencies from (S_CONTROL_REGISTER [] 0 ) to transition condition_evaluated
          // non-constant expression which depends only on signals/constants?
          // done: Forward dependencies from (S_CONTROL_REGISTER [] 0 ) to transition condition_evaluated
          condition_evaluated &-> ($null)
          // load-store dependencies..
          // memory-space  memory_space_0
          //  call_stmt_2315 store
          // reenable across ring for memory space memory_space_0
          // leading and trailing sets are the same... no ring dependency
          // pipe read/write dependencies for pipe mac_to_nic_data
          // read-dependencies for pipe mac_to_nic_data
          // write-dependencies for pipe mac_to_nic_data
          // signal write dependencies for mac_to_nic_data
          // pipe read/write dependencies for pipe nic_rx_to_header
          // read-dependencies for pipe nic_rx_to_header
          // write-dependencies for pipe nic_rx_to_header
          // signal write dependencies for nic_rx_to_header
          // pipe read/write dependencies for pipe nic_rx_to_packet
          // read-dependencies for pipe nic_rx_to_packet
          // write-dependencies for pipe nic_rx_to_packet
          // signal write dependencies for nic_rx_to_packet
        }
        ( first_time_through_loop_body  back_edge_to_loop_body) 
        ( condition_evaluated )
        ;; [loop_exit] 
        {
          $T [ack] 
        }
        ;; [loop_taken] 
        {
          $T [ack] 
        }
        do_while_stmt_2246__entry__ <-| ($entry)
        loop_body_done <-| ( do_while_stmt_2246_loop_body ) 
        condition_done |-> (loop_exit loop_taken)
        do_while_stmt_2246__exit__ |-> ($exit)
        $bind condition_done <= do_while_stmt_2246_loop_body : condition_evaluated
        $bind do_while_stmt_2246__entry__  => do_while_stmt_2246_loop_body : first_time_through_loop_body 
        $bind loop_back  => do_while_stmt_2246_loop_body : back_edge_to_loop_body 
        $terminate (loop_exit loop_taken loop_body_done) (loop_back do_while_stmt_2246__exit__)
      }
      do_while_stmt_2246__entry__ |-> (do_while_stmt_2246)
      do_while_stmt_2246__exit__ <-| (do_while_stmt_2246)
      // control-path for merge  
      //  file .Aa/nic.linked.opt.aa, line 812
      ;;[merge_stmt_2217_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_2217__entry__ |-> (merge_stmt_2217_dead_link)
      merge_stmt_2217__exit__ <-| (merge_stmt_2217_dead_link)
      //---------------------   merge statement  file .Aa/nic.linked.opt.aa, line 812  --------------------------
      ||[merge_stmt_2217__entry___PhiReq] 
      {
        // no phi statements in merge..
      }
      merge_stmt_2217__entry__ |-> (merge_stmt_2217__entry___PhiReq)
      ||[disable_loopback_PhiReq] 
      {
        // no phi statements in merge..
      }
      disable_loopback |-> (disable_loopback_PhiReq)
      ||[not_enabled_yet_loopback_PhiReq] 
      {
        // no phi statements in merge..
      }
      not_enabled_yet_loopback |-> (not_enabled_yet_loopback_PhiReq)
      $P [merge_stmt_2217_PhiReqMerge] 
      merge_stmt_2217_PhiReqMerge <-| ( merge_stmt_2217__entry___PhiReq  disable_loopback_PhiReq  not_enabled_yet_loopback_PhiReq )
      ||[merge_stmt_2217_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_2217_PhiReqMerge |-> (merge_stmt_2217_PhiAck)
      merge_stmt_2217__exit__  <-| (merge_stmt_2217_PhiAck)
      //---------------------  end of merge statement  file .Aa/nic.linked.opt.aa, line 812  --------------------------
      merge_stmt_2217__entry__ <-| (branch_block_stmt_2215__entry__)
      call_stmt_2227__entry__ <-| (merge_stmt_2217__exit__)
      if_stmt_2228__entry__ <-| (call_stmt_2227__exit__)
      call_stmt_2245__entry__ <-| (if_stmt_2228__exit__)
      do_while_stmt_2246__entry__ <-| (call_stmt_2245__exit__)
      disable_loopback <-| (do_while_stmt_2246__exit__)
    }
  }
  // end control-path
  $DP 
  {
    // begin data-path 
    // constant-object-declarations for block %nicRxFromMacDaemon%loop%
    //  file .Aa/nic.linked.opt.aa, line 812
    // constant-object-declarations for block %nicRxFromMacDaemon%loop%
    //  file .Aa/nic.linked.opt.aa, line 822
    // constant-object-declarations for block %nicRxFromMacDaemon%loop
    //  file .Aa/nic.linked.opt.aa, line 809
    // constant-object-declarations for block %nicRxFromMacDaemon
    //  file .Aa/nic.linked.opt.aa, line 804
    // constant-declarations for block %nicRxFromMacDaemon%loop
    //  file .Aa/nic.linked.opt.aa, line 809
    // constant-declarations for block %nicRxFromMacDaemon%loop%
    //  file .Aa/nic.linked.opt.aa, line 812
    // 		$call accessRegister (($bitcast ($uint<1>) _b0  ) ( ~ ($bitcast ($uint<4>) _b0  ) ) 22  ($bitcast ($uint<32>) _b0  ) ) (ignore_resp0 ) 
    //  file .Aa/nic.linked.opt.aa, line 814
    // ($bitcast ($uint<1>) _b0  )
    $constant $W[type_cast_2219_wire_constant] : $int<1> := _b0// 0
    // ( ~ ($bitcast ($uint<4>) _b0  ) )
    $constant $W[NOT_u4_u4_2222_wire_constant] : $int<4> := _b1111// -1
    // 22 
    $constant $W[konst_2223_wire_constant] : $int<8> := _b00010110// 22
    // ($bitcast ($uint<32>) _b0  )
    $constant $W[type_cast_2225_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // if-statement  
    //  file .Aa/nic.linked.opt.aa, line 0
    // 0 
    $constant $W[konst_2230_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // 		$call accessRegister (($bitcast ($uint<1>) _b0  ) ( ~ ($bitcast ($uint<4>) _b0  ) ) 212  ($bitcast ($uint<32>) _b1  ) ) (ignore_resp1 ) 
    //  file .Aa/nic.linked.opt.aa, line 819
    // ($bitcast ($uint<1>) _b0  )
    $constant $W[type_cast_2237_wire_constant] : $int<1> := _b0// 0
    // ( ~ ($bitcast ($uint<4>) _b0  ) )
    $constant $W[NOT_u4_u4_2240_wire_constant] : $int<4> := _b1111// -1
    // 212 
    $constant $W[konst_2241_wire_constant] : $int<8> := _b11010100// 212
    // ($bitcast ($uint<32>) _b1  )
    $constant $W[type_cast_2243_wire_constant] : $int<32> := _b00000000000000000000000000000001// 1
    // do-while statement  
    //  file .Aa/nic.linked.opt.aa, line 820
    // 0 
    $constant $W[konst_2321_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // constant-declarations for block %nicRxFromMacDaemon%loop%
    //  file .Aa/nic.linked.opt.aa, line 822
    // constant-declarations for phi:  			$phi LSTATE := 			  nLSTATE $on   $loopback 			  S0 $on   $entry 
    // type of target is $uint<2>
    //  file .Aa/nic.linked.opt.aa, line 823
    // S0
    $constant $W[R_S0_2251_wire_constant] : $int<2> := _b00// 0
    // constant-declarations for phi:  			$phi RX := 			  mac_to_nic_data $on   $entry ,   $loopback 
    // type of target is $uint<73>
    //  file .Aa/nic.linked.opt.aa, line 825
    // constant-declarations for phi:  			$phi pkt_cnt := 			  ($bitcast ($uint<32>) _b0  ) $on   $entry 			  npkt_cnt $on   $loopback 
    // type of target is $uint<32>
    //  file .Aa/nic.linked.opt.aa, line 827
    // ($bitcast ($uint<32>) _b0  )
    $constant $W[type_cast_2258_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    //  $volatile 			$call nextLSTATE (RX LSTATE ) (nLSTATE ) 
    //  file .Aa/nic.linked.opt.aa, line 831
    // S0
    $constant $W[R_S0_2270_wire_constant] : $int<2> := _b00// 0
    // S1
    $constant $W[R_S1_2273_wire_constant] : $int<2> := _b01// 1
    // ( $mux (LSTATE == S1) (( $slice RX 72 8 )  && HEADER_TKEEP)  RX ) 
    // S1
    $constant $W[R_S1_2280_wire_constant] : $int<2> := _b01// 1
    // HEADER_TKEEP
    $constant $W[R_HEADER_TKEEP_2284_wire_constant] : $int<8> := _b11111100// 252
    // S0
    $constant $W[R_S0_2294_wire_constant] : $int<2> := _b00// 0
    // ( $mux pkt_complete (pkt_cnt + ($bitcast ($uint<32>) _b1  ))  pkt_cnt ) 
    // ($bitcast ($uint<32>) _b1  )
    $constant $W[type_cast_2301_wire_constant] : $int<32> := _b00000000000000000000000000000001// 1
    // 			$guard (pkt_complete) $call accessRegister (($bitcast ($uint<1>) _b0  ) ( ~ ($bitcast ($uint<4>) _b0  ) ) 23  pkt_cnt ) (ignore_resp2 ) 
    //  file .Aa/nic.linked.opt.aa, line 837
    // ($bitcast ($uint<1>) _b0  )
    $constant $W[type_cast_2308_wire_constant] : $int<1> := _b0// 0
    // ( ~ ($bitcast ($uint<4>) _b0  ) )
    $constant $W[NOT_u4_u4_2311_wire_constant] : $int<4> := _b1111// -1
    // 23 
    $constant $W[konst_2312_wire_constant] : $int<8> := _b00010111// 23
    // block %nicRxFromMacDaemon%loop
    //  file .Aa/nic.linked.opt.aa, line 809
    // 		$call accessRegister (($bitcast ($uint<1>) _b0  ) ( ~ ($bitcast ($uint<4>) _b0  ) ) 22  ($bitcast ($uint<32>) _b0  ) ) (ignore_resp0 ) 
    //  file .Aa/nic.linked.opt.aa, line 814
    // ignore_resp0
    $W[ignore_resp0_2227] : $int<32>
    // if statement  
    //  file .Aa/nic.linked.opt.aa, line 0
    // S_CONTROL_REGISTER
    $W[RPIPE_S_CONTROL_REGISTER_2229_wire] : $int<32>
    // (S_CONTROL_REGISTER [] 0 )
    $intermediate $W[BITSEL_u32_u1_2231_wire] : $int<1>
    // ( ~ (S_CONTROL_REGISTER [] 0 ) )
    $intermediate $W[NOT_u1_u1_2232_wire] : $int<1>
    // 		$call accessRegister (($bitcast ($uint<1>) _b0  ) ( ~ ($bitcast ($uint<4>) _b0  ) ) 212  ($bitcast ($uint<32>) _b1  ) ) (ignore_resp1 ) 
    //  file .Aa/nic.linked.opt.aa, line 819
    // ignore_resp1
    $W[ignore_resp1_2245] : $int<32>
    // do-while statement  
    //  file .Aa/nic.linked.opt.aa, line 820
    // S_CONTROL_REGISTER
    $W[RPIPE_S_CONTROL_REGISTER_2320_wire] : $int<32>
    // (S_CONTROL_REGISTER [] 0 )
    $intermediate $W[BITSEL_u32_u1_2322_wire] : $int<1>
    // merge-statement  
    //  file .Aa/nic.linked.opt.aa, line 822
    // 			$phi LSTATE := 			  nLSTATE $on   $loopback 			  S0 $on   $entry 
    // type of target is $uint<2>
    //  file .Aa/nic.linked.opt.aa, line 823
    $W[nLSTATE_2267_2250_buffered] : $int<2>
    // LSTATE
    $W[LSTATE_2248] : $int<2>
    // 			$phi RX := 			  mac_to_nic_data $on   $entry ,   $loopback 
    // type of target is $uint<73>
    //  file .Aa/nic.linked.opt.aa, line 825
    // mac_to_nic_data
    $W[RPIPE_mac_to_nic_data_2254_wire] : $int<73>
    // RX
    $W[RX_2252] : $int<73>
    // 			$phi pkt_cnt := 			  ($bitcast ($uint<32>) _b0  ) $on   $entry 			  npkt_cnt $on   $loopback 
    // type of target is $uint<32>
    //  file .Aa/nic.linked.opt.aa, line 827
    $W[npkt_cnt_2305_2259_buffered] : $int<32>
    // pkt_cnt
    $W[pkt_cnt_2255] : $int<32>
    //  $volatile 			$call nextLSTATE (RX LSTATE ) (nLSTATE ) 
    //  file .Aa/nic.linked.opt.aa, line 831
    // nLSTATE
    $W[nLSTATE_2267] : $int<2>
    // 			$volatile write_to_header := ((LSTATE == S0) | (LSTATE == S1)) $buffering 1
    //  file .Aa/nic.linked.opt.aa, line 832
    // (LSTATE == S0)
    $intermediate $W[EQ_u2_u1_2271_wire] : $int<1>
    // (LSTATE == S1)
    $intermediate $W[EQ_u2_u1_2274_wire] : $int<1>
    // write_to_header
    $W[write_to_header_2276] : $int<1>
    // 			$guard (write_to_header) nic_rx_to_header := ( $mux (LSTATE == S1) (( $slice RX 72 8 )  && HEADER_TKEEP)  RX )  $buffering 1// bits of buffering = 73. 
    //  file .Aa/nic.linked.opt.aa, line 833
    // (LSTATE == S1)
    $intermediate $W[EQ_u2_u1_2281_wire] : $int<1>
    // ( $slice RX 72 8 ) 
    $intermediate $W[slice_2283_wire] : $int<65>
    // (( $slice RX 72 8 )  && HEADER_TKEEP)
    $intermediate $W[CONCAT_u65_u73_2285_wire] : $int<73>
    // ( $mux (LSTATE == S1) (( $slice RX 72 8 )  && HEADER_TKEEP)  RX ) 
    $intermediate $W[MUX_2287_wire] : $int<73>
    // nic_rx_to_header
    // 			nic_rx_to_packet := RX $buffering 1// bits of buffering = 73. 
    //  file .Aa/nic.linked.opt.aa, line 834
    // nic_rx_to_packet
    // 			$volatile pkt_complete := (nLSTATE == S0) $buffering 1
    //  file .Aa/nic.linked.opt.aa, line 835
    // pkt_complete
    $W[pkt_complete_2296] : $int<1>
    // 			$volatile npkt_cnt := ( $mux pkt_complete (pkt_cnt + ($bitcast ($uint<32>) _b1  ))  pkt_cnt )  $buffering 1
    //  file .Aa/nic.linked.opt.aa, line 836
    // (pkt_cnt + ($bitcast ($uint<32>) _b1  ))
    $intermediate $W[ADD_u32_u32_2302_wire] : $int<32>
    // npkt_cnt
    $W[npkt_cnt_2305] : $int<32>
    // 			$guard (pkt_complete) $call accessRegister (($bitcast ($uint<1>) _b0  ) ( ~ ($bitcast ($uint<4>) _b0  ) ) 23  pkt_cnt ) (ignore_resp2 ) 
    //  file .Aa/nic.linked.opt.aa, line 837
    // ignore_resp2
    $W[ignore_resp2_2315] : $int<32>
    // datapath-instances for block %nicRxFromMacDaemon%loop
    //  file .Aa/nic.linked.opt.aa, line 809
    // 		$call accessRegister (($bitcast ($uint<1>) _b0  ) ( ~ ($bitcast ($uint<4>) _b0  ) ) 22  ($bitcast ($uint<32>) _b0  ) ) (ignore_resp0 ) 
    //  file .Aa/nic.linked.opt.aa, line 814
    $call [call_stmt_2227_call] $module accessRegister(type_cast_2219_wire_constant NOT_u4_u4_2222_wire_constant konst_2223_wire_constant type_cast_2225_wire_constant) (ignore_resp0_2227)  
    $delay call_stmt_2227_call 4
    $buffering  $in call_stmt_2227_call type_cast_2219_wire_constant 1
    $buffering  $in call_stmt_2227_call NOT_u4_u4_2222_wire_constant 1
    $buffering  $in call_stmt_2227_call konst_2223_wire_constant 1
    $buffering  $in call_stmt_2227_call type_cast_2225_wire_constant 1
    $buffering  $out call_stmt_2227_call ignore_resp0_2227 1
    // datapath-instances for if  
    //  file .Aa/nic.linked.opt.aa, line 0
    // S_CONTROL_REGISTER
    $ioport $in [RPIPE_S_CONTROL_REGISTER_2229_inst] (S_CONTROL_REGISTER) (RPIPE_S_CONTROL_REGISTER_2229_wire) 
    $buffering $out RPIPE_S_CONTROL_REGISTER_2229_inst RPIPE_S_CONTROL_REGISTER_2229_wire 1
    // (S_CONTROL_REGISTER [] 0 )
    [][BITSEL_u32_u1_2231_inst] (RPIPE_S_CONTROL_REGISTER_2229_wire konst_2230_wire_constant) (BITSEL_u32_u1_2231_wire)   $flowthrough 
    $delay BITSEL_u32_u1_2231_inst 0
    // ( ~ (S_CONTROL_REGISTER [] 0 ) )
    ~ [NOT_u1_u1_2232_inst] (BITSEL_u32_u1_2231_wire) (NOT_u1_u1_2232_wire)   $flowthrough
    $delay NOT_u1_u1_2232_inst 0
    ==0? [if_stmt_2228_branch] (NOT_u1_u1_2232_wire)
    // 		$call accessRegister (($bitcast ($uint<1>) _b0  ) ( ~ ($bitcast ($uint<4>) _b0  ) ) 212  ($bitcast ($uint<32>) _b1  ) ) (ignore_resp1 ) 
    //  file .Aa/nic.linked.opt.aa, line 819
    $call [call_stmt_2245_call] $module accessRegister(type_cast_2237_wire_constant NOT_u4_u4_2240_wire_constant konst_2241_wire_constant type_cast_2243_wire_constant) (ignore_resp1_2245)  
    $delay call_stmt_2245_call 4
    $buffering  $in call_stmt_2245_call type_cast_2237_wire_constant 1
    $buffering  $in call_stmt_2245_call NOT_u4_u4_2240_wire_constant 1
    $buffering  $in call_stmt_2245_call konst_2241_wire_constant 1
    $buffering  $in call_stmt_2245_call type_cast_2243_wire_constant 1
    $buffering  $out call_stmt_2245_call ignore_resp1_2245 1
    // datapath-instances for do-while  
    //  file .Aa/nic.linked.opt.aa, line 820
    // S_CONTROL_REGISTER
    $ioport $in [RPIPE_S_CONTROL_REGISTER_2320_inst] (S_CONTROL_REGISTER) (RPIPE_S_CONTROL_REGISTER_2320_wire)  $fullrate 
    $buffering $out RPIPE_S_CONTROL_REGISTER_2320_inst RPIPE_S_CONTROL_REGISTER_2320_wire 1
    // (S_CONTROL_REGISTER [] 0 )
    [][BITSEL_u32_u1_2322_inst] (RPIPE_S_CONTROL_REGISTER_2320_wire konst_2321_wire_constant) (BITSEL_u32_u1_2322_wire)   $flowthrough 
    $delay BITSEL_u32_u1_2322_inst 0
    ==0? [do_while_stmt_2246_branch] (BITSEL_u32_u1_2322_wire)
    $flowthrough
    // data-path instances for merge  
    //  file .Aa/nic.linked.opt.aa, line 822
    // 			$phi LSTATE := 			  nLSTATE $on   $loopback 			  S0 $on   $entry 
    // type of target is $uint<2>
    //  file .Aa/nic.linked.opt.aa, line 823
    # := [nLSTATE_2267_2250_buf] (nLSTATE_2267) (nLSTATE_2267_2250_buffered)   $in_phi    $fullrate
    $buffering $out nLSTATE_2267_2250_buf nLSTATE_2267_2250_buffered  1
    # $phi [phi_stmt_2248] (nLSTATE_2267_2250_buffered R_S0_2251_wire_constant) ( LSTATE_2248 ) $fullrate
    // $buffering  $out phi_stmt_2248 LSTATE_2248 2
    // 			$phi RX := 			  mac_to_nic_data $on   $entry ,   $loopback 
    // type of target is $uint<73>
    //  file .Aa/nic.linked.opt.aa, line 825
    // mac_to_nic_data
    $ioport $in [RPIPE_mac_to_nic_data_2254_inst] (mac_to_nic_data) (RPIPE_mac_to_nic_data_2254_wire)  $fullrate 
    $buffering $out RPIPE_mac_to_nic_data_2254_inst RPIPE_mac_to_nic_data_2254_wire 1
    # := [ssrc_phi_stmt_2252] (RPIPE_mac_to_nic_data_2254_wire) (RX_2252)     $flowthrough 
    // 			$phi pkt_cnt := 			  ($bitcast ($uint<32>) _b0  ) $on   $entry 			  npkt_cnt $on   $loopback 
    // type of target is $uint<32>
    //  file .Aa/nic.linked.opt.aa, line 827
    # := [npkt_cnt_2305_2259_buf] (npkt_cnt_2305) (npkt_cnt_2305_2259_buffered)   $in_phi    $fullrate
    $buffering $out npkt_cnt_2305_2259_buf npkt_cnt_2305_2259_buffered  1
    # $phi [phi_stmt_2255] (type_cast_2258_wire_constant npkt_cnt_2305_2259_buffered) ( pkt_cnt_2255 ) $fullrate
    // $buffering  $out phi_stmt_2255 pkt_cnt_2255 2
    //  $volatile 			$call nextLSTATE (RX LSTATE ) (nLSTATE ) 
    //  file .Aa/nic.linked.opt.aa, line 831
    $call [call_stmt_2267_call] $module nextLSTATE(RX_2252 LSTATE_2248) (nLSTATE_2267)   $flowthrough $fullrate
    // 			$volatile write_to_header := ((LSTATE == S0) | (LSTATE == S1)) $buffering 1
    //  file .Aa/nic.linked.opt.aa, line 832
    // (LSTATE == S0)
    ==[EQ_u2_u1_2271_inst] (LSTATE_2248 R_S0_2270_wire_constant) (EQ_u2_u1_2271_wire)   $flowthrough 
    $delay EQ_u2_u1_2271_inst 0
    // (LSTATE == S1)
    ==[EQ_u2_u1_2274_inst] (LSTATE_2248 R_S1_2273_wire_constant) (EQ_u2_u1_2274_wire)   $flowthrough 
    $delay EQ_u2_u1_2274_inst 0
    // ((LSTATE == S0) | (LSTATE == S1))
    |[OR_u1_u1_2275_inst] (EQ_u2_u1_2271_wire EQ_u2_u1_2274_wire) (write_to_header_2276)   $flowthrough 
    $delay OR_u1_u1_2275_inst 0
    // 			$guard (write_to_header) nic_rx_to_header := ( $mux (LSTATE == S1) (( $slice RX 72 8 )  && HEADER_TKEEP)  RX )  $buffering 1// bits of buffering = 73. 
    //  file .Aa/nic.linked.opt.aa, line 833
    // (LSTATE == S1)
    ==[EQ_u2_u1_2281_inst] (LSTATE_2248 R_S1_2280_wire_constant) (EQ_u2_u1_2281_wire) $guard ( write_to_header_2276 )   $flowthrough 
    $delay EQ_u2_u1_2281_inst 0
    // ( $slice RX 72 8 ) 
    [:] [slice_2283_inst] (RX_2252 72 8) (slice_2283_wire) $guard ( write_to_header_2276 )  $flowthrough
    $delay slice_2283_inst 0
    // (( $slice RX 72 8 )  && HEADER_TKEEP)
    &&[CONCAT_u65_u73_2285_inst] (slice_2283_wire R_HEADER_TKEEP_2284_wire_constant) (CONCAT_u65_u73_2285_wire) $guard ( write_to_header_2276 )   $flowthrough 
    $delay CONCAT_u65_u73_2285_inst 0
    // ( $mux (LSTATE == S1) (( $slice RX 72 8 )  && HEADER_TKEEP)  RX ) 
    ? [MUX_2287_inst] (EQ_u2_u1_2281_wire CONCAT_u65_u73_2285_wire RX_2252) (MUX_2287_wire) $guard ( write_to_header_2276 )  $fullrate
    $buffering  $out MUX_2287_inst MUX_2287_wire 1
    // nic_rx_to_header
    $ioport $out [WPIPE_nic_rx_to_header_2278_inst]  (MUX_2287_wire) (nic_rx_to_header) $guard ( write_to_header_2276 )  $fullrate 
    // 			nic_rx_to_packet := RX $buffering 1// bits of buffering = 73. 
    //  file .Aa/nic.linked.opt.aa, line 834
    // nic_rx_to_packet
    $ioport $out [WPIPE_nic_rx_to_packet_2289_inst]  (RX_2252) (nic_rx_to_packet)  $fullrate 
    // 			$volatile pkt_complete := (nLSTATE == S0) $buffering 1
    //  file .Aa/nic.linked.opt.aa, line 835
    // (nLSTATE == S0)
    ==[EQ_u2_u1_2295_inst] (nLSTATE_2267 R_S0_2294_wire_constant) (pkt_complete_2296)   $flowthrough 
    $delay EQ_u2_u1_2295_inst 0
    // 			$volatile npkt_cnt := ( $mux pkt_complete (pkt_cnt + ($bitcast ($uint<32>) _b1  ))  pkt_cnt )  $buffering 1
    //  file .Aa/nic.linked.opt.aa, line 836
    // (pkt_cnt + ($bitcast ($uint<32>) _b1  ))
    +[ADD_u32_u32_2302_inst] (pkt_cnt_2255 type_cast_2301_wire_constant) (ADD_u32_u32_2302_wire)   $flowthrough 
    $delay ADD_u32_u32_2302_inst 0
    // ( $mux pkt_complete (pkt_cnt + ($bitcast ($uint<32>) _b1  ))  pkt_cnt ) 
    ? [MUX_2304_inst] (pkt_complete_2296 ADD_u32_u32_2302_wire pkt_cnt_2255) (npkt_cnt_2305)  $flowthrough
    // 			$guard (pkt_complete) $call accessRegister (($bitcast ($uint<1>) _b0  ) ( ~ ($bitcast ($uint<4>) _b0  ) ) 23  pkt_cnt ) (ignore_resp2 ) 
    //  file .Aa/nic.linked.opt.aa, line 837
    $call [call_stmt_2315_call] $module accessRegister(type_cast_2308_wire_constant NOT_u4_u4_2311_wire_constant konst_2312_wire_constant pkt_cnt_2255) (ignore_resp2_2315) $guard ( pkt_complete_2296 )   $fullrate
    $delay call_stmt_2315_call 4
    $buffering  $in call_stmt_2315_call type_cast_2308_wire_constant 1
    $buffering  $in call_stmt_2315_call NOT_u4_u4_2311_wire_constant 1
    $buffering  $in call_stmt_2315_call konst_2312_wire_constant 1
    $buffering  $in call_stmt_2315_call pkt_cnt_2255 1
    $buffering  $out call_stmt_2315_call ignore_resp2_2315 1
  }
  // end data-path
  // CP-DP links for merge  
  //  file .Aa/nic.linked.opt.aa, line 812
  // 		$call accessRegister (($bitcast ($uint<1>) _b0  ) ( ~ ($bitcast ($uint<4>) _b0  ) ) 22  ($bitcast ($uint<32>) _b0  ) ) (ignore_resp0 ) 
  //  file .Aa/nic.linked.opt.aa, line 814
  call_stmt_2227_call <=> (branch_block_stmt_2215/call_stmt_2227/call_stmt_2227_Sample/crr branch_block_stmt_2215/call_stmt_2227/call_stmt_2227_Update/ccr) (branch_block_stmt_2215/call_stmt_2227/call_stmt_2227_Sample/cra branch_block_stmt_2215/call_stmt_2227/call_stmt_2227_Update/cca)
  // CP-DP links for if  
  //  file .Aa/nic.linked.opt.aa, line 0
  // S_CONTROL_REGISTER
  // (S_CONTROL_REGISTER [] 0 )
  // ( ~ (S_CONTROL_REGISTER [] 0 ) )
  if_stmt_2228_branch <=> (branch_block_stmt_2215/if_stmt_2228_eval_test/branch_req) (branch_block_stmt_2215/if_stmt_2228_else_link/else_choice_transition branch_block_stmt_2215/if_stmt_2228_if_link/if_choice_transition)
  // 		$call accessRegister (($bitcast ($uint<1>) _b0  ) ( ~ ($bitcast ($uint<4>) _b0  ) ) 212  ($bitcast ($uint<32>) _b1  ) ) (ignore_resp1 ) 
  //  file .Aa/nic.linked.opt.aa, line 819
  call_stmt_2245_call <=> (branch_block_stmt_2215/call_stmt_2245/call_stmt_2245_Sample/crr branch_block_stmt_2215/call_stmt_2245/call_stmt_2245_Update/ccr) (branch_block_stmt_2215/call_stmt_2245/call_stmt_2245_Sample/cra branch_block_stmt_2215/call_stmt_2245/call_stmt_2245_Update/cca)
  // CP-DP links for do-while  do_while_stmt_2246
  //  file .Aa/nic.linked.opt.aa, line 820
  phi_stmt_2248 <=> (branch_block_stmt_2215/do_while_stmt_2246/do_while_stmt_2246_loop_body/phi_stmt_2248_loopback_sample_req branch_block_stmt_2215/do_while_stmt_2246/do_while_stmt_2246_loop_body/phi_stmt_2248_entry_sample_req) (branch_block_stmt_2215/do_while_stmt_2246/do_while_stmt_2246_loop_body/phi_stmt_2248_phi_mux_ack)
  nLSTATE_2267_2250_buf <=> (branch_block_stmt_2215/do_while_stmt_2246/do_while_stmt_2246_loop_body/R_nLSTATE_2250_Sample/req branch_block_stmt_2215/do_while_stmt_2246/do_while_stmt_2246_loop_body/R_nLSTATE_2250_Update/req) (branch_block_stmt_2215/do_while_stmt_2246/do_while_stmt_2246_loop_body/R_nLSTATE_2250_Sample/ack branch_block_stmt_2215/do_while_stmt_2246/do_while_stmt_2246_loop_body/R_nLSTATE_2250_Update/ack)
  // mac_to_nic_data
  RPIPE_mac_to_nic_data_2254_inst <=> (branch_block_stmt_2215/do_while_stmt_2246/do_while_stmt_2246_loop_body/RPIPE_mac_to_nic_data_2254_Sample/rr branch_block_stmt_2215/do_while_stmt_2246/do_while_stmt_2246_loop_body/RPIPE_mac_to_nic_data_2254_Update/cr) (branch_block_stmt_2215/do_while_stmt_2246/do_while_stmt_2246_loop_body/RPIPE_mac_to_nic_data_2254_Sample/ra branch_block_stmt_2215/do_while_stmt_2246/do_while_stmt_2246_loop_body/RPIPE_mac_to_nic_data_2254_Update/ca)
  phi_stmt_2255 <=> (branch_block_stmt_2215/do_while_stmt_2246/do_while_stmt_2246_loop_body/phi_stmt_2255_entry_sample_req branch_block_stmt_2215/do_while_stmt_2246/do_while_stmt_2246_loop_body/phi_stmt_2255_loopback_sample_req) (branch_block_stmt_2215/do_while_stmt_2246/do_while_stmt_2246_loop_body/phi_stmt_2255_phi_mux_ack)
  npkt_cnt_2305_2259_buf <=> (branch_block_stmt_2215/do_while_stmt_2246/do_while_stmt_2246_loop_body/R_npkt_cnt_2259_Sample/req branch_block_stmt_2215/do_while_stmt_2246/do_while_stmt_2246_loop_body/R_npkt_cnt_2259_Update/req) (branch_block_stmt_2215/do_while_stmt_2246/do_while_stmt_2246_loop_body/R_npkt_cnt_2259_Sample/ack branch_block_stmt_2215/do_while_stmt_2246/do_while_stmt_2246_loop_body/R_npkt_cnt_2259_Update/ack)
  //  $volatile 			$call nextLSTATE (RX LSTATE ) (nLSTATE ) 
  //  file .Aa/nic.linked.opt.aa, line 831
  // RX
  // LSTATE
  // 			$volatile write_to_header := ((LSTATE == S0) | (LSTATE == S1)) $buffering 1
  //  file .Aa/nic.linked.opt.aa, line 832
  // ((LSTATE == S0) | (LSTATE == S1))
  // (LSTATE == S0)
  // LSTATE
  // (LSTATE == S1)
  // LSTATE
  // 			$guard (write_to_header) nic_rx_to_header := ( $mux (LSTATE == S1) (( $slice RX 72 8 )  && HEADER_TKEEP)  RX )  $buffering 1// bits of buffering = 73. 
  //  file .Aa/nic.linked.opt.aa, line 833
  // (LSTATE == S1)
  // LSTATE
  // (( $slice RX 72 8 )  && HEADER_TKEEP)
  // RX
  // RX
  // ( $mux (LSTATE == S1) (( $slice RX 72 8 )  && HEADER_TKEEP)  RX ) 
  MUX_2287_inst <=> (branch_block_stmt_2215/do_while_stmt_2246/do_while_stmt_2246_loop_body/MUX_2287_start/req branch_block_stmt_2215/do_while_stmt_2246/do_while_stmt_2246_loop_body/MUX_2287_complete/req) (branch_block_stmt_2215/do_while_stmt_2246/do_while_stmt_2246_loop_body/MUX_2287_start/ack branch_block_stmt_2215/do_while_stmt_2246/do_while_stmt_2246_loop_body/MUX_2287_complete/ack)
  // nic_rx_to_header
  WPIPE_nic_rx_to_header_2278_inst <=> (branch_block_stmt_2215/do_while_stmt_2246/do_while_stmt_2246_loop_body/WPIPE_nic_rx_to_header_2278_Sample/req branch_block_stmt_2215/do_while_stmt_2246/do_while_stmt_2246_loop_body/WPIPE_nic_rx_to_header_2278_Update/req) (branch_block_stmt_2215/do_while_stmt_2246/do_while_stmt_2246_loop_body/WPIPE_nic_rx_to_header_2278_Sample/ack branch_block_stmt_2215/do_while_stmt_2246/do_while_stmt_2246_loop_body/WPIPE_nic_rx_to_header_2278_Update/ack)
  // 			nic_rx_to_packet := RX $buffering 1// bits of buffering = 73. 
  //  file .Aa/nic.linked.opt.aa, line 834
  // RX
  // nic_rx_to_packet
  WPIPE_nic_rx_to_packet_2289_inst <=> (branch_block_stmt_2215/do_while_stmt_2246/do_while_stmt_2246_loop_body/WPIPE_nic_rx_to_packet_2289_Sample/req branch_block_stmt_2215/do_while_stmt_2246/do_while_stmt_2246_loop_body/WPIPE_nic_rx_to_packet_2289_Update/req) (branch_block_stmt_2215/do_while_stmt_2246/do_while_stmt_2246_loop_body/WPIPE_nic_rx_to_packet_2289_Sample/ack branch_block_stmt_2215/do_while_stmt_2246/do_while_stmt_2246_loop_body/WPIPE_nic_rx_to_packet_2289_Update/ack)
  // 			$volatile pkt_complete := (nLSTATE == S0) $buffering 1
  //  file .Aa/nic.linked.opt.aa, line 835
  // (nLSTATE == S0)
  // nLSTATE
  // 			$volatile npkt_cnt := ( $mux pkt_complete (pkt_cnt + ($bitcast ($uint<32>) _b1  ))  pkt_cnt )  $buffering 1
  //  file .Aa/nic.linked.opt.aa, line 836
  // pkt_complete
  // (pkt_cnt + ($bitcast ($uint<32>) _b1  ))
  // pkt_cnt
  // pkt_cnt
  // ( $mux pkt_complete (pkt_cnt + ($bitcast ($uint<32>) _b1  ))  pkt_cnt ) 
  // 			$guard (pkt_complete) $call accessRegister (($bitcast ($uint<1>) _b0  ) ( ~ ($bitcast ($uint<4>) _b0  ) ) 23  pkt_cnt ) (ignore_resp2 ) 
  //  file .Aa/nic.linked.opt.aa, line 837
  // pkt_cnt
  call_stmt_2315_call <=> (branch_block_stmt_2215/do_while_stmt_2246/do_while_stmt_2246_loop_body/call_stmt_2315_Sample/crr branch_block_stmt_2215/do_while_stmt_2246/do_while_stmt_2246_loop_body/call_stmt_2315_Update/ccr) (branch_block_stmt_2215/do_while_stmt_2246/do_while_stmt_2246_loop_body/call_stmt_2315_Sample/cra branch_block_stmt_2215/do_while_stmt_2246/do_while_stmt_2246_loop_body/call_stmt_2315_Update/cca)
  // (S_CONTROL_REGISTER [] 0 )
  // S_CONTROL_REGISTER
  do_while_stmt_2246_branch <=> (branch_block_stmt_2215/do_while_stmt_2246/do_while_stmt_2246_loop_body/condition_evaluated) (branch_block_stmt_2215/do_while_stmt_2246/loop_exit/ack branch_block_stmt_2215/do_while_stmt_2246/loop_taken/ack)
}
$module [queueTestDaemon] 
{
  // pipe-declarations for block %queueTestDaemon
  //  file .Aa/nic.linked.opt.aa, line 843
  // pipe-declarations for block %queueTestDaemon%loop
  //  file .Aa/nic.linked.opt.aa, line 848
  // pipe-declarations for block %queueTestDaemon%loop%
  //  file .Aa/nic.linked.opt.aa, line 850
  // there are no memory spaces local to this module.
  $CP 
  {
    // begin control-path 
    <>[branch_block_stmt_2327] // Branch Block  file .Aa/nic.linked.opt.aa, line 848
    {
      $P [branch_block_stmt_2327__entry__]
      branch_block_stmt_2327__entry__ <-| ($entry)
      $P [branch_block_stmt_2327__exit__]
      branch_block_stmt_2327__exit__ |-> ($exit)
      $P [merge_stmt_2328__entry__] 
      $P [merge_stmt_2328__exit__] 
      $P [assign_stmt_2331_to_assign_stmt_2393__entry__] 
      $P [assign_stmt_2331_to_assign_stmt_2393__exit__] 
      $P [loopback]
      ::[assign_stmt_2331_to_assign_stmt_2393] 
      {
        // start:  		cmd := debug_queue_command $buffering 1// bits of buffering = 64. 
        //  file .Aa/nic.linked.opt.aa, line 852
        // Source expression
        // debug_queue_command
        $T[RPIPE_debug_queue_command_2330_sample_start_] 
        $T[RPIPE_debug_queue_command_2330_sample_completed_] 
        $T[RPIPE_debug_queue_command_2330_update_start_] 
        $T[RPIPE_debug_queue_command_2330_update_completed_] 
        ;;[RPIPE_debug_queue_command_2330_Sample] 
        {
          // pipe read sample
          $T [rr] $T [ra] 
        }
        ;;[RPIPE_debug_queue_command_2330_Update] 
        {
          // pipe read update
          $T [cr] $T [ca] 
        }
        RPIPE_debug_queue_command_2330_sample_start_ &-> (RPIPE_debug_queue_command_2330_Sample)
        RPIPE_debug_queue_command_2330_sample_completed_ <-& (RPIPE_debug_queue_command_2330_Sample)
        RPIPE_debug_queue_command_2330_update_start_ <-& (RPIPE_debug_queue_command_2330_sample_completed_)
        RPIPE_debug_queue_command_2330_update_start_ &-> (RPIPE_debug_queue_command_2330_Update)
        RPIPE_debug_queue_command_2330_update_completed_ <-& (RPIPE_debug_queue_command_2330_Update)
        // Target expression
        // (as target) cmd
        // start: WAR dependencies for cmd
        // done: WAR dependencies for cmd
        // end:  		cmd := debug_queue_command $buffering 1// bits of buffering = 64. 
        // start: WAR dependencies for rwbar
        // done: WAR dependencies for rwbar
        // start:  		$volatile rwbar := ( $slice cmd 63 63 )  $buffering 1
        //  file .Aa/nic.linked.opt.aa, line 853
        // volatile! 
        // Source expression
        // ( $slice cmd 63 63 ) 
        // cmd
        // Target expression
        // (as target) rwbar
        // start: WAR dependencies for rwbar
        // done: WAR dependencies for rwbar
        // end:  		$volatile rwbar := ( $slice cmd 63 63 )  $buffering 1
        // start: WAR dependencies for queue_id
        // done: WAR dependencies for queue_id
        // start:  		$volatile queue_id := ( $slice cmd 47 40 )  $buffering 1
        //  file .Aa/nic.linked.opt.aa, line 854
        // volatile! 
        // Source expression
        // ( $slice cmd 47 40 ) 
        // cmd
        // Target expression
        // (as target) queue_id
        // start: WAR dependencies for queue_id
        // done: WAR dependencies for queue_id
        // end:  		$volatile queue_id := ( $slice cmd 47 40 )  $buffering 1
        // start: WAR dependencies for server_id
        // done: WAR dependencies for server_id
        // start:  		$volatile server_id := ( $slice cmd 39 32 )  $buffering 1
        //  file .Aa/nic.linked.opt.aa, line 855
        // volatile! 
        // Source expression
        // ( $slice cmd 39 32 ) 
        // cmd
        // Target expression
        // (as target) server_id
        // start: WAR dependencies for server_id
        // done: WAR dependencies for server_id
        // end:  		$volatile server_id := ( $slice cmd 39 32 )  $buffering 1
        // start: WAR dependencies for val
        // done: WAR dependencies for val
        // start:  		$volatile val := ( $slice cmd 31 0 )  $buffering 1
        //  file .Aa/nic.linked.opt.aa, line 856
        // volatile! 
        // Source expression
        // ( $slice cmd 31 0 ) 
        // cmd
        // Target expression
        // (as target) val
        // start: WAR dependencies for val
        // done: WAR dependencies for val
        // end:  		$volatile val := ( $slice cmd 31 0 )  $buffering 1
        // start:  		debug_tag := 255  $buffering 1// bits of buffering = 8. 
        //  file .Aa/nic.linked.opt.aa, line 857
        // constant! 
        // end:  		debug_tag := 255  $buffering 1// bits of buffering = 8. 
        // start: 		$guard (~rwbar) $call pushIntoQueue (debug_tag ( $slice queue_id 1 0 )  server_id ((val + 1 ) && val) ) (push_ok ) 
        //  file .Aa/nic.linked.opt.aa, line 858
        $T[call_stmt_2362_sample_start_] 
        $T[call_stmt_2362_sample_completed_] 
        $T[call_stmt_2362_update_start_] 
        $T[call_stmt_2362_update_completed_] 
        // Guard expression
        // rwbar
        // start: Forward dependencies from rwbar to transition call_stmt_2362_sample_start_
        call_stmt_2362_sample_start_ <-& (RPIPE_debug_queue_command_2330_update_completed_)
        // done: Forward dependencies from rwbar to transition call_stmt_2362_sample_start_
        // Call input argument 0
        // Call input argument 1
        // ( $slice queue_id 1 0 ) 
        // queue_id
        // Call input argument 2
        // server_id
        // Call input argument 3
        // ((val + 1 ) && val)
        // (val + 1 )
        // val
        // val
        // start: Forward dependencies from ( $slice queue_id 1 0 )  to transition call_stmt_2362_sample_start_
        call_stmt_2362_sample_start_ <-& (RPIPE_debug_queue_command_2330_update_completed_)
        // done: Forward dependencies from ( $slice queue_id 1 0 )  to transition call_stmt_2362_sample_start_
        // start: Forward dependencies from server_id to transition call_stmt_2362_sample_start_
        call_stmt_2362_sample_start_ <-& (RPIPE_debug_queue_command_2330_update_completed_)
        // done: Forward dependencies from server_id to transition call_stmt_2362_sample_start_
        // start: Forward dependencies from ((val + 1 ) && val) to transition call_stmt_2362_sample_start_
        call_stmt_2362_sample_start_ <-& (RPIPE_debug_queue_command_2330_update_completed_)
        // done: Forward dependencies from ((val + 1 ) && val) to transition call_stmt_2362_sample_start_
        ;;[call_stmt_2362_Sample] 
        {
          $T [crr] $T [cra] 
        }
        ;;[call_stmt_2362_Update] 
        {
          $T [ccr] $T [cca] 
        }
        call_stmt_2362_sample_start_ &-> (call_stmt_2362_Sample)
        call_stmt_2362_sample_completed_ <-& (call_stmt_2362_Sample)
        call_stmt_2362_sample_completed_ &-> ($null)
        call_stmt_2362_update_start_ &-> (call_stmt_2362_Update)
        call_stmt_2362_update_completed_ <-& (call_stmt_2362_Update)
        // Call output argument 0
        // (as target) push_ok
        // start: WAR dependencies for push_ok
        // done: WAR dependencies for push_ok
        // end: 		$guard (~rwbar) $call pushIntoQueue (debug_tag ( $slice queue_id 1 0 )  server_id ((val + 1 ) && val) ) (push_ok ) 
        // start: 		$guard (rwbar) $call popFromQueue (debug_tag ( $slice queue_id 1 0 )  server_id ) (pop_val pop_ok ) 
        //  file .Aa/nic.linked.opt.aa, line 859
        $T[call_stmt_2370_sample_start_] 
        $T[call_stmt_2370_sample_completed_] 
        $T[call_stmt_2370_update_start_] 
        $T[call_stmt_2370_update_completed_] 
        // Guard expression
        // rwbar
        // start: Forward dependencies from rwbar to transition call_stmt_2370_sample_start_
        call_stmt_2370_sample_start_ <-& (RPIPE_debug_queue_command_2330_update_completed_)
        // done: Forward dependencies from rwbar to transition call_stmt_2370_sample_start_
        // Call input argument 0
        // Call input argument 1
        // ( $slice queue_id 1 0 ) 
        // queue_id
        // Call input argument 2
        // server_id
        // start: Forward dependencies from ( $slice queue_id 1 0 )  to transition call_stmt_2370_sample_start_
        call_stmt_2370_sample_start_ <-& (RPIPE_debug_queue_command_2330_update_completed_)
        // done: Forward dependencies from ( $slice queue_id 1 0 )  to transition call_stmt_2370_sample_start_
        // start: Forward dependencies from server_id to transition call_stmt_2370_sample_start_
        call_stmt_2370_sample_start_ <-& (RPIPE_debug_queue_command_2330_update_completed_)
        // done: Forward dependencies from server_id to transition call_stmt_2370_sample_start_
        ;;[call_stmt_2370_Sample] 
        {
          $T [crr] $T [cra] 
        }
        ;;[call_stmt_2370_Update] 
        {
          $T [ccr] $T [cca] 
        }
        call_stmt_2370_sample_start_ &-> (call_stmt_2370_Sample)
        call_stmt_2370_sample_completed_ <-& (call_stmt_2370_Sample)
        call_stmt_2370_sample_completed_ &-> ($null)
        call_stmt_2370_update_start_ &-> (call_stmt_2370_Update)
        call_stmt_2370_update_completed_ <-& (call_stmt_2370_Update)
        // Call output argument 0
        // (as target) pop_val
        // Call output argument 1
        // (as target) pop_ok
        // start: WAR dependencies for pop_val
        // done: WAR dependencies for pop_val
        // start: WAR dependencies for pop_ok
        // done: WAR dependencies for pop_ok
        // end: 		$guard (rwbar) $call popFromQueue (debug_tag ( $slice queue_id 1 0 )  server_id ) (pop_val pop_ok ) 
        // start: WAR dependencies for not_ok
        // done: WAR dependencies for not_ok
        // start:  		$volatile not_ok := ( $mux rwbar pop_ok  push_ok )  $buffering 1
        //  file .Aa/nic.linked.opt.aa, line 860
        // volatile! 
        // Source expression
        // ( $mux rwbar pop_ok  push_ok ) 
        // rwbar
        // pop_ok
        // push_ok
        // Target expression
        // (as target) not_ok
        // start: WAR dependencies for not_ok
        // done: WAR dependencies for not_ok
        // end:  		$volatile not_ok := ( $mux rwbar pop_ok  push_ok )  $buffering 1
        // start: WAR dependencies for ret_data
        // done: WAR dependencies for ret_data
        // start:  		$volatile ret_data := ( $mux rwbar ( $slice pop_val 62 0 )   ($bitcast ($uint<63>) _b0  ) )  $buffering 1
        //  file .Aa/nic.linked.opt.aa, line 861
        // volatile! 
        // Source expression
        // ( $mux rwbar ( $slice pop_val 62 0 )   ($bitcast ($uint<63>) _b0  ) ) 
        // rwbar
        // ( $slice pop_val 62 0 ) 
        // pop_val
        // Target expression
        // (as target) ret_data
        // start: WAR dependencies for ret_data
        // done: WAR dependencies for ret_data
        // end:  		$volatile ret_data := ( $mux rwbar ( $slice pop_val 62 0 )   ($bitcast ($uint<63>) _b0  ) )  $buffering 1
        // start: WAR dependencies for result
        // done: WAR dependencies for result
        // start:  		$volatile result := (not_ok && ret_data) $buffering 1
        //  file .Aa/nic.linked.opt.aa, line 862
        // volatile! 
        // Source expression
        // (not_ok && ret_data)
        // not_ok
        // ret_data
        // Target expression
        // (as target) result
        // start: WAR dependencies for result
        // done: WAR dependencies for result
        // end:  		$volatile result := (not_ok && ret_data) $buffering 1
        // start:  		debug_queue_response := result $buffering 1// bits of buffering = 64. 
        //  file .Aa/nic.linked.opt.aa, line 863
        // Source expression
        // result
        // Target expression
        // (as target) debug_queue_response
        $T[WPIPE_debug_queue_response_2391_sample_start_] 
        $T[WPIPE_debug_queue_response_2391_sample_completed_] 
        $T[WPIPE_debug_queue_response_2391_update_start_] 
        $T[WPIPE_debug_queue_response_2391_update_completed_] 
        ;;[WPIPE_debug_queue_response_2391_Sample] 
        {
          // pipe write sample-start debug_queue_response
          $T [req] $T [ack] 
        }
        ;;[WPIPE_debug_queue_response_2391_Update] 
        {
          // pipe write update (complete) debug_queue_response
          $T [req] $T [ack] 
        }
        WPIPE_debug_queue_response_2391_sample_start_ &-> (WPIPE_debug_queue_response_2391_Sample)
        WPIPE_debug_queue_response_2391_sample_completed_ <-& (WPIPE_debug_queue_response_2391_Sample)
        WPIPE_debug_queue_response_2391_update_start_ <-& (WPIPE_debug_queue_response_2391_sample_completed_)
        WPIPE_debug_queue_response_2391_update_start_ &-> (WPIPE_debug_queue_response_2391_Update)
        WPIPE_debug_queue_response_2391_update_completed_ <-& (WPIPE_debug_queue_response_2391_Update)
        // start: Forward dependencies from result to transition WPIPE_debug_queue_response_2391_sample_start_
        WPIPE_debug_queue_response_2391_sample_start_ <-& (RPIPE_debug_queue_command_2330_update_completed_)
        WPIPE_debug_queue_response_2391_sample_start_ <-& (call_stmt_2362_update_completed_)
        WPIPE_debug_queue_response_2391_sample_start_ <-& (call_stmt_2370_update_completed_)
        // done: Forward dependencies from result to transition WPIPE_debug_queue_response_2391_sample_start_
        // end:  		debug_queue_response := result $buffering 1// bits of buffering = 64. 
        // load-store dependencies..
        // memory-space  memory_space_0
        //  call_stmt_2362 store
        //  call_stmt_2370 store
        $T [call_stmt_2362_call_stmt_2370_delay] $delay
        // call_stmt_2362(store) -> call_stmt_2370(store)
        call_stmt_2370_sample_start_ <-& (call_stmt_2362_call_stmt_2370_delay)
        call_stmt_2362_call_stmt_2370_delay <-& (call_stmt_2362_update_completed_)
        // pipe read/write dependencies for pipe MEMORY_TO_NIC_RESPONSE
        // read-dependencies for pipe MEMORY_TO_NIC_RESPONSE
        call_stmt_2370_sample_start_ <-& (call_stmt_2362_update_completed_)
        // write-dependencies for pipe MEMORY_TO_NIC_RESPONSE
        // signal write dependencies for MEMORY_TO_NIC_RESPONSE
        // pipe read/write dependencies for pipe NIC_DEBUG_SIGNAL
        // read-dependencies for pipe NIC_DEBUG_SIGNAL
        // write-dependencies for pipe NIC_DEBUG_SIGNAL
        // signal write dependencies for NIC_DEBUG_SIGNAL
        call_stmt_2370_sample_start_ <-& (call_stmt_2362_update_completed_)
        // pipe read/write dependencies for pipe NIC_TO_MEMORY_REQUEST
        // read-dependencies for pipe NIC_TO_MEMORY_REQUEST
        // write-dependencies for pipe NIC_TO_MEMORY_REQUEST
        call_stmt_2370_sample_start_ <-& (call_stmt_2362_update_completed_)
        // signal write dependencies for NIC_TO_MEMORY_REQUEST
        // pipe read/write dependencies for pipe QUEUE_MONITOR_SIGNAL
        // read-dependencies for pipe QUEUE_MONITOR_SIGNAL
        // write-dependencies for pipe QUEUE_MONITOR_SIGNAL
        // signal write dependencies for QUEUE_MONITOR_SIGNAL
        call_stmt_2370_sample_start_ <-& (call_stmt_2362_update_completed_)
        // pipe read/write dependencies for pipe debug_queue_command
        // read-dependencies for pipe debug_queue_command
        // write-dependencies for pipe debug_queue_command
        // signal write dependencies for debug_queue_command
        // pipe read/write dependencies for pipe debug_queue_response
        // read-dependencies for pipe debug_queue_response
        // write-dependencies for pipe debug_queue_response
        // signal write dependencies for debug_queue_response
        // pipe read/write dependencies for pipe memory_access_lock
        // read-dependencies for pipe memory_access_lock
        // write-dependencies for pipe memory_access_lock
        call_stmt_2370_sample_start_ <-& (call_stmt_2362_update_completed_)
        // signal write dependencies for memory_access_lock
      }
      assign_stmt_2331_to_assign_stmt_2393__entry__ |-> (assign_stmt_2331_to_assign_stmt_2393)
      assign_stmt_2331_to_assign_stmt_2393__exit__ <-| (assign_stmt_2331_to_assign_stmt_2393)
      // control-path for merge  
      //  file .Aa/nic.linked.opt.aa, line 850
      ;;[merge_stmt_2328_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_2328__entry__ |-> (merge_stmt_2328_dead_link)
      merge_stmt_2328__exit__ <-| (merge_stmt_2328_dead_link)
      //---------------------   merge statement  file .Aa/nic.linked.opt.aa, line 850  --------------------------
      ||[merge_stmt_2328__entry___PhiReq] 
      {
        // no phi statements in merge..
      }
      merge_stmt_2328__entry__ |-> (merge_stmt_2328__entry___PhiReq)
      ||[loopback_PhiReq] 
      {
        // no phi statements in merge..
      }
      loopback |-> (loopback_PhiReq)
      $P [merge_stmt_2328_PhiReqMerge] 
      merge_stmt_2328_PhiReqMerge <-| ( merge_stmt_2328__entry___PhiReq  loopback_PhiReq )
      ||[merge_stmt_2328_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_2328_PhiReqMerge |-> (merge_stmt_2328_PhiAck)
      merge_stmt_2328__exit__  <-| (merge_stmt_2328_PhiAck)
      //---------------------  end of merge statement  file .Aa/nic.linked.opt.aa, line 850  --------------------------
      merge_stmt_2328__entry__ <-| (branch_block_stmt_2327__entry__)
      assign_stmt_2331_to_assign_stmt_2393__entry__ <-| (merge_stmt_2328__exit__)
      loopback <-| (assign_stmt_2331_to_assign_stmt_2393__exit__)
    }
  }
  // end control-path
  $DP 
  {
    // begin data-path 
    // constant-object-declarations for block %queueTestDaemon%loop%
    //  file .Aa/nic.linked.opt.aa, line 850
    // constant-object-declarations for block %queueTestDaemon%loop
    //  file .Aa/nic.linked.opt.aa, line 848
    // constant-object-declarations for block %queueTestDaemon
    //  file .Aa/nic.linked.opt.aa, line 843
    // constant-declarations for block %queueTestDaemon%loop
    //  file .Aa/nic.linked.opt.aa, line 848
    // constant-declarations for block %queueTestDaemon%loop%
    //  file .Aa/nic.linked.opt.aa, line 850
    // 		debug_tag := 255  $buffering 1// bits of buffering = 8. 
    //  file .Aa/nic.linked.opt.aa, line 857
    $constant $W[debug_tag_2350] : $int<8> := _b11111111 // 255
    // 		$guard (~rwbar) $call pushIntoQueue (debug_tag ( $slice queue_id 1 0 )  server_id ((val + 1 ) && val) ) (push_ok ) 
    //  file .Aa/nic.linked.opt.aa, line 858
    // 1 
    $constant $W[konst_2357_wire_constant] : $int<32> := _b00000000000000000000000000000001// 1
    // 		$guard (rwbar) $call popFromQueue (debug_tag ( $slice queue_id 1 0 )  server_id ) (pop_val pop_ok ) 
    //  file .Aa/nic.linked.opt.aa, line 859
    // ( $mux rwbar pop_ok  push_ok ) 
    // ( $mux rwbar ( $slice pop_val 62 0 )   ($bitcast ($uint<63>) _b0  ) ) 
    // ($bitcast ($uint<63>) _b0  )
    $constant $W[type_cast_2383_wire_constant] : $int<63> := _b000000000000000000000000000000000000000000000000000000000000000// 0
    // block %queueTestDaemon%loop
    //  file .Aa/nic.linked.opt.aa, line 848
    // 		cmd := debug_queue_command $buffering 1// bits of buffering = 64. 
    //  file .Aa/nic.linked.opt.aa, line 852
    // cmd
    $W[cmd_2331] : $int<64>
    // 		$volatile rwbar := ( $slice cmd 63 63 )  $buffering 1
    //  file .Aa/nic.linked.opt.aa, line 853
    // rwbar
    $W[rwbar_2335] : $int<1>
    // 		$volatile queue_id := ( $slice cmd 47 40 )  $buffering 1
    //  file .Aa/nic.linked.opt.aa, line 854
    // queue_id
    $W[queue_id_2339] : $int<8>
    // 		$volatile server_id := ( $slice cmd 39 32 )  $buffering 1
    //  file .Aa/nic.linked.opt.aa, line 855
    // server_id
    $W[server_id_2343] : $int<8>
    // 		$volatile val := ( $slice cmd 31 0 )  $buffering 1
    //  file .Aa/nic.linked.opt.aa, line 856
    // val
    $W[val_2347] : $int<32>
    // 		$guard (~rwbar) $call pushIntoQueue (debug_tag ( $slice queue_id 1 0 )  server_id ((val + 1 ) && val) ) (push_ok ) 
    //  file .Aa/nic.linked.opt.aa, line 858
    // ( $slice queue_id 1 0 ) 
    $intermediate $W[slice_2354_wire] : $int<2>
    // (val + 1 )
    $intermediate $W[ADD_u32_u32_2358_wire] : $int<32>
    // ((val + 1 ) && val)
    $intermediate $W[CONCAT_u32_u64_2360_wire] : $int<64>
    // push_ok
    $W[push_ok_2362] : $int<1>
    // 		$guard (rwbar) $call popFromQueue (debug_tag ( $slice queue_id 1 0 )  server_id ) (pop_val pop_ok ) 
    //  file .Aa/nic.linked.opt.aa, line 859
    // ( $slice queue_id 1 0 ) 
    $intermediate $W[slice_2366_wire] : $int<2>
    // pop_val
    $W[pop_val_2370] : $int<64>
    // pop_ok
    $W[pop_ok_2370] : $int<1>
    // 		$volatile not_ok := ( $mux rwbar pop_ok  push_ok )  $buffering 1
    //  file .Aa/nic.linked.opt.aa, line 860
    // not_ok
    $W[not_ok_2376] : $int<1>
    // 		$volatile ret_data := ( $mux rwbar ( $slice pop_val 62 0 )   ($bitcast ($uint<63>) _b0  ) )  $buffering 1
    //  file .Aa/nic.linked.opt.aa, line 861
    // ( $slice pop_val 62 0 ) 
    $intermediate $W[slice_2381_wire] : $int<63>
    // ret_data
    $W[ret_data_2385] : $int<63>
    // 		$volatile result := (not_ok && ret_data) $buffering 1
    //  file .Aa/nic.linked.opt.aa, line 862
    // result
    $W[result_2390] : $int<64>
    // 		debug_queue_response := result $buffering 1// bits of buffering = 64. 
    //  file .Aa/nic.linked.opt.aa, line 863
    // debug_queue_response
    // datapath-instances for block %queueTestDaemon%loop
    //  file .Aa/nic.linked.opt.aa, line 848
    // 		cmd := debug_queue_command $buffering 1// bits of buffering = 64. 
    //  file .Aa/nic.linked.opt.aa, line 852
    // debug_queue_command
    $ioport $in [RPIPE_debug_queue_command_2330_inst] (debug_queue_command) (cmd_2331) 
    $buffering $out RPIPE_debug_queue_command_2330_inst cmd_2331 1
    // 		$volatile rwbar := ( $slice cmd 63 63 )  $buffering 1
    //  file .Aa/nic.linked.opt.aa, line 853
    // ( $slice cmd 63 63 ) 
    [:] [slice_2334_inst] (cmd_2331 63 63) (rwbar_2335)  $flowthrough
    $delay slice_2334_inst 0
    // 		$volatile queue_id := ( $slice cmd 47 40 )  $buffering 1
    //  file .Aa/nic.linked.opt.aa, line 854
    // ( $slice cmd 47 40 ) 
    [:] [slice_2338_inst] (cmd_2331 47 40) (queue_id_2339)  $flowthrough
    $delay slice_2338_inst 0
    // 		$volatile server_id := ( $slice cmd 39 32 )  $buffering 1
    //  file .Aa/nic.linked.opt.aa, line 855
    // ( $slice cmd 39 32 ) 
    [:] [slice_2342_inst] (cmd_2331 39 32) (server_id_2343)  $flowthrough
    $delay slice_2342_inst 0
    // 		$volatile val := ( $slice cmd 31 0 )  $buffering 1
    //  file .Aa/nic.linked.opt.aa, line 856
    // ( $slice cmd 31 0 ) 
    [:] [slice_2346_inst] (cmd_2331 31 0) (val_2347)  $flowthrough
    $delay slice_2346_inst 0
    // 		$guard (~rwbar) $call pushIntoQueue (debug_tag ( $slice queue_id 1 0 )  server_id ((val + 1 ) && val) ) (push_ok ) 
    //  file .Aa/nic.linked.opt.aa, line 858
    // ( $slice queue_id 1 0 ) 
    [:] [slice_2354_inst] (queue_id_2339 1 0) (slice_2354_wire) $guard ( ~ rwbar_2335 )  $flowthrough
    $delay slice_2354_inst 0
    // (val + 1 )
    +[ADD_u32_u32_2358_inst] (val_2347 konst_2357_wire_constant) (ADD_u32_u32_2358_wire) $guard ( ~ rwbar_2335 )   $flowthrough 
    $delay ADD_u32_u32_2358_inst 0
    // ((val + 1 ) && val)
    &&[CONCAT_u32_u64_2360_inst] (ADD_u32_u32_2358_wire val_2347) (CONCAT_u32_u64_2360_wire) $guard ( ~ rwbar_2335 )   $flowthrough 
    $delay CONCAT_u32_u64_2360_inst 0
    $call [call_stmt_2362_call] $module pushIntoQueue(debug_tag_2350 slice_2354_wire server_id_2343 CONCAT_u32_u64_2360_wire) (push_ok_2362) $guard ( ~ rwbar_2335 )  
    $delay call_stmt_2362_call 4
    $buffering  $in call_stmt_2362_call debug_tag_2350 1
    $buffering  $in call_stmt_2362_call slice_2354_wire 1
    $buffering  $in call_stmt_2362_call server_id_2343 1
    $buffering  $in call_stmt_2362_call CONCAT_u32_u64_2360_wire 1
    $buffering  $out call_stmt_2362_call push_ok_2362 1
    // 		$guard (rwbar) $call popFromQueue (debug_tag ( $slice queue_id 1 0 )  server_id ) (pop_val pop_ok ) 
    //  file .Aa/nic.linked.opt.aa, line 859
    // ( $slice queue_id 1 0 ) 
    [:] [slice_2366_inst] (queue_id_2339 1 0) (slice_2366_wire) $guard ( rwbar_2335 )  $flowthrough
    $delay slice_2366_inst 0
    $call [call_stmt_2370_call] $module popFromQueue(debug_tag_2350 slice_2366_wire server_id_2343) (pop_val_2370 pop_ok_2370) $guard ( rwbar_2335 )  
    $delay call_stmt_2370_call 4
    $buffering  $in call_stmt_2370_call debug_tag_2350 1
    $buffering  $in call_stmt_2370_call slice_2366_wire 1
    $buffering  $in call_stmt_2370_call server_id_2343 1
    $buffering  $out call_stmt_2370_call pop_val_2370 1
    $buffering  $out call_stmt_2370_call pop_ok_2370 1
    // 		$volatile not_ok := ( $mux rwbar pop_ok  push_ok )  $buffering 1
    //  file .Aa/nic.linked.opt.aa, line 860
    // ( $mux rwbar pop_ok  push_ok ) 
    ? [MUX_2375_inst] (rwbar_2335 pop_ok_2370 push_ok_2362) (not_ok_2376)  $flowthrough
    // 		$volatile ret_data := ( $mux rwbar ( $slice pop_val 62 0 )   ($bitcast ($uint<63>) _b0  ) )  $buffering 1
    //  file .Aa/nic.linked.opt.aa, line 861
    // ( $slice pop_val 62 0 ) 
    [:] [slice_2381_inst] (pop_val_2370 62 0) (slice_2381_wire)  $flowthrough
    $delay slice_2381_inst 0
    // ( $mux rwbar ( $slice pop_val 62 0 )   ($bitcast ($uint<63>) _b0  ) ) 
    ? [MUX_2384_inst] (rwbar_2335 slice_2381_wire type_cast_2383_wire_constant) (ret_data_2385)  $flowthrough
    // 		$volatile result := (not_ok && ret_data) $buffering 1
    //  file .Aa/nic.linked.opt.aa, line 862
    // (not_ok && ret_data)
    &&[CONCAT_u1_u64_2389_inst] (not_ok_2376 ret_data_2385) (result_2390)   $flowthrough 
    $delay CONCAT_u1_u64_2389_inst 0
    // 		debug_queue_response := result $buffering 1// bits of buffering = 64. 
    //  file .Aa/nic.linked.opt.aa, line 863
    // debug_queue_response
    $ioport $out [WPIPE_debug_queue_response_2391_inst]  (result_2390) (debug_queue_response) 
  }
  // end data-path
  // CP-DP links for merge  
  //  file .Aa/nic.linked.opt.aa, line 850
  // 		cmd := debug_queue_command $buffering 1// bits of buffering = 64. 
  //  file .Aa/nic.linked.opt.aa, line 852
  // debug_queue_command
  RPIPE_debug_queue_command_2330_inst <=> (branch_block_stmt_2327/assign_stmt_2331_to_assign_stmt_2393/RPIPE_debug_queue_command_2330_Sample/rr branch_block_stmt_2327/assign_stmt_2331_to_assign_stmt_2393/RPIPE_debug_queue_command_2330_Update/cr) (branch_block_stmt_2327/assign_stmt_2331_to_assign_stmt_2393/RPIPE_debug_queue_command_2330_Sample/ra branch_block_stmt_2327/assign_stmt_2331_to_assign_stmt_2393/RPIPE_debug_queue_command_2330_Update/ca)
  // 		$volatile rwbar := ( $slice cmd 63 63 )  $buffering 1
  //  file .Aa/nic.linked.opt.aa, line 853
  // cmd
  // 		$volatile queue_id := ( $slice cmd 47 40 )  $buffering 1
  //  file .Aa/nic.linked.opt.aa, line 854
  // cmd
  // 		$volatile server_id := ( $slice cmd 39 32 )  $buffering 1
  //  file .Aa/nic.linked.opt.aa, line 855
  // cmd
  // 		$volatile val := ( $slice cmd 31 0 )  $buffering 1
  //  file .Aa/nic.linked.opt.aa, line 856
  // cmd
  // 		$guard (~rwbar) $call pushIntoQueue (debug_tag ( $slice queue_id 1 0 )  server_id ((val + 1 ) && val) ) (push_ok ) 
  //  file .Aa/nic.linked.opt.aa, line 858
  // queue_id
  // server_id
  // ((val + 1 ) && val)
  // (val + 1 )
  // val
  // val
  call_stmt_2362_call <=> (branch_block_stmt_2327/assign_stmt_2331_to_assign_stmt_2393/call_stmt_2362_Sample/crr branch_block_stmt_2327/assign_stmt_2331_to_assign_stmt_2393/call_stmt_2362_Update/ccr) (branch_block_stmt_2327/assign_stmt_2331_to_assign_stmt_2393/call_stmt_2362_Sample/cra branch_block_stmt_2327/assign_stmt_2331_to_assign_stmt_2393/call_stmt_2362_Update/cca)
  // 		$guard (rwbar) $call popFromQueue (debug_tag ( $slice queue_id 1 0 )  server_id ) (pop_val pop_ok ) 
  //  file .Aa/nic.linked.opt.aa, line 859
  // queue_id
  // server_id
  call_stmt_2370_call <=> (branch_block_stmt_2327/assign_stmt_2331_to_assign_stmt_2393/call_stmt_2370_Sample/crr branch_block_stmt_2327/assign_stmt_2331_to_assign_stmt_2393/call_stmt_2370_Update/ccr) (branch_block_stmt_2327/assign_stmt_2331_to_assign_stmt_2393/call_stmt_2370_Sample/cra branch_block_stmt_2327/assign_stmt_2331_to_assign_stmt_2393/call_stmt_2370_Update/cca)
  // 		$volatile not_ok := ( $mux rwbar pop_ok  push_ok )  $buffering 1
  //  file .Aa/nic.linked.opt.aa, line 860
  // rwbar
  // pop_ok
  // push_ok
  // ( $mux rwbar pop_ok  push_ok ) 
  // 		$volatile ret_data := ( $mux rwbar ( $slice pop_val 62 0 )   ($bitcast ($uint<63>) _b0  ) )  $buffering 1
  //  file .Aa/nic.linked.opt.aa, line 861
  // rwbar
  // pop_val
  // ( $mux rwbar ( $slice pop_val 62 0 )   ($bitcast ($uint<63>) _b0  ) ) 
  // 		$volatile result := (not_ok && ret_data) $buffering 1
  //  file .Aa/nic.linked.opt.aa, line 862
  // (not_ok && ret_data)
  // not_ok
  // ret_data
  // 		debug_queue_response := result $buffering 1// bits of buffering = 64. 
  //  file .Aa/nic.linked.opt.aa, line 863
  // result
  // debug_queue_response
  WPIPE_debug_queue_response_2391_inst <=> (branch_block_stmt_2327/assign_stmt_2331_to_assign_stmt_2393/WPIPE_debug_queue_response_2391_Sample/req branch_block_stmt_2327/assign_stmt_2331_to_assign_stmt_2393/WPIPE_debug_queue_response_2391_Update/req) (branch_block_stmt_2327/assign_stmt_2331_to_assign_stmt_2393/WPIPE_debug_queue_response_2391_Sample/ack branch_block_stmt_2327/assign_stmt_2331_to_assign_stmt_2393/WPIPE_debug_queue_response_2391_Update/ack)
}
$module [transmitPacket] 
{
  $in tag:$int<8>
  // can point into 
  packet_pointer:$int<64>
  // can point into  foreign( $void )
  $out status:$int<1>
  // can point into  foreign( $void )
  // pipe-declarations for block %transmitPacket
  //  file .Aa/nic.linked.opt.aa, line 867
  // pipe-declarations for block %transmitPacket%loop
  //  file .Aa/nic.linked.opt.aa, line 878
  // there are no memory spaces local to this module.
  $CP 
  {
    // begin control-path 
    ::[assign_stmt_2403_to_assign_stmt_2422] 
    {
      // start: WAR dependencies for control_data_addr
      // ignored out-of-scope w_root  packet_pointer : $uint<64> 
      // done: WAR dependencies for control_data_addr
      // start:  	$volatile control_data_addr := packet_pointer $buffering 1
      //  file .Aa/nic.linked.opt.aa, line 872
      // volatile! 
      // Source expression
      // packet_pointer
      // Target expression
      // (as target) control_data_addr
      // start: WAR dependencies for control_data_addr
      // ignored out-of-scope w_root  packet_pointer : $uint<64> 
      // done: WAR dependencies for control_data_addr
      // end:  	$volatile control_data_addr := packet_pointer $buffering 1
      // start: 	$call accessMemoryDword (tag READMEM control_data_addr 0  ($bitcast ($uint<64>) _b0  ) ) (control_data ) 
      //  file .Aa/nic.linked.opt.aa, line 874
      $T[call_stmt_2414_sample_start_] 
      $T[call_stmt_2414_sample_completed_] 
      $T[call_stmt_2414_update_start_] 
      $T[call_stmt_2414_update_completed_] 
      // Call input argument 0
      // tag
      // Call input argument 1
      // Call input argument 2
      // control_data_addr
      // Call input argument 3
      // Call input argument 4
      // start: Forward dependencies from tag to transition call_stmt_2414_sample_start_
      // done: Forward dependencies from tag to transition call_stmt_2414_sample_start_
      // start: Forward dependencies from control_data_addr to transition call_stmt_2414_sample_start_
      // done: Forward dependencies from control_data_addr to transition call_stmt_2414_sample_start_
      ;;[call_stmt_2414_Sample] 
      {
        $T [crr] $T [cra] 
      }
      ;;[call_stmt_2414_Update] 
      {
        $T [ccr] $T [cca] 
      }
      call_stmt_2414_sample_start_ &-> (call_stmt_2414_Sample)
      call_stmt_2414_sample_completed_ <-& (call_stmt_2414_Sample)
      call_stmt_2414_sample_completed_ &-> ($null)
      call_stmt_2414_update_start_ &-> (call_stmt_2414_Update)
      call_stmt_2414_update_completed_ <-& (call_stmt_2414_Update)
      // Call output argument 0
      // (as target) control_data
      // start: WAR dependencies for control_data
      // done: WAR dependencies for control_data
      // end: 	$call accessMemoryDword (tag READMEM control_data_addr 0  ($bitcast ($uint<64>) _b0  ) ) (control_data ) 
      // start: WAR dependencies for packet_size
      // done: WAR dependencies for packet_size
      // start:  	$volatile packet_size := ( $slice control_data 18 8 )  $buffering 1
      //  file .Aa/nic.linked.opt.aa, line 875
      // volatile! 
      // Source expression
      // ( $slice control_data 18 8 ) 
      // control_data
      // Target expression
      // (as target) packet_size
      // start: WAR dependencies for packet_size
      // done: WAR dependencies for packet_size
      // end:  	$volatile packet_size := ( $slice control_data 18 8 )  $buffering 1
      // start: WAR dependencies for last_tkeep
      // done: WAR dependencies for last_tkeep
      // start:  	$volatile last_tkeep := ( $slice control_data 7 0 )  $buffering 1
      //  file .Aa/nic.linked.opt.aa, line 876
      // volatile! 
      // Source expression
      // ( $slice control_data 7 0 ) 
      // control_data
      // Target expression
      // (as target) last_tkeep
      // start: WAR dependencies for last_tkeep
      // done: WAR dependencies for last_tkeep
      // end:  	$volatile last_tkeep := ( $slice control_data 7 0 )  $buffering 1
      // load-store dependencies..
      // pipe read/write dependencies for pipe MEMORY_TO_NIC_RESPONSE
      // read-dependencies for pipe MEMORY_TO_NIC_RESPONSE
      // write-dependencies for pipe MEMORY_TO_NIC_RESPONSE
      // signal write dependencies for MEMORY_TO_NIC_RESPONSE
      // pipe read/write dependencies for pipe NIC_DEBUG_SIGNAL
      // read-dependencies for pipe NIC_DEBUG_SIGNAL
      // write-dependencies for pipe NIC_DEBUG_SIGNAL
      // signal write dependencies for NIC_DEBUG_SIGNAL
      // pipe read/write dependencies for pipe NIC_TO_MEMORY_REQUEST
      // read-dependencies for pipe NIC_TO_MEMORY_REQUEST
      // write-dependencies for pipe NIC_TO_MEMORY_REQUEST
      // signal write dependencies for NIC_TO_MEMORY_REQUEST
      // pipe read/write dependencies for pipe memory_access_lock
      // read-dependencies for pipe memory_access_lock
      // write-dependencies for pipe memory_access_lock
      // signal write dependencies for memory_access_lock
    }
    <>[branch_block_stmt_2426] // Branch Block  file .Aa/nic.linked.opt.aa, line 878
    {
      $P [branch_block_stmt_2426__entry__]
      branch_block_stmt_2426__entry__ <-| ($entry)
      $P [branch_block_stmt_2426__exit__]
      branch_block_stmt_2426__exit__ |-> ($exit)
      $P [do_while_stmt_2427__entry__] 
      $P [do_while_stmt_2427__exit__] 
      $P [assign_stmt_2477_to_assign_stmt_2502__entry__] 
      $P [assign_stmt_2477_to_assign_stmt_2502__exit__] 
      // do-while-statement  
      //  file .Aa/nic.linked.opt.aa, line 880
      <o> [do_while_stmt_2427]  $depth 31 $buffering 1 
      {
        $P[do_while_stmt_2427__entry__] 
        $P[do_while_stmt_2427__exit__] 
        $P[loop_back] 
        $P[condition_done] 
        $P[loop_body_done] 
        $pipeline [do_while_stmt_2427_loop_body] 
        {
          // Pipelined!
          $T[back_edge_to_loop_body] 
          $T[first_time_through_loop_body] 
          $T[loop_body_start] 
          $T[condition_evaluated] 
          $transitionmerge [entry_tmerge] (back_edge_to_loop_body first_time_through_loop_body) (loop_body_start)
          $entry <-& (loop_body_start)
          $T[aggregated_phi_sample_req] 
          $T[aggregated_phi_sample_ack] 
          $T[aggregated_phi_sample_ack_d] $delay
          aggregated_phi_sample_ack_d <-& (aggregated_phi_sample_ack)
          $T[aggregated_phi_update_req] 
          $T[aggregated_phi_update_ack] 
          // do not loop-back unless all phi's have used up their triggering tokens.
          condition_evaluated <-& (aggregated_phi_update_ack)
          aggregated_phi_sample_req o<-& (aggregated_phi_update_ack 0)
          // start:  multi-source PHI statement phi_stmt_2429
          // 			$phi count_down := 			  (packet_size - 16 ) $on   $entry 			  ncount_down $on   $loopback 
          // type of target is $uint<11>
          $T[phi_stmt_2429_sample_start_] 
          $T[phi_stmt_2429_sample_completed_] 
          $T[phi_stmt_2429_update_start_] 
          $T[phi_stmt_2429_update_completed_] 
          $T[phi_stmt_2429_sample_start__ps] 
          phi_stmt_2429_sample_start__ps <-& (aggregated_phi_sample_req)
          $T[phi_stmt_2429_sample_completed__ps] 
          phi_stmt_2429_sample_completed__ps &-> (aggregated_phi_sample_ack)
          $T[phi_stmt_2429_update_start__ps] 
          phi_stmt_2429_update_start__ps <-& (aggregated_phi_update_req)
          $T[phi_stmt_2429_update_completed__ps] 
          phi_stmt_2429_update_completed_ <-& (phi_stmt_2429_update_completed__ps)
          aggregated_phi_sample_req <-& (phi_stmt_2429_sample_start_)
          aggregated_phi_sample_ack &-> (phi_stmt_2429_sample_completed_)
          aggregated_phi_update_req <-& (phi_stmt_2429_update_start_)
          $T[phi_stmt_2429_loopback_trigger] 
          phi_stmt_2429_loopback_trigger <-& (back_edge_to_loop_body)
          $T[phi_stmt_2429_loopback_sample_req] 
          $T[phi_stmt_2429_loopback_sample_req_ps] 
          phi_stmt_2429_loopback_sample_req <-& (phi_stmt_2429_loopback_sample_req_ps)
          phi_stmt_2429_loopback_sample_req &-> ($null)
          $T[phi_stmt_2429_entry_trigger] 
          phi_stmt_2429_entry_trigger <-& (first_time_through_loop_body)
          $T[phi_stmt_2429_entry_sample_req] 
          $T[phi_stmt_2429_entry_sample_req_ps] 
          phi_stmt_2429_entry_sample_req <-& (phi_stmt_2429_entry_sample_req_ps)
          phi_stmt_2429_entry_sample_req &-> ($null)
          phi_stmt_2429_update_start_ o<-& (phi_stmt_2429_update_completed_ 0)
          phi_stmt_2429_sample_start_ o<-& (phi_stmt_2429_sample_completed_ 1)
          $T[phi_stmt_2429_merged_reqs] 
          $T[phi_stmt_2429_phi_mux_ack] 
          $T[phi_stmt_2429_phi_mux_ack_ps] 
          phi_stmt_2429_phi_mux_ack_ps <-& (phi_stmt_2429_phi_mux_ack)
          aggregated_phi_update_ack <-& (phi_stmt_2429_update_completed_)
          $T[SUB_u11_u11_2433_sample_start__ps] 
          $T[SUB_u11_u11_2433_sample_completed__ps] 
          $T[SUB_u11_u11_2433_update_start__ps] 
          $T[SUB_u11_u11_2433_update_completed__ps] 
          // source expression in Phi alternative 0
          // (packet_size - 16 )
          $T[SUB_u11_u11_2433_sample_start_] 
          $T[SUB_u11_u11_2433_sample_completed_] 
          $T[SUB_u11_u11_2433_update_start_] 
          $T[SUB_u11_u11_2433_update_completed_] 
          // packet_size
          // start: Forward dependencies from packet_size to transition SUB_u11_u11_2433_sample_start_
          // done: Forward dependencies from packet_size to transition SUB_u11_u11_2433_sample_start_
          ;;[SUB_u11_u11_2433_Sample] 
          {
            // binary expression 
            $T [rr] $T [ra]  // (split) binary operation 
          }
          ;;[SUB_u11_u11_2433_Update] 
          {
            // binary expression 
            $T [cr] $T [ca] // (split) binary operation 
          }
          SUB_u11_u11_2433_sample_start_ &-> (SUB_u11_u11_2433_Sample)
          SUB_u11_u11_2433_sample_completed_ <-& (SUB_u11_u11_2433_Sample)
          SUB_u11_u11_2433_sample_completed_ &-> ($null)
          SUB_u11_u11_2433_update_start_ &-> (SUB_u11_u11_2433_Update)
          SUB_u11_u11_2433_update_completed_ <-& (SUB_u11_u11_2433_Update)
          // RAW reenables for packet_size
          // self-release: 
          SUB_u11_u11_2433_sample_start_ o<-& (SUB_u11_u11_2433_sample_completed_ 1)
          $null &-> (SUB_u11_u11_2433_update_start_)
          SUB_u11_u11_2433_update_start_ o<-& (SUB_u11_u11_2433_update_completed_ 0)
          // Phi start dependency
          SUB_u11_u11_2433_sample_start_ <-& (SUB_u11_u11_2433_sample_start__ps)
          SUB_u11_u11_2433_update_start_ <-& (SUB_u11_u11_2433_update_start__ps)
          // RAW reenables for (packet_size - 16 )
          // producer  and  consumer are both determined by PHI statements.
          // Phi complete dependency.
          SUB_u11_u11_2433_sample_completed__ps <-& (SUB_u11_u11_2433_sample_completed_)
          SUB_u11_u11_2433_update_completed__ps <-& (SUB_u11_u11_2433_update_completed_)
          $T[R_ncount_down_2434_sample_start__ps] 
          $T[R_ncount_down_2434_sample_completed__ps] 
          $T[R_ncount_down_2434_update_start__ps] 
          $T[R_ncount_down_2434_update_completed__ps] 
          // interlock for implicit-variable-ref/signal-read in Phi alternative 1
          $T[R_ncount_down_2434_sample_start_] 
          $T[R_ncount_down_2434_sample_completed_] 
          $T[R_ncount_down_2434_update_start_] 
          $T[R_ncount_down_2434_update_completed_] 
          ;;[R_ncount_down_2434_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          R_ncount_down_2434_sample_start_ &-> (R_ncount_down_2434_Sample)
          R_ncount_down_2434_sample_completed_ <-& (R_ncount_down_2434_Sample)
          ;;[R_ncount_down_2434_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          R_ncount_down_2434_update_start_ &-> (R_ncount_down_2434_Update)
          R_ncount_down_2434_update_completed_ <-& (R_ncount_down_2434_Update)
          // RAW reenables for ncount_down
          // Phi start dependency for implicit/constant alternative.
          R_ncount_down_2434_sample_start_ <-& (R_ncount_down_2434_sample_start__ps)
          R_ncount_down_2434_update_start_ <-& (R_ncount_down_2434_update_start__ps)
          // Phi complete dependency.
          R_ncount_down_2434_sample_completed__ps <-& (R_ncount_down_2434_sample_completed_)
          R_ncount_down_2434_update_completed__ps <-& (R_ncount_down_2434_update_completed_)
          $phisequencer [ phi_stmt_2429_phi_seq] : 
          phi_stmt_2429_entry_trigger SUB_u11_u11_2433_sample_start__ps SUB_u11_u11_2433_sample_completed__ps SUB_u11_u11_2433_update_start__ps SUB_u11_u11_2433_update_completed__ps phi_stmt_2429_loopback_trigger R_ncount_down_2434_sample_start__ps R_ncount_down_2434_sample_completed__ps R_ncount_down_2434_update_start__ps R_ncount_down_2434_update_completed__ps :
          phi_stmt_2429_sample_start__ps phi_stmt_2429_sample_completed__ps phi_stmt_2429_update_start__ps phi_stmt_2429_update_completed__ps :
          phi_stmt_2429_entry_sample_req_ps phi_stmt_2429_loopback_sample_req_ps : 
          phi_stmt_2429_phi_mux_ack_ps
          // done: PHI Statement phi_stmt_2429
          // start:  multi-source PHI statement phi_stmt_2435
          // 			$phi mem_addr_offset := 			  ($bitcast ($uint<16>) 24  ) $on   $entry 			  nmem_addr_offset $on   $loopback 
          // type of target is $uint<16>
          $T[phi_stmt_2435_sample_start_] 
          $T[phi_stmt_2435_sample_completed_] 
          $T[phi_stmt_2435_update_start_] 
          $T[phi_stmt_2435_update_completed_] 
          $T[phi_stmt_2435_sample_start__ps] 
          phi_stmt_2435_sample_start__ps <-& (aggregated_phi_sample_req)
          $T[phi_stmt_2435_sample_completed__ps] 
          phi_stmt_2435_sample_completed__ps &-> (aggregated_phi_sample_ack)
          $T[phi_stmt_2435_update_start__ps] 
          phi_stmt_2435_update_start__ps <-& (aggregated_phi_update_req)
          $T[phi_stmt_2435_update_completed__ps] 
          phi_stmt_2435_update_completed_ <-& (phi_stmt_2435_update_completed__ps)
          aggregated_phi_sample_req <-& (phi_stmt_2435_sample_start_)
          aggregated_phi_sample_ack &-> (phi_stmt_2435_sample_completed_)
          aggregated_phi_update_req <-& (phi_stmt_2435_update_start_)
          $T[phi_stmt_2435_loopback_trigger] 
          phi_stmt_2435_loopback_trigger <-& (back_edge_to_loop_body)
          $T[phi_stmt_2435_loopback_sample_req] 
          $T[phi_stmt_2435_loopback_sample_req_ps] 
          phi_stmt_2435_loopback_sample_req <-& (phi_stmt_2435_loopback_sample_req_ps)
          phi_stmt_2435_loopback_sample_req &-> ($null)
          $T[phi_stmt_2435_entry_trigger] 
          phi_stmt_2435_entry_trigger <-& (first_time_through_loop_body)
          $T[phi_stmt_2435_entry_sample_req] 
          $T[phi_stmt_2435_entry_sample_req_ps] 
          phi_stmt_2435_entry_sample_req <-& (phi_stmt_2435_entry_sample_req_ps)
          phi_stmt_2435_entry_sample_req &-> ($null)
          phi_stmt_2435_update_start_ o<-& (phi_stmt_2435_update_completed_ 0)
          phi_stmt_2435_sample_start_ o<-& (phi_stmt_2435_sample_completed_ 1)
          $T[phi_stmt_2435_merged_reqs] 
          $T[phi_stmt_2435_phi_mux_ack] 
          $T[phi_stmt_2435_phi_mux_ack_ps] 
          phi_stmt_2435_phi_mux_ack_ps <-& (phi_stmt_2435_phi_mux_ack)
          aggregated_phi_update_ack <-& (phi_stmt_2435_update_completed_)
          $T[type_cast_2438_sample_start__ps] 
          $T[type_cast_2438_sample_completed__ps] 
          $T[type_cast_2438_update_start__ps] 
          $T[type_cast_2438_update_completed__ps] 
          // dummies for constant expression source for phi
          $T[type_cast_2438_sample_start_] 
          $T[type_cast_2438_sample_completed_] 
          type_cast_2438_sample_completed_ <-& (type_cast_2438_sample_start_)
          $T[type_cast_2438_update_start_] 
          $T [type_cast_2438_update_completed_] $delay 
          type_cast_2438_update_completed_ <-& (type_cast_2438_update_start_)
          // Phi start dependency for implicit/constant alternative.
          type_cast_2438_sample_start_ <-& (type_cast_2438_sample_start__ps)
          type_cast_2438_update_start_ <-& (type_cast_2438_update_start__ps)
          // Phi complete dependency.
          type_cast_2438_sample_completed__ps <-& (type_cast_2438_sample_completed_)
          type_cast_2438_update_completed__ps <-& (type_cast_2438_update_completed_)
          $T[R_nmem_addr_offset_2439_sample_start__ps] 
          $T[R_nmem_addr_offset_2439_sample_completed__ps] 
          $T[R_nmem_addr_offset_2439_update_start__ps] 
          $T[R_nmem_addr_offset_2439_update_completed__ps] 
          // interlock for implicit-variable-ref/signal-read in Phi alternative 1
          $T[R_nmem_addr_offset_2439_sample_start_] 
          $T[R_nmem_addr_offset_2439_sample_completed_] 
          $T[R_nmem_addr_offset_2439_update_start_] 
          $T[R_nmem_addr_offset_2439_update_completed_] 
          ;;[R_nmem_addr_offset_2439_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          R_nmem_addr_offset_2439_sample_start_ &-> (R_nmem_addr_offset_2439_Sample)
          R_nmem_addr_offset_2439_sample_completed_ <-& (R_nmem_addr_offset_2439_Sample)
          ;;[R_nmem_addr_offset_2439_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          R_nmem_addr_offset_2439_update_start_ &-> (R_nmem_addr_offset_2439_Update)
          R_nmem_addr_offset_2439_update_completed_ <-& (R_nmem_addr_offset_2439_Update)
          // RAW reenables for nmem_addr_offset
          // Phi start dependency for implicit/constant alternative.
          R_nmem_addr_offset_2439_sample_start_ <-& (R_nmem_addr_offset_2439_sample_start__ps)
          R_nmem_addr_offset_2439_update_start_ <-& (R_nmem_addr_offset_2439_update_start__ps)
          // Phi complete dependency.
          R_nmem_addr_offset_2439_sample_completed__ps <-& (R_nmem_addr_offset_2439_sample_completed_)
          R_nmem_addr_offset_2439_update_completed__ps <-& (R_nmem_addr_offset_2439_update_completed_)
          $phisequencer [ phi_stmt_2435_phi_seq] : 
          phi_stmt_2435_entry_trigger type_cast_2438_sample_start__ps type_cast_2438_sample_completed__ps type_cast_2438_update_start__ps type_cast_2438_update_completed__ps phi_stmt_2435_loopback_trigger R_nmem_addr_offset_2439_sample_start__ps R_nmem_addr_offset_2439_sample_completed__ps R_nmem_addr_offset_2439_update_start__ps R_nmem_addr_offset_2439_update_completed__ps :
          phi_stmt_2435_sample_start__ps phi_stmt_2435_sample_completed__ps phi_stmt_2435_update_start__ps phi_stmt_2435_update_completed__ps :
          phi_stmt_2435_entry_sample_req_ps phi_stmt_2435_loopback_sample_req_ps : 
          phi_stmt_2435_phi_mux_ack_ps
          // done: PHI Statement phi_stmt_2435
          // start: 			$call accessMemoryDword (tag READMEM control_data_addr ($bitcast ($uint<64>) mem_addr_offset ) ($bitcast ($uint<64>) _b0  ) ) (data ) 
          //  file .Aa/nic.linked.opt.aa, line 888
          $T[call_stmt_2449_sample_start_] 
          $T[call_stmt_2449_sample_completed_] 
          $T[call_stmt_2449_update_start_] 
          $T[call_stmt_2449_update_completed_] 
          // Call input argument 0
          // tag
          // Call input argument 1
          // Call input argument 2
          // control_data_addr
          // Call input argument 3
          // ($bitcast ($uint<64>) mem_addr_offset )
          // mem_addr_offset
          // Call input argument 4
          // start: Forward dependencies from tag to transition call_stmt_2449_sample_start_
          // done: Forward dependencies from tag to transition call_stmt_2449_sample_start_
          // RAW reenables for tag
          // start: Forward dependencies from control_data_addr to transition call_stmt_2449_sample_start_
          // done: Forward dependencies from control_data_addr to transition call_stmt_2449_sample_start_
          // RAW reenables for control_data_addr
          // start: Forward dependencies from ($bitcast ($uint<64>) mem_addr_offset ) to transition call_stmt_2449_sample_start_
          call_stmt_2449_sample_start_ <-& (phi_stmt_2435_update_completed_)
          // done: Forward dependencies from ($bitcast ($uint<64>) mem_addr_offset ) to transition call_stmt_2449_sample_start_
          // RAW reenables for ($bitcast ($uint<64>) mem_addr_offset )
          phi_stmt_2435_update_start_ o<-& (call_stmt_2449_sample_completed_ 0)
          ;;[call_stmt_2449_Sample] 
          {
            $T [crr] $T [cra] 
          }
          ;;[call_stmt_2449_Update] 
          {
            $T [ccr] $T [cca] 
          }
          call_stmt_2449_sample_start_ &-> (call_stmt_2449_Sample)
          call_stmt_2449_sample_completed_ <-& (call_stmt_2449_Sample)
          call_stmt_2449_sample_completed_ &-> ($null)
          call_stmt_2449_update_start_ &-> (call_stmt_2449_Update)
          call_stmt_2449_update_completed_ <-& (call_stmt_2449_Update)
          // Call output argument 0
          // (as target) data
          // self-release: 
          call_stmt_2449_sample_start_ o<-& (call_stmt_2449_sample_completed_ 1)
          $null &-> (call_stmt_2449_update_start_)
          call_stmt_2449_update_start_ o<-& (call_stmt_2449_update_completed_ 0)
          // start: WAR dependencies for data
          // done: WAR dependencies for data
          // end: 			$call accessMemoryDword (tag READMEM control_data_addr ($bitcast ($uint<64>) mem_addr_offset ) ($bitcast ($uint<64>) _b0  ) ) (data ) 
          // start:  			nic_to_mac_transmit_pipe := ((($bitcast ($uint<1>) _b0  ) && data) && FULL_BYTE_MASK) $buffering 1// bits of buffering = 73. 
          //  file .Aa/nic.linked.opt.aa, line 889
          // Source expression
          // ((($bitcast ($uint<1>) _b0  ) && data) && FULL_BYTE_MASK)
          $T[CONCAT_u65_u73_2456_sample_start_] 
          $T[CONCAT_u65_u73_2456_sample_completed_] 
          $T[CONCAT_u65_u73_2456_update_start_] 
          $T[CONCAT_u65_u73_2456_update_completed_] 
          // (($bitcast ($uint<1>) _b0  ) && data)
          // data
          // start: Forward dependencies from (($bitcast ($uint<1>) _b0  ) && data) to transition CONCAT_u65_u73_2456_sample_start_
          CONCAT_u65_u73_2456_sample_start_ <-& (call_stmt_2449_update_completed_)
          // done: Forward dependencies from (($bitcast ($uint<1>) _b0  ) && data) to transition CONCAT_u65_u73_2456_sample_start_
          ;;[CONCAT_u65_u73_2456_Sample] 
          {
            // binary expression 
            $T [rr] $T [ra]  // (split) binary operation 
          }
          ;;[CONCAT_u65_u73_2456_Update] 
          {
            // binary expression 
            $T [cr] $T [ca] // (split) binary operation 
          }
          CONCAT_u65_u73_2456_sample_start_ &-> (CONCAT_u65_u73_2456_Sample)
          CONCAT_u65_u73_2456_sample_completed_ <-& (CONCAT_u65_u73_2456_Sample)
          CONCAT_u65_u73_2456_sample_completed_ &-> ($null)
          CONCAT_u65_u73_2456_update_start_ &-> (CONCAT_u65_u73_2456_Update)
          CONCAT_u65_u73_2456_update_completed_ <-& (CONCAT_u65_u73_2456_Update)
          // RAW reenables for (($bitcast ($uint<1>) _b0  ) && data)
          call_stmt_2449_update_start_ o<-& (CONCAT_u65_u73_2456_sample_completed_ 0)
          // self-release: 
          CONCAT_u65_u73_2456_sample_start_ o<-& (CONCAT_u65_u73_2456_sample_completed_ 1)
          $null &-> (CONCAT_u65_u73_2456_update_start_)
          CONCAT_u65_u73_2456_update_start_ o<-& (CONCAT_u65_u73_2456_update_completed_ 0)
          // Target expression
          // (as target) nic_to_mac_transmit_pipe
          $T[WPIPE_nic_to_mac_transmit_pipe_2450_sample_start_] 
          $T[WPIPE_nic_to_mac_transmit_pipe_2450_sample_completed_] 
          $T[WPIPE_nic_to_mac_transmit_pipe_2450_update_start_] 
          $T[WPIPE_nic_to_mac_transmit_pipe_2450_update_completed_] 
          ;;[WPIPE_nic_to_mac_transmit_pipe_2450_Sample] 
          {
            // pipe write sample-start nic_to_mac_transmit_pipe
            $T [req] $T [ack] 
          }
          ;;[WPIPE_nic_to_mac_transmit_pipe_2450_Update] 
          {
            // pipe write update (complete) nic_to_mac_transmit_pipe
            $T [req] $T [ack] 
          }
          WPIPE_nic_to_mac_transmit_pipe_2450_sample_start_ &-> (WPIPE_nic_to_mac_transmit_pipe_2450_Sample)
          WPIPE_nic_to_mac_transmit_pipe_2450_sample_completed_ <-& (WPIPE_nic_to_mac_transmit_pipe_2450_Sample)
          WPIPE_nic_to_mac_transmit_pipe_2450_update_start_ <-& (WPIPE_nic_to_mac_transmit_pipe_2450_sample_completed_)
          WPIPE_nic_to_mac_transmit_pipe_2450_update_start_ &-> (WPIPE_nic_to_mac_transmit_pipe_2450_Update)
          WPIPE_nic_to_mac_transmit_pipe_2450_update_completed_ <-& (WPIPE_nic_to_mac_transmit_pipe_2450_Update)
          WPIPE_nic_to_mac_transmit_pipe_2450_sample_start_ o<-& (WPIPE_nic_to_mac_transmit_pipe_2450_update_completed_ 0)
          // start: Forward dependencies from ((($bitcast ($uint<1>) _b0  ) && data) && FULL_BYTE_MASK) to transition WPIPE_nic_to_mac_transmit_pipe_2450_sample_start_
          WPIPE_nic_to_mac_transmit_pipe_2450_sample_start_ <-& (CONCAT_u65_u73_2456_update_completed_)
          // done: Forward dependencies from ((($bitcast ($uint<1>) _b0  ) && data) && FULL_BYTE_MASK) to transition WPIPE_nic_to_mac_transmit_pipe_2450_sample_start_
          // RAW reenables for ((($bitcast ($uint<1>) _b0  ) && data) && FULL_BYTE_MASK)
          CONCAT_u65_u73_2456_update_start_ o<-& (WPIPE_nic_to_mac_transmit_pipe_2450_sample_completed_ 0)
          // end:  			nic_to_mac_transmit_pipe := ((($bitcast ($uint<1>) _b0  ) && data) && FULL_BYTE_MASK) $buffering 1// bits of buffering = 73. 
          // start: WAR dependencies for ncount_down
          // WAR dependency: Read: ncount_down before Write: 			$volatile ncount_down := (count_down - 8 ) $buffering 1
          //  WAR  PHI-PHI dependency ignored...
          // done: WAR dependencies for ncount_down
          // start:  			$volatile ncount_down := (count_down - 8 ) $buffering 1
          //  file .Aa/nic.linked.opt.aa, line 890
          // volatile! 
          // Source expression
          // (count_down - 8 )
          // count_down
          // Target expression
          // (as target) ncount_down
          // start: WAR dependencies for ncount_down
          // WAR dependency: Read: ncount_down before Write: 			$volatile ncount_down := (count_down - 8 ) $buffering 1
          //  WAR  PHI-PHI dependency ignored...
          // done: WAR dependencies for ncount_down
          // end:  			$volatile ncount_down := (count_down - 8 ) $buffering 1
          // start: WAR dependencies for nmem_addr_offset
          // WAR dependency: Read: nmem_addr_offset before Write: 			$volatile nmem_addr_offset := (mem_addr_offset + 8 ) $buffering 1
          //  WAR  PHI-PHI dependency ignored...
          // done: WAR dependencies for nmem_addr_offset
          // start:  			$volatile nmem_addr_offset := (mem_addr_offset + 8 ) $buffering 1
          //  file .Aa/nic.linked.opt.aa, line 891
          // volatile! 
          // Source expression
          // (mem_addr_offset + 8 )
          // mem_addr_offset
          // Target expression
          // (as target) nmem_addr_offset
          // start: WAR dependencies for nmem_addr_offset
          // WAR dependency: Read: nmem_addr_offset before Write: 			$volatile nmem_addr_offset := (mem_addr_offset + 8 ) $buffering 1
          //  WAR  PHI-PHI dependency ignored...
          // done: WAR dependencies for nmem_addr_offset
          // end:  			$volatile nmem_addr_offset := (mem_addr_offset + 8 ) $buffering 1
          // start: WAR dependencies for not_last_word
          // done: WAR dependencies for not_last_word
          // start:  			$volatile not_last_word := (ncount_down > 8 ) $buffering 1
          //  file .Aa/nic.linked.opt.aa, line 892
          // volatile! 
          // Source expression
          // (ncount_down > 8 )
          // ncount_down
          // Target expression
          // (as target) not_last_word
          // start: WAR dependencies for not_last_word
          // done: WAR dependencies for not_last_word
          // end:  			$volatile not_last_word := (ncount_down > 8 ) $buffering 1
          // not_last_word
          $T [loop_body_delay_to_condition_start] $delay
          loop_body_start &-> (loop_body_delay_to_condition_start)
          loop_body_delay_to_condition_start &-> (condition_evaluated)
          // start: Forward dependencies from not_last_word to transition condition_evaluated
          condition_evaluated <-& (phi_stmt_2429_update_completed_)
          // done: Forward dependencies from not_last_word to transition condition_evaluated
          condition_evaluated &-> ($null)
          // load-store dependencies..
          // pipe read/write dependencies for pipe MEMORY_TO_NIC_RESPONSE
          // read-dependencies for pipe MEMORY_TO_NIC_RESPONSE
          // write-dependencies for pipe MEMORY_TO_NIC_RESPONSE
          // signal write dependencies for MEMORY_TO_NIC_RESPONSE
          // pipe read/write dependencies for pipe NIC_DEBUG_SIGNAL
          // read-dependencies for pipe NIC_DEBUG_SIGNAL
          // write-dependencies for pipe NIC_DEBUG_SIGNAL
          // signal write dependencies for NIC_DEBUG_SIGNAL
          // pipe read/write dependencies for pipe NIC_TO_MEMORY_REQUEST
          // read-dependencies for pipe NIC_TO_MEMORY_REQUEST
          // write-dependencies for pipe NIC_TO_MEMORY_REQUEST
          // signal write dependencies for NIC_TO_MEMORY_REQUEST
          // pipe read/write dependencies for pipe memory_access_lock
          // read-dependencies for pipe memory_access_lock
          // write-dependencies for pipe memory_access_lock
          // signal write dependencies for memory_access_lock
          // pipe read/write dependencies for pipe nic_to_mac_transmit_pipe
          // read-dependencies for pipe nic_to_mac_transmit_pipe
          // write-dependencies for pipe nic_to_mac_transmit_pipe
          // signal write dependencies for nic_to_mac_transmit_pipe
        }
        ( first_time_through_loop_body  back_edge_to_loop_body) 
        ( condition_evaluated )
        ;; [loop_exit] 
        {
          $T [ack] 
        }
        ;; [loop_taken] 
        {
          $T [ack] 
        }
        do_while_stmt_2427__entry__ <-| ($entry)
        loop_body_done <-| ( do_while_stmt_2427_loop_body ) 
        condition_done |-> (loop_exit loop_taken)
        do_while_stmt_2427__exit__ |-> ($exit)
        $bind condition_done <= do_while_stmt_2427_loop_body : condition_evaluated
        $bind do_while_stmt_2427__entry__  => do_while_stmt_2427_loop_body : first_time_through_loop_body 
        $bind loop_back  => do_while_stmt_2427_loop_body : back_edge_to_loop_body 
        $terminate (loop_exit loop_taken loop_body_done) (loop_back do_while_stmt_2427__exit__)
      }
      do_while_stmt_2427__entry__ |-> (do_while_stmt_2427)
      do_while_stmt_2427__exit__ <-| (do_while_stmt_2427)
      ::[assign_stmt_2477_to_assign_stmt_2502] 
      {
        // start:  		last_offset := nmem_addr_offset $buffering 1// bits of buffering = 16. 
        //  file .Aa/nic.linked.opt.aa, line 894
        $T[assign_stmt_2477_sample_start_] 
        $T[assign_stmt_2477_sample_completed_] 
        $T[assign_stmt_2477_update_start_] 
        $T[assign_stmt_2477_update_completed_] 
        // Source expression
        // nmem_addr_offset
        // Target expression
        // (as target) last_offset
        // both source and target are implicit: use interlock 
        // Interlock 
        ;;[assign_stmt_2477_Sample] 
        {
          $T [req] $T [ack] // interlock-sample.
        }
        ;;[assign_stmt_2477_Update] 
        {
          $T [req] $T [ack] // interlock-update.
        }
        assign_stmt_2477_sample_start_ &-> (assign_stmt_2477_Sample)
        assign_stmt_2477_sample_completed_ <-& (assign_stmt_2477_Sample)
        assign_stmt_2477_sample_completed_ &-> ($null)
        assign_stmt_2477_update_start_ &-> (assign_stmt_2477_Update)
        assign_stmt_2477_update_completed_ <-& (assign_stmt_2477_Update)
        // start: Forward dependencies from nmem_addr_offset to transition assign_stmt_2477_sample_start_
        // done: Forward dependencies from nmem_addr_offset to transition assign_stmt_2477_sample_start_
        // start: WAR dependencies for last_offset
        // done: WAR dependencies for last_offset
        // end:  		last_offset := nmem_addr_offset $buffering 1// bits of buffering = 16. 
        // start: 		$call accessMemoryDword (tag READMEM control_data_addr ($bitcast ($uint<64>) last_offset ) ($bitcast ($uint<64>) _b0  ) ) (last_word ) 
        //  file .Aa/nic.linked.opt.aa, line 895
        $T[call_stmt_2486_sample_start_] 
        $T[call_stmt_2486_sample_completed_] 
        $T[call_stmt_2486_update_start_] 
        $T[call_stmt_2486_update_completed_] 
        // Call input argument 0
        // tag
        // Call input argument 1
        // Call input argument 2
        // control_data_addr
        // Call input argument 3
        // ($bitcast ($uint<64>) last_offset )
        // last_offset
        // Call input argument 4
        // start: Forward dependencies from tag to transition call_stmt_2486_sample_start_
        // done: Forward dependencies from tag to transition call_stmt_2486_sample_start_
        // start: Forward dependencies from control_data_addr to transition call_stmt_2486_sample_start_
        // done: Forward dependencies from control_data_addr to transition call_stmt_2486_sample_start_
        // start: Forward dependencies from ($bitcast ($uint<64>) last_offset ) to transition call_stmt_2486_sample_start_
        call_stmt_2486_sample_start_ <-& (assign_stmt_2477_update_completed_)
        // done: Forward dependencies from ($bitcast ($uint<64>) last_offset ) to transition call_stmt_2486_sample_start_
        ;;[call_stmt_2486_Sample] 
        {
          $T [crr] $T [cra] 
        }
        ;;[call_stmt_2486_Update] 
        {
          $T [ccr] $T [cca] 
        }
        call_stmt_2486_sample_start_ &-> (call_stmt_2486_Sample)
        call_stmt_2486_sample_completed_ <-& (call_stmt_2486_Sample)
        call_stmt_2486_sample_completed_ &-> ($null)
        call_stmt_2486_update_start_ &-> (call_stmt_2486_Update)
        call_stmt_2486_update_completed_ <-& (call_stmt_2486_Update)
        // Call output argument 0
        // (as target) last_word
        // start: WAR dependencies for last_word
        // done: WAR dependencies for last_word
        // end: 		$call accessMemoryDword (tag READMEM control_data_addr ($bitcast ($uint<64>) last_offset ) ($bitcast ($uint<64>) _b0  ) ) (last_word ) 
        // start:  		nic_to_mac_transmit_pipe := ((($bitcast ($uint<1>) _b1  ) && last_word) && last_tkeep) $buffering 1// bits of buffering = 73. 
        //  file .Aa/nic.linked.opt.aa, line 897
        // Source expression
        // ((($bitcast ($uint<1>) _b1  ) && last_word) && last_tkeep)
        $T[CONCAT_u65_u73_2495_sample_start_] 
        $T[CONCAT_u65_u73_2495_sample_completed_] 
        $T[CONCAT_u65_u73_2495_update_start_] 
        $T[CONCAT_u65_u73_2495_update_completed_] 
        // (($bitcast ($uint<1>) _b1  ) && last_word)
        // last_word
        // last_tkeep
        // start: Forward dependencies from (($bitcast ($uint<1>) _b1  ) && last_word) to transition CONCAT_u65_u73_2495_sample_start_
        CONCAT_u65_u73_2495_sample_start_ <-& (call_stmt_2486_update_completed_)
        // done: Forward dependencies from (($bitcast ($uint<1>) _b1  ) && last_word) to transition CONCAT_u65_u73_2495_sample_start_
        // start: Forward dependencies from last_tkeep to transition CONCAT_u65_u73_2495_sample_start_
        // done: Forward dependencies from last_tkeep to transition CONCAT_u65_u73_2495_sample_start_
        ;;[CONCAT_u65_u73_2495_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[CONCAT_u65_u73_2495_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        CONCAT_u65_u73_2495_sample_start_ &-> (CONCAT_u65_u73_2495_Sample)
        CONCAT_u65_u73_2495_sample_completed_ <-& (CONCAT_u65_u73_2495_Sample)
        CONCAT_u65_u73_2495_sample_completed_ &-> ($null)
        CONCAT_u65_u73_2495_update_start_ &-> (CONCAT_u65_u73_2495_Update)
        CONCAT_u65_u73_2495_update_completed_ <-& (CONCAT_u65_u73_2495_Update)
        // Target expression
        // (as target) nic_to_mac_transmit_pipe
        $T[WPIPE_nic_to_mac_transmit_pipe_2489_sample_start_] 
        $T[WPIPE_nic_to_mac_transmit_pipe_2489_sample_completed_] 
        $T[WPIPE_nic_to_mac_transmit_pipe_2489_update_start_] 
        $T[WPIPE_nic_to_mac_transmit_pipe_2489_update_completed_] 
        ;;[WPIPE_nic_to_mac_transmit_pipe_2489_Sample] 
        {
          // pipe write sample-start nic_to_mac_transmit_pipe
          $T [req] $T [ack] 
        }
        ;;[WPIPE_nic_to_mac_transmit_pipe_2489_Update] 
        {
          // pipe write update (complete) nic_to_mac_transmit_pipe
          $T [req] $T [ack] 
        }
        WPIPE_nic_to_mac_transmit_pipe_2489_sample_start_ &-> (WPIPE_nic_to_mac_transmit_pipe_2489_Sample)
        WPIPE_nic_to_mac_transmit_pipe_2489_sample_completed_ <-& (WPIPE_nic_to_mac_transmit_pipe_2489_Sample)
        WPIPE_nic_to_mac_transmit_pipe_2489_update_start_ <-& (WPIPE_nic_to_mac_transmit_pipe_2489_sample_completed_)
        WPIPE_nic_to_mac_transmit_pipe_2489_update_start_ &-> (WPIPE_nic_to_mac_transmit_pipe_2489_Update)
        WPIPE_nic_to_mac_transmit_pipe_2489_update_completed_ <-& (WPIPE_nic_to_mac_transmit_pipe_2489_Update)
        // start: Forward dependencies from ((($bitcast ($uint<1>) _b1  ) && last_word) && last_tkeep) to transition WPIPE_nic_to_mac_transmit_pipe_2489_sample_start_
        WPIPE_nic_to_mac_transmit_pipe_2489_sample_start_ <-& (CONCAT_u65_u73_2495_update_completed_)
        // done: Forward dependencies from ((($bitcast ($uint<1>) _b1  ) && last_word) && last_tkeep) to transition WPIPE_nic_to_mac_transmit_pipe_2489_sample_start_
        // end:  		nic_to_mac_transmit_pipe := ((($bitcast ($uint<1>) _b1  ) && last_word) && last_tkeep) $buffering 1// bits of buffering = 73. 
        // start:  		status := (packet_size == ($bitcast ($uint<11>) last_offset )) $buffering 1// bits of buffering = 1. 
        //  file .Aa/nic.linked.opt.aa, line 898
        // Source expression
        // (packet_size == ($bitcast ($uint<11>) last_offset ))
        $T[EQ_u11_u1_2501_sample_start_] 
        $T[EQ_u11_u1_2501_sample_completed_] 
        $T[EQ_u11_u1_2501_update_start_] 
        $T[EQ_u11_u1_2501_update_completed_] 
        // packet_size
        // ($bitcast ($uint<11>) last_offset )
        // last_offset
        // start: Forward dependencies from packet_size to transition EQ_u11_u1_2501_sample_start_
        // done: Forward dependencies from packet_size to transition EQ_u11_u1_2501_sample_start_
        // start: Forward dependencies from ($bitcast ($uint<11>) last_offset ) to transition EQ_u11_u1_2501_sample_start_
        EQ_u11_u1_2501_sample_start_ <-& (assign_stmt_2477_update_completed_)
        // done: Forward dependencies from ($bitcast ($uint<11>) last_offset ) to transition EQ_u11_u1_2501_sample_start_
        ;;[EQ_u11_u1_2501_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[EQ_u11_u1_2501_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        EQ_u11_u1_2501_sample_start_ &-> (EQ_u11_u1_2501_Sample)
        EQ_u11_u1_2501_sample_completed_ <-& (EQ_u11_u1_2501_Sample)
        EQ_u11_u1_2501_sample_completed_ &-> ($null)
        EQ_u11_u1_2501_update_start_ &-> (EQ_u11_u1_2501_Update)
        EQ_u11_u1_2501_update_completed_ <-& (EQ_u11_u1_2501_Update)
        // Target expression
        // (as target) status
        // status
        // write to interface object
        // start: WAR dependencies for status
        // done: WAR dependencies for status
        // status
        // write to interface object
        // end:  		status := (packet_size == ($bitcast ($uint<11>) last_offset )) $buffering 1// bits of buffering = 1. 
        // load-store dependencies..
        // pipe read/write dependencies for pipe MEMORY_TO_NIC_RESPONSE
        // read-dependencies for pipe MEMORY_TO_NIC_RESPONSE
        // write-dependencies for pipe MEMORY_TO_NIC_RESPONSE
        // signal write dependencies for MEMORY_TO_NIC_RESPONSE
        // pipe read/write dependencies for pipe NIC_DEBUG_SIGNAL
        // read-dependencies for pipe NIC_DEBUG_SIGNAL
        // write-dependencies for pipe NIC_DEBUG_SIGNAL
        // signal write dependencies for NIC_DEBUG_SIGNAL
        // pipe read/write dependencies for pipe NIC_TO_MEMORY_REQUEST
        // read-dependencies for pipe NIC_TO_MEMORY_REQUEST
        // write-dependencies for pipe NIC_TO_MEMORY_REQUEST
        // signal write dependencies for NIC_TO_MEMORY_REQUEST
        // pipe read/write dependencies for pipe memory_access_lock
        // read-dependencies for pipe memory_access_lock
        // write-dependencies for pipe memory_access_lock
        // signal write dependencies for memory_access_lock
        // pipe read/write dependencies for pipe nic_to_mac_transmit_pipe
        // read-dependencies for pipe nic_to_mac_transmit_pipe
        // write-dependencies for pipe nic_to_mac_transmit_pipe
        // signal write dependencies for nic_to_mac_transmit_pipe
      }
      assign_stmt_2477_to_assign_stmt_2502__entry__ |-> (assign_stmt_2477_to_assign_stmt_2502)
      assign_stmt_2477_to_assign_stmt_2502__exit__ <-| (assign_stmt_2477_to_assign_stmt_2502)
      do_while_stmt_2427__entry__ <-| (branch_block_stmt_2426__entry__)
      assign_stmt_2477_to_assign_stmt_2502__entry__ <-| (do_while_stmt_2427__exit__)
      assign_stmt_2477_to_assign_stmt_2502__exit__ |-> (branch_block_stmt_2426__exit__)
    }
  }
  // end control-path
  $DP 
  {
    // begin data-path 
    // constant-object-declarations for block %transmitPacket%loop%
    //  file .Aa/nic.linked.opt.aa, line 882
    // constant-object-declarations for block %transmitPacket%loop
    //  file .Aa/nic.linked.opt.aa, line 878
    // constant-object-declarations for block %transmitPacket
    //  file .Aa/nic.linked.opt.aa, line 867
    // 	$call accessMemoryDword (tag READMEM control_data_addr 0  ($bitcast ($uint<64>) _b0  ) ) (control_data ) 
    //  file .Aa/nic.linked.opt.aa, line 874
    // READMEM
    $constant $W[R_READMEM_2408_wire_constant] : $int<1> := _b1// 1
    // 0 
    $constant $W[konst_2410_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000000000// 0
    // ($bitcast ($uint<64>) _b0  )
    $constant $W[type_cast_2412_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000000000// 0
    // constant-declarations for block %transmitPacket%loop
    //  file .Aa/nic.linked.opt.aa, line 878
    // do-while statement  
    //  file .Aa/nic.linked.opt.aa, line 880
    // constant-declarations for block %transmitPacket%loop%
    //  file .Aa/nic.linked.opt.aa, line 882
    // constant-declarations for phi:  			$phi count_down := 			  (packet_size - 16 ) $on   $entry 			  ncount_down $on   $loopback 
    // type of target is $uint<11>
    //  file .Aa/nic.linked.opt.aa, line 883
    // 16 
    $constant $W[konst_2432_wire_constant] : $int<11> := _b00000010000// 16
    // constant-declarations for phi:  			$phi mem_addr_offset := 			  ($bitcast ($uint<16>) 24  ) $on   $entry 			  nmem_addr_offset $on   $loopback 
    // type of target is $uint<16>
    //  file .Aa/nic.linked.opt.aa, line 885
    // ($bitcast ($uint<16>) 24  )
    $constant $W[type_cast_2438_wire_constant] : $int<16> := _b0000000000011000// 24
    // 			$call accessMemoryDword (tag READMEM control_data_addr ($bitcast ($uint<64>) mem_addr_offset ) ($bitcast ($uint<64>) _b0  ) ) (data ) 
    //  file .Aa/nic.linked.opt.aa, line 888
    // READMEM
    $constant $W[R_READMEM_2442_wire_constant] : $int<1> := _b1// 1
    // ($bitcast ($uint<64>) _b0  )
    $constant $W[type_cast_2447_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000000000// 0
    // ($bitcast ($uint<1>) _b0  )
    $constant $W[type_cast_2452_wire_constant] : $int<1> := _b0// 0
    // FULL_BYTE_MASK
    $constant $W[R_FULL_BYTE_MASK_2455_wire_constant] : $int<8> := _b11111111// 255
    // 8 
    $constant $W[konst_2460_wire_constant] : $int<11> := _b00000001000// 8
    // 8 
    $constant $W[konst_2465_wire_constant] : $int<16> := _b0000000000001000// 8
    // 8 
    $constant $W[konst_2470_wire_constant] : $int<11> := _b00000001000// 8
    // 		$call accessMemoryDword (tag READMEM control_data_addr ($bitcast ($uint<64>) last_offset ) ($bitcast ($uint<64>) _b0  ) ) (last_word ) 
    //  file .Aa/nic.linked.opt.aa, line 895
    // READMEM
    $constant $W[R_READMEM_2479_wire_constant] : $int<1> := _b1// 1
    // ($bitcast ($uint<64>) _b0  )
    $constant $W[type_cast_2484_wire_constant] : $int<64> := _b0000000000000000000000000000000000000000000000000000000000000000// 0
    // ($bitcast ($uint<1>) _b1  )
    $constant $W[type_cast_2491_wire_constant] : $int<1> := _b1// 1
    // 	$volatile control_data_addr := packet_pointer $buffering 1
    //  file .Aa/nic.linked.opt.aa, line 872
    // control_data_addr
    $W[control_data_addr_2403] : $int<64>
    // 	$call accessMemoryDword (tag READMEM control_data_addr 0  ($bitcast ($uint<64>) _b0  ) ) (control_data ) 
    //  file .Aa/nic.linked.opt.aa, line 874
    // control_data
    $W[control_data_2414] : $int<64>
    // 	$volatile packet_size := ( $slice control_data 18 8 )  $buffering 1
    //  file .Aa/nic.linked.opt.aa, line 875
    // packet_size
    $W[packet_size_2418] : $int<11>
    // 	$volatile last_tkeep := ( $slice control_data 7 0 )  $buffering 1
    //  file .Aa/nic.linked.opt.aa, line 876
    // last_tkeep
    $W[last_tkeep_2422] : $int<8>
    // block %transmitPacket%loop
    //  file .Aa/nic.linked.opt.aa, line 878
    // do-while statement  
    //  file .Aa/nic.linked.opt.aa, line 880
    // merge-statement  
    //  file .Aa/nic.linked.opt.aa, line 882
    // 			$phi count_down := 			  (packet_size - 16 ) $on   $entry 			  ncount_down $on   $loopback 
    // type of target is $uint<11>
    //  file .Aa/nic.linked.opt.aa, line 883
    // (packet_size - 16 )
    $intermediate $W[SUB_u11_u11_2433_wire] : $int<11>
    $W[ncount_down_2462_2434_buffered] : $int<11>
    // count_down
    $W[count_down_2429] : $int<11>
    // 			$phi mem_addr_offset := 			  ($bitcast ($uint<16>) 24  ) $on   $entry 			  nmem_addr_offset $on   $loopback 
    // type of target is $uint<16>
    //  file .Aa/nic.linked.opt.aa, line 885
    $W[nmem_addr_offset_2467_2439_buffered] : $int<16>
    // mem_addr_offset
    $W[mem_addr_offset_2435] : $int<16>
    // 			$call accessMemoryDword (tag READMEM control_data_addr ($bitcast ($uint<64>) mem_addr_offset ) ($bitcast ($uint<64>) _b0  ) ) (data ) 
    //  file .Aa/nic.linked.opt.aa, line 888
    // ($bitcast ($uint<64>) mem_addr_offset )
    $intermediate $W[type_cast_2445_wire] : $int<64>
    // data
    $W[data_2449] : $int<64>
    // 			nic_to_mac_transmit_pipe := ((($bitcast ($uint<1>) _b0  ) && data) && FULL_BYTE_MASK) $buffering 1// bits of buffering = 73. 
    //  file .Aa/nic.linked.opt.aa, line 889
    // (($bitcast ($uint<1>) _b0  ) && data)
    $intermediate $W[CONCAT_u1_u65_2454_wire] : $int<65>
    // ((($bitcast ($uint<1>) _b0  ) && data) && FULL_BYTE_MASK)
    $intermediate $W[CONCAT_u65_u73_2456_wire] : $int<73>
    // nic_to_mac_transmit_pipe
    // 			$volatile ncount_down := (count_down - 8 ) $buffering 1
    //  file .Aa/nic.linked.opt.aa, line 890
    // ncount_down
    $W[ncount_down_2462] : $int<11>
    // 			$volatile nmem_addr_offset := (mem_addr_offset + 8 ) $buffering 1
    //  file .Aa/nic.linked.opt.aa, line 891
    // nmem_addr_offset
    $W[nmem_addr_offset_2467] : $int<16>
    // 			$volatile not_last_word := (ncount_down > 8 ) $buffering 1
    //  file .Aa/nic.linked.opt.aa, line 892
    // not_last_word
    $W[not_last_word_2472] : $int<1>
    // 		last_offset := nmem_addr_offset $buffering 1// bits of buffering = 16. 
    //  file .Aa/nic.linked.opt.aa, line 894
    // last_offset
    $W[last_offset_2477] : $int<16>
    // 		$call accessMemoryDword (tag READMEM control_data_addr ($bitcast ($uint<64>) last_offset ) ($bitcast ($uint<64>) _b0  ) ) (last_word ) 
    //  file .Aa/nic.linked.opt.aa, line 895
    // ($bitcast ($uint<64>) last_offset )
    $intermediate $W[type_cast_2482_wire] : $int<64>
    // last_word
    $W[last_word_2486] : $int<64>
    // 		nic_to_mac_transmit_pipe := ((($bitcast ($uint<1>) _b1  ) && last_word) && last_tkeep) $buffering 1// bits of buffering = 73. 
    //  file .Aa/nic.linked.opt.aa, line 897
    // (($bitcast ($uint<1>) _b1  ) && last_word)
    $intermediate $W[CONCAT_u1_u65_2493_wire] : $int<65>
    // ((($bitcast ($uint<1>) _b1  ) && last_word) && last_tkeep)
    $intermediate $W[CONCAT_u65_u73_2495_wire] : $int<73>
    // nic_to_mac_transmit_pipe
    // 		status := (packet_size == ($bitcast ($uint<11>) last_offset )) $buffering 1// bits of buffering = 1. 
    //  file .Aa/nic.linked.opt.aa, line 898
    // ($bitcast ($uint<11>) last_offset )
    $intermediate $W[type_cast_2500_wire] : $int<11>
    // status
    // 	$volatile control_data_addr := packet_pointer $buffering 1
    //  file .Aa/nic.linked.opt.aa, line 872
    # := [W_control_data_addr_2401_inst] (packet_pointer) (control_data_addr_2403)     $flowthrough 
    // 	$call accessMemoryDword (tag READMEM control_data_addr 0  ($bitcast ($uint<64>) _b0  ) ) (control_data ) 
    //  file .Aa/nic.linked.opt.aa, line 874
    $call [call_stmt_2414_call] $module accessMemoryDword(tag R_READMEM_2408_wire_constant control_data_addr_2403 konst_2410_wire_constant type_cast_2412_wire_constant) (control_data_2414)  
    $delay call_stmt_2414_call 38
    $buffering  $in call_stmt_2414_call tag 1
    $buffering  $in call_stmt_2414_call R_READMEM_2408_wire_constant 1
    $buffering  $in call_stmt_2414_call control_data_addr_2403 1
    $buffering  $in call_stmt_2414_call konst_2410_wire_constant 1
    $buffering  $in call_stmt_2414_call type_cast_2412_wire_constant 1
    $buffering  $out call_stmt_2414_call control_data_2414 1
    // 	$volatile packet_size := ( $slice control_data 18 8 )  $buffering 1
    //  file .Aa/nic.linked.opt.aa, line 875
    // ( $slice control_data 18 8 ) 
    [:] [slice_2417_inst] (control_data_2414 18 8) (packet_size_2418)  $flowthrough
    $delay slice_2417_inst 0
    // 	$volatile last_tkeep := ( $slice control_data 7 0 )  $buffering 1
    //  file .Aa/nic.linked.opt.aa, line 876
    // ( $slice control_data 7 0 ) 
    [:] [slice_2421_inst] (control_data_2414 7 0) (last_tkeep_2422)  $flowthrough
    $delay slice_2421_inst 0
    // datapath-instances for block %transmitPacket%loop
    //  file .Aa/nic.linked.opt.aa, line 878
    // datapath-instances for do-while  
    //  file .Aa/nic.linked.opt.aa, line 880
    ==0? [do_while_stmt_2427_branch] (not_last_word_2472)
    $flowthrough
    // data-path instances for merge  
    //  file .Aa/nic.linked.opt.aa, line 882
    // 			$phi count_down := 			  (packet_size - 16 ) $on   $entry 			  ncount_down $on   $loopback 
    // type of target is $uint<11>
    //  file .Aa/nic.linked.opt.aa, line 883
    // (packet_size - 16 )
    -[SUB_u11_u11_2433_inst] (packet_size_2418 konst_2432_wire_constant) (SUB_u11_u11_2433_wire)    $fullrate
    $buffering  $out SUB_u11_u11_2433_inst SUB_u11_u11_2433_wire 1
    $delay SUB_u11_u11_2433_inst 1
    # := [ncount_down_2462_2434_buf] (ncount_down_2462) (ncount_down_2462_2434_buffered)   $in_phi    $fullrate
    $buffering $out ncount_down_2462_2434_buf ncount_down_2462_2434_buffered  1
    # $phi [phi_stmt_2429] (SUB_u11_u11_2433_wire ncount_down_2462_2434_buffered) ( count_down_2429 ) $fullrate
    // $buffering  $out phi_stmt_2429 count_down_2429 2
    // 			$phi mem_addr_offset := 			  ($bitcast ($uint<16>) 24  ) $on   $entry 			  nmem_addr_offset $on   $loopback 
    // type of target is $uint<16>
    //  file .Aa/nic.linked.opt.aa, line 885
    # := [nmem_addr_offset_2467_2439_buf] (nmem_addr_offset_2467) (nmem_addr_offset_2467_2439_buffered)   $in_phi    $fullrate
    $buffering $out nmem_addr_offset_2467_2439_buf nmem_addr_offset_2467_2439_buffered  1
    # $phi [phi_stmt_2435] (type_cast_2438_wire_constant nmem_addr_offset_2467_2439_buffered) ( mem_addr_offset_2435 ) $fullrate
    // $buffering  $out phi_stmt_2435 mem_addr_offset_2435 2
    // 			$call accessMemoryDword (tag READMEM control_data_addr ($bitcast ($uint<64>) mem_addr_offset ) ($bitcast ($uint<64>) _b0  ) ) (data ) 
    //  file .Aa/nic.linked.opt.aa, line 888
    // ($bitcast ($uint<64>) mem_addr_offset )
    # := [type_cast_2445_inst] (mem_addr_offset_2435) (type_cast_2445_wire)   $flowthrough
    $delay type_cast_2445_inst 0
    $call [call_stmt_2449_call] $module accessMemoryDword(tag R_READMEM_2442_wire_constant control_data_addr_2403 type_cast_2445_wire type_cast_2447_wire_constant) (data_2449)   $fullrate
    $delay call_stmt_2449_call 38
    $buffering  $in call_stmt_2449_call tag 1
    $buffering  $in call_stmt_2449_call R_READMEM_2442_wire_constant 1
    $buffering  $in call_stmt_2449_call control_data_addr_2403 1
    $buffering  $in call_stmt_2449_call type_cast_2445_wire 1
    $buffering  $in call_stmt_2449_call type_cast_2447_wire_constant 1
    $buffering  $out call_stmt_2449_call data_2449 1
    // 			nic_to_mac_transmit_pipe := ((($bitcast ($uint<1>) _b0  ) && data) && FULL_BYTE_MASK) $buffering 1// bits of buffering = 73. 
    //  file .Aa/nic.linked.opt.aa, line 889
    // (($bitcast ($uint<1>) _b0  ) && data)
    &&[CONCAT_u1_u65_2454_inst] (type_cast_2452_wire_constant data_2449) (CONCAT_u1_u65_2454_wire)   $flowthrough 
    $delay CONCAT_u1_u65_2454_inst 0
    // ((($bitcast ($uint<1>) _b0  ) && data) && FULL_BYTE_MASK)
    &&[CONCAT_u65_u73_2456_inst] (CONCAT_u1_u65_2454_wire R_FULL_BYTE_MASK_2455_wire_constant) (CONCAT_u65_u73_2456_wire)    $fullrate
    $buffering  $out CONCAT_u65_u73_2456_inst CONCAT_u65_u73_2456_wire 1
    $delay CONCAT_u65_u73_2456_inst 1
    // nic_to_mac_transmit_pipe
    $ioport $out [WPIPE_nic_to_mac_transmit_pipe_2450_inst]  (CONCAT_u65_u73_2456_wire) (nic_to_mac_transmit_pipe)  $fullrate 
    // 			$volatile ncount_down := (count_down - 8 ) $buffering 1
    //  file .Aa/nic.linked.opt.aa, line 890
    // (count_down - 8 )
    -[SUB_u11_u11_2461_inst] (count_down_2429 konst_2460_wire_constant) (ncount_down_2462)   $flowthrough 
    $delay SUB_u11_u11_2461_inst 0
    // 			$volatile nmem_addr_offset := (mem_addr_offset + 8 ) $buffering 1
    //  file .Aa/nic.linked.opt.aa, line 891
    // (mem_addr_offset + 8 )
    +[ADD_u16_u16_2466_inst] (mem_addr_offset_2435 konst_2465_wire_constant) (nmem_addr_offset_2467)   $flowthrough 
    $delay ADD_u16_u16_2466_inst 0
    // 			$volatile not_last_word := (ncount_down > 8 ) $buffering 1
    //  file .Aa/nic.linked.opt.aa, line 892
    // (ncount_down > 8 )
    >[UGT_u11_u1_2471_inst] (ncount_down_2462 konst_2470_wire_constant) (not_last_word_2472)   $flowthrough 
    $delay UGT_u11_u1_2471_inst 0
    // 		last_offset := nmem_addr_offset $buffering 1// bits of buffering = 16. 
    //  file .Aa/nic.linked.opt.aa, line 894
    # := [W_last_offset_2475_inst] (nmem_addr_offset_2467) (last_offset_2477)     
    // 		$call accessMemoryDword (tag READMEM control_data_addr ($bitcast ($uint<64>) last_offset ) ($bitcast ($uint<64>) _b0  ) ) (last_word ) 
    //  file .Aa/nic.linked.opt.aa, line 895
    // ($bitcast ($uint<64>) last_offset )
    # := [type_cast_2482_inst] (last_offset_2477) (type_cast_2482_wire)   $flowthrough
    $delay type_cast_2482_inst 0
    $call [call_stmt_2486_call] $module accessMemoryDword(tag R_READMEM_2479_wire_constant control_data_addr_2403 type_cast_2482_wire type_cast_2484_wire_constant) (last_word_2486)  
    $delay call_stmt_2486_call 38
    $buffering  $in call_stmt_2486_call tag 1
    $buffering  $in call_stmt_2486_call R_READMEM_2479_wire_constant 1
    $buffering  $in call_stmt_2486_call control_data_addr_2403 1
    $buffering  $in call_stmt_2486_call type_cast_2482_wire 1
    $buffering  $in call_stmt_2486_call type_cast_2484_wire_constant 1
    $buffering  $out call_stmt_2486_call last_word_2486 1
    // 		nic_to_mac_transmit_pipe := ((($bitcast ($uint<1>) _b1  ) && last_word) && last_tkeep) $buffering 1// bits of buffering = 73. 
    //  file .Aa/nic.linked.opt.aa, line 897
    // (($bitcast ($uint<1>) _b1  ) && last_word)
    &&[CONCAT_u1_u65_2493_inst] (type_cast_2491_wire_constant last_word_2486) (CONCAT_u1_u65_2493_wire)   $flowthrough 
    $delay CONCAT_u1_u65_2493_inst 0
    // ((($bitcast ($uint<1>) _b1  ) && last_word) && last_tkeep)
    &&[CONCAT_u65_u73_2495_inst] (CONCAT_u1_u65_2493_wire last_tkeep_2422) (CONCAT_u65_u73_2495_wire)   
    $buffering  $out CONCAT_u65_u73_2495_inst CONCAT_u65_u73_2495_wire 1
    $delay CONCAT_u65_u73_2495_inst 1
    // nic_to_mac_transmit_pipe
    $ioport $out [WPIPE_nic_to_mac_transmit_pipe_2489_inst]  (CONCAT_u65_u73_2495_wire) (nic_to_mac_transmit_pipe) 
    // 		status := (packet_size == ($bitcast ($uint<11>) last_offset )) $buffering 1// bits of buffering = 1. 
    //  file .Aa/nic.linked.opt.aa, line 898
    // ($bitcast ($uint<11>) last_offset )
    # := [type_cast_2500_inst] (last_offset_2477) (type_cast_2500_wire)   $flowthrough
    $delay type_cast_2500_inst 0
    // (packet_size == ($bitcast ($uint<11>) last_offset ))
    ==[EQ_u11_u1_2501_inst] (packet_size_2418 type_cast_2500_wire) (status)   
    $buffering  $out EQ_u11_u1_2501_inst status 1
    $delay EQ_u11_u1_2501_inst 1
  }
  // end data-path
  // 	$volatile control_data_addr := packet_pointer $buffering 1
  //  file .Aa/nic.linked.opt.aa, line 872
  // packet_pointer
  // 	$call accessMemoryDword (tag READMEM control_data_addr 0  ($bitcast ($uint<64>) _b0  ) ) (control_data ) 
  //  file .Aa/nic.linked.opt.aa, line 874
  // tag
  // control_data_addr
  call_stmt_2414_call <=> (assign_stmt_2403_to_assign_stmt_2422/call_stmt_2414_Sample/crr assign_stmt_2403_to_assign_stmt_2422/call_stmt_2414_Update/ccr) (assign_stmt_2403_to_assign_stmt_2422/call_stmt_2414_Sample/cra assign_stmt_2403_to_assign_stmt_2422/call_stmt_2414_Update/cca)
  // 	$volatile packet_size := ( $slice control_data 18 8 )  $buffering 1
  //  file .Aa/nic.linked.opt.aa, line 875
  // control_data
  // 	$volatile last_tkeep := ( $slice control_data 7 0 )  $buffering 1
  //  file .Aa/nic.linked.opt.aa, line 876
  // control_data
  // CP-DP links for do-while  do_while_stmt_2427
  //  file .Aa/nic.linked.opt.aa, line 880
  phi_stmt_2429 <=> (branch_block_stmt_2426/do_while_stmt_2427/do_while_stmt_2427_loop_body/phi_stmt_2429_entry_sample_req branch_block_stmt_2426/do_while_stmt_2427/do_while_stmt_2427_loop_body/phi_stmt_2429_loopback_sample_req) (branch_block_stmt_2426/do_while_stmt_2427/do_while_stmt_2427_loop_body/phi_stmt_2429_phi_mux_ack)
  // (packet_size - 16 )
  // packet_size
  SUB_u11_u11_2433_inst <=> (branch_block_stmt_2426/do_while_stmt_2427/do_while_stmt_2427_loop_body/SUB_u11_u11_2433_Sample/rr branch_block_stmt_2426/do_while_stmt_2427/do_while_stmt_2427_loop_body/SUB_u11_u11_2433_Update/cr) (branch_block_stmt_2426/do_while_stmt_2427/do_while_stmt_2427_loop_body/SUB_u11_u11_2433_Sample/ra branch_block_stmt_2426/do_while_stmt_2427/do_while_stmt_2427_loop_body/SUB_u11_u11_2433_Update/ca)
  ncount_down_2462_2434_buf <=> (branch_block_stmt_2426/do_while_stmt_2427/do_while_stmt_2427_loop_body/R_ncount_down_2434_Sample/req branch_block_stmt_2426/do_while_stmt_2427/do_while_stmt_2427_loop_body/R_ncount_down_2434_Update/req) (branch_block_stmt_2426/do_while_stmt_2427/do_while_stmt_2427_loop_body/R_ncount_down_2434_Sample/ack branch_block_stmt_2426/do_while_stmt_2427/do_while_stmt_2427_loop_body/R_ncount_down_2434_Update/ack)
  phi_stmt_2435 <=> (branch_block_stmt_2426/do_while_stmt_2427/do_while_stmt_2427_loop_body/phi_stmt_2435_entry_sample_req branch_block_stmt_2426/do_while_stmt_2427/do_while_stmt_2427_loop_body/phi_stmt_2435_loopback_sample_req) (branch_block_stmt_2426/do_while_stmt_2427/do_while_stmt_2427_loop_body/phi_stmt_2435_phi_mux_ack)
  nmem_addr_offset_2467_2439_buf <=> (branch_block_stmt_2426/do_while_stmt_2427/do_while_stmt_2427_loop_body/R_nmem_addr_offset_2439_Sample/req branch_block_stmt_2426/do_while_stmt_2427/do_while_stmt_2427_loop_body/R_nmem_addr_offset_2439_Update/req) (branch_block_stmt_2426/do_while_stmt_2427/do_while_stmt_2427_loop_body/R_nmem_addr_offset_2439_Sample/ack branch_block_stmt_2426/do_while_stmt_2427/do_while_stmt_2427_loop_body/R_nmem_addr_offset_2439_Update/ack)
  // 			$call accessMemoryDword (tag READMEM control_data_addr ($bitcast ($uint<64>) mem_addr_offset ) ($bitcast ($uint<64>) _b0  ) ) (data ) 
  //  file .Aa/nic.linked.opt.aa, line 888
  // tag
  // control_data_addr
  // mem_addr_offset
  call_stmt_2449_call <=> (branch_block_stmt_2426/do_while_stmt_2427/do_while_stmt_2427_loop_body/call_stmt_2449_Sample/crr branch_block_stmt_2426/do_while_stmt_2427/do_while_stmt_2427_loop_body/call_stmt_2449_Update/ccr) (branch_block_stmt_2426/do_while_stmt_2427/do_while_stmt_2427_loop_body/call_stmt_2449_Sample/cra branch_block_stmt_2426/do_while_stmt_2427/do_while_stmt_2427_loop_body/call_stmt_2449_Update/cca)
  // 			nic_to_mac_transmit_pipe := ((($bitcast ($uint<1>) _b0  ) && data) && FULL_BYTE_MASK) $buffering 1// bits of buffering = 73. 
  //  file .Aa/nic.linked.opt.aa, line 889
  // ((($bitcast ($uint<1>) _b0  ) && data) && FULL_BYTE_MASK)
  // (($bitcast ($uint<1>) _b0  ) && data)
  // data
  CONCAT_u65_u73_2456_inst <=> (branch_block_stmt_2426/do_while_stmt_2427/do_while_stmt_2427_loop_body/CONCAT_u65_u73_2456_Sample/rr branch_block_stmt_2426/do_while_stmt_2427/do_while_stmt_2427_loop_body/CONCAT_u65_u73_2456_Update/cr) (branch_block_stmt_2426/do_while_stmt_2427/do_while_stmt_2427_loop_body/CONCAT_u65_u73_2456_Sample/ra branch_block_stmt_2426/do_while_stmt_2427/do_while_stmt_2427_loop_body/CONCAT_u65_u73_2456_Update/ca)
  // nic_to_mac_transmit_pipe
  WPIPE_nic_to_mac_transmit_pipe_2450_inst <=> (branch_block_stmt_2426/do_while_stmt_2427/do_while_stmt_2427_loop_body/WPIPE_nic_to_mac_transmit_pipe_2450_Sample/req branch_block_stmt_2426/do_while_stmt_2427/do_while_stmt_2427_loop_body/WPIPE_nic_to_mac_transmit_pipe_2450_Update/req) (branch_block_stmt_2426/do_while_stmt_2427/do_while_stmt_2427_loop_body/WPIPE_nic_to_mac_transmit_pipe_2450_Sample/ack branch_block_stmt_2426/do_while_stmt_2427/do_while_stmt_2427_loop_body/WPIPE_nic_to_mac_transmit_pipe_2450_Update/ack)
  // 			$volatile ncount_down := (count_down - 8 ) $buffering 1
  //  file .Aa/nic.linked.opt.aa, line 890
  // (count_down - 8 )
  // count_down
  // 			$volatile nmem_addr_offset := (mem_addr_offset + 8 ) $buffering 1
  //  file .Aa/nic.linked.opt.aa, line 891
  // (mem_addr_offset + 8 )
  // mem_addr_offset
  // 			$volatile not_last_word := (ncount_down > 8 ) $buffering 1
  //  file .Aa/nic.linked.opt.aa, line 892
  // (ncount_down > 8 )
  // ncount_down
  // not_last_word
  do_while_stmt_2427_branch <=> (branch_block_stmt_2426/do_while_stmt_2427/do_while_stmt_2427_loop_body/condition_evaluated) (branch_block_stmt_2426/do_while_stmt_2427/loop_exit/ack branch_block_stmt_2426/do_while_stmt_2427/loop_taken/ack)
  // 		last_offset := nmem_addr_offset $buffering 1// bits of buffering = 16. 
  //  file .Aa/nic.linked.opt.aa, line 894
  // nmem_addr_offset
  W_last_offset_2475_inst <=> (branch_block_stmt_2426/assign_stmt_2477_to_assign_stmt_2502/assign_stmt_2477_Sample/req branch_block_stmt_2426/assign_stmt_2477_to_assign_stmt_2502/assign_stmt_2477_Update/req) (branch_block_stmt_2426/assign_stmt_2477_to_assign_stmt_2502/assign_stmt_2477_Sample/ack branch_block_stmt_2426/assign_stmt_2477_to_assign_stmt_2502/assign_stmt_2477_Update/ack)
  // 		$call accessMemoryDword (tag READMEM control_data_addr ($bitcast ($uint<64>) last_offset ) ($bitcast ($uint<64>) _b0  ) ) (last_word ) 
  //  file .Aa/nic.linked.opt.aa, line 895
  // tag
  // control_data_addr
  // last_offset
  call_stmt_2486_call <=> (branch_block_stmt_2426/assign_stmt_2477_to_assign_stmt_2502/call_stmt_2486_Sample/crr branch_block_stmt_2426/assign_stmt_2477_to_assign_stmt_2502/call_stmt_2486_Update/ccr) (branch_block_stmt_2426/assign_stmt_2477_to_assign_stmt_2502/call_stmt_2486_Sample/cra branch_block_stmt_2426/assign_stmt_2477_to_assign_stmt_2502/call_stmt_2486_Update/cca)
  // 		nic_to_mac_transmit_pipe := ((($bitcast ($uint<1>) _b1  ) && last_word) && last_tkeep) $buffering 1// bits of buffering = 73. 
  //  file .Aa/nic.linked.opt.aa, line 897
  // ((($bitcast ($uint<1>) _b1  ) && last_word) && last_tkeep)
  // (($bitcast ($uint<1>) _b1  ) && last_word)
  // last_word
  // last_tkeep
  CONCAT_u65_u73_2495_inst <=> (branch_block_stmt_2426/assign_stmt_2477_to_assign_stmt_2502/CONCAT_u65_u73_2495_Sample/rr branch_block_stmt_2426/assign_stmt_2477_to_assign_stmt_2502/CONCAT_u65_u73_2495_Update/cr) (branch_block_stmt_2426/assign_stmt_2477_to_assign_stmt_2502/CONCAT_u65_u73_2495_Sample/ra branch_block_stmt_2426/assign_stmt_2477_to_assign_stmt_2502/CONCAT_u65_u73_2495_Update/ca)
  // nic_to_mac_transmit_pipe
  WPIPE_nic_to_mac_transmit_pipe_2489_inst <=> (branch_block_stmt_2426/assign_stmt_2477_to_assign_stmt_2502/WPIPE_nic_to_mac_transmit_pipe_2489_Sample/req branch_block_stmt_2426/assign_stmt_2477_to_assign_stmt_2502/WPIPE_nic_to_mac_transmit_pipe_2489_Update/req) (branch_block_stmt_2426/assign_stmt_2477_to_assign_stmt_2502/WPIPE_nic_to_mac_transmit_pipe_2489_Sample/ack branch_block_stmt_2426/assign_stmt_2477_to_assign_stmt_2502/WPIPE_nic_to_mac_transmit_pipe_2489_Update/ack)
  // 		status := (packet_size == ($bitcast ($uint<11>) last_offset )) $buffering 1// bits of buffering = 1. 
  //  file .Aa/nic.linked.opt.aa, line 898
  // (packet_size == ($bitcast ($uint<11>) last_offset ))
  // packet_size
  // last_offset
  EQ_u11_u1_2501_inst <=> (branch_block_stmt_2426/assign_stmt_2477_to_assign_stmt_2502/EQ_u11_u1_2501_Sample/rr branch_block_stmt_2426/assign_stmt_2477_to_assign_stmt_2502/EQ_u11_u1_2501_Update/cr) (branch_block_stmt_2426/assign_stmt_2477_to_assign_stmt_2502/EQ_u11_u1_2501_Sample/ra branch_block_stmt_2426/assign_stmt_2477_to_assign_stmt_2502/EQ_u11_u1_2501_Update/ca)
}
$module [transmitEngineDaemon] 
{
  // pipe-declarations for block %transmitEngineDaemon
  //  file .Aa/nic.linked.opt.aa, line 901
  // pipe-declarations for block %transmitEngineDaemon%main
  //  file .Aa/nic.linked.opt.aa, line 907
  // pipe-declarations for block %transmitEngineDaemon%main%
  //  file .Aa/nic.linked.opt.aa, line 909
  // there are no memory spaces local to this module.
  $CP 
  {
    // begin control-path 
    ::[assign_stmt_2508] 
    {
      // start:  	LAST_READ_TX_QUEUE_INDEX := 0  $buffering 1// bits of buffering = 8. 
      //  file .Aa/nic.linked.opt.aa, line 906
      // Target expression
      // (as target) LAST_READ_TX_QUEUE_INDEX
      $T[WPIPE_LAST_READ_TX_QUEUE_INDEX_2506_sample_start_] 
      $T[WPIPE_LAST_READ_TX_QUEUE_INDEX_2506_sample_completed_] 
      $T[WPIPE_LAST_READ_TX_QUEUE_INDEX_2506_update_start_] 
      $T[WPIPE_LAST_READ_TX_QUEUE_INDEX_2506_update_completed_] 
      ;;[WPIPE_LAST_READ_TX_QUEUE_INDEX_2506_Sample] 
      {
        // pipe write sample-start LAST_READ_TX_QUEUE_INDEX
        $T [req] $T [ack] 
      }
      ;;[WPIPE_LAST_READ_TX_QUEUE_INDEX_2506_Update] 
      {
        // pipe write update (complete) LAST_READ_TX_QUEUE_INDEX
        $T [req] $T [ack] 
      }
      WPIPE_LAST_READ_TX_QUEUE_INDEX_2506_sample_start_ &-> (WPIPE_LAST_READ_TX_QUEUE_INDEX_2506_Sample)
      WPIPE_LAST_READ_TX_QUEUE_INDEX_2506_sample_completed_ <-& (WPIPE_LAST_READ_TX_QUEUE_INDEX_2506_Sample)
      WPIPE_LAST_READ_TX_QUEUE_INDEX_2506_update_start_ <-& (WPIPE_LAST_READ_TX_QUEUE_INDEX_2506_sample_completed_)
      WPIPE_LAST_READ_TX_QUEUE_INDEX_2506_update_start_ &-> (WPIPE_LAST_READ_TX_QUEUE_INDEX_2506_Update)
      WPIPE_LAST_READ_TX_QUEUE_INDEX_2506_update_completed_ <-& (WPIPE_LAST_READ_TX_QUEUE_INDEX_2506_Update)
      // end:  	LAST_READ_TX_QUEUE_INDEX := 0  $buffering 1// bits of buffering = 8. 
      // load-store dependencies..
      // pipe read/write dependencies for pipe LAST_READ_TX_QUEUE_INDEX
      // read-dependencies for pipe LAST_READ_TX_QUEUE_INDEX
      // write-dependencies for pipe LAST_READ_TX_QUEUE_INDEX
      // signal write dependencies for LAST_READ_TX_QUEUE_INDEX
    }
    <>[branch_block_stmt_2509] // Branch Block  file .Aa/nic.linked.opt.aa, line 907
    {
      $P [branch_block_stmt_2509__entry__]
      branch_block_stmt_2509__entry__ <-| ($entry)
      $P [branch_block_stmt_2509__exit__]
      branch_block_stmt_2509__exit__ |-> ($exit)
      $P [merge_stmt_2510__entry__] 
      $P [merge_stmt_2510__exit__] 
      $P [if_stmt_2511__entry__] 
      $P [if_stmt_2511__exit__] 
      $P [assign_stmt_2520__entry__] 
      $P [assign_stmt_2520__exit__] 
      $P [do_while_stmt_2522__entry__] 
      $P [do_while_stmt_2522__exit__] 
      $P [disable_loopback]
      // if-statement  
      //  file .Aa/nic.linked.opt.aa, line 0
      ;;[if_stmt_2511_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_2511__entry__ |-> (if_stmt_2511_dead_link)
      if_stmt_2511__exit__ <-| (if_stmt_2511_dead_link)
      ;;[if_stmt_2511_eval_test] 
      {
        // test expression evaluate and trigger branch 
        // ( ~ (S_CONTROL_REGISTER [] 0 ) )
        ;;[NOT_u1_u1_2515] 
        {
          // unary expression 
          // (S_CONTROL_REGISTER [] 0 )
          ;;[BITSEL_u32_u1_2514] 
          {
            // binary expression 
            ||[BITSEL_u32_u1_2514_inputs] 
            {
              // S_CONTROL_REGISTER
              ;;[RPIPE_S_CONTROL_REGISTER_2512] 
              {
                // pipe read
                ;;[Sample] 
                {
                  $T [req] $T [ack] 
                }
                ;;[Update] 
                {
                  $T [req] $T [ack] 
                }
              }
            }
            // flow-through
            ;;[SplitProtocol] 
            {
              ;;[Sample] 
              {
                $T [rr] $T [ra]
              }
              ;;[Update] 
              {
                $T [cr] $T [ca]
              }
            }
          }
          // flow-through
          ;;[SplitProtocol] 
          {
            ;;[Sample] 
            {
              $T [rr] $T [ra]
            }
            ;;[Update] 
            {
              $T [cr] $T [ca]
            }
          }
        }
        $T [branch_req] 
      }
      if_stmt_2511__entry__ |-> (if_stmt_2511_eval_test)
      $P [NOT_u1_u1_2515_place]
      NOT_u1_u1_2515_place <-| (if_stmt_2511_eval_test)
      ;;[if_stmt_2511_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_2511_else_link] 
      {
        $T [else_choice_transition] 
      }
      NOT_u1_u1_2515_place |-> (if_stmt_2511_if_link if_stmt_2511_else_link)
      $P [not_enabled_yet_loopback]
      not_enabled_yet_loopback <-| (if_stmt_2511_if_link)
      if_stmt_2511__exit__ <-| (if_stmt_2511_else_link)
      ::[assign_stmt_2520] 
      {
        // start:  		tx_tag := 2  $buffering 1// bits of buffering = 8. 
        //  file .Aa/nic.linked.opt.aa, line 914
        // constant! 
        // end:  		tx_tag := 2  $buffering 1// bits of buffering = 8. 
        // load-store dependencies..
      }
      assign_stmt_2520__entry__ |-> (assign_stmt_2520)
      assign_stmt_2520__exit__ <-| (assign_stmt_2520)
      // do-while-statement  
      //  file .Aa/nic.linked.opt.aa, line 916
      <o> [do_while_stmt_2522]  $depth 31 $buffering 1 
      {
        $P[do_while_stmt_2522__entry__] 
        $P[do_while_stmt_2522__exit__] 
        $P[loop_back] 
        $P[condition_done] 
        $P[loop_body_done] 
        $pipeline [do_while_stmt_2522_loop_body] 
        {
          // Pipelined!
          $T[back_edge_to_loop_body] 
          $T[first_time_through_loop_body] 
          $T[loop_body_start] 
          $T[condition_evaluated] 
          $transitionmerge [entry_tmerge] (back_edge_to_loop_body first_time_through_loop_body) (loop_body_start)
          $entry <-& (loop_body_start)
          $T[aggregated_phi_sample_req] 
          $T[aggregated_phi_sample_ack] 
          $T[aggregated_phi_sample_ack_d] $delay
          aggregated_phi_sample_ack_d <-& (aggregated_phi_sample_ack)
          $T[aggregated_phi_update_req] 
          $T[aggregated_phi_update_ack] 
          // do not loop-back unless all phi's have used up their triggering tokens.
          condition_evaluated <-& (aggregated_phi_update_ack)
          aggregated_phi_sample_req o<-& (aggregated_phi_update_ack 0)
          // start:  single source PHI statement phi_stmt_2524
          // 			$phi tx_q_index := 			  ((LAST_READ_TX_QUEUE_INDEX + 1 ) & ($bitcast ($uint<8>) (S_NUMBER_OF_SERVERS - 1 ) )) $on   $entry ,   $loopback 
          // type of target is $uint<8>
          $T[phi_stmt_2524_sample_start_] 
          $T[phi_stmt_2524_sample_completed_] 
          $T[phi_stmt_2524_update_start_] 
          $T[phi_stmt_2524_update_completed_] 
          aggregated_phi_sample_req <-& (phi_stmt_2524_sample_start_)
          aggregated_phi_sample_ack &-> (phi_stmt_2524_sample_completed_)
          aggregated_phi_update_req <-& (phi_stmt_2524_update_start_)
          // non-implicit source expression in single-source phi
          // ((LAST_READ_TX_QUEUE_INDEX + 1 ) & ($bitcast ($uint<8>) (S_NUMBER_OF_SERVERS - 1 ) ))
          $T[AND_u8_u8_2533_sample_start_] 
          $T[AND_u8_u8_2533_sample_completed_] 
          $T[AND_u8_u8_2533_update_start_] 
          $T[AND_u8_u8_2533_update_completed_] 
          // (LAST_READ_TX_QUEUE_INDEX + 1 )
          // LAST_READ_TX_QUEUE_INDEX
          // ($bitcast ($uint<8>) (S_NUMBER_OF_SERVERS - 1 ) )
          // (S_NUMBER_OF_SERVERS - 1 )
          // S_NUMBER_OF_SERVERS
          // start: Forward dependencies from (LAST_READ_TX_QUEUE_INDEX + 1 ) to transition AND_u8_u8_2533_sample_start_
          // non-constant expression which depends only on signals/constants?
          // done: Forward dependencies from (LAST_READ_TX_QUEUE_INDEX + 1 ) to transition AND_u8_u8_2533_sample_start_
          // start: Forward dependencies from ($bitcast ($uint<8>) (S_NUMBER_OF_SERVERS - 1 ) ) to transition AND_u8_u8_2533_sample_start_
          // non-constant expression which depends only on signals/constants?
          // done: Forward dependencies from ($bitcast ($uint<8>) (S_NUMBER_OF_SERVERS - 1 ) ) to transition AND_u8_u8_2533_sample_start_
          ;;[AND_u8_u8_2533_Sample] 
          {
            // binary expression 
            $T [rr] $T [ra]  // (split) binary operation 
          }
          ;;[AND_u8_u8_2533_Update] 
          {
            // binary expression 
            $T [cr] $T [ca] // (split) binary operation 
          }
          AND_u8_u8_2533_sample_start_ &-> (AND_u8_u8_2533_Sample)
          AND_u8_u8_2533_sample_completed_ <-& (AND_u8_u8_2533_Sample)
          AND_u8_u8_2533_sample_completed_ &-> ($null)
          AND_u8_u8_2533_update_start_ &-> (AND_u8_u8_2533_Update)
          AND_u8_u8_2533_update_completed_ <-& (AND_u8_u8_2533_Update)
          // RAW reenables for (LAST_READ_TX_QUEUE_INDEX + 1 )
          // RAW reenables for ($bitcast ($uint<8>) (S_NUMBER_OF_SERVERS - 1 ) )
          // self-release: 
          AND_u8_u8_2533_sample_start_ o<-& (AND_u8_u8_2533_sample_completed_ 1)
          $null &-> (AND_u8_u8_2533_update_start_)
          AND_u8_u8_2533_update_start_ o<-& (AND_u8_u8_2533_update_completed_ 0)
          // RAW reenables for ((LAST_READ_TX_QUEUE_INDEX + 1 ) & ($bitcast ($uint<8>) (S_NUMBER_OF_SERVERS - 1 ) ))
          // producer  and  consumer are both determined by PHI statements.
          aggregated_phi_sample_req &-> (AND_u8_u8_2533_sample_start_)
          aggregated_phi_sample_ack <-& (AND_u8_u8_2533_sample_completed_)
          aggregated_phi_update_req &-> (AND_u8_u8_2533_update_start_)
          phi_stmt_2524_update_completed_ <-& (AND_u8_u8_2533_update_completed_)
          aggregated_phi_update_ack <-& (phi_stmt_2524_update_completed_)
          // done: PHI Statement phi_stmt_2524
          // start:  multi-source PHI statement phi_stmt_2534
          // 			$phi init_flag := 			  ($bitcast ($uint<1>) _b0  ) $on   $loopback 			  ($bitcast ($uint<1>) _b1  ) $on   $entry 
          // type of target is $uint<1>
          $T[phi_stmt_2534_sample_start_] 
          $T[phi_stmt_2534_sample_completed_] 
          $T[phi_stmt_2534_update_start_] 
          $T[phi_stmt_2534_update_completed_] 
          $T[phi_stmt_2534_sample_start__ps] 
          phi_stmt_2534_sample_start__ps <-& (aggregated_phi_sample_req)
          $T[phi_stmt_2534_sample_completed__ps] 
          phi_stmt_2534_sample_completed__ps &-> (aggregated_phi_sample_ack)
          $T[phi_stmt_2534_update_start__ps] 
          phi_stmt_2534_update_start__ps <-& (aggregated_phi_update_req)
          $T[phi_stmt_2534_update_completed__ps] 
          phi_stmt_2534_update_completed_ <-& (phi_stmt_2534_update_completed__ps)
          aggregated_phi_sample_req <-& (phi_stmt_2534_sample_start_)
          aggregated_phi_sample_ack &-> (phi_stmt_2534_sample_completed_)
          aggregated_phi_update_req <-& (phi_stmt_2534_update_start_)
          $T[phi_stmt_2534_loopback_trigger] 
          phi_stmt_2534_loopback_trigger <-& (back_edge_to_loop_body)
          $T[phi_stmt_2534_loopback_sample_req] 
          $T[phi_stmt_2534_loopback_sample_req_ps] 
          phi_stmt_2534_loopback_sample_req <-& (phi_stmt_2534_loopback_sample_req_ps)
          phi_stmt_2534_loopback_sample_req &-> ($null)
          $T[phi_stmt_2534_entry_trigger] 
          phi_stmt_2534_entry_trigger <-& (first_time_through_loop_body)
          $T[phi_stmt_2534_entry_sample_req] 
          $T[phi_stmt_2534_entry_sample_req_ps] 
          phi_stmt_2534_entry_sample_req <-& (phi_stmt_2534_entry_sample_req_ps)
          phi_stmt_2534_entry_sample_req &-> ($null)
          phi_stmt_2534_update_start_ o<-& (phi_stmt_2534_update_completed_ 0)
          phi_stmt_2534_sample_start_ o<-& (phi_stmt_2534_sample_completed_ 1)
          $T[phi_stmt_2534_merged_reqs] 
          $T[phi_stmt_2534_phi_mux_ack] 
          $T[phi_stmt_2534_phi_mux_ack_ps] 
          phi_stmt_2534_phi_mux_ack_ps <-& (phi_stmt_2534_phi_mux_ack)
          aggregated_phi_update_ack <-& (phi_stmt_2534_update_completed_)
          $T[type_cast_2537_sample_start__ps] 
          $T[type_cast_2537_sample_completed__ps] 
          $T[type_cast_2537_update_start__ps] 
          $T[type_cast_2537_update_completed__ps] 
          // dummies for constant expression source for phi
          $T[type_cast_2537_sample_start_] 
          $T[type_cast_2537_sample_completed_] 
          type_cast_2537_sample_completed_ <-& (type_cast_2537_sample_start_)
          $T[type_cast_2537_update_start_] 
          $T [type_cast_2537_update_completed_] $delay 
          type_cast_2537_update_completed_ <-& (type_cast_2537_update_start_)
          // Phi start dependency for implicit/constant alternative.
          type_cast_2537_sample_start_ <-& (type_cast_2537_sample_start__ps)
          type_cast_2537_update_start_ <-& (type_cast_2537_update_start__ps)
          // Phi complete dependency.
          type_cast_2537_sample_completed__ps <-& (type_cast_2537_sample_completed_)
          type_cast_2537_update_completed__ps <-& (type_cast_2537_update_completed_)
          $T[type_cast_2539_sample_start__ps] 
          $T[type_cast_2539_sample_completed__ps] 
          $T[type_cast_2539_update_start__ps] 
          $T[type_cast_2539_update_completed__ps] 
          // dummies for constant expression source for phi
          $T[type_cast_2539_sample_start_] 
          $T[type_cast_2539_sample_completed_] 
          type_cast_2539_sample_completed_ <-& (type_cast_2539_sample_start_)
          $T[type_cast_2539_update_start_] 
          $T [type_cast_2539_update_completed_] $delay 
          type_cast_2539_update_completed_ <-& (type_cast_2539_update_start_)
          // Phi start dependency for implicit/constant alternative.
          type_cast_2539_sample_start_ <-& (type_cast_2539_sample_start__ps)
          type_cast_2539_update_start_ <-& (type_cast_2539_update_start__ps)
          // Phi complete dependency.
          type_cast_2539_sample_completed__ps <-& (type_cast_2539_sample_completed_)
          type_cast_2539_update_completed__ps <-& (type_cast_2539_update_completed_)
          $phisequencer [ phi_stmt_2534_phi_seq] : 
          phi_stmt_2534_loopback_trigger type_cast_2537_sample_start__ps type_cast_2537_sample_completed__ps type_cast_2537_update_start__ps type_cast_2537_update_completed__ps phi_stmt_2534_entry_trigger type_cast_2539_sample_start__ps type_cast_2539_sample_completed__ps type_cast_2539_update_start__ps type_cast_2539_update_completed__ps :
          phi_stmt_2534_sample_start__ps phi_stmt_2534_sample_completed__ps phi_stmt_2534_update_start__ps phi_stmt_2534_update_completed__ps :
          phi_stmt_2534_loopback_sample_req_ps phi_stmt_2534_entry_sample_req_ps : 
          phi_stmt_2534_phi_mux_ack_ps
          // done: PHI Statement phi_stmt_2534
          // start: 			$call getTxPacketPointerFromServer (tx_tag tx_q_index ) (pkt_pointer tx_flag ) 
          //  file .Aa/nic.linked.opt.aa, line 925
          $T[call_stmt_2547_sample_start_] 
          $T[call_stmt_2547_sample_completed_] 
          $T[call_stmt_2547_update_start_] 
          $T[call_stmt_2547_update_completed_] 
          // Call input argument 0
          // Call input argument 1
          // tx_q_index
          // start: Forward dependencies from tx_q_index to transition call_stmt_2547_sample_start_
          call_stmt_2547_sample_start_ <-& (phi_stmt_2524_update_completed_)
          // done: Forward dependencies from tx_q_index to transition call_stmt_2547_sample_start_
          // RAW reenables for tx_q_index
          phi_stmt_2524_update_start_ o<-& (call_stmt_2547_sample_completed_ 0)
          ;;[call_stmt_2547_Sample] 
          {
            $T [crr] $T [cra] 
          }
          ;;[call_stmt_2547_Update] 
          {
            $T [ccr] $T [cca] 
          }
          call_stmt_2547_sample_start_ &-> (call_stmt_2547_Sample)
          call_stmt_2547_sample_completed_ <-& (call_stmt_2547_Sample)
          call_stmt_2547_sample_completed_ &-> ($null)
          call_stmt_2547_update_start_ &-> (call_stmt_2547_Update)
          call_stmt_2547_update_completed_ <-& (call_stmt_2547_Update)
          // Call output argument 0
          // (as target) pkt_pointer
          // Call output argument 1
          // (as target) tx_flag
          // self-release: 
          call_stmt_2547_sample_start_ o<-& (call_stmt_2547_sample_completed_ 1)
          $null &-> (call_stmt_2547_update_start_)
          call_stmt_2547_update_start_ o<-& (call_stmt_2547_update_completed_ 0)
          // start: WAR dependencies for pkt_pointer
          // done: WAR dependencies for pkt_pointer
          // start: WAR dependencies for tx_flag
          // done: WAR dependencies for tx_flag
          // end: 			$call getTxPacketPointerFromServer (tx_tag tx_q_index ) (pkt_pointer tx_flag ) 
          // Barrier in pipelined body 
          $T[barrier_stmt_2548_update_completed_] 
          barrier_stmt_2548_update_completed_ <-& (call_stmt_2547_update_completed_)
          // start:  			TX_ACTIVITY_LOGGER := 1  $buffering 1// bits of buffering = 8. 
          //  file .Aa/nic.linked.opt.aa, line 927
          // Target expression
          // (as target) TX_ACTIVITY_LOGGER
          $T[WPIPE_TX_ACTIVITY_LOGGER_2549_sample_start_] 
          $T[WPIPE_TX_ACTIVITY_LOGGER_2549_sample_completed_] 
          $T[WPIPE_TX_ACTIVITY_LOGGER_2549_update_start_] 
          $T[WPIPE_TX_ACTIVITY_LOGGER_2549_update_completed_] 
          // barrier 
          WPIPE_TX_ACTIVITY_LOGGER_2549_sample_start_ <-& (barrier_stmt_2548_update_completed_)
          ;;[WPIPE_TX_ACTIVITY_LOGGER_2549_Sample] 
          {
            // pipe write sample-start TX_ACTIVITY_LOGGER
            $T [req] $T [ack] 
          }
          ;;[WPIPE_TX_ACTIVITY_LOGGER_2549_Update] 
          {
            // pipe write update (complete) TX_ACTIVITY_LOGGER
            $T [req] $T [ack] 
          }
          WPIPE_TX_ACTIVITY_LOGGER_2549_sample_start_ &-> (WPIPE_TX_ACTIVITY_LOGGER_2549_Sample)
          WPIPE_TX_ACTIVITY_LOGGER_2549_sample_completed_ <-& (WPIPE_TX_ACTIVITY_LOGGER_2549_Sample)
          WPIPE_TX_ACTIVITY_LOGGER_2549_update_start_ <-& (WPIPE_TX_ACTIVITY_LOGGER_2549_sample_completed_)
          WPIPE_TX_ACTIVITY_LOGGER_2549_update_start_ &-> (WPIPE_TX_ACTIVITY_LOGGER_2549_Update)
          WPIPE_TX_ACTIVITY_LOGGER_2549_update_completed_ <-& (WPIPE_TX_ACTIVITY_LOGGER_2549_Update)
          WPIPE_TX_ACTIVITY_LOGGER_2549_sample_start_ o<-& (WPIPE_TX_ACTIVITY_LOGGER_2549_update_completed_ 0)
          // end:  			TX_ACTIVITY_LOGGER := 1  $buffering 1// bits of buffering = 8. 
          // start: 			$guard (~tx_flag) $call transmitPacket (tx_tag pkt_pointer ) (transmitted_flag ) 
          //  file .Aa/nic.linked.opt.aa, line 928
          $T[call_stmt_2556_sample_start_] 
          $T[call_stmt_2556_sample_completed_] 
          $T[call_stmt_2556_update_start_] 
          $T[call_stmt_2556_update_completed_] 
          // Guard expression
          // tx_flag
          // start: Forward dependencies from tx_flag to transition call_stmt_2556_sample_start_
          call_stmt_2556_sample_start_ <-& (call_stmt_2547_update_completed_)
          // done: Forward dependencies from tx_flag to transition call_stmt_2556_sample_start_
          // RAW reenables for tx_flag
          call_stmt_2547_update_start_ o<-& (call_stmt_2556_sample_completed_ 0)
          // Call input argument 0
          // Call input argument 1
          // pkt_pointer
          // start: Forward dependencies from pkt_pointer to transition call_stmt_2556_sample_start_
          call_stmt_2556_sample_start_ <-& (call_stmt_2547_update_completed_)
          // done: Forward dependencies from pkt_pointer to transition call_stmt_2556_sample_start_
          // RAW reenables for pkt_pointer
          call_stmt_2547_update_start_ o<-& (call_stmt_2556_sample_completed_ 0)
          ;;[call_stmt_2556_Sample] 
          {
            $T [crr] $T [cra] 
          }
          ;;[call_stmt_2556_Update] 
          {
            $T [ccr] $T [cca] 
          }
          call_stmt_2556_sample_start_ &-> (call_stmt_2556_Sample)
          call_stmt_2556_sample_completed_ <-& (call_stmt_2556_Sample)
          call_stmt_2556_sample_completed_ &-> ($null)
          call_stmt_2556_update_start_ &-> (call_stmt_2556_Update)
          call_stmt_2556_update_completed_ <-& (call_stmt_2556_Update)
          // Call output argument 0
          // (as target) transmitted_flag
          // self-release: 
          call_stmt_2556_sample_start_ o<-& (call_stmt_2556_sample_completed_ 1)
          $null &-> (call_stmt_2556_update_start_)
          call_stmt_2556_update_start_ o<-& (call_stmt_2556_update_completed_ 0)
          // start: WAR dependencies for transmitted_flag
          // done: WAR dependencies for transmitted_flag
          // end: 			$guard (~tx_flag) $call transmitPacket (tx_tag pkt_pointer ) (transmitted_flag ) 
          // Barrier in pipelined body 
          $T[barrier_stmt_2557_update_completed_] 
          barrier_stmt_2557_update_completed_ <-& (call_stmt_2556_update_completed_)
          barrier_stmt_2557_update_completed_ <-& (WPIPE_TX_ACTIVITY_LOGGER_2549_update_completed_)
          // start:  			TX_ACTIVITY_LOGGER := 2  $buffering 1// bits of buffering = 8. 
          //  file .Aa/nic.linked.opt.aa, line 930
          // Target expression
          // (as target) TX_ACTIVITY_LOGGER
          $T[WPIPE_TX_ACTIVITY_LOGGER_2558_sample_start_] 
          $T[WPIPE_TX_ACTIVITY_LOGGER_2558_sample_completed_] 
          $T[WPIPE_TX_ACTIVITY_LOGGER_2558_update_start_] 
          $T[WPIPE_TX_ACTIVITY_LOGGER_2558_update_completed_] 
          // barrier 
          WPIPE_TX_ACTIVITY_LOGGER_2558_sample_start_ <-& (barrier_stmt_2557_update_completed_)
          ;;[WPIPE_TX_ACTIVITY_LOGGER_2558_Sample] 
          {
            // pipe write sample-start TX_ACTIVITY_LOGGER
            $T [req] $T [ack] 
          }
          ;;[WPIPE_TX_ACTIVITY_LOGGER_2558_Update] 
          {
            // pipe write update (complete) TX_ACTIVITY_LOGGER
            $T [req] $T [ack] 
          }
          WPIPE_TX_ACTIVITY_LOGGER_2558_sample_start_ &-> (WPIPE_TX_ACTIVITY_LOGGER_2558_Sample)
          WPIPE_TX_ACTIVITY_LOGGER_2558_sample_completed_ <-& (WPIPE_TX_ACTIVITY_LOGGER_2558_Sample)
          WPIPE_TX_ACTIVITY_LOGGER_2558_update_start_ <-& (WPIPE_TX_ACTIVITY_LOGGER_2558_sample_completed_)
          WPIPE_TX_ACTIVITY_LOGGER_2558_update_start_ &-> (WPIPE_TX_ACTIVITY_LOGGER_2558_Update)
          WPIPE_TX_ACTIVITY_LOGGER_2558_update_completed_ <-& (WPIPE_TX_ACTIVITY_LOGGER_2558_Update)
          WPIPE_TX_ACTIVITY_LOGGER_2558_sample_start_ o<-& (WPIPE_TX_ACTIVITY_LOGGER_2558_update_completed_ 0)
          // end:  			TX_ACTIVITY_LOGGER := 2  $buffering 1// bits of buffering = 8. 
          // start:  			NOT_u1_u1_2466_2466_delayed_4_0 := ( ~ tx_flag ) $buffering 4 $cut_through // bits of buffering = 4. 
          //  file .Aa/nic.linked.opt.aa, line 931
          // Source expression
          // ( ~ tx_flag )
          $T[NOT_u1_u1_2563_sample_start_] 
          $T[NOT_u1_u1_2563_sample_completed_] 
          $T[NOT_u1_u1_2563_update_start_] 
          $T[NOT_u1_u1_2563_update_completed_] 
          // barrier 
          NOT_u1_u1_2563_sample_start_ <-& (barrier_stmt_2557_update_completed_)
          // tx_flag
          // start: Forward dependencies from tx_flag to transition NOT_u1_u1_2563_sample_start_
          NOT_u1_u1_2563_sample_start_ <-& (call_stmt_2547_update_completed_)
          // done: Forward dependencies from tx_flag to transition NOT_u1_u1_2563_sample_start_
          ;;[NOT_u1_u1_2563_Sample] 
          {
            // unary expression 
            $T [rr] $T [ra] // (split) unary operation
          }
          ;;[NOT_u1_u1_2563_Update] 
          {
            // unary expression 
            $T [cr] $T [ca] //(split) unary operation
          }
          NOT_u1_u1_2563_sample_start_ &-> (NOT_u1_u1_2563_Sample)
          NOT_u1_u1_2563_sample_completed_ <-& (NOT_u1_u1_2563_Sample)
          NOT_u1_u1_2563_sample_completed_ &-> ($null)
          NOT_u1_u1_2563_update_start_ &-> (NOT_u1_u1_2563_Update)
          NOT_u1_u1_2563_update_completed_ <-& (NOT_u1_u1_2563_Update)
          // RAW reenables for tx_flag
          call_stmt_2547_update_start_ o<-& (NOT_u1_u1_2563_sample_completed_ 0)
          // self-release: 
          NOT_u1_u1_2563_sample_start_ o<-& (NOT_u1_u1_2563_sample_completed_ 1)
          $null &-> (NOT_u1_u1_2563_update_start_)
          NOT_u1_u1_2563_update_start_ o<-& (NOT_u1_u1_2563_update_completed_ 0)
          // Target expression
          // (as target) NOT_u1_u1_2466_2466_delayed_4_0
          // start: WAR dependencies for NOT_u1_u1_2466_2466_delayed_4_0
          // done: WAR dependencies for NOT_u1_u1_2466_2466_delayed_4_0
          // end:  			NOT_u1_u1_2466_2466_delayed_4_0 := ( ~ tx_flag ) $buffering 4 $cut_through // bits of buffering = 4. 
          // start: WAR dependencies for push_pointer_back_to_free_Q
          // done: WAR dependencies for push_pointer_back_to_free_Q
          // start:  			$volatile push_pointer_back_to_free_Q := (NOT_u1_u1_2466_2466_delayed_4_0 & transmitted_flag) $buffering 1
          //  file .Aa/nic.linked.opt.aa, line 932
          // volatile! 
          // Source expression
          // (NOT_u1_u1_2466_2466_delayed_4_0 & transmitted_flag)
          // NOT_u1_u1_2466_2466_delayed_4_0
          // transmitted_flag
          // Target expression
          // (as target) push_pointer_back_to_free_Q
          // start: WAR dependencies for push_pointer_back_to_free_Q
          // done: WAR dependencies for push_pointer_back_to_free_Q
          // end:  			$volatile push_pointer_back_to_free_Q := (NOT_u1_u1_2466_2466_delayed_4_0 & transmitted_flag) $buffering 1
          // start:  			pkt_pointer_2477_delayed_4_0 := pkt_pointer $buffering 4 $cut_through // bits of buffering = 256. 
          //  file .Aa/nic.linked.opt.aa, line 934
          $T[assign_stmt_2575_sample_start_] 
          $T[assign_stmt_2575_sample_completed_] 
          $T[assign_stmt_2575_update_start_] 
          $T[assign_stmt_2575_update_completed_] 
          // Source expression
          // pkt_pointer
          // Target expression
          // (as target) pkt_pointer_2477_delayed_4_0
          // both source and target are implicit: use interlock 
          // Interlock 
          ;;[assign_stmt_2575_Sample] 
          {
            $T [req] $T [ack] // interlock-sample.
          }
          ;;[assign_stmt_2575_Update] 
          {
            $T [req] $T [ack] // interlock-update.
          }
          assign_stmt_2575_sample_start_ &-> (assign_stmt_2575_Sample)
          assign_stmt_2575_sample_completed_ <-& (assign_stmt_2575_Sample)
          assign_stmt_2575_sample_completed_ &-> ($null)
          assign_stmt_2575_update_start_ &-> (assign_stmt_2575_Update)
          assign_stmt_2575_update_completed_ <-& (assign_stmt_2575_Update)
          // barrier dependency for statement 
          assign_stmt_2575_sample_start_ <-& (barrier_stmt_2557_update_completed_)
          // start: Forward dependencies from pkt_pointer to transition assign_stmt_2575_sample_start_
          assign_stmt_2575_sample_start_ <-& (call_stmt_2547_update_completed_)
          // done: Forward dependencies from pkt_pointer to transition assign_stmt_2575_sample_start_
          // RAW reenables for pkt_pointer
          call_stmt_2547_update_start_ o<-& (assign_stmt_2575_sample_completed_ 0)
          // self-release: 
          assign_stmt_2575_sample_start_ o<-& (assign_stmt_2575_sample_completed_ 1)
          $null &-> (assign_stmt_2575_update_start_)
          assign_stmt_2575_update_start_ o<-& (assign_stmt_2575_update_completed_ 0)
          // start: WAR dependencies for pkt_pointer_2477_delayed_4_0
          // done: WAR dependencies for pkt_pointer_2477_delayed_4_0
          // end:  			pkt_pointer_2477_delayed_4_0 := pkt_pointer $buffering 4 $cut_through // bits of buffering = 256. 
          // start: 			$guard (push_pointer_back_to_free_Q) $call pushIntoQueue (tx_tag FREEQUEUE 0  pkt_pointer_2477_delayed_4_0 ) (push_status ) 
          //  file .Aa/nic.linked.opt.aa, line 935
          $T[call_stmt_2582_sample_start_] 
          $T[call_stmt_2582_sample_completed_] 
          $T[call_stmt_2582_update_start_] 
          $T[call_stmt_2582_update_completed_] 
          // Guard expression
          // push_pointer_back_to_free_Q
          // start: Forward dependencies from push_pointer_back_to_free_Q to transition call_stmt_2582_sample_start_
          call_stmt_2582_sample_start_ <-& (call_stmt_2556_update_completed_)
          call_stmt_2582_sample_start_ <-& (NOT_u1_u1_2563_update_completed_)
          // done: Forward dependencies from push_pointer_back_to_free_Q to transition call_stmt_2582_sample_start_
          // RAW reenables for push_pointer_back_to_free_Q
          call_stmt_2556_update_start_ o<-& (call_stmt_2582_sample_completed_ 0)
          NOT_u1_u1_2563_update_start_ o<-& (call_stmt_2582_sample_completed_ 0)
          // Call input argument 0
          // Call input argument 1
          // Call input argument 2
          // Call input argument 3
          // pkt_pointer_2477_delayed_4_0
          // start: Forward dependencies from pkt_pointer_2477_delayed_4_0 to transition call_stmt_2582_sample_start_
          call_stmt_2582_sample_start_ <-& (assign_stmt_2575_update_completed_)
          // done: Forward dependencies from pkt_pointer_2477_delayed_4_0 to transition call_stmt_2582_sample_start_
          // RAW reenables for pkt_pointer_2477_delayed_4_0
          assign_stmt_2575_update_start_ o<-& (call_stmt_2582_sample_completed_ 0)
          ;;[call_stmt_2582_Sample] 
          {
            $T [crr] $T [cra] 
          }
          ;;[call_stmt_2582_Update] 
          {
            $T [ccr] $T [cca] 
          }
          call_stmt_2582_sample_start_ &-> (call_stmt_2582_Sample)
          call_stmt_2582_sample_completed_ <-& (call_stmt_2582_Sample)
          call_stmt_2582_sample_completed_ &-> ($null)
          call_stmt_2582_update_start_ &-> (call_stmt_2582_Update)
          call_stmt_2582_update_completed_ <-& (call_stmt_2582_Update)
          // Call output argument 0
          // (as target) push_status
          // self-release: 
          call_stmt_2582_sample_start_ o<-& (call_stmt_2582_sample_completed_ 1)
          $null &-> (call_stmt_2582_update_start_)
          call_stmt_2582_update_start_ o<-& (call_stmt_2582_update_completed_ 0)
          // start: WAR dependencies for push_status
          // done: WAR dependencies for push_status
          // end: 			$guard (push_pointer_back_to_free_Q) $call pushIntoQueue (tx_tag FREEQUEUE 0  pkt_pointer_2477_delayed_4_0 ) (push_status ) 
          // Barrier in pipelined body 
          $T[barrier_stmt_2583_update_completed_] 
          barrier_stmt_2583_update_completed_ <-& (call_stmt_2582_update_completed_)
          barrier_stmt_2583_update_completed_ <-& (assign_stmt_2575_update_completed_)
          barrier_stmt_2583_update_completed_ <-& (NOT_u1_u1_2563_update_completed_)
          barrier_stmt_2583_update_completed_ <-& (WPIPE_TX_ACTIVITY_LOGGER_2558_update_completed_)
          // start:  			TX_ACTIVITY_LOGGER := 3  $buffering 1// bits of buffering = 8. 
          //  file .Aa/nic.linked.opt.aa, line 937
          // Target expression
          // (as target) TX_ACTIVITY_LOGGER
          $T[WPIPE_TX_ACTIVITY_LOGGER_2584_sample_start_] 
          $T[WPIPE_TX_ACTIVITY_LOGGER_2584_sample_completed_] 
          $T[WPIPE_TX_ACTIVITY_LOGGER_2584_update_start_] 
          $T[WPIPE_TX_ACTIVITY_LOGGER_2584_update_completed_] 
          // barrier 
          WPIPE_TX_ACTIVITY_LOGGER_2584_sample_start_ <-& (barrier_stmt_2583_update_completed_)
          ;;[WPIPE_TX_ACTIVITY_LOGGER_2584_Sample] 
          {
            // pipe write sample-start TX_ACTIVITY_LOGGER
            $T [req] $T [ack] 
          }
          ;;[WPIPE_TX_ACTIVITY_LOGGER_2584_Update] 
          {
            // pipe write update (complete) TX_ACTIVITY_LOGGER
            $T [req] $T [ack] 
          }
          WPIPE_TX_ACTIVITY_LOGGER_2584_sample_start_ &-> (WPIPE_TX_ACTIVITY_LOGGER_2584_Sample)
          WPIPE_TX_ACTIVITY_LOGGER_2584_sample_completed_ <-& (WPIPE_TX_ACTIVITY_LOGGER_2584_Sample)
          WPIPE_TX_ACTIVITY_LOGGER_2584_update_start_ <-& (WPIPE_TX_ACTIVITY_LOGGER_2584_sample_completed_)
          WPIPE_TX_ACTIVITY_LOGGER_2584_update_start_ &-> (WPIPE_TX_ACTIVITY_LOGGER_2584_Update)
          WPIPE_TX_ACTIVITY_LOGGER_2584_update_completed_ <-& (WPIPE_TX_ACTIVITY_LOGGER_2584_Update)
          WPIPE_TX_ACTIVITY_LOGGER_2584_sample_start_ o<-& (WPIPE_TX_ACTIVITY_LOGGER_2584_update_completed_ 0)
          // end:  			TX_ACTIVITY_LOGGER := 3  $buffering 1// bits of buffering = 8. 
          // start: 			$guard (push_pointer_back_to_free_Q) $call incrementNumberOfPacketsTransmitted () () 
          //  file .Aa/nic.linked.opt.aa, line 939
          $T[call_stmt_2590_sample_start_] 
          $T[call_stmt_2590_sample_completed_] 
          $T[call_stmt_2590_update_start_] 
          $T[call_stmt_2590_update_completed_] 
          // Guard expression
          // push_pointer_back_to_free_Q
          // start: Forward dependencies from push_pointer_back_to_free_Q to transition call_stmt_2590_sample_start_
          call_stmt_2590_sample_start_ <-& (call_stmt_2556_update_completed_)
          call_stmt_2590_sample_start_ <-& (NOT_u1_u1_2563_update_completed_)
          // done: Forward dependencies from push_pointer_back_to_free_Q to transition call_stmt_2590_sample_start_
          // RAW reenables for push_pointer_back_to_free_Q
          call_stmt_2556_update_start_ o<-& (call_stmt_2590_sample_completed_ 0)
          NOT_u1_u1_2563_update_start_ o<-& (call_stmt_2590_sample_completed_ 0)
          ;;[call_stmt_2590_Sample] 
          {
            $T [crr] $T [cra] 
          }
          ;;[call_stmt_2590_Update] 
          {
            $T [ccr] $T [cca] 
          }
          call_stmt_2590_sample_start_ &-> (call_stmt_2590_Sample)
          call_stmt_2590_sample_completed_ <-& (call_stmt_2590_Sample)
          call_stmt_2590_sample_completed_ &-> ($null)
          call_stmt_2590_update_start_ &-> (call_stmt_2590_Update)
          call_stmt_2590_update_completed_ <-& (call_stmt_2590_Update)
          // self-release: 
          call_stmt_2590_sample_start_ o<-& (call_stmt_2590_sample_completed_ 1)
          $null &-> (call_stmt_2590_update_start_)
          call_stmt_2590_update_start_ o<-& (call_stmt_2590_update_completed_ 0)
          // end: 			$guard (push_pointer_back_to_free_Q) $call incrementNumberOfPacketsTransmitted () () 
          // start:  			LAST_READ_TX_QUEUE_INDEX := tx_q_index $buffering 1// bits of buffering = 8. 
          //  file .Aa/nic.linked.opt.aa, line 940
          // Source expression
          // tx_q_index
          // Target expression
          // (as target) LAST_READ_TX_QUEUE_INDEX
          $T[WPIPE_LAST_READ_TX_QUEUE_INDEX_2591_sample_start_] 
          $T[WPIPE_LAST_READ_TX_QUEUE_INDEX_2591_sample_completed_] 
          $T[WPIPE_LAST_READ_TX_QUEUE_INDEX_2591_update_start_] 
          $T[WPIPE_LAST_READ_TX_QUEUE_INDEX_2591_update_completed_] 
          // barrier 
          WPIPE_LAST_READ_TX_QUEUE_INDEX_2591_sample_start_ <-& (barrier_stmt_2583_update_completed_)
          ;;[WPIPE_LAST_READ_TX_QUEUE_INDEX_2591_Sample] 
          {
            // pipe write sample-start LAST_READ_TX_QUEUE_INDEX
            $T [req] $T [ack] 
          }
          ;;[WPIPE_LAST_READ_TX_QUEUE_INDEX_2591_Update] 
          {
            // pipe write update (complete) LAST_READ_TX_QUEUE_INDEX
            $T [req] $T [ack] 
          }
          WPIPE_LAST_READ_TX_QUEUE_INDEX_2591_sample_start_ &-> (WPIPE_LAST_READ_TX_QUEUE_INDEX_2591_Sample)
          WPIPE_LAST_READ_TX_QUEUE_INDEX_2591_sample_completed_ <-& (WPIPE_LAST_READ_TX_QUEUE_INDEX_2591_Sample)
          WPIPE_LAST_READ_TX_QUEUE_INDEX_2591_update_start_ <-& (WPIPE_LAST_READ_TX_QUEUE_INDEX_2591_sample_completed_)
          WPIPE_LAST_READ_TX_QUEUE_INDEX_2591_update_start_ &-> (WPIPE_LAST_READ_TX_QUEUE_INDEX_2591_Update)
          WPIPE_LAST_READ_TX_QUEUE_INDEX_2591_update_completed_ <-& (WPIPE_LAST_READ_TX_QUEUE_INDEX_2591_Update)
          WPIPE_LAST_READ_TX_QUEUE_INDEX_2591_sample_start_ o<-& (WPIPE_LAST_READ_TX_QUEUE_INDEX_2591_update_completed_ 0)
          // start: Forward dependencies from tx_q_index to transition WPIPE_LAST_READ_TX_QUEUE_INDEX_2591_sample_start_
          WPIPE_LAST_READ_TX_QUEUE_INDEX_2591_sample_start_ <-& (phi_stmt_2524_update_completed_)
          // done: Forward dependencies from tx_q_index to transition WPIPE_LAST_READ_TX_QUEUE_INDEX_2591_sample_start_
          // RAW reenables for tx_q_index
          phi_stmt_2524_update_start_ o<-& (WPIPE_LAST_READ_TX_QUEUE_INDEX_2591_sample_completed_ 0)
          // end:  			LAST_READ_TX_QUEUE_INDEX := tx_q_index $buffering 1// bits of buffering = 8. 
          // Barrier in pipelined body 
          $T[barrier_stmt_2594_update_completed_] 
          barrier_stmt_2594_update_completed_ <-& (WPIPE_LAST_READ_TX_QUEUE_INDEX_2591_update_completed_)
          barrier_stmt_2594_update_completed_ <-& (call_stmt_2590_update_completed_)
          barrier_stmt_2594_update_completed_ <-& (WPIPE_TX_ACTIVITY_LOGGER_2584_update_completed_)
          // start:  			TX_ACTIVITY_LOGGER := 4  $buffering 1// bits of buffering = 8. 
          //  file .Aa/nic.linked.opt.aa, line 942
          // Target expression
          // (as target) TX_ACTIVITY_LOGGER
          $T[WPIPE_TX_ACTIVITY_LOGGER_2595_sample_start_] 
          $T[WPIPE_TX_ACTIVITY_LOGGER_2595_sample_completed_] 
          $T[WPIPE_TX_ACTIVITY_LOGGER_2595_update_start_] 
          $T[WPIPE_TX_ACTIVITY_LOGGER_2595_update_completed_] 
          // barrier 
          WPIPE_TX_ACTIVITY_LOGGER_2595_sample_start_ <-& (barrier_stmt_2594_update_completed_)
          ;;[WPIPE_TX_ACTIVITY_LOGGER_2595_Sample] 
          {
            // pipe write sample-start TX_ACTIVITY_LOGGER
            $T [req] $T [ack] 
          }
          ;;[WPIPE_TX_ACTIVITY_LOGGER_2595_Update] 
          {
            // pipe write update (complete) TX_ACTIVITY_LOGGER
            $T [req] $T [ack] 
          }
          WPIPE_TX_ACTIVITY_LOGGER_2595_sample_start_ &-> (WPIPE_TX_ACTIVITY_LOGGER_2595_Sample)
          WPIPE_TX_ACTIVITY_LOGGER_2595_sample_completed_ <-& (WPIPE_TX_ACTIVITY_LOGGER_2595_Sample)
          WPIPE_TX_ACTIVITY_LOGGER_2595_update_start_ <-& (WPIPE_TX_ACTIVITY_LOGGER_2595_sample_completed_)
          WPIPE_TX_ACTIVITY_LOGGER_2595_update_start_ &-> (WPIPE_TX_ACTIVITY_LOGGER_2595_Update)
          WPIPE_TX_ACTIVITY_LOGGER_2595_update_completed_ <-& (WPIPE_TX_ACTIVITY_LOGGER_2595_Update)
          WPIPE_TX_ACTIVITY_LOGGER_2595_sample_start_ o<-& (WPIPE_TX_ACTIVITY_LOGGER_2595_update_completed_ 0)
          // end:  			TX_ACTIVITY_LOGGER := 4  $buffering 1// bits of buffering = 8. 
          // (S_CONTROL_REGISTER [] 0 )
          // S_CONTROL_REGISTER
          $T [loop_body_delay_to_condition_start] $delay
          loop_body_start &-> (loop_body_delay_to_condition_start)
          loop_body_delay_to_condition_start &-> (condition_evaluated)
          // start: Forward dependencies from (S_CONTROL_REGISTER [] 0 ) to transition condition_evaluated
          // non-constant expression which depends only on signals/constants?
          // done: Forward dependencies from (S_CONTROL_REGISTER [] 0 ) to transition condition_evaluated
          condition_evaluated &-> ($null)
          // load-store dependencies..
          // memory-space  memory_space_0
          //  call_stmt_2547 store
          //  call_stmt_2582 store
          $T [call_stmt_2547_call_stmt_2582_delay] $delay
          // call_stmt_2547(store) -> call_stmt_2582(store)
          call_stmt_2582_sample_start_ <-& (call_stmt_2547_call_stmt_2582_delay)
          call_stmt_2547_call_stmt_2582_delay <-& (call_stmt_2547_update_completed_)
          //  call_stmt_2590 store
          $T [call_stmt_2582_call_stmt_2590_delay] $delay
          // call_stmt_2582(store) -> call_stmt_2590(store)
          call_stmt_2590_sample_start_ <-& (call_stmt_2582_call_stmt_2590_delay)
          call_stmt_2582_call_stmt_2590_delay <-& (call_stmt_2582_update_completed_)
          // reenable across ring for memory space memory_space_0
          $T[ring_reenable_memory_space_0] 
          ring_reenable_memory_space_0 <-& (call_stmt_2590_update_completed_)
          call_stmt_2547_sample_start_ o<-& (ring_reenable_memory_space_0 1)
          // pipe read/write dependencies for pipe LAST_READ_TX_QUEUE_INDEX
          // read-dependencies for pipe LAST_READ_TX_QUEUE_INDEX
          // write-dependencies for pipe LAST_READ_TX_QUEUE_INDEX
          // signal write dependencies for LAST_READ_TX_QUEUE_INDEX
          // pipe read/write dependencies for pipe MEMORY_TO_NIC_RESPONSE
          // read-dependencies for pipe MEMORY_TO_NIC_RESPONSE
          call_stmt_2556_sample_start_ <-& (call_stmt_2547_update_completed_)
          call_stmt_2582_sample_start_ <-& (call_stmt_2556_update_completed_)
          // ring dependency in pipeline.
          // function call expression/statement ...
          call_stmt_2547_sample_start_ o<-& (call_stmt_2582_update_completed_ 0)
          // write-dependencies for pipe MEMORY_TO_NIC_RESPONSE
          // signal write dependencies for MEMORY_TO_NIC_RESPONSE
          // pipe read/write dependencies for pipe NIC_DEBUG_SIGNAL
          // read-dependencies for pipe NIC_DEBUG_SIGNAL
          // write-dependencies for pipe NIC_DEBUG_SIGNAL
          // signal write dependencies for NIC_DEBUG_SIGNAL
          call_stmt_2556_sample_start_ <-& (call_stmt_2547_update_completed_)
          call_stmt_2582_sample_start_ <-& (call_stmt_2556_update_completed_)
          // ring dependency in pipeline.
          call_stmt_2547_sample_start_ o<-& (call_stmt_2582_update_completed_ 0)
          // pipe read/write dependencies for pipe TX_ACTIVITY_LOGGER
          // read-dependencies for pipe TX_ACTIVITY_LOGGER
          // write-dependencies for pipe TX_ACTIVITY_LOGGER
          WPIPE_TX_ACTIVITY_LOGGER_2558_sample_start_ <-& (WPIPE_TX_ACTIVITY_LOGGER_2549_update_completed_)
          WPIPE_TX_ACTIVITY_LOGGER_2584_sample_start_ <-& (WPIPE_TX_ACTIVITY_LOGGER_2558_update_completed_)
          WPIPE_TX_ACTIVITY_LOGGER_2595_sample_start_ <-& (WPIPE_TX_ACTIVITY_LOGGER_2584_update_completed_)
          // ring dependency in pipeline.
          WPIPE_TX_ACTIVITY_LOGGER_2549_sample_start_ o<-& (WPIPE_TX_ACTIVITY_LOGGER_2595_update_completed_ 0)
          // signal write dependencies for TX_ACTIVITY_LOGGER
          // pipe read/write dependencies for pipe NIC_TO_MEMORY_REQUEST
          // read-dependencies for pipe NIC_TO_MEMORY_REQUEST
          // write-dependencies for pipe NIC_TO_MEMORY_REQUEST
          call_stmt_2556_sample_start_ <-& (call_stmt_2547_update_completed_)
          call_stmt_2582_sample_start_ <-& (call_stmt_2556_update_completed_)
          // ring dependency in pipeline.
          call_stmt_2547_sample_start_ o<-& (call_stmt_2582_update_completed_ 0)
          // signal write dependencies for NIC_TO_MEMORY_REQUEST
          // pipe read/write dependencies for pipe QUEUE_MONITOR_SIGNAL
          // read-dependencies for pipe QUEUE_MONITOR_SIGNAL
          // write-dependencies for pipe QUEUE_MONITOR_SIGNAL
          // signal write dependencies for QUEUE_MONITOR_SIGNAL
          call_stmt_2582_sample_start_ <-& (call_stmt_2547_update_completed_)
          // ring dependency in pipeline.
          call_stmt_2547_sample_start_ o<-& (call_stmt_2582_update_completed_ 0)
          // pipe read/write dependencies for pipe memory_access_lock
          // read-dependencies for pipe memory_access_lock
          // write-dependencies for pipe memory_access_lock
          call_stmt_2556_sample_start_ <-& (call_stmt_2547_update_completed_)
          call_stmt_2582_sample_start_ <-& (call_stmt_2556_update_completed_)
          // ring dependency in pipeline.
          call_stmt_2547_sample_start_ o<-& (call_stmt_2582_update_completed_ 0)
          // signal write dependencies for memory_access_lock
          // pipe read/write dependencies for pipe nic_to_mac_transmit_pipe
          // read-dependencies for pipe nic_to_mac_transmit_pipe
          // write-dependencies for pipe nic_to_mac_transmit_pipe
          // signal write dependencies for nic_to_mac_transmit_pipe
        }
        ( first_time_through_loop_body  back_edge_to_loop_body) 
        ( condition_evaluated )
        ;; [loop_exit] 
        {
          $T [ack] 
        }
        ;; [loop_taken] 
        {
          $T [ack] 
        }
        do_while_stmt_2522__entry__ <-| ($entry)
        loop_body_done <-| ( do_while_stmt_2522_loop_body ) 
        condition_done |-> (loop_exit loop_taken)
        do_while_stmt_2522__exit__ |-> ($exit)
        $bind condition_done <= do_while_stmt_2522_loop_body : condition_evaluated
        $bind do_while_stmt_2522__entry__  => do_while_stmt_2522_loop_body : first_time_through_loop_body 
        $bind loop_back  => do_while_stmt_2522_loop_body : back_edge_to_loop_body 
        $terminate (loop_exit loop_taken loop_body_done) (loop_back do_while_stmt_2522__exit__)
      }
      do_while_stmt_2522__entry__ |-> (do_while_stmt_2522)
      do_while_stmt_2522__exit__ <-| (do_while_stmt_2522)
      // control-path for merge  
      //  file .Aa/nic.linked.opt.aa, line 909
      ;;[merge_stmt_2510_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_2510__entry__ |-> (merge_stmt_2510_dead_link)
      merge_stmt_2510__exit__ <-| (merge_stmt_2510_dead_link)
      //---------------------   merge statement  file .Aa/nic.linked.opt.aa, line 909  --------------------------
      ||[merge_stmt_2510__entry___PhiReq] 
      {
        // no phi statements in merge..
      }
      merge_stmt_2510__entry__ |-> (merge_stmt_2510__entry___PhiReq)
      ||[disable_loopback_PhiReq] 
      {
        // no phi statements in merge..
      }
      disable_loopback |-> (disable_loopback_PhiReq)
      ||[not_enabled_yet_loopback_PhiReq] 
      {
        // no phi statements in merge..
      }
      not_enabled_yet_loopback |-> (not_enabled_yet_loopback_PhiReq)
      $P [merge_stmt_2510_PhiReqMerge] 
      merge_stmt_2510_PhiReqMerge <-| ( merge_stmt_2510__entry___PhiReq  disable_loopback_PhiReq  not_enabled_yet_loopback_PhiReq )
      ||[merge_stmt_2510_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_2510_PhiReqMerge |-> (merge_stmt_2510_PhiAck)
      merge_stmt_2510__exit__  <-| (merge_stmt_2510_PhiAck)
      //---------------------  end of merge statement  file .Aa/nic.linked.opt.aa, line 909  --------------------------
      merge_stmt_2510__entry__ <-| (branch_block_stmt_2509__entry__)
      if_stmt_2511__entry__ <-| (merge_stmt_2510__exit__)
      assign_stmt_2520__entry__ <-| (if_stmt_2511__exit__)
      do_while_stmt_2522__entry__ <-| (assign_stmt_2520__exit__)
      disable_loopback <-| (do_while_stmt_2522__exit__)
    }
  }
  // end control-path
  $DP 
  {
    // begin data-path 
    // constant-object-declarations for block %transmitEngineDaemon%main%
    //  file .Aa/nic.linked.opt.aa, line 909
    // constant-object-declarations for block %transmitEngineDaemon%main%
    //  file .Aa/nic.linked.opt.aa, line 918
    // constant-object-declarations for block %transmitEngineDaemon%main
    //  file .Aa/nic.linked.opt.aa, line 907
    // constant-object-declarations for block %transmitEngineDaemon
    //  file .Aa/nic.linked.opt.aa, line 901
    // 0 
    $constant $W[konst_2507_wire_constant] : $int<8> := _b00000000// 0
    // constant-declarations for block %transmitEngineDaemon%main
    //  file .Aa/nic.linked.opt.aa, line 907
    // constant-declarations for block %transmitEngineDaemon%main%
    //  file .Aa/nic.linked.opt.aa, line 909
    // if-statement  
    //  file .Aa/nic.linked.opt.aa, line 0
    // 0 
    $constant $W[konst_2513_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // 		tx_tag := 2  $buffering 1// bits of buffering = 8. 
    //  file .Aa/nic.linked.opt.aa, line 914
    $constant $W[tx_tag_2520] : $int<8> := _b00000010 // 2
    // do-while statement  
    //  file .Aa/nic.linked.opt.aa, line 916
    // 0 
    $constant $W[konst_2600_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // constant-declarations for block %transmitEngineDaemon%main%
    //  file .Aa/nic.linked.opt.aa, line 918
    // constant-declarations for phi:  			$phi tx_q_index := 			  ((LAST_READ_TX_QUEUE_INDEX + 1 ) & ($bitcast ($uint<8>) (S_NUMBER_OF_SERVERS - 1 ) )) $on   $entry ,   $loopback 
    // type of target is $uint<8>
    //  file .Aa/nic.linked.opt.aa, line 919
    // 1 
    $constant $W[konst_2527_wire_constant] : $int<8> := _b00000001// 1
    // 1 
    $constant $W[konst_2530_wire_constant] : $int<32> := _b00000000000000000000000000000001// 1
    // constant-declarations for phi:  			$phi init_flag := 			  ($bitcast ($uint<1>) _b0  ) $on   $loopback 			  ($bitcast ($uint<1>) _b1  ) $on   $entry 
    // type of target is $uint<1>
    //  file .Aa/nic.linked.opt.aa, line 921
    // ($bitcast ($uint<1>) _b0  )
    $constant $W[type_cast_2537_wire_constant] : $int<1> := _b0// 0
    // ($bitcast ($uint<1>) _b1  )
    $constant $W[type_cast_2539_wire_constant] : $int<1> := _b1// 1
    // 			$call getTxPacketPointerFromServer (tx_tag tx_q_index ) (pkt_pointer tx_flag ) 
    //  file .Aa/nic.linked.opt.aa, line 925
    // 1 
    $constant $W[konst_2550_wire_constant] : $int<8> := _b00000001// 1
    // 			$guard (~tx_flag) $call transmitPacket (tx_tag pkt_pointer ) (transmitted_flag ) 
    //  file .Aa/nic.linked.opt.aa, line 928
    // 2 
    $constant $W[konst_2559_wire_constant] : $int<8> := _b00000010// 2
    // 			$guard (push_pointer_back_to_free_Q) $call pushIntoQueue (tx_tag FREEQUEUE 0  pkt_pointer_2477_delayed_4_0 ) (push_status ) 
    //  file .Aa/nic.linked.opt.aa, line 935
    // FREEQUEUE
    $constant $W[R_FREEQUEUE_2578_wire_constant] : $int<2> := _b00// 0
    // 0 
    $constant $W[konst_2579_wire_constant] : $int<8> := _b00000000// 0
    // 3 
    $constant $W[konst_2585_wire_constant] : $int<8> := _b00000011// 3
    // 			$guard (push_pointer_back_to_free_Q) $call incrementNumberOfPacketsTransmitted () () 
    //  file .Aa/nic.linked.opt.aa, line 939
    // 4 
    $constant $W[konst_2596_wire_constant] : $int<8> := _b00000100// 4
    // 	LAST_READ_TX_QUEUE_INDEX := 0  $buffering 1// bits of buffering = 8. 
    //  file .Aa/nic.linked.opt.aa, line 906
    // LAST_READ_TX_QUEUE_INDEX
    // block %transmitEngineDaemon%main
    //  file .Aa/nic.linked.opt.aa, line 907
    // if statement  
    //  file .Aa/nic.linked.opt.aa, line 0
    // S_CONTROL_REGISTER
    $W[RPIPE_S_CONTROL_REGISTER_2512_wire] : $int<32>
    // (S_CONTROL_REGISTER [] 0 )
    $intermediate $W[BITSEL_u32_u1_2514_wire] : $int<1>
    // ( ~ (S_CONTROL_REGISTER [] 0 ) )
    $intermediate $W[NOT_u1_u1_2515_wire] : $int<1>
    // do-while statement  
    //  file .Aa/nic.linked.opt.aa, line 916
    // S_CONTROL_REGISTER
    $W[RPIPE_S_CONTROL_REGISTER_2599_wire] : $int<32>
    // (S_CONTROL_REGISTER [] 0 )
    $intermediate $W[BITSEL_u32_u1_2601_wire] : $int<1>
    // merge-statement  
    //  file .Aa/nic.linked.opt.aa, line 918
    // 			$phi tx_q_index := 			  ((LAST_READ_TX_QUEUE_INDEX + 1 ) & ($bitcast ($uint<8>) (S_NUMBER_OF_SERVERS - 1 ) )) $on   $entry ,   $loopback 
    // type of target is $uint<8>
    //  file .Aa/nic.linked.opt.aa, line 919
    // LAST_READ_TX_QUEUE_INDEX
    $W[RPIPE_LAST_READ_TX_QUEUE_INDEX_2526_wire] : $int<8>
    // (LAST_READ_TX_QUEUE_INDEX + 1 )
    $intermediate $W[ADD_u8_u8_2528_wire] : $int<8>
    // S_NUMBER_OF_SERVERS
    $W[RPIPE_S_NUMBER_OF_SERVERS_2529_wire] : $int<32>
    // (S_NUMBER_OF_SERVERS - 1 )
    $intermediate $W[SUB_u32_u32_2531_wire] : $int<32>
    // ($bitcast ($uint<8>) (S_NUMBER_OF_SERVERS - 1 ) )
    $intermediate $W[type_cast_2532_wire] : $int<8>
    // ((LAST_READ_TX_QUEUE_INDEX + 1 ) & ($bitcast ($uint<8>) (S_NUMBER_OF_SERVERS - 1 ) ))
    $intermediate $W[AND_u8_u8_2533_wire] : $int<8>
    // tx_q_index
    $W[tx_q_index_2524] : $int<8>
    // 			$phi init_flag := 			  ($bitcast ($uint<1>) _b0  ) $on   $loopback 			  ($bitcast ($uint<1>) _b1  ) $on   $entry 
    // type of target is $uint<1>
    //  file .Aa/nic.linked.opt.aa, line 921
    // init_flag
    $W[init_flag_2534] : $int<1>
    // 			$call getTxPacketPointerFromServer (tx_tag tx_q_index ) (pkt_pointer tx_flag ) 
    //  file .Aa/nic.linked.opt.aa, line 925
    // pkt_pointer
    $W[pkt_pointer_2547] : $int<64>
    // tx_flag
    $W[tx_flag_2547] : $int<1>
    // 			TX_ACTIVITY_LOGGER := 1  $buffering 1// bits of buffering = 8. 
    //  file .Aa/nic.linked.opt.aa, line 927
    // TX_ACTIVITY_LOGGER
    // 			$guard (~tx_flag) $call transmitPacket (tx_tag pkt_pointer ) (transmitted_flag ) 
    //  file .Aa/nic.linked.opt.aa, line 928
    // transmitted_flag
    $W[transmitted_flag_2556] : $int<1>
    // 			TX_ACTIVITY_LOGGER := 2  $buffering 1// bits of buffering = 8. 
    //  file .Aa/nic.linked.opt.aa, line 930
    // TX_ACTIVITY_LOGGER
    // 			NOT_u1_u1_2466_2466_delayed_4_0 := ( ~ tx_flag ) $buffering 4 $cut_through // bits of buffering = 4. 
    //  file .Aa/nic.linked.opt.aa, line 931
    // NOT_u1_u1_2466_2466_delayed_4_0
    $W[NOT_u1_u1_2466_2466_delayed_4_0_2564] : $int<1>
    // 			$volatile push_pointer_back_to_free_Q := (NOT_u1_u1_2466_2466_delayed_4_0 & transmitted_flag) $buffering 1
    //  file .Aa/nic.linked.opt.aa, line 932
    // push_pointer_back_to_free_Q
    $W[push_pointer_back_to_free_Q_2569] : $int<1>
    // 			pkt_pointer_2477_delayed_4_0 := pkt_pointer $buffering 4 $cut_through // bits of buffering = 256. 
    //  file .Aa/nic.linked.opt.aa, line 934
    // pkt_pointer_2477_delayed_4_0
    $W[pkt_pointer_2477_delayed_4_0_2575] : $int<64>
    // 			$guard (push_pointer_back_to_free_Q) $call pushIntoQueue (tx_tag FREEQUEUE 0  pkt_pointer_2477_delayed_4_0 ) (push_status ) 
    //  file .Aa/nic.linked.opt.aa, line 935
    // push_status
    $W[push_status_2582] : $int<1>
    // 			TX_ACTIVITY_LOGGER := 3  $buffering 1// bits of buffering = 8. 
    //  file .Aa/nic.linked.opt.aa, line 937
    // TX_ACTIVITY_LOGGER
    // 			$guard (push_pointer_back_to_free_Q) $call incrementNumberOfPacketsTransmitted () () 
    //  file .Aa/nic.linked.opt.aa, line 939
    // 			LAST_READ_TX_QUEUE_INDEX := tx_q_index $buffering 1// bits of buffering = 8. 
    //  file .Aa/nic.linked.opt.aa, line 940
    // LAST_READ_TX_QUEUE_INDEX
    // 			TX_ACTIVITY_LOGGER := 4  $buffering 1// bits of buffering = 8. 
    //  file .Aa/nic.linked.opt.aa, line 942
    // TX_ACTIVITY_LOGGER
    // 	LAST_READ_TX_QUEUE_INDEX := 0  $buffering 1// bits of buffering = 8. 
    //  file .Aa/nic.linked.opt.aa, line 906
    // LAST_READ_TX_QUEUE_INDEX
    $ioport $out [WPIPE_LAST_READ_TX_QUEUE_INDEX_2506_inst]  (konst_2507_wire_constant) (LAST_READ_TX_QUEUE_INDEX) 
    // datapath-instances for block %transmitEngineDaemon%main
    //  file .Aa/nic.linked.opt.aa, line 907
    // datapath-instances for if  
    //  file .Aa/nic.linked.opt.aa, line 0
    // S_CONTROL_REGISTER
    $ioport $in [RPIPE_S_CONTROL_REGISTER_2512_inst] (S_CONTROL_REGISTER) (RPIPE_S_CONTROL_REGISTER_2512_wire) 
    $buffering $out RPIPE_S_CONTROL_REGISTER_2512_inst RPIPE_S_CONTROL_REGISTER_2512_wire 1
    // (S_CONTROL_REGISTER [] 0 )
    [][BITSEL_u32_u1_2514_inst] (RPIPE_S_CONTROL_REGISTER_2512_wire konst_2513_wire_constant) (BITSEL_u32_u1_2514_wire)   $flowthrough 
    $delay BITSEL_u32_u1_2514_inst 0
    // ( ~ (S_CONTROL_REGISTER [] 0 ) )
    ~ [NOT_u1_u1_2515_inst] (BITSEL_u32_u1_2514_wire) (NOT_u1_u1_2515_wire)   $flowthrough
    $delay NOT_u1_u1_2515_inst 0
    ==0? [if_stmt_2511_branch] (NOT_u1_u1_2515_wire)
    // datapath-instances for do-while  
    //  file .Aa/nic.linked.opt.aa, line 916
    // S_CONTROL_REGISTER
    $ioport $in [RPIPE_S_CONTROL_REGISTER_2599_inst] (S_CONTROL_REGISTER) (RPIPE_S_CONTROL_REGISTER_2599_wire)  $fullrate 
    $buffering $out RPIPE_S_CONTROL_REGISTER_2599_inst RPIPE_S_CONTROL_REGISTER_2599_wire 1
    // (S_CONTROL_REGISTER [] 0 )
    [][BITSEL_u32_u1_2601_inst] (RPIPE_S_CONTROL_REGISTER_2599_wire konst_2600_wire_constant) (BITSEL_u32_u1_2601_wire)   $flowthrough 
    $delay BITSEL_u32_u1_2601_inst 0
    ==0? [do_while_stmt_2522_branch] (BITSEL_u32_u1_2601_wire)
    $flowthrough
    // data-path instances for merge  
    //  file .Aa/nic.linked.opt.aa, line 918
    // 			$phi tx_q_index := 			  ((LAST_READ_TX_QUEUE_INDEX + 1 ) & ($bitcast ($uint<8>) (S_NUMBER_OF_SERVERS - 1 ) )) $on   $entry ,   $loopback 
    // type of target is $uint<8>
    //  file .Aa/nic.linked.opt.aa, line 919
    // LAST_READ_TX_QUEUE_INDEX
    $ioport $in [RPIPE_LAST_READ_TX_QUEUE_INDEX_2526_inst] (LAST_READ_TX_QUEUE_INDEX) (RPIPE_LAST_READ_TX_QUEUE_INDEX_2526_wire)  $fullrate 
    $buffering $out RPIPE_LAST_READ_TX_QUEUE_INDEX_2526_inst RPIPE_LAST_READ_TX_QUEUE_INDEX_2526_wire 1
    // (LAST_READ_TX_QUEUE_INDEX + 1 )
    +[ADD_u8_u8_2528_inst] (RPIPE_LAST_READ_TX_QUEUE_INDEX_2526_wire konst_2527_wire_constant) (ADD_u8_u8_2528_wire)   $flowthrough 
    $delay ADD_u8_u8_2528_inst 0
    // S_NUMBER_OF_SERVERS
    $ioport $in [RPIPE_S_NUMBER_OF_SERVERS_2529_inst] (S_NUMBER_OF_SERVERS) (RPIPE_S_NUMBER_OF_SERVERS_2529_wire)  $fullrate 
    $buffering $out RPIPE_S_NUMBER_OF_SERVERS_2529_inst RPIPE_S_NUMBER_OF_SERVERS_2529_wire 1
    // (S_NUMBER_OF_SERVERS - 1 )
    -[SUB_u32_u32_2531_inst] (RPIPE_S_NUMBER_OF_SERVERS_2529_wire konst_2530_wire_constant) (SUB_u32_u32_2531_wire)   $flowthrough 
    $delay SUB_u32_u32_2531_inst 0
    // ($bitcast ($uint<8>) (S_NUMBER_OF_SERVERS - 1 ) )
    # := [type_cast_2532_inst] (SUB_u32_u32_2531_wire) (type_cast_2532_wire)   $flowthrough
    $delay type_cast_2532_inst 0
    // ((LAST_READ_TX_QUEUE_INDEX + 1 ) & ($bitcast ($uint<8>) (S_NUMBER_OF_SERVERS - 1 ) ))
    &[AND_u8_u8_2533_inst] (ADD_u8_u8_2528_wire type_cast_2532_wire) (AND_u8_u8_2533_wire)    $fullrate
    $buffering  $out AND_u8_u8_2533_inst AND_u8_u8_2533_wire 1
    $delay AND_u8_u8_2533_inst 1
    # := [ssrc_phi_stmt_2524] (AND_u8_u8_2533_wire) (tx_q_index_2524)     $flowthrough 
    // 			$phi init_flag := 			  ($bitcast ($uint<1>) _b0  ) $on   $loopback 			  ($bitcast ($uint<1>) _b1  ) $on   $entry 
    // type of target is $uint<1>
    //  file .Aa/nic.linked.opt.aa, line 921
    # $phi [phi_stmt_2534] (type_cast_2537_wire_constant type_cast_2539_wire_constant) ( init_flag_2534 ) $fullrate
    // $buffering  $out phi_stmt_2534 init_flag_2534 2
    // 			$call getTxPacketPointerFromServer (tx_tag tx_q_index ) (pkt_pointer tx_flag ) 
    //  file .Aa/nic.linked.opt.aa, line 925
    $call [call_stmt_2547_call] $module getTxPacketPointerFromServer(tx_tag_2520 tx_q_index_2524) (pkt_pointer_2547 tx_flag_2547)   $fullrate
    $delay call_stmt_2547_call 6
    $buffering  $in call_stmt_2547_call tx_tag_2520 1
    $buffering  $in call_stmt_2547_call tx_q_index_2524 1
    $buffering  $out call_stmt_2547_call pkt_pointer_2547 1
    $buffering  $out call_stmt_2547_call tx_flag_2547 1
    // 			TX_ACTIVITY_LOGGER := 1  $buffering 1// bits of buffering = 8. 
    //  file .Aa/nic.linked.opt.aa, line 927
    // TX_ACTIVITY_LOGGER
    $ioport $out [WPIPE_TX_ACTIVITY_LOGGER_2549_inst]  (konst_2550_wire_constant) (TX_ACTIVITY_LOGGER)  $fullrate 
    // 			$guard (~tx_flag) $call transmitPacket (tx_tag pkt_pointer ) (transmitted_flag ) 
    //  file .Aa/nic.linked.opt.aa, line 928
    $call [call_stmt_2556_call] $module transmitPacket(tx_tag_2520 pkt_pointer_2547) (transmitted_flag_2556) $guard ( ~ tx_flag_2547 )   $fullrate
    $delay call_stmt_2556_call 4
    $buffering  $in call_stmt_2556_call tx_tag_2520 1
    $buffering  $in call_stmt_2556_call pkt_pointer_2547 1
    $buffering  $out call_stmt_2556_call transmitted_flag_2556 1
    // 			TX_ACTIVITY_LOGGER := 2  $buffering 1// bits of buffering = 8. 
    //  file .Aa/nic.linked.opt.aa, line 930
    // TX_ACTIVITY_LOGGER
    $ioport $out [WPIPE_TX_ACTIVITY_LOGGER_2558_inst]  (konst_2559_wire_constant) (TX_ACTIVITY_LOGGER)  $fullrate 
    // 			NOT_u1_u1_2466_2466_delayed_4_0 := ( ~ tx_flag ) $buffering 4 $cut_through // bits of buffering = 4. 
    //  file .Aa/nic.linked.opt.aa, line 931
    // ( ~ tx_flag )
    ~ [NOT_u1_u1_2563_inst] (tx_flag_2547) (NOT_u1_u1_2466_2466_delayed_4_0_2564)   $fullrate
    $buffering  $out NOT_u1_u1_2563_inst NOT_u1_u1_2466_2466_delayed_4_0_2564 4
    $delay NOT_u1_u1_2563_inst 1
    // 			$volatile push_pointer_back_to_free_Q := (NOT_u1_u1_2466_2466_delayed_4_0 & transmitted_flag) $buffering 1
    //  file .Aa/nic.linked.opt.aa, line 932
    // (NOT_u1_u1_2466_2466_delayed_4_0 & transmitted_flag)
    &[AND_u1_u1_2568_inst] (NOT_u1_u1_2466_2466_delayed_4_0_2564 transmitted_flag_2556) (push_pointer_back_to_free_Q_2569)   $flowthrough 
    $delay AND_u1_u1_2568_inst 0
    // 			pkt_pointer_2477_delayed_4_0 := pkt_pointer $buffering 4 $cut_through // bits of buffering = 256. 
    //  file .Aa/nic.linked.opt.aa, line 934
    # := [W_pkt_pointer_2477_delayed_4_0_2573_inst] (pkt_pointer_2547) (pkt_pointer_2477_delayed_4_0_2575)  $cut_through     $fullrate
    $buffering  $out W_pkt_pointer_2477_delayed_4_0_2573_inst pkt_pointer_2477_delayed_4_0_2575 4
    // 			$guard (push_pointer_back_to_free_Q) $call pushIntoQueue (tx_tag FREEQUEUE 0  pkt_pointer_2477_delayed_4_0 ) (push_status ) 
    //  file .Aa/nic.linked.opt.aa, line 935
    $call [call_stmt_2582_call] $module pushIntoQueue(tx_tag_2520 R_FREEQUEUE_2578_wire_constant konst_2579_wire_constant pkt_pointer_2477_delayed_4_0_2575) (push_status_2582) $guard ( push_pointer_back_to_free_Q_2569 )   $fullrate
    $delay call_stmt_2582_call 4
    $buffering  $in call_stmt_2582_call tx_tag_2520 1
    $buffering  $in call_stmt_2582_call R_FREEQUEUE_2578_wire_constant 1
    $buffering  $in call_stmt_2582_call konst_2579_wire_constant 1
    $buffering  $in call_stmt_2582_call pkt_pointer_2477_delayed_4_0_2575 1
    $buffering  $out call_stmt_2582_call push_status_2582 1
    // 			TX_ACTIVITY_LOGGER := 3  $buffering 1// bits of buffering = 8. 
    //  file .Aa/nic.linked.opt.aa, line 937
    // TX_ACTIVITY_LOGGER
    $ioport $out [WPIPE_TX_ACTIVITY_LOGGER_2584_inst]  (konst_2585_wire_constant) (TX_ACTIVITY_LOGGER)  $fullrate 
    // 			$guard (push_pointer_back_to_free_Q) $call incrementNumberOfPacketsTransmitted () () 
    //  file .Aa/nic.linked.opt.aa, line 939
    $call [call_stmt_2590_call] $module incrementNumberOfPacketsTransmitted() () $guard ( push_pointer_back_to_free_Q_2569 )   $fullrate
    $delay call_stmt_2590_call 4
    // 			LAST_READ_TX_QUEUE_INDEX := tx_q_index $buffering 1// bits of buffering = 8. 
    //  file .Aa/nic.linked.opt.aa, line 940
    // LAST_READ_TX_QUEUE_INDEX
    $ioport $out [WPIPE_LAST_READ_TX_QUEUE_INDEX_2591_inst]  (tx_q_index_2524) (LAST_READ_TX_QUEUE_INDEX)  $fullrate 
    // 			TX_ACTIVITY_LOGGER := 4  $buffering 1// bits of buffering = 8. 
    //  file .Aa/nic.linked.opt.aa, line 942
    // TX_ACTIVITY_LOGGER
    $ioport $out [WPIPE_TX_ACTIVITY_LOGGER_2595_inst]  (konst_2596_wire_constant) (TX_ACTIVITY_LOGGER)  $fullrate 
  }
  // end data-path
  // 	LAST_READ_TX_QUEUE_INDEX := 0  $buffering 1// bits of buffering = 8. 
  //  file .Aa/nic.linked.opt.aa, line 906
  // LAST_READ_TX_QUEUE_INDEX
  WPIPE_LAST_READ_TX_QUEUE_INDEX_2506_inst <=> (assign_stmt_2508/WPIPE_LAST_READ_TX_QUEUE_INDEX_2506_Sample/req assign_stmt_2508/WPIPE_LAST_READ_TX_QUEUE_INDEX_2506_Update/req) (assign_stmt_2508/WPIPE_LAST_READ_TX_QUEUE_INDEX_2506_Sample/ack assign_stmt_2508/WPIPE_LAST_READ_TX_QUEUE_INDEX_2506_Update/ack)
  // CP-DP links for merge  
  //  file .Aa/nic.linked.opt.aa, line 909
  // CP-DP links for if  
  //  file .Aa/nic.linked.opt.aa, line 0
  // S_CONTROL_REGISTER
  // (S_CONTROL_REGISTER [] 0 )
  // ( ~ (S_CONTROL_REGISTER [] 0 ) )
  if_stmt_2511_branch <=> (branch_block_stmt_2509/if_stmt_2511_eval_test/branch_req) (branch_block_stmt_2509/if_stmt_2511_else_link/else_choice_transition branch_block_stmt_2509/if_stmt_2511_if_link/if_choice_transition)
  // CP-DP links for do-while  do_while_stmt_2522
  //  file .Aa/nic.linked.opt.aa, line 916
  // ((LAST_READ_TX_QUEUE_INDEX + 1 ) & ($bitcast ($uint<8>) (S_NUMBER_OF_SERVERS - 1 ) ))
  // (LAST_READ_TX_QUEUE_INDEX + 1 )
  // LAST_READ_TX_QUEUE_INDEX
  // (S_NUMBER_OF_SERVERS - 1 )
  // S_NUMBER_OF_SERVERS
  AND_u8_u8_2533_inst <=> (branch_block_stmt_2509/do_while_stmt_2522/do_while_stmt_2522_loop_body/AND_u8_u8_2533_Sample/rr branch_block_stmt_2509/do_while_stmt_2522/do_while_stmt_2522_loop_body/AND_u8_u8_2533_Update/cr) (branch_block_stmt_2509/do_while_stmt_2522/do_while_stmt_2522_loop_body/AND_u8_u8_2533_Sample/ra branch_block_stmt_2509/do_while_stmt_2522/do_while_stmt_2522_loop_body/AND_u8_u8_2533_Update/ca)
  phi_stmt_2534 <=> (branch_block_stmt_2509/do_while_stmt_2522/do_while_stmt_2522_loop_body/phi_stmt_2534_loopback_sample_req branch_block_stmt_2509/do_while_stmt_2522/do_while_stmt_2522_loop_body/phi_stmt_2534_entry_sample_req) (branch_block_stmt_2509/do_while_stmt_2522/do_while_stmt_2522_loop_body/phi_stmt_2534_phi_mux_ack)
  // 			$call getTxPacketPointerFromServer (tx_tag tx_q_index ) (pkt_pointer tx_flag ) 
  //  file .Aa/nic.linked.opt.aa, line 925
  // tx_q_index
  call_stmt_2547_call <=> (branch_block_stmt_2509/do_while_stmt_2522/do_while_stmt_2522_loop_body/call_stmt_2547_Sample/crr branch_block_stmt_2509/do_while_stmt_2522/do_while_stmt_2522_loop_body/call_stmt_2547_Update/ccr) (branch_block_stmt_2509/do_while_stmt_2522/do_while_stmt_2522_loop_body/call_stmt_2547_Sample/cra branch_block_stmt_2509/do_while_stmt_2522/do_while_stmt_2522_loop_body/call_stmt_2547_Update/cca)
  // 			TX_ACTIVITY_LOGGER := 1  $buffering 1// bits of buffering = 8. 
  //  file .Aa/nic.linked.opt.aa, line 927
  // TX_ACTIVITY_LOGGER
  WPIPE_TX_ACTIVITY_LOGGER_2549_inst <=> (branch_block_stmt_2509/do_while_stmt_2522/do_while_stmt_2522_loop_body/WPIPE_TX_ACTIVITY_LOGGER_2549_Sample/req branch_block_stmt_2509/do_while_stmt_2522/do_while_stmt_2522_loop_body/WPIPE_TX_ACTIVITY_LOGGER_2549_Update/req) (branch_block_stmt_2509/do_while_stmt_2522/do_while_stmt_2522_loop_body/WPIPE_TX_ACTIVITY_LOGGER_2549_Sample/ack branch_block_stmt_2509/do_while_stmt_2522/do_while_stmt_2522_loop_body/WPIPE_TX_ACTIVITY_LOGGER_2549_Update/ack)
  // 			$guard (~tx_flag) $call transmitPacket (tx_tag pkt_pointer ) (transmitted_flag ) 
  //  file .Aa/nic.linked.opt.aa, line 928
  // pkt_pointer
  call_stmt_2556_call <=> (branch_block_stmt_2509/do_while_stmt_2522/do_while_stmt_2522_loop_body/call_stmt_2556_Sample/crr branch_block_stmt_2509/do_while_stmt_2522/do_while_stmt_2522_loop_body/call_stmt_2556_Update/ccr) (branch_block_stmt_2509/do_while_stmt_2522/do_while_stmt_2522_loop_body/call_stmt_2556_Sample/cra branch_block_stmt_2509/do_while_stmt_2522/do_while_stmt_2522_loop_body/call_stmt_2556_Update/cca)
  // 			TX_ACTIVITY_LOGGER := 2  $buffering 1// bits of buffering = 8. 
  //  file .Aa/nic.linked.opt.aa, line 930
  // TX_ACTIVITY_LOGGER
  WPIPE_TX_ACTIVITY_LOGGER_2558_inst <=> (branch_block_stmt_2509/do_while_stmt_2522/do_while_stmt_2522_loop_body/WPIPE_TX_ACTIVITY_LOGGER_2558_Sample/req branch_block_stmt_2509/do_while_stmt_2522/do_while_stmt_2522_loop_body/WPIPE_TX_ACTIVITY_LOGGER_2558_Update/req) (branch_block_stmt_2509/do_while_stmt_2522/do_while_stmt_2522_loop_body/WPIPE_TX_ACTIVITY_LOGGER_2558_Sample/ack branch_block_stmt_2509/do_while_stmt_2522/do_while_stmt_2522_loop_body/WPIPE_TX_ACTIVITY_LOGGER_2558_Update/ack)
  // 			NOT_u1_u1_2466_2466_delayed_4_0 := ( ~ tx_flag ) $buffering 4 $cut_through // bits of buffering = 4. 
  //  file .Aa/nic.linked.opt.aa, line 931
  // tx_flag
  // ( ~ tx_flag )
  NOT_u1_u1_2563_inst <=> (branch_block_stmt_2509/do_while_stmt_2522/do_while_stmt_2522_loop_body/NOT_u1_u1_2563_Sample/rr branch_block_stmt_2509/do_while_stmt_2522/do_while_stmt_2522_loop_body/NOT_u1_u1_2563_Update/cr) (branch_block_stmt_2509/do_while_stmt_2522/do_while_stmt_2522_loop_body/NOT_u1_u1_2563_Sample/ra branch_block_stmt_2509/do_while_stmt_2522/do_while_stmt_2522_loop_body/NOT_u1_u1_2563_Update/ca)
  // 			$volatile push_pointer_back_to_free_Q := (NOT_u1_u1_2466_2466_delayed_4_0 & transmitted_flag) $buffering 1
  //  file .Aa/nic.linked.opt.aa, line 932
  // (NOT_u1_u1_2466_2466_delayed_4_0 & transmitted_flag)
  // NOT_u1_u1_2466_2466_delayed_4_0
  // transmitted_flag
  // 			pkt_pointer_2477_delayed_4_0 := pkt_pointer $buffering 4 $cut_through // bits of buffering = 256. 
  //  file .Aa/nic.linked.opt.aa, line 934
  // pkt_pointer
  W_pkt_pointer_2477_delayed_4_0_2573_inst <=> (branch_block_stmt_2509/do_while_stmt_2522/do_while_stmt_2522_loop_body/assign_stmt_2575_Sample/req branch_block_stmt_2509/do_while_stmt_2522/do_while_stmt_2522_loop_body/assign_stmt_2575_Update/req) (branch_block_stmt_2509/do_while_stmt_2522/do_while_stmt_2522_loop_body/assign_stmt_2575_Sample/ack branch_block_stmt_2509/do_while_stmt_2522/do_while_stmt_2522_loop_body/assign_stmt_2575_Update/ack)
  // 			$guard (push_pointer_back_to_free_Q) $call pushIntoQueue (tx_tag FREEQUEUE 0  pkt_pointer_2477_delayed_4_0 ) (push_status ) 
  //  file .Aa/nic.linked.opt.aa, line 935
  // pkt_pointer_2477_delayed_4_0
  call_stmt_2582_call <=> (branch_block_stmt_2509/do_while_stmt_2522/do_while_stmt_2522_loop_body/call_stmt_2582_Sample/crr branch_block_stmt_2509/do_while_stmt_2522/do_while_stmt_2522_loop_body/call_stmt_2582_Update/ccr) (branch_block_stmt_2509/do_while_stmt_2522/do_while_stmt_2522_loop_body/call_stmt_2582_Sample/cra branch_block_stmt_2509/do_while_stmt_2522/do_while_stmt_2522_loop_body/call_stmt_2582_Update/cca)
  // 			TX_ACTIVITY_LOGGER := 3  $buffering 1// bits of buffering = 8. 
  //  file .Aa/nic.linked.opt.aa, line 937
  // TX_ACTIVITY_LOGGER
  WPIPE_TX_ACTIVITY_LOGGER_2584_inst <=> (branch_block_stmt_2509/do_while_stmt_2522/do_while_stmt_2522_loop_body/WPIPE_TX_ACTIVITY_LOGGER_2584_Sample/req branch_block_stmt_2509/do_while_stmt_2522/do_while_stmt_2522_loop_body/WPIPE_TX_ACTIVITY_LOGGER_2584_Update/req) (branch_block_stmt_2509/do_while_stmt_2522/do_while_stmt_2522_loop_body/WPIPE_TX_ACTIVITY_LOGGER_2584_Sample/ack branch_block_stmt_2509/do_while_stmt_2522/do_while_stmt_2522_loop_body/WPIPE_TX_ACTIVITY_LOGGER_2584_Update/ack)
  // 			$guard (push_pointer_back_to_free_Q) $call incrementNumberOfPacketsTransmitted () () 
  //  file .Aa/nic.linked.opt.aa, line 939
  call_stmt_2590_call <=> (branch_block_stmt_2509/do_while_stmt_2522/do_while_stmt_2522_loop_body/call_stmt_2590_Sample/crr branch_block_stmt_2509/do_while_stmt_2522/do_while_stmt_2522_loop_body/call_stmt_2590_Update/ccr) (branch_block_stmt_2509/do_while_stmt_2522/do_while_stmt_2522_loop_body/call_stmt_2590_Sample/cra branch_block_stmt_2509/do_while_stmt_2522/do_while_stmt_2522_loop_body/call_stmt_2590_Update/cca)
  // 			LAST_READ_TX_QUEUE_INDEX := tx_q_index $buffering 1// bits of buffering = 8. 
  //  file .Aa/nic.linked.opt.aa, line 940
  // tx_q_index
  // LAST_READ_TX_QUEUE_INDEX
  WPIPE_LAST_READ_TX_QUEUE_INDEX_2591_inst <=> (branch_block_stmt_2509/do_while_stmt_2522/do_while_stmt_2522_loop_body/WPIPE_LAST_READ_TX_QUEUE_INDEX_2591_Sample/req branch_block_stmt_2509/do_while_stmt_2522/do_while_stmt_2522_loop_body/WPIPE_LAST_READ_TX_QUEUE_INDEX_2591_Update/req) (branch_block_stmt_2509/do_while_stmt_2522/do_while_stmt_2522_loop_body/WPIPE_LAST_READ_TX_QUEUE_INDEX_2591_Sample/ack branch_block_stmt_2509/do_while_stmt_2522/do_while_stmt_2522_loop_body/WPIPE_LAST_READ_TX_QUEUE_INDEX_2591_Update/ack)
  // 			TX_ACTIVITY_LOGGER := 4  $buffering 1// bits of buffering = 8. 
  //  file .Aa/nic.linked.opt.aa, line 942
  // TX_ACTIVITY_LOGGER
  WPIPE_TX_ACTIVITY_LOGGER_2595_inst <=> (branch_block_stmt_2509/do_while_stmt_2522/do_while_stmt_2522_loop_body/WPIPE_TX_ACTIVITY_LOGGER_2595_Sample/req branch_block_stmt_2509/do_while_stmt_2522/do_while_stmt_2522_loop_body/WPIPE_TX_ACTIVITY_LOGGER_2595_Update/req) (branch_block_stmt_2509/do_while_stmt_2522/do_while_stmt_2522_loop_body/WPIPE_TX_ACTIVITY_LOGGER_2595_Sample/ack branch_block_stmt_2509/do_while_stmt_2522/do_while_stmt_2522_loop_body/WPIPE_TX_ACTIVITY_LOGGER_2595_Update/ack)
  // (S_CONTROL_REGISTER [] 0 )
  // S_CONTROL_REGISTER
  do_while_stmt_2522_branch <=> (branch_block_stmt_2509/do_while_stmt_2522/do_while_stmt_2522_loop_body/condition_evaluated) (branch_block_stmt_2509/do_while_stmt_2522/loop_exit/ack branch_block_stmt_2509/do_while_stmt_2522/loop_taken/ack)
}
